cset: moving following pidspec: 2624
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.267725363 seconds)
loading group "string"... done (took 0.562244031 seconds)
loading group "linalg"... done (took 7.004336267 seconds)
loading group "parallel"... done (took 0.16310552 seconds)
loading group "find"... done (took 1.122871017 seconds)
loading group "tuple"... done (took 1.955823671 seconds)
loading group "dates"... done (took 1.243655915 seconds)
loading group "micro"... done (took 0.233990896 seconds)
loading group "io"... done (took 1.055305187 seconds)
loading group "scalar"... done (took 38.3313048 seconds)
loading group "sparse"... done (took 12.614097881 seconds)
loading group "broadcast"... done (took 0.974293816 seconds)
loading group "union"... done (took 13.270146477 seconds)
loading group "simd"... done (took 4.515231189 seconds)
loading group "random"... done (took 9.10680497 seconds)
loading group "problem"... done (took 1.941426335 seconds)
loading group "array"... done (took 21.700725102 seconds)
loading group "misc"... done (took 1.950499821 seconds)
loading group "sort"... done (took 3.314712678 seconds)
loading group "collection"... done (took 18.4762655 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.53913227 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139019896 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116127465 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.137469205 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.181867698 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.129225429 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.140339548 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083700124 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.882300176 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.163442651 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137069481 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.475806907 seconds)
done (took 4.860016657 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.23611587 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08516148 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095111876 seconds)
  done (took 0.871934477 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065646512 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125334794 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.079267852 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066645761 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06528526 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.08004877 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066440646 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064884392 seconds)
  done (took 1.240131521 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07231618 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067541745 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082639177 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066462863 seconds)
  done (took 0.981161422 seconds)
done (took 4.095251659 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.899729254 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.249613475 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189784748 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.448440529 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.145780421 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.184017201 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.718763547 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.345991629 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.209218241 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.0988694 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103254279 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.376832939 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105298783 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.71302828 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076247395 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.104043493 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.161398022 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.469809572 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080433605 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081975961 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102375825 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143747706 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.098599804 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076191668 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.166906362 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068531919 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145769969 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094721947 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066864405 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.242785422 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189478187 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.744584569 seconds)
  done (took 10.631476541 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097381644 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.115918762 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067559148 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137531168 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.115424296 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069819975 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070173193 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082068756 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090433145 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.157638471 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113282646 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104670503 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.079987018 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068596807 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099052521 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210272217 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.1056852 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084012624 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085161456 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074880165 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120003024 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082233505 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092306287 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076864365 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151208322 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194253306 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11179103 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110737392 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067876516 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079252338 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130335286 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.13964876 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068248018 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080733833 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.138534192 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109666605 seconds)
  done (took 4.484781128 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.060180823 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.172101677 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091407876 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15115089 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.098432921 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066813919 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.125414416 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.108244664 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.080848718 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084279424 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244961333 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066935244 seconds)
    (12/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.081166016 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.476937918 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12887418 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102834851 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068581601 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067381488 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083417552 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.524952069 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145553284 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10197904 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103548536 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089623452 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070098429 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.716901042 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067866802 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0661302 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084849206 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059152486 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144948938 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06839702 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.216372261 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087657285 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087751451 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11836971 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.177324596 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095143349 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12231848 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081499254 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066555223 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168689156 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073052873 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083130451 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088861641 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120641651 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118879751 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068889379 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08150879 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180360677 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067235942 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099387255 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.906753062 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166121578 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090523719 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06710558 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285530659 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085500289 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083696721 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06500466 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.264161587 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.151929466 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067417535 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083433075 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070921831 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067378994 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.733632891 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070193566 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.128949683 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071093578 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076512637 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084980753 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067207673 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088803501 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072622543 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101273457 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067237531 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067686078 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083154966 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065836502 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083929305 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08542633 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204077809 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.086667491 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066851564 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079573965 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086991063 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111577402 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07023105 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064806866 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116264961 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069216273 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083175501 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102276914 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084506383 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.099251644 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070329417 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128410438 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067590077 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.150476294 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068800102 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063685583 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.112355261 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.086717388 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1002994 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094289747 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07293421 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.15245263 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064199029 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082457268 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067244813 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081162136 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068712114 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067512977 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098036109 seconds)
  done (took 22.05058602 seconds)
done (took 38.916690437 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.301225201 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.090275698 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.09088875 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074132321 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090455513 seconds)
  done (took 1.411321724 seconds)
done (took 2.146685861 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.147405006 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09976089 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079890495 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096371893 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063510648 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116940976 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114716122 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080648061 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115733948 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063994443 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11186224 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064854415 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078585268 seconds)
  done (took 1.998675922 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08219769 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084093779 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08425377 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080620214 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078247788 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08125557 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.078867614 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103274984 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079589627 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08704994 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064020007 seconds)
  done (took 1.633360017 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080247509 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082804492 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084567436 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080535256 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077916656 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080833941 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079070665 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101087999 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080257894 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087284382 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064388461 seconds)
  done (took 1.637845172 seconds)
done (took 5.994423196 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077892253 seconds)
  done (took 0.809060546 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.703974811 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.533311051 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083783984 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.132377401 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.23484555 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.152735074 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.44049206 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.10950849 seconds)
  done (took 10.30725681 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.10045392 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08491358 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.082827381 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088003723 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068260174 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084981814 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071823147 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071174488 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085490348 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069170401 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08636839 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070430768 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084996559 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072178778 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07003612 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085126745 seconds)
  done (took 2.073755962 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.103959517 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.101830056 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.090038181 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074928585 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089151334 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073646464 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090725836 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073952115 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086061812 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07341537 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090441625 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075221736 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087352796 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06574449 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089730615 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076117822 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086075374 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075485492 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.089774123 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076244258 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09033005 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065380253 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086351754 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075654314 seconds)
  done (took 2.83080648 seconds)
done (took 16.757501532 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.130121559 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075296171 seconds)
  done (took 0.943250529 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081062003 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097106769 seconds)
  done (took 0.923458953 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081471231 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080763937 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08800634 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.091559484 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06688662 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080630667 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101058898 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066035679 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066149638 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08163414 seconds)
  done (took 1.549182916 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067655605 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092672853 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069682904 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096185403 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074354524 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080315157 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073012907 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083860339 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077535539 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07826015 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071733556 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.09755982 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071789839 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099300774 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07291686 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082468778 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086016392 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067922907 seconds)
  done (took 2.191495504 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065309092 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066961243 seconds)
  done (took 0.880168747 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06662125 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064145604 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081220011 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066863217 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077958575 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062509607 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078550166 seconds)
  done (took 1.246335956 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.396027525 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109357077 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.244166886 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086801466 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102620045 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.27526245 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083007238 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071473968 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088158108 seconds)
  done (took 2.242318153 seconds)
done (took 10.718939994 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079386897 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086311922 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.10987451 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.422055715 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.104832943 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066704903 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.143655611 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.203647164 seconds)
done (took 1.96209038 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126097279 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.602628147 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.398768801 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212418691 seconds)
  done (took 1.9658676 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.372785057 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090863954 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073885919 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066926963 seconds)
  done (took 1.36188774 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065438732 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069846306 seconds)
  done (took 0.891340847 seconds)
done (took 5.094234247 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.100097888 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08298452 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064439588 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06639252 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.080736119 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066359694 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064276158 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081184392 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066310496 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066948715 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.081539233 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067058556 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081657577 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064253681 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063737734 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079447289 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066752338 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064121151 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081227957 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063991613 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063500622 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081349571 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064170437 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079972577 seconds)
  done (took 2.53202317 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084765486 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.08262406 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071830543 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087574306 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070563848 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087511775 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074366247 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067500604 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087069287 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069000904 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085450065 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070860098 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083805015 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070344624 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084297545 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070601242 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087457254 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067440774 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069389569 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087248775 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072171069 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082675963 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071422911 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088298549 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07061719 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085451276 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06863735 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082640814 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071493891 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086773737 seconds)
  done (took 3.096036323 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070376689 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064273767 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080399381 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070755684 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064310738 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081557224 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064463806 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080712835 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065542844 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064359174 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081414163 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064313925 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06407676 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082079738 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06504481 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083043188 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080844283 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064593421 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080609389 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06497827 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067636383 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.08023538 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064486042 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.08005714 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06352457 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064660816 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080039004 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064148155 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06440964 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080766873 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068029591 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083943488 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064168879 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07112386 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083215394 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064235 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068582689 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079876925 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065142358 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063881208 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079258254 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064699442 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079897265 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070742891 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064730252 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081933028 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064513308 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066415723 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080361242 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067752699 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080187711 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063763752 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067317627 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080621714 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068584406 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063709711 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080683479 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063827358 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080387984 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064155037 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063909968 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079647345 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067337913 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064806326 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094906507 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072065655 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079618433 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065693668 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066001312 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08255139 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066035695 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093793177 seconds)
  done (took 5.948619295 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.115701617 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091520374 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082496898 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066559393 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07988528 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064620215 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06801282 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079643399 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06651005 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086296958 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064518843 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066095209 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0817825 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080446644 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081085303 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066595527 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086696209 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06307019 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064986609 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08426159 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065338448 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083798256 seconds)
  done (took 2.451725215 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.18321277 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087859463 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109224332 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090337902 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067783368 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090168833 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070516492 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086022519 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070540528 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084128262 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069822286 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087340929 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068656072 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084285085 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069601705 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08484875 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070612015 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085367607 seconds)
  done (took 2.323563711 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077445472 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066622036 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104978922 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067076068 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083549183 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069721276 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088929265 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07520104 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085023662 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067678352 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090331005 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070080484 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.199767031 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067205775 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069767288 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083019592 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06983918 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082789241 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075459917 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08816279 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071962209 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090396913 seconds)
  done (took 2.608979851 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080515898 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068528146 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100909907 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085183827 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063105716 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065670455 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089117591 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067104611 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088887961 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06801956 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066539733 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082756819 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071703986 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082432989 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071706011 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082911252 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069079877 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066839943 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084447924 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063589826 seconds)
  done (took 2.284820142 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087874244 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084261344 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067695024 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092330516 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067907181 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083835273 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075688141 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.084346362 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068468939 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107335218 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068040706 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083421344 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075529665 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088921602 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068462636 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091246899 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076126961 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091026473 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068266822 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083898928 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108263959 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068734878 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091531828 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067953022 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067309661 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084138526 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06877468 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089312365 seconds)
  done (took 3.030401219 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066768143 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067423629 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080876661 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06406971 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065304694 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080990138 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064624169 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063946101 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083562867 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064940347 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066528442 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082502801 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06724283 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082698289 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067144612 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067172734 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082619131 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06486128 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06420624 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080942027 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067084871 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066928032 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082961882 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065205429 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080871515 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066958222 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0645239 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080193686 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066703819 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065327165 seconds)
  done (took 2.904024127 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075970351 seconds)
    (2/2) benchmarking "in"...
    done (took 0.090450589 seconds)
  done (took 0.938865127 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063932998 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080950873 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080620411 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071069283 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087444766 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068091515 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091568313 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07068024 seconds)
  done (took 1.38364029 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082060875 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077648326 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084378789 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078060261 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094370497 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083911441 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154738901 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08467826 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074489546 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083081628 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080224832 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066112026 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089484325 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068464032 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089402094 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073760097 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064703749 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088052123 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069723124 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081954516 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068189654 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094898824 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069268757 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063900548 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08446119 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.07629434 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094807681 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068930282 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086958474 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074496126 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088922912 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061548744 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067698782 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083753819 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065220354 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093816079 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082056988 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086290488 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075846433 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068028821 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093512039 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062926757 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087588407 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074315841 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093519078 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067767826 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08439618 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062571085 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065918881 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085715786 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063245484 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067710347 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078386549 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074936893 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086355659 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077375464 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082309288 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068994536 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070540798 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087296562 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073907157 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08585308 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069838781 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067272187 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089964774 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072051731 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092162187 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062489805 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061372006 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081915867 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077102098 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105826324 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073604788 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084319144 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068583901 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081738055 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069957045 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068014007 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08903293 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073578426 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083700714 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072815424 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090446983 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06813232 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069571299 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091941757 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065548868 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084944525 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065398657 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099333801 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066684858 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081478905 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065722557 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077161795 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086508161 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067954353 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082035325 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073666187 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061604271 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084719464 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068727852 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084242957 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077898272 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088413334 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072858601 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092815182 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075565113 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067545836 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087388899 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06466337 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084785802 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066298735 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075036213 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078424572 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070318803 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084533666 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067807658 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093030212 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065426844 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067839162 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090668143 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073461974 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082849333 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064452155 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069732602 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083667045 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071092659 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092351849 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06659697 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079164374 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062249019 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070493457 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083437919 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070863457 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088759603 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069960363 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062232453 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081448199 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071620566 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092406339 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067847206 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084910971 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072942494 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068718972 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083179755 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074439639 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086332187 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066863276 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089779151 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068438482 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063363476 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08678298 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071114199 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08303471 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070968685 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070129324 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086114237 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06818065 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083544508 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07274219 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085612178 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066185934 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067647569 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082820582 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078250257 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086201238 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062944222 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064874529 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090802412 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06573459 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083764533 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066905318 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069714406 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084298036 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065676645 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08319825 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069253125 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095013789 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071170939 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068913415 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089178924 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07940132 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083773669 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070002772 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083690067 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067726378 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068168834 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.0926018 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073454905 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088143273 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070100997 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080895857 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073488189 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075107298 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083497877 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066169527 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083473766 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070294751 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072604008 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087897366 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068045728 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082130985 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068606105 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08704687 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07010972 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067233906 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083207255 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.0718113 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083726508 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073701622 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08470668 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077479361 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08794402 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062723118 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071217106 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082426826 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07364544 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080343576 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064848523 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066867809 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085107041 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06624294 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06978548 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078245888 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074602592 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091374394 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068267096 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066690451 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08383714 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074293542 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085440392 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071734284 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087761223 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07388423 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094541306 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066572093 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071236363 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095054151 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06788436 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078559097 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071853353 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06631458 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083128472 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066871855 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08235343 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070338713 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092087867 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073936496 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061625229 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08701908 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066991301 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083078855 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06326443 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072390924 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087193592 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068709599 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090644991 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068839314 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068205924 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088418951 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06731477 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.085132567 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069620441 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070147863 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084954049 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070154764 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083486977 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.07070708 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067063305 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082271929 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069657054 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.084669848 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068200913 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072055105 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084526889 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067550657 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086929027 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068372524 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085114856 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067396465 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06745739 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087209079 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068480402 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066784145 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086993305 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063403585 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091126793 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067530096 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091449801 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067532077 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064649647 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088851751 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070122127 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.08976538 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068217212 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085588156 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068734171 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067110876 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087138534 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074500081 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082261139 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078111545 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092303188 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067850737 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071041191 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084463542 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069598022 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066019649 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085090947 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068374037 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08455299 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067658464 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088932124 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070453933 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067938068 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086329378 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06898558 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085424741 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068450444 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062417482 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083728556 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067073277 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067945763 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0943197 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068058738 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083921871 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066440909 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085437531 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06733425 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064299865 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092235193 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075501642 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084861511 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07478595 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083890885 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069810752 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095127768 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064770132 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065682132 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083021023 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066078817 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091409394 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06787285 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076145859 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084510557 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067490173 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082330583 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068202955 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067273006 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079069565 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065959323 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088260325 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067425982 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066512198 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084963997 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07102518 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085871001 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077419412 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066117286 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085749899 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067799648 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.08211324 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067121981 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066808084 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087221541 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068709939 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082888319 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065150434 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067594327 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085596044 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068935176 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08433192 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06948255 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075106336 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08416409 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071499455 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087455271 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062747314 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071073492 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08454309 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067888549 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084270476 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070687676 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070985696 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085864666 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076539965 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084722796 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068791865 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085652829 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065419721 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066868562 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084487004 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068021381 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084757136 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068994459 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075024852 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.082987589 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071096727 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084921522 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067988156 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07450016 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087294786 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070731634 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091111758 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068766773 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086603042 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075237859 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088013423 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070826088 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068749028 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087023259 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073646791 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083728691 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074457528 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067437668 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08545732 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070207786 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083128483 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067233161 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067091512 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083537575 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073749241 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.086114819 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067026963 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066209409 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082821764 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069059267 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088201958 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075650123 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087846147 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070551727 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06375664 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082951837 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068926063 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065129581 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086685341 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070945832 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090206081 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070356203 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085449917 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066720042 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07641425 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090933402 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071955465 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083240895 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071360446 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06800653 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087582833 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068987708 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084989382 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069232083 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071303819 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086771542 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067520227 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091525599 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071718379 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086408768 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069602125 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068918846 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.08623444 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063237166 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085670274 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069842334 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072701467 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087713507 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067860424 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095662946 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065685743 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067827514 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088451572 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06693287 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089942054 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064297359 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.086396755 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069042347 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068799449 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080437408 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068452354 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065069733 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087763705 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067127695 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081023155 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078227881 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094089736 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071092567 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066374395 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084196047 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06396605 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.08015698 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067373619 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069291569 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087023884 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078414357 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084966541 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067460591 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062905343 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085312139 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070952951 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.087974178 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065905653 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062857294 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084509511 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07072792 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090267452 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066625925 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06711106 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088604311 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070087926 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083637763 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071232978 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064777794 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08853269 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08052754 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085867401 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068825128 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090688803 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075874408 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.08520644 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062786136 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068914069 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08851911 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068878446 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085790798 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068783431 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100148145 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070928246 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066667142 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084207575 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070860191 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08491108 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07597361 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068225347 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.0862865 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072731584 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087701135 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075983394 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087801167 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075610482 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088256682 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070667702 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066982558 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085098574 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065988586 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066093849 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.086903191 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068425986 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090078364 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075889084 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085325089 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078163547 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093893175 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069615478 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064532571 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084996338 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068576202 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080405201 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069235781 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06635962 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.083763202 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066255296 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.08476198 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069024882 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072982209 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.086857266 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069004755 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085382191 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06235159 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070882585 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088454641 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069760475 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064511715 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086192812 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068791183 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089767238 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071334584 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083416801 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069660206 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068989171 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086195673 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063472078 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091775053 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067014659 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070750546 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.084828618 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068963076 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085680213 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07193521 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071907262 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087059006 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070569441 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.093669399 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069863706 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.083589304 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066036315 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073636641 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.083278892 seconds)
  done (took 46.49198356 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106456938 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082687816 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063940752 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081667064 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075720954 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082454012 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063553032 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064116195 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081727032 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067510356 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081268193 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063506309 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090100152 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086457482 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093450284 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068025423 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08109664 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064217022 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081611543 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065237948 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090209076 seconds)
  done (took 2.449014566 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.086668696 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.10132084 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078149327 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100559445 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091562163 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077809903 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.095763266 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078720261 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099312314 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073930637 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.099101644 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095952082 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075295757 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.092066485 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074769814 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094046854 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08009411 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090388165 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.096055143 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077747871 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093968708 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077649596 seconds)
  done (took 2.744800317 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067690321 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067338348 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087029415 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06287321 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06723704 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079989316 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070589056 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083383852 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071249597 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066334917 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084494929 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066371048 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087048424 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.074228035 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06775921 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083432829 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.130702657 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.0706644 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066398696 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087209846 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062957665 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087605509 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063183535 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062852115 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.084345594 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070887666 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086612909 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066018457 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066541837 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084039804 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068009113 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084080063 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068521104 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068390199 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084621182 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066924447 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066294681 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085108293 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06322395 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083597361 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06781535 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063434038 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086372537 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069436986 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065078422 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084149142 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06919331 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085012635 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063271599 seconds)
  done (took 4.488807981 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084360464 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.140943326 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088646195 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123282474 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081583545 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093322446 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071327174 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.122335113 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064536445 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085309542 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.103463789 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081066666 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086535476 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071774395 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.089290279 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067565755 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085960418 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06594714 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07139276 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086062906 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070904104 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092836767 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.09937244 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080586513 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089713184 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066503837 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08430048 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072152547 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09843744 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072052212 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089911376 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072595762 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.100318424 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073171046 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085204705 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069089443 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.102162731 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08545996 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069912811 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064489463 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087857138 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072694043 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092444483 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08310934 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086518968 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072164453 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085751899 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064323345 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.097412035 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069764252 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093575095 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.0998063 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071624513 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085434521 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071665445 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100299176 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067989649 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08359833 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070428286 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097570171 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065437488 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089024743 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082016516 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087064272 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074526773 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099836453 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072981398 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089894655 seconds)
  done (took 6.662997702 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075218066 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092061276 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081292835 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100912782 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092215537 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074012962 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092800029 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073458766 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091848724 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078803821 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091446857 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112847336 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069935001 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094317611 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073693783 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091695927 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073859669 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092425089 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073043508 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092368804 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092657922 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081299354 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091465386 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081724525 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12266464 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086982067 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073852361 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092203036 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080827558 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09234275 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103222079 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07458722 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092224077 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081509892 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.103565006 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092286645 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067168451 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091826305 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073876306 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091716234 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069282891 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100016838 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073893087 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.086927998 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073634066 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091632777 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10048498 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085967713 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094681688 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096713544 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073851633 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09949341 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074367691 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092506757 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10028347 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106844583 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100690421 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099636825 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074926049 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099078209 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099405674 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088176841 seconds)
  done (took 6.293594102 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088587445 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094719678 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078009276 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082993443 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065979623 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089624734 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065928134 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083986154 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076440878 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09476906 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077664642 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08912413 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073745172 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096124398 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090243842 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074096844 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089907461 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0710513 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093532797 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07204298 seconds)
  done (took 2.481500573 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076460496 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103187715 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068917087 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092124508 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071225235 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073204678 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088745988 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070671287 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087035548 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071105859 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096979042 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078379624 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087216863 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073757809 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096327033 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073718595 seconds)
  done (took 2.142694583 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.079299782 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.095702824 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082722472 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086695337 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066017697 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083727053 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06777499 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062900423 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083279328 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081680546 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086870473 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070188715 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086924911 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066128283 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064176195 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090185808 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063729729 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083895445 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067524915 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.101669755 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078801643 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084942731 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068367493 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068735632 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.087197247 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072905967 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087178691 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065065418 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084135003 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068410379 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08664076 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075146593 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083573289 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065955532 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066364741 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084070639 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067801613 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086651026 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070477161 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066795426 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085712038 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066940989 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086024451 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069043173 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082747106 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068837123 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063784841 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092206724 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066155678 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086250326 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068021201 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088456582 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069051206 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076969248 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089737886 seconds)
  done (took 5.086518177 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08080341 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070919868 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082916269 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06585537 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089452297 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069396495 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070416168 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088593149 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069902515 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084885502 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069461857 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089362202 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069228113 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070751479 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088465077 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071367463 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08231104 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070001254 seconds)
  done (took 2.223069208 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073696527 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068182303 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094173781 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067942535 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086694205 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070388775 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063784663 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085685418 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067253343 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085774883 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067681249 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069802692 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085502708 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070315269 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086186056 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067947211 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069926073 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085104204 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068077365 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082415329 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069914129 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065686026 seconds)
  done (took 2.492569636 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073410817 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094529507 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.164170923 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107749701 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083278701 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100564033 seconds)
  done (took 1.465660289 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091690166 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099079788 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068719031 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10835268 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075952135 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087912406 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069219624 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08824962 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078350081 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101031215 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069495968 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097621303 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09666379 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081058385 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09324052 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075464448 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088489695 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069820443 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087386196 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08541467 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089177043 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096601625 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069965966 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088088377 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069456278 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095582634 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078221001 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101280818 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087404011 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077876842 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093590433 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069633679 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096389233 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102524941 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07114334 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096501007 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070061865 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105436966 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075714201 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096931643 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070713992 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094682953 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097348184 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075082287 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096634443 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070106264 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093304746 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069133109 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088489382 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11177707 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074991949 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096840799 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075152371 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097423827 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096698982 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112464073 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081833388 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096176634 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075166955 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101933858 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095868535 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074979272 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095892883 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101743139 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07541289 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095691624 seconds)
  done (took 6.599776364 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081792599 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106748073 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069670738 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101990644 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096420998 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069388833 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087805372 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069636331 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088231038 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069541387 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129407256 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069328596 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096259795 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095952557 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06999762 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088232739 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069544522 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095591833 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069900779 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112824295 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088169954 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077153776 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09679348 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09647985 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082789982 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094619627 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070092019 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088356473 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070087612 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088149546 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074753679 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089142216 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096187713 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069686352 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096473298 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069743306 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088758034 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074265878 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089318553 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074883553 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096318104 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105413348 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069531307 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088041898 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082759269 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087805675 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069834236 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088751237 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069324995 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087924134 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082067947 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101924154 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101324142 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077685889 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089541474 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069041774 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090042514 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067950867 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090104613 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094347374 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077983141 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088984936 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112336889 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07037047 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088680934 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07686314 seconds)
  done (took 6.481523921 seconds)
done (took 128.360776007 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.214457869 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.197478309 seconds)
  done (took 1.250046558 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069614797 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097563621 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.0990117 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.158022047 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087770263 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.112509559 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127022925 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080734242 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067367945 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087537239 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068576149 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089260122 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170234637 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068021943 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087709382 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.0700977 seconds)
  done (took 2.389222889 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102505418 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196979022 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109906758 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067279953 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100269544 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079984199 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086477486 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079222915 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.092555378 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067569394 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078382094 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096953308 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066125402 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09607718 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073043832 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.09870041 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066751374 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098035708 seconds)
  done (took 2.509329705 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105802587 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15191656 seconds)
  done (took 1.105475356 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.204375195 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124723867 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202759501 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.417188177 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.205943451 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.279927157 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.173867787 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.173181418 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.156810167 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.171388149 seconds)
  done (took 2.958254915 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099029525 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170215881 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.31446677 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138895856 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.088497632 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115632439 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138597287 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.10965645 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083452929 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101352253 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080942383 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099029333 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.117791461 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075712927 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095377877 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078098295 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12179951 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075139558 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097522365 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076101526 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118703724 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067760252 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.094434961 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075072041 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098180633 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079479614 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086503592 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067636491 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07517983 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096122578 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078409144 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11306426 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.09882906 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129854945 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102394403 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131061502 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07942537 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093487447 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076270936 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093502379 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079234498 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098141416 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.085065452 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097272703 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06827665 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097351948 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067723919 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066996897 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099503098 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077614663 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100283963 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.097748578 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129462559 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.078722047 seconds)
  done (took 6.222493287 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.752331431 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.133758679 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072304542 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.810185823 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111890986 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083749033 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.714953628 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118498914 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.206604392 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.771052171 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089177343 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100223246 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.200391005 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.213449527 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.927084145 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.264251788 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.636390427 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105167402 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131951161 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131108472 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138824792 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.15263857 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.14525146 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.401470579 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096786033 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072373438 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136489008 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.098162164 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.138231656 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.104040203 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07454826 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.152444463 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.225238229 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.175293585 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075676449 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093208125 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071822285 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.145180707 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240482697 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.186892344 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.135537792 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091166155 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072119609 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138116745 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12886208 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090266709 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139936503 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.151431751 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.145911074 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095148016 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076883202 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.140608903 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.159641606 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.140542098 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081006778 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.29252748 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.279284099 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071904149 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120733198 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103843439 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.213797834 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103628676 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.174110924 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136256517 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.185818091 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071111966 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752478987 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.146748015 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069630705 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097456577 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119161544 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076096895 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.158572756 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.122744824 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.369378815 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.140683855 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.095784748 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071419679 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.208776692 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084267022 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092983668 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139841051 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076952589 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12272801 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141894029 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.164659011 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.146828464 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.212016279 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141818019 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.137942803 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095905311 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123155352 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.075900992 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.190181752 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189919509 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.139223487 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.18772762 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.159899062 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.139629726 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.14758362 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076310703 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.168991246 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098454968 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102227548 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137966472 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.188406969 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122260299 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082836604 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095734384 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140580055 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.125425668 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085750019 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.159623805 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.148463736 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.428033388 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.145829762 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.090605992 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086880813 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138144482 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.139127678 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097035476 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.230620463 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100863335 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.167245688 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120740063 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069550664 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120441657 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.140621149 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099138206 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099961982 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.159271386 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078115299 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.21475335 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.189253381 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076744231 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.214051134 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.160936543 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076760916 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.147763933 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120463593 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144276729 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099939613 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139480221 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07444762 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.747046078 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142340527 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121292372 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09601743 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.164060796 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071730874 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081797024 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104671452 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067512624 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.749693869 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106620808 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081143838 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103522059 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076382043 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122671943 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134889451 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095699708 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138674243 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.199756078 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077130554 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119489358 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104046731 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.138845866 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.076777713 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104281419 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083564061 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.107267529 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123221137 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073966563 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106029485 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.14573145 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.138524833 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.190194065 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.54092637 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092500372 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083124286 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198733369 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070678997 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.260992357 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135225038 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.194712225 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141086928 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100984371 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.256274832 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.141879347 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.167149155 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10727554 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152103429 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068607425 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.157697576 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.141044995 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072091281 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096754111 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.14062659 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.145718189 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.140693309 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.944935757 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070835376 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.201493685 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096278142 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.148898935 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096750595 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07839024 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.268572942 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072090234 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144961698 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162054055 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074749076 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10444037 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.67054564 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104953927 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139865242 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075254907 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.193552682 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.141377266 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136013582 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136501845 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098691612 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138869194 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.186912161 seconds)
  done (took 40.257178872 seconds)
done (took 57.535083322 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273724581 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.191744141 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.243856677 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.146919533 seconds)
  done (took 1.802582421 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.145362051 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105779772 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118953623 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087333879 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104315716 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087600711 seconds)
  done (took 1.519476099 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.408362967 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.268642533 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.234342913 seconds)
  done (took 1.783041645 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.298637797 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.229449828 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.454821185 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.298271335 seconds)
  done (took 2.25834227 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.192025639 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114366929 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067868248 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107929061 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.15854174 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.254715569 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127819594 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.190505362 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080670997 seconds)
  done (took 2.212434537 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.199685827 seconds)
done (took 10.648745864 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.304260706 seconds)
    (2/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.126467866 seconds)
    (3/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.116503807 seconds)
    (4/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.268094316 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.172168399 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.202226205 seconds)
    (7/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072696599 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.073761146 seconds)
    (9/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.101519429 seconds)
    (10/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.156737029 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.102651525 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.242430159 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.161379028 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099553092 seconds)
    (15/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.253654947 seconds)
    (16/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.202273781 seconds)
    (17/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.219928909 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.108490067 seconds)
    (19/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.147850405 seconds)
    (20/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.100976637 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111281066 seconds)
    (22/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.099273409 seconds)
    (23/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.238826208 seconds)
    (24/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.195855117 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.124298635 seconds)
    (26/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.246966727 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103742064 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069337663 seconds)
    (29/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.138140729 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.27401237 seconds)
    (31/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.063615276 seconds)
    (32/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.251113437 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075128736 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.11132594 seconds)
    (35/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073847042 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.130451935 seconds)
    (37/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.241961806 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067902515 seconds)
    (39/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.250663542 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.256100458 seconds)
    (41/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.099688773 seconds)
    (42/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.114114256 seconds)
    (43/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.228092726 seconds)
    (44/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.179907423 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054808172 seconds)
    (46/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.098332484 seconds)
    (47/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.256767728 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076202286 seconds)
    (49/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.180227468 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093911679 seconds)
    (51/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.104120304 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143563874 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091763336 seconds)
    (54/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077260432 seconds)
    (55/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.099893436 seconds)
    (56/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075352372 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.20012553 seconds)
    (58/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.13702092 seconds)
    (59/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076136948 seconds)
    (60/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05419785 seconds)
    (61/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.124849064 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.077848758 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171303187 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.153235803 seconds)
    (65/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.080512078 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.115444582 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093757165 seconds)
    (68/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.138112542 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068997889 seconds)
    (70/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.166602659 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.302504895 seconds)
    (72/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053535126 seconds)
    (73/309) benchmarking ("sort", Int64, false)...
    done (took 0.090526314 seconds)
    (74/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.05404679 seconds)
    (75/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108530108 seconds)
    (76/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.0986304 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.121884602 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072937888 seconds)
    (79/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074304201 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.07627101 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053024039 seconds)
    (82/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071568342 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.096075111 seconds)
    (84/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.273293233 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08909206 seconds)
    (86/309) benchmarking ("sort", Int8, false)...
    done (took 0.16433196 seconds)
    (87/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076713548 seconds)
    (88/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.076054343 seconds)
    (89/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109813495 seconds)
    (90/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.098321332 seconds)
    (91/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174853086 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.11735135 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.253560409 seconds)
    (94/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077727961 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113970226 seconds)
    (96/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.100045718 seconds)
    (97/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.100612883 seconds)
    (98/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064766237 seconds)
    (99/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074859589 seconds)
    (100/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.092821069 seconds)
    (101/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081226668 seconds)
    (102/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077223209 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.148657745 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.172277664 seconds)
    (105/309) benchmarking ("sort", Float64, false)...
    done (took 0.150695814 seconds)
    (106/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053038386 seconds)
    (107/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066829806 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.149163538 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06762006 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.090585985 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075917902 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054590404 seconds)
    (113/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.252693876 seconds)
    (114/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.094852976 seconds)
    (115/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076697096 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072558554 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.168841041 seconds)
    (118/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.245115328 seconds)
    (119/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078427039 seconds)
    (120/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.076068673 seconds)
    (121/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07713809 seconds)
    (122/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.239339795 seconds)
    (123/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.230326576 seconds)
    (124/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.261202144 seconds)
    (125/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.244110251 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.160081874 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075884047 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.097014176 seconds)
    (129/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053085285 seconds)
    (130/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067999438 seconds)
    (131/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094742945 seconds)
    (132/309) benchmarking ("sort", BigInt, false)...
    done (took 0.211095337 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053518569 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094775907 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.093040303 seconds)
    (136/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.086938105 seconds)
    (137/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052934866 seconds)
    (138/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.244821607 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074648503 seconds)
    (140/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.298336764 seconds)
    (141/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093173558 seconds)
    (142/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053548109 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067346332 seconds)
    (144/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097449759 seconds)
    (145/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053539554 seconds)
    (146/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069415122 seconds)
    (147/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095573406 seconds)
    (148/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073896049 seconds)
    (149/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052814853 seconds)
    (150/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.09128869 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.077621317 seconds)
    (152/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062679959 seconds)
    (153/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091713813 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076727251 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104966785 seconds)
    (156/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075170817 seconds)
    (157/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08320719 seconds)
    (158/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.194378894 seconds)
    (159/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.089911948 seconds)
    (160/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.053634787 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.258588942 seconds)
    (162/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.107486791 seconds)
    (163/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054042831 seconds)
    (164/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114979255 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067170726 seconds)
    (166/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.085849111 seconds)
    (167/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108880048 seconds)
    (168/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.191773417 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068590725 seconds)
    (170/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098359859 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067490107 seconds)
    (172/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078012543 seconds)
    (173/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.108377757 seconds)
    (174/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.163197009 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067883224 seconds)
    (176/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074738196 seconds)
    (177/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.116509655 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053461824 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.115200233 seconds)
    (180/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074744593 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.201720202 seconds)
    (182/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055724561 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104565126 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074773483 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073017961 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.096215426 seconds)
    (187/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053380365 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097929309 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.142041312 seconds)
    (190/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.158911078 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.195631793 seconds)
    (192/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120505956 seconds)
    (193/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.10280855 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06804701 seconds)
    (195/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097353935 seconds)
    (196/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068855293 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053289971 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.165457255 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066266256 seconds)
    (200/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052777846 seconds)
    (201/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.09740048 seconds)
    (202/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.053412361 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.125311829 seconds)
    (204/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.219322405 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.193917261 seconds)
    (206/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055379996 seconds)
    (207/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.07771967 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087597175 seconds)
    (209/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.090470574 seconds)
    (210/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076268581 seconds)
    (211/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06928036 seconds)
    (212/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113772017 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.147926446 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067597971 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075091104 seconds)
    (216/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.076465587 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076547718 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.119505592 seconds)
    (219/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.219075745 seconds)
    (220/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.112163813 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.102343036 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089846444 seconds)
    (223/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069292797 seconds)
    (224/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.135129447 seconds)
    (225/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053688506 seconds)
    (226/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053414233 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053733737 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096187993 seconds)
    (229/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074750007 seconds)
    (230/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.098796174 seconds)
    (231/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070196716 seconds)
    (232/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073887135 seconds)
    (233/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.077383419 seconds)
    (234/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053592334 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066535367 seconds)
    (236/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.074931193 seconds)
    (237/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053412487 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093685568 seconds)
    (239/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.091406828 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140632979 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089772788 seconds)
    (242/309) benchmarking ("sort", Float32, false)...
    done (took 0.130157775 seconds)
    (243/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.076244013 seconds)
    (244/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053294051 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067549416 seconds)
    (246/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.075623184 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.1369392 seconds)
    (248/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053626521 seconds)
    (249/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.089993485 seconds)
    (250/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068953375 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.089414247 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.100477152 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.137524842 seconds)
    (254/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055496599 seconds)
    (255/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.166923164 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.167415 seconds)
    (257/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.05379886 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067127691 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.109876033 seconds)
    (260/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.0713901 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.055133551 seconds)
    (262/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.097752802 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074101873 seconds)
    (264/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052774212 seconds)
    (265/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.092383798 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136183138 seconds)
    (267/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.09397964 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075081284 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06775055 seconds)
    (270/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.076631319 seconds)
    (271/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080731392 seconds)
    (272/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.054173206 seconds)
    (273/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.09101721 seconds)
    (274/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069525275 seconds)
    (275/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.054150666 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.07625128 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096262062 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.113361293 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090602085 seconds)
    (280/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.090062663 seconds)
    (281/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.052708593 seconds)
    (282/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073220106 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090323781 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067439573 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07512166 seconds)
    (286/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.084934791 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06735705 seconds)
    (288/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05360396 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089376962 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066693788 seconds)
    (291/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114141711 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093249691 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075266503 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.114002108 seconds)
    (295/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067624535 seconds)
    (296/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.088458132 seconds)
    (297/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053312397 seconds)
    (298/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053809073 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.095400519 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.104720622 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12900549 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098064759 seconds)
    (303/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.053593063 seconds)
    (304/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.093957483 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067594481 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.098605515 seconds)
    (307/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054440833 seconds)
    (308/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055274398 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.203511106 seconds)
  done (took 35.380590225 seconds)
done (took 36.260210773 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082658501 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116524564 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076767656 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116534996 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082598524 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101686967 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074462924 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103016449 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082495746 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.106161278 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080207098 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056782627 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098632508 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077831129 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098528129 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093890059 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102665375 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074363715 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074328544 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.089256365 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075929023 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089757745 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069363713 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056525479 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102051112 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074662669 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096255703 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076005078 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067019014 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090397173 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070842492 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074318642 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.0895909 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081268087 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096205132 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075646187 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099867545 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078181851 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069568891 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.090050624 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075150798 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067136771 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096364836 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075402345 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.095567996 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073112482 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075176302 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103070604 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093662841 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091851805 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075909425 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100934519 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07891216 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073326191 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093808588 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076026316 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094982886 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094497617 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098051925 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069668194 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075214211 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.098719843 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074067548 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.097030642 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076050898 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076991111 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100568234 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073044309 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099526946 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073355778 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067413704 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097769367 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070943435 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089301106 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078127564 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078235894 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08878037 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073321362 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07306107 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095774201 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067346682 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09149481 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069259449 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073449659 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091725524 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056326001 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071623008 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095616273 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067078631 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097271638 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073197342 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074496312 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091555788 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078638089 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066550478 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095253447 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068402524 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06716279 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091473644 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070950132 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.08980367 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069285084 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076730248 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090918926 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073063761 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.104039616 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067082602 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074073942 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088864563 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067240297 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.105369995 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077094684 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067960158 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09157507 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066885377 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07477488 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089449062 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066837252 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067002895 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090055114 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072971135 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.089494911 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069585019 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075018947 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103145473 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.070136523 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070206977 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092743512 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067563245 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.095161259 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067203577 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068026637 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.09112669 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065062438 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069060164 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089700784 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074927384 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068731198 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097794624 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069286905 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098524288 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071842753 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073089782 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095586182 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067441927 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059711263 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091531289 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069338413 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.090046981 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067436133 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069060601 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.089509058 seconds)
done (took 13.371469503 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067777162 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169799373 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.126553298 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097746761 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.1120294 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067667446 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.101663716 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128010814 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069122375 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128622057 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089683884 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109565787 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116200702 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.089179587 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068144796 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071075343 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.091905086 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090073716 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.126672759 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.110631977 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.140175379 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066867144 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121852201 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092151943 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112189786 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.117772088 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067657289 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072040131 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093516056 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103581218 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109628348 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072155349 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067706406 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123519908 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.117420799 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085861583 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089793107 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085583198 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090348384 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06738725 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114463504 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100044244 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105362948 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.105427531 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071019493 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070510721 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091398283 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086854949 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.115290369 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.104969903 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.09010653 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134188513 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.093437656 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083600819 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065814207 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112012213 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10566831 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070351362 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068034586 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092479466 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067754741 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070426363 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112031743 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116493699 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072000667 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106680923 seconds)
  done (took 7.284703039 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085134865 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117464469 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084562228 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109078849 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067352209 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068100132 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091590976 seconds)
  done (took 1.561269141 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068283663 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090499899 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114104065 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092173918 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110442058 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088727983 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100735854 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068904672 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108369558 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069246426 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112671898 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10565236 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.092747063 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075192391 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092469569 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091906759 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092317229 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092038752 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071657177 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115196088 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071152445 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.11172269 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070077924 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068232866 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106872125 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069104505 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140295761 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072994855 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092918292 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071923135 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066628751 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141438975 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105909105 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07838492 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068267427 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106513375 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084209901 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089857631 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085095258 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096994402 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083972997 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069880055 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092940878 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067096153 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.09570522 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080614761 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070081598 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092577223 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071878458 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112252594 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069444799 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082920049 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091783292 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072592552 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070228886 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097379064 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078591528 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092698041 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089617529 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069597661 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109541274 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085180872 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106796009 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085375935 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094169247 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083684986 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105482768 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072042872 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070358522 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095364752 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085668912 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090509427 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071054909 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079506675 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09428958 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092477693 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114925895 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070935417 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101770126 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069380549 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069283618 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092229639 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093085442 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094885017 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068475276 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072328274 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095506844 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06685778 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.09088883 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072262873 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067335115 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.093350055 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071830189 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069483636 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094174051 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086083319 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.093098306 seconds)
  done (took 9.415186676 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069275069 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069667724 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094073968 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069706611 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069001095 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092530672 seconds)
  done (took 1.412071723 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098169594 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093871019 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083157524 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097379336 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107494375 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.106971342 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085127244 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10714069 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086292915 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104430469 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084895017 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107646731 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089375624 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098214628 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083807011 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097059886 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084940774 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101133745 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080833022 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097796331 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088734526 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.097641432 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075836038 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.108285941 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072447943 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074332571 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102018443 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080855456 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104123485 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083700093 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098090928 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072863303 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096962826 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083350381 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.106953614 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073951254 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097428829 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07312598 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102026468 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072220141 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.108274556 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075699757 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079793132 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096174774 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107196053 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073934615 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072745899 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100760122 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083672098 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096313163 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073335332 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096694354 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072873294 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096614493 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072784189 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107200241 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073004458 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107322892 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074915826 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07287271 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095064454 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07253532 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106804754 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072170355 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104322547 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073280003 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09721963 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075185073 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098478503 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074055355 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096771728 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071222112 seconds)
  done (took 7.39482801 seconds)
done (took 27.996651545 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.65705881 seconds)
  done (took 1.602999529 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.800051798 seconds)
  done (took 1.746397493 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.718189631 seconds)
  done (took 16.673663826 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.621731783 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.776843885 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.818924865 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158802039 seconds)
  done (took 3.326322052 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.898272696 seconds)
  done (took 1.865388414 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237585231 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.24907193 seconds)
  done (took 1.440317855 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.73696117 seconds)
  done (took 1.694790064 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.285714615 seconds)
  done (took 2.241531847 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326136818 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183600249 seconds)
  done (took 1.477805917 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.518474709 seconds)
  done (took 1.480860293 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.906563488 seconds)
  done (took 7.873658947 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230977864 seconds)
  done (took 1.207006559 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.268533039 seconds)
  done (took 1.233845289 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.306052039 seconds)
  done (took 4.270893847 seconds)
done (took 49.088203169 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079915363 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083261208 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106430485 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080173381 seconds)
  done (took 1.309260168 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080038714 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07464124 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102895857 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073816531 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103289529 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07550759 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100417534 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079175814 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074258321 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099679586 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074459062 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097943404 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076809838 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100118448 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07225301 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07747933 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101998527 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074758777 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101352906 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075496172 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07233459 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.101070457 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077419786 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.097336708 seconds)
  done (took 3.035667529 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079253181 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075463857 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100007766 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073901988 seconds)
  done (took 1.296407077 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07805307 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.117754903 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091247817 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.102458112 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094155551 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.113664367 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070921472 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071431552 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097332939 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078737995 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094184044 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100047864 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113709139 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078761052 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104830986 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067239668 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070483206 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.11346621 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079097745 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.10383889 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072649276 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.102446617 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06942514 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091015798 seconds)
  done (took 3.150083117 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078655906 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104019143 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104570038 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090370741 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.118400659 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067878163 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.102671525 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09389246 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.152618271 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066391259 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096654365 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068114626 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.09905607 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066655353 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078254914 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.136326998 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113646215 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.094291195 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098067985 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.09182802 seconds)
  done (took 2.898962053 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076369109 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071433405 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091660527 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070552512 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077536605 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098788087 seconds)
  done (took 1.463481209 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069658373 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069016398 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092859047 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067953939 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073377113 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092887861 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067841201 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06858747 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093805848 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069092218 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068179478 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091609234 seconds)
  done (took 1.899790503 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.424987543 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072038661 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.098391956 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066935863 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072602764 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092457712 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082355689 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069653576 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117373997 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068841363 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093873323 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070589856 seconds)
  done (took 2.308083194 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258925619 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078869825 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325278036 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170468463 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140041842 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157216239 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105238916 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14211367 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199271748 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139042538 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201794545 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224151479 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13531126 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169541277 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116592365 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.13537967 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186267479 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223562617 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131648715 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200898503 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208746061 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158312136 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181378195 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130754513 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136917896 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147657219 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07402697 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107449555 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233100898 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163668199 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202437481 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139912568 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122256702 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207750555 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220891182 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198875305 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166418746 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087171596 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.16093451 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166242123 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257525505 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117690158 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22308685 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110549531 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10940417 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173976543 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147430919 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.148881959 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138840174 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117601472 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175245044 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239355865 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19317762 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089377402 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140375908 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141408607 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144820605 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130073117 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24475357 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195600745 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186160727 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073655187 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125424991 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189277902 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162367181 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.144104014 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.18021692 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094696951 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197161016 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190101355 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145787262 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203110587 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.161002291 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116149904 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14955832 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172425515 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155027594 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233957537 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155553697 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074567067 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17823165 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103229609 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108950187 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.172666539 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078284868 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236342445 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127971635 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.114991256 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140021951 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13788308 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13786644 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221470097 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178299897 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13219838 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06807724 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131621298 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150801564 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20139055 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089785366 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137180265 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148000679 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.105820408 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166021586 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102594887 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15576858 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080631003 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153301505 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163268992 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.103685789 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154960105 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130954931 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.104070408 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190138619 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195386276 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116961234 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110282166 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202930537 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156796453 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133389442 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202695322 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191143181 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.130077916 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128032079 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177460805 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242906304 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117218258 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22464258 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105378559 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111301855 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.115638544 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157438603 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142141498 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151517835 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084552939 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.154293965 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229365097 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101901513 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097507268 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191848255 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082796417 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109097697 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141471849 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101060188 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.121700571 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128581819 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135088337 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168973085 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155667857 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135248642 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153931249 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127122613 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221018888 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117484655 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10658179 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131693798 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.096563952 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.165669214 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192707548 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107302688 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225541811 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155695922 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132360725 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150032852 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085335519 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170269708 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106865823 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07304372 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199570028 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140427187 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112327375 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.211817505 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132176514 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156308988 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153143751 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162246974 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160529114 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.19047378 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108140267 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.115782549 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142183485 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154173546 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101906398 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095505067 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.110620111 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133101809 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12185292 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085936407 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172251122 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182220129 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100834116 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141911416 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126566036 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180937051 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10482106 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160426593 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.149679129 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122763267 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.185465046 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216413407 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166122761 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128790597 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203040411 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072976245 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075290796 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118065682 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156872447 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11169752 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085225746 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144057102 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20798016 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159848068 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164868449 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139314019 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151589235 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215944906 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072900173 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.146003788 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180035369 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154528293 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.157967919 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116208222 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101043003 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204342336 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132849821 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247804092 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145648987 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154477996 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182876956 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.139780837 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108464049 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106032074 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194450643 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132807018 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181917153 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128314822 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116795473 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139576076 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082694591 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132486575 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157530602 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148291113 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191060722 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.146358163 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162464836 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105166214 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145638412 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15382095 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151028189 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066442315 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150430303 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223766069 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123332085 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148735344 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188337546 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107500467 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153065386 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240283895 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176623911 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112931952 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137568579 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151928116 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160884382 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148373534 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170958608 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137463334 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165919737 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140139738 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113436768 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089757083 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127006897 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136555108 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.123918525 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14124704 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.147249943 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095888023 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188565064 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140841447 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139240732 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148773114 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100106131 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.120088968 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099970877 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238640929 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151292369 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235039851 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.130428204 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.207152998 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201394611 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104111103 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081368624 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.108560527 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172377321 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112628875 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164742056 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098101888 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134574398 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156168422 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201743769 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09754654 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097433996 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139530003 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163632732 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141392905 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127249505 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108614809 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225812798 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.133688224 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081215084 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154338533 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13445193 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131638852 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239152317 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063779657 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126228932 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078192747 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1091975 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161579182 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215765505 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085049317 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.15797736 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149368555 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15157944 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161531018 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128818394 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125917016 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116946612 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207570714 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158215745 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.118945131 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142924865 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161286229 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217815254 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10872412 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123923101 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231701547 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187247725 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223849684 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.116817285 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146683178 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145183325 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141997647 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173393184 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112681763 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228458857 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084880271 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19555067 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131692236 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09480089 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157790827 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.125782451 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118221994 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180682274 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150615416 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111509207 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081006455 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168100973 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171961636 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104370671 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103669618 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169651214 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101946218 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169166252 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231063204 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086566088 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136424978 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125380907 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084406931 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136126148 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1324416 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115817383 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.123778732 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228546827 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.11996993 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211920131 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174807169 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144713079 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195223368 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102690249 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665699098 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107595536 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188235378 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147210469 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267362489 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100261906 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151260297 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142150726 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152014425 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200294622 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134123963 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179863998 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190250313 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.15139297 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080849847 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132394661 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140520009 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.118847583 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136253837 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14491714 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145602813 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.10262508 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176279156 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157611363 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083352608 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124545812 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219404854 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149271801 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175773158 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172175468 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115040833 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14974736 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199537724 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082899324 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.152603918 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216626255 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136564251 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128036825 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082842301 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134570041 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234215113 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075704955 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220938868 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155754472 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140274046 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144113086 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148882621 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191043955 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135858182 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156565901 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097609011 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.167836177 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119164599 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112279353 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105858043 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108507158 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141020132 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.128823868 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131893055 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.145707137 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188335363 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072474854 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122928092 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131736498 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172562501 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238928071 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.118011741 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0853021 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146943293 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140171179 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.145556514 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182248329 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084526105 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111400138 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084501295 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.141234265 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140333801 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145863108 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105872979 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141048975 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228309915 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.112679329 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.228032649 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124246419 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139071587 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071599936 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107752691 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125186966 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098103319 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132042895 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127012805 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234471782 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09943345 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.118920093 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121971288 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075937848 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111307385 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160927832 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140541977 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151104137 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124819619 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065219229 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137250245 seconds)
  done (took 72.022249773 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.143444751 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.120806205 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.133649092 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.191865325 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163637988 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254952985 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.201400327 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241476032 seconds)
  done (took 2.50384635 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071754897 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.120214271 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103987209 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.118143207 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092722759 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070220779 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.297688195 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111109053 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068187598 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.117204916 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.119905913 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094908274 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.466230483 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067917931 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09511988 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.087426524 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068643825 seconds)
  done (took 3.216797603 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.436327981 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.660966912 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.459045598 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074647428 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.994501692 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090905391 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.567383675 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.168180427 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072838061 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.445359942 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.757911037 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135981394 seconds)
  done (took 17.917783447 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077207672 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071512525 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.112306387 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08547033 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.101165913 seconds)
  done (took 1.508493087 seconds)
done (took 115.49010194 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081477507 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.364064789 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055429998 seconds)
  done (took 1.507352469 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086338598 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087128454 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.114461942 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085132347 seconds)
  done (took 1.438749276 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076288638 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078445187 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114066071 seconds)
  done (took 1.33129683 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.28840793 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.168216394 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091479278 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084412214 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079561026 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107464955 seconds)
  done (took 1.33329717 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074611788 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076885352 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101637227 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077799298 seconds)
  done (took 1.385936156 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078317362 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054348995 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056337758 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083976159 seconds)
  done (took 1.334799891 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091326471 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.108032968 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082681259 seconds)
  done (took 1.341052249 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109313828 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114764819 seconds)
  done (took 1.286051393 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082904431 seconds)
  done (took 1.141247586 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093641078 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.142460932 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157922194 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.138974448 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.16834416 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.138745174 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.114795631 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088571021 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.106042729 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.116509192 seconds)
  done (took 2.328825719 seconds)
done (took 16.106779637 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078861519 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.393797234 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36239573 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119310716 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67083754 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357320748 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.006464365 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120705127 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.109201864 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096445073 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086213978 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650032684 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.997108977 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325065411 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.984411291 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.418075796 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677965037 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069878081 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069459913 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096546954 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.965854395 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096627773 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069419445 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069049863 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677357194 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37291407 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096468196 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.418681039 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069025864 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098224525 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356809993 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096903515 seconds)
  done (took 16.130354468 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071890924 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.145885045 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075165269 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084677583 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098892357 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071447337 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.100080814 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071313973 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.14866389 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070015123 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113058821 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069904221 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072840979 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097613208 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088683716 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097071921 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07095268 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069738898 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096695753 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070228993 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114638752 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070336869 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069413234 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097249895 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06953611 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107944644 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070873295 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068998581 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097143784 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072109132 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099141147 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070745011 seconds)
  done (took 3.855718766 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116560862 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.154194409 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075578141 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131163417 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11484617 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099809515 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.17334497 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094523545 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152441164 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069469111 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113616261 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070237663 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129987499 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070292836 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116032118 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070403804 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070442769 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097270606 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070252152 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096837663 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089748478 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070632116 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096906285 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070839068 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096956973 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083049437 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069855243 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100276944 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069394522 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099260467 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073588327 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070214885 seconds)
  done (took 4.150036323 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074480435 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075741238 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111549993 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084966634 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100265091 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075215791 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07425081 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098752071 seconds)
  done (took 1.770247984 seconds)
done (took 26.959459151 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080582949 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071475252 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102343212 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083042069 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101800333 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081516808 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069016818 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103457475 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077346588 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074262769 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104721813 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069748999 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.100176885 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069810909 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075626654 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096615337 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08121666 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100899194 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081018664 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.108614252 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07205018 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076877838 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103498121 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081147043 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10843857 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081076336 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081105779 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102655131 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070169175 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099730595 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078822084 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.113095816 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071114489 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081403059 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.097003961 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069570799 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068864745 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096724959 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081682894 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.104144394 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072653842 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.104146314 seconds)
  done (took 4.711308774 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090364152 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093438298 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.114997781 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063465277 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096963685 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064451659 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091528992 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.089543245 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063296156 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11766958 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057839515 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.05902045 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.088563327 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055479621 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060431894 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05794441 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089372404 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058539575 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058984134 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087088658 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.062112252 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055556354 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061675697 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.088487425 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058450567 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063299102 seconds)
  done (took 3.019116933 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076098219 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083865014 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116888863 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129697625 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134443977 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07667563 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107433137 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087256162 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113874864 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069550762 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072535594 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125845717 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087938885 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103565703 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070104667 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.112388192 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084461977 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070879403 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.10317997 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089926554 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113043269 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080134258 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09067353 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.109706683 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068692982 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098886179 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073977335 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08227197 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.102251285 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078798241 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100595313 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073400092 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098339986 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081704861 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073334166 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.098478928 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088790936 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10632814 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079432165 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070320215 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100248024 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069992702 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.117667038 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113939783 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096504079 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075529692 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076571974 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.107585736 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.078339707 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115443261 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079176832 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069125355 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.10054776 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069148913 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096954019 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08502311 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071448951 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099582155 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078796995 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099850095 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082239441 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07346563 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112805269 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069883911 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.105010903 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069822926 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070303695 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.097163755 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09154968 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098530938 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109665283 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070150613 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.09908512 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078114395 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104908915 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075721487 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069898803 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111971827 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079853046 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.100451503 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078789631 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.100072533 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072860654 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087855184 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.099621495 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071570434 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069868464 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.103686244 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072157237 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098830337 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083314144 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069526411 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099994029 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087127418 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096727191 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071666006 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075137586 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.102500474 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070161205 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109091223 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075081342 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070139951 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.106475739 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070057013 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.100417286 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079700596 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07392699 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.096089955 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074526109 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102665478 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070287203 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069747161 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.100051557 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071765112 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.106253057 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076482178 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073583406 seconds)
  done (took 11.47731141 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.193750792 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.189469354 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072167053 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.181370903 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078321557 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.110387871 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.180938398 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099187101 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098519258 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070955184 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070675814 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.13553172 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.128766705 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.110874038 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.109256306 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070255678 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116084974 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.108767389 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.184522923 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.178378892 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.117941681 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078063451 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071468947 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.10028454 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072442405 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.108280582 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087021126 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106219986 seconds)
  done (took 4.319308368 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08333077 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.12656207 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075680215 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.08763384 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.121540974 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070245035 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102018573 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071710606 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110413028 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081104264 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097647081 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075274005 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076217774 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107333223 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070821586 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106688461 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07974087 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071115559 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.1010336 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075363704 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104207414 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082559961 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07368349 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.097361277 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076578743 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097103441 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066040337 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.115658413 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069735377 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116683085 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067886557 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075693977 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.10735474 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070912858 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069526803 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.100969445 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072169825 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.099989577 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071912458 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067693406 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.09609174 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060535664 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06910913 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.110699314 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07634315 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089647239 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075258735 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074923588 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103101454 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067829361 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100865274 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072576455 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073590707 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.105204943 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075152684 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075115339 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.10115284 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.068519117 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104406473 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072144662 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066202661 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095975377 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074701809 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067743249 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.106267963 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075310956 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.096642094 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072410958 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074238586 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104264886 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072163883 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072107612 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.095793979 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071514459 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102157582 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074543688 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073554029 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096602585 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070802594 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070029227 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.085316148 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070547774 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055892598 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.101013185 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068479509 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068472382 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.099512869 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.078590944 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110347848 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072499206 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.104240383 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071315376 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069449555 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100589139 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064793309 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072206388 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.112388601 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112147216 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070769027 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067831919 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.111419071 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075088198 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068609854 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.086929113 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076860287 seconds)
  done (took 9.963383579 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.092860763 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094239132 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100457506 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083150157 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124216453 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09365071 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105781818 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077267442 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071482041 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.115357508 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070421255 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106465997 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.074084159 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078284413 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.122720323 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076998043 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100281347 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079150219 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07763614 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.133622083 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082973267 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112348097 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.079924079 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.099278951 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074744498 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08210515 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.12600202 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080527756 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.10787616 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084765087 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080179476 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.12537505 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.084872563 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102705157 seconds)
  done (took 4.301477021 seconds)
done (took 38.854146138 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.145349783 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.362005101 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.135722279 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.043805266 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.19058 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.148820758 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.150566447 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.139121066 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.771860224 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.140482083 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.393209379 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.799865941 seconds)
done (took 59.506404715 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.17512215 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.277767318 seconds)
    (2/2) benchmarking "String"...
    done (took 1.411262845 seconds)
  done (took 3.783354081 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.545455989 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.170798377 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.442070469 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.137317648 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.137376644 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.683638325 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.805587439 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.026741012 seconds)
  done (took 27.490255982 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.143035641 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.528106705 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.768550345 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.767228726 seconds)
  done (took 18.293837056 seconds)
done (took 59.372796063 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.159937186 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.221862235 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.157924417 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.124647519 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.250273556 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.168435713 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.21764048 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.217830724 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.139145438 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.131205739 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.157049978 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.149011618 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.144775867 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.212125871 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.153454709 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.139107808 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.145376347 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.748451235 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.537135223 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.150249599 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.160445009 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.163276278 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.139719471 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.143224728 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.202002145 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.144833807 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.140241483 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.163366009 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.606387309 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.142808999 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.142412024 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.367909516 seconds)
  done (took 187.92879736 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.140098782 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.202239121 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.299633162 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.16501929 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.763581927 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.337300872 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.267457849 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.811482817 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.155011904 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.161759086 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.370264233 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.142920248 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.449084826 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.128752701 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.150744325 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.237930757 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.344253104 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.453284363 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.158287174 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.413408905 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.152615439 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.407946058 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.301833735 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.338179796 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.193754971 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.200915723 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.145046473 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.163362598 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.336700133 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.279931319 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.157143725 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.177531276 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.760752778 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.999769497 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.142928438 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.178142956 seconds)
  done (took 148.180821301 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.435355979 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.140928637 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.142480834 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.141957279 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.141582656 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.173278781 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.14091021 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.142099218 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.723494564 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.726031731 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.689841826 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.142512371 seconds)
    (12/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.414432633 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205002714 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.393803015 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.14307856 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.236480773 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.155739731 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.143064747 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.157309124 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.169812416 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.146205929 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.143059442 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.723020287 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.158235502 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.719413637 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.149518551 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.14373743 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.175281933 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.538406064 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.143172484 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.175999137 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.466517085 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.190294984 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.142955489 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.501335879 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.19701304 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.254624289 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.145018991 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.175033992 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.143416248 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.416128048 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.143717647 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.144929164 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.146993319 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.772984962 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.146306337 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.724987253 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.146989398 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.071895141 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.144216047 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.144211142 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.910410808 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.73934663 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.144814845 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.145030903 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.147181233 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.145439912 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.145128836 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.176572807 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.733683294 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.247313469 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.145639136 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.147380828 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.176491299 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.144088698 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.434035353 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.144884567 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.939883269 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.204644919 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.257675755 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.721392166 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.147663227 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239502245 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.27092283 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.146470831 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.145877087 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.146720061 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.145161221 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.254621953 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.145464914 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.574813735 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.151804895 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.147462184 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.206489041 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.240757971 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.146643509 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.483422321 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.148656973 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.146002241 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.870662656 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.239715929 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.145998375 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.145110091 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.146465294 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.577214124 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.730636507 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.380123003 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.147918173 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.615422871 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.149818771 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.146597246 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.591308839 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.695522174 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.728250556 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.146974518 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.25454898 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.150262334 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.148262037 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.146829919 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.174916136 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.148061777 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.205525308 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.146376797 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.544240945 seconds)
  done (took 340.971050647 seconds)
done (took 679.603373445 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.772971557 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.763830645 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.874504409 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.756421854 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.7425084 seconds)
  done (took 10.003088099 seconds)
done (took 11.094587254 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.335203551 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.334994747 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.208598505 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.337771207 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.177155536 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.352709536 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.315204555 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.167504943 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.250215971 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.225539395 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.249792973 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.197224709 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.175480077 seconds)
  done (took 17.420643873 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.480222804 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.465518325 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.21158673 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.505154446 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.188200374 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.471579684 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.354258213 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.35703345 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.342843924 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.162770584 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.161595724 seconds)
  done (took 15.795248819 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.512548076 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.465664797 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.214801631 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.469867904 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.18925788 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.45015899 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.349407893 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.359851924 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.344788367 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.162099193 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.160994374 seconds)
  done (took 15.772487302 seconds)
done (took 50.081479091 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.158051726 seconds)
  done (took 2.252147346 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.191858971 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.359261509 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.173130978 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.162457298 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.159359524 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.160509276 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.163187888 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.158192617 seconds)
  done (took 10.622812618 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.15488284 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.154604845 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.156850395 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.158013779 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.154421738 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.155156798 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.156542959 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.157524054 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.156789235 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.155007346 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.158214745 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.155155908 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.154956237 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.158112673 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.155057493 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.157621677 seconds)
  done (took 19.595008247 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.157031408 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.155070533 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.155064409 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.15680734 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.155384968 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.156384059 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.155941376 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.155531202 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.155976962 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.156344405 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.156651211 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.155950963 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.156551286 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.155731474 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.156964336 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.156186544 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.155741955 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.156448459 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.161171692 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.156168703 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.15790487 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.155056846 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.156775892 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.15685468 seconds)
  done (took 28.852407522 seconds)
done (took 62.415630733 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.395213426 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.91769995 seconds)
  done (took 9.40964862 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.159093613 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.159282086 seconds)
  done (took 3.418871482 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.158914603 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.158960955 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.1596189 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.158589705 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.158495389 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.158169036 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.159502837 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.159070698 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.159402379 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.160085721 seconds)
  done (took 12.688335055 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.159155893 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.158637224 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.156994979 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.159593626 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.158734323 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.157093648 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.159733952 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.158884432 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.159856397 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.157020332 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.160304217 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.157926028 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.159753733 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.157447094 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.159825646 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.157817727 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.157082554 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.157218332 seconds)
  done (took 21.950363458 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.159342445 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.15970237 seconds)
  done (took 3.417406138 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.158432032 seconds)
    (2/7) benchmarking "second"...
    done (took 1.157344189 seconds)
    (3/7) benchmarking "month"...
    done (took 1.157212099 seconds)
    (4/7) benchmarking "year"...
    done (took 1.157610877 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.15789841 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.157576154 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.158416616 seconds)
  done (took 9.203077594 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.160477084 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.34214391 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.426610095 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.76686005 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.162515808 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.16377494 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.028937667 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.163131933 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.16653531 seconds)
  done (took 13.479896548 seconds)
done (took 74.664115489 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.176388085 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.155640103 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.089074707 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.171300708 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.173693446 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.499338383 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.205412342 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.280318763 seconds)
done (took 36.850720723 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.17417953 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.856786741 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.898228965 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.156292991 seconds)
  done (took 11.010772833 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.14553309 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.092128218 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.15438517 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.196340951 seconds)
  done (took 17.689697406 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.787319767 seconds)
    (2/2) benchmarking "read"...
    done (took 1.485391207 seconds)
  done (took 4.374642358 seconds)
done (took 40.348576984 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.161795422 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.162133324 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.160555015 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.16150427 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.159575589 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.162376431 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.16031491 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.159684175 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.161696619 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.162944152 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.162659138 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.162970304 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.162166605 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.159807451 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.161853024 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.160097598 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.162135926 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.159890227 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.163350338 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.160187843 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.161113224 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.163773136 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.161013669 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.16055379 seconds)
  done (took 28.974323704 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.163490441 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.161206071 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.162900163 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.163231159 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.160645013 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.163679844 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.164533467 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.161654874 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.16353832 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.164131256 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.162059129 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.162149245 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.164669273 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.161507676 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.164451122 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.161171905 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.163351909 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.161490164 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.16449093 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.162542078 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.163090136 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.162666315 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.162707061 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.163370919 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.162021304 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.161545725 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.165090804 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.162178465 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.165386404 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.162479802 seconds)
  done (took 35.989761565 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.169996011 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.172652805 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.165170162 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.164950707 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.164806688 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.164770321 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.16529733 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.166292826 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.16515247 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.164988695 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.165577843 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.164799946 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.165962756 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.166653604 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.165198524 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.165475588 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.166430475 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.165706536 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.1649903 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.165222401 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.165453667 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.165929035 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.164826112 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.166150893 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.166008249 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.166012521 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.16513919 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.166248196 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.165759134 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.165885108 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.166052066 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.166991365 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.165916184 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.166466905 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.166651792 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.166515649 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.17121646 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.174502176 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.165547918 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.166605961 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.166737107 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.166581558 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.165607901 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.166905011 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.167337225 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.166305513 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.166576884 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.166528003 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.167360887 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.167592512 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.166989266 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.167227186 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.167017653 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.167108822 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.166414275 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.168323203 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.167257452 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.166816436 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.167257348 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.166597336 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.167703442 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.167325623 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.167437803 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.167237993 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.168510163 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.167262131 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.167272191 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.167225326 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.16782939 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.167810064 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.167861891 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.168244129 seconds)
  done (took 85.109454347 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.167432516 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.16713147 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.164715786 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.166663689 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.164560935 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.167947605 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.165382734 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.168620478 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.166619068 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.169235044 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.168417239 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.16634206 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.16584385 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.169067843 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.168120292 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.166043342 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.16857604 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.164584924 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.168303116 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.169590415 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.169220707 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.166611862 seconds)
  done (took 26.785389977 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.168540728 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.167792856 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.165843741 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.169225286 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.166838942 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.169210602 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.16902307 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.168491826 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.168476791 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.167307609 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.166356024 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.17061254 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.167233209 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.166533515 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.16680135 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.166779018 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.169639261 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.166740225 seconds)
  done (took 22.129211661 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.166656512 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.166032477 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.17002266 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.166893453 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.167505003 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.169995942 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.167792924 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.170810176 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.170957793 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.167968504 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.170416198 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.170841618 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.170972765 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.16949542 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.170724035 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.167464569 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.170879133 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.167693533 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.171075566 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.169781399 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.169062819 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.170938726 seconds)
  done (took 26.831794645 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.169812289 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.169975012 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.168503253 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.168167419 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.1678569 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.170825909 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.170776674 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.167853493 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.171193897 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.170948908 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.169103676 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.17281007 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.168364568 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.170391245 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.169127897 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.169735361 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.171859954 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.171033247 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.172520584 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.169259206 seconds)
  done (took 24.508721075 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.172583341 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.173657742 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.173529358 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.173083543 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.17352016 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.174300309 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.175335009 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.173075238 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.174177347 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.174872453 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.174836274 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.173983206 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.173945957 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.174363553 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.173622904 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.174278024 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.174764421 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.175122164 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.175211781 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.174324734 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.174383522 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.17372118 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.173457296 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.174956314 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.173531229 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.174042079 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.173868556 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.175115599 seconds)
  done (took 33.986507655 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.172832359 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.173516057 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.171225283 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.171771244 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.171323548 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.170115943 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.171452639 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.171211079 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.173287071 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.171064919 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.1730449 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.173351127 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.173471155 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.173604432 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.173453092 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.174372156 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.173051233 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.171785475 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.171749969 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.170789692 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.174107604 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.17470612 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.173493429 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.171548396 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.171599427 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.174530148 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.172114274 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.172582586 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.175091313 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.171873892 seconds)
  done (took 36.290178521 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.191902809 seconds)
    (2/2) benchmarking "in"...
    done (took 1.1943863 seconds)
  done (took 3.497608812 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.17148944 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.174472363 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.175933638 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.172557358 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.172192502 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.176039995 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.174903165 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.172149973 seconds)
  done (took 10.502431414 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.17296858 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.175955356 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.176094274 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.174462129 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.177094816 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.175586635 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.18212024 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.192746235 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.176169969 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.1769732 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.182775829 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.18363188 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.178341759 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.175248972 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.176171371 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.178040252 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.176348845 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.176742096 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.177256312 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.176292251 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.178125529 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.178146163 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.17858952 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.17358009 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.177522355 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.188222886 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.18148003 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.17731913 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.17646682 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.180341235 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.175802021 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.173695516 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.178021563 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.177953822 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.177465911 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.177044932 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.184621007 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.193559773 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.183514246 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.178662389 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.175858941 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.174283186 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.179271103 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.178967048 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.178812026 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.178079164 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.176981412 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.17469035 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.176055912 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.180312813 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.183349815 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.177001182 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.174732775 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.180767246 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.178592032 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.184875657 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.195762183 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.181608979 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.187478574 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.190551526 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.192595774 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.186290386 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.179651831 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.178552281 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.189044307 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.203674457 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.18494282 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.193858019 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.176331578 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.177964802 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.185515744 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.191666616 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.188227381 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.179060211 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.179649612 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.178859379 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.177402305 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.179936353 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.186587981 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.198959699 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.179096998 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.180194524 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.190294889 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.202744682 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.178832048 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.180429238 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.180621868 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.18062968 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.181096826 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.189736759 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.197842017 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.1795132 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.180141777 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.179134614 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.180955128 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.180953852 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.178160477 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.180715189 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.178000139 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.180660005 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.181439946 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.183891188 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.190152111 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.18116379 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.180749169 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.186976477 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.180822526 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.180028196 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.187274713 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.182176372 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.181809836 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.181758499 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.186993223 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.178310447 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.184504117 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.189716959 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.182412875 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.182309313 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.182067626 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.181261033 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.191423734 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.210646481 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.181574158 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.18149889 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.187068607 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.193802563 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.182807591 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.185263004 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.180694237 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.179680225 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.179516876 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.182759557 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.181817586 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.18282983 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.183766004 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.181518277 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.179516015 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.182823305 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.183050021 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.183844936 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.183697973 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.181956393 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.183018317 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.184138155 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.183017759 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.185175876 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.18926543 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.182888047 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.182966972 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.183949174 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.180387282 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.182712381 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.184090971 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.184044436 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.182826534 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.18307696 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.181490587 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.183742087 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.184068795 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.183871584 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.184641036 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.185479125 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.186223041 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.184077679 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.187960965 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.183254606 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.181453569 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.184847613 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.183792813 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.183301259 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.183705068 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.1824675 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.186943508 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.191919614 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.183761268 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.18562459 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.187163223 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.184162251 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.184923867 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.184659101 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.188646711 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.192698921 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.18614022 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.191510581 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.184958165 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.186964721 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.185309583 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.185866815 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.183908961 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.185224746 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.188325496 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.192688138 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.198450289 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.19511397 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.186242499 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.188425042 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.187080343 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.18963956 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.189108247 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.18627963 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.185975806 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.186196722 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.18537 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.186424714 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.187357424 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.185777758 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.184651213 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.186029044 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.186010638 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.186102973 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.187066453 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.185439843 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.186615024 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.182867205 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.185053623 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.186740896 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.183934661 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.182524934 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.18483279 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.18542471 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.186803931 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.187515661 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.193690773 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.183345448 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.188330621 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.186851794 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.186386199 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.185851565 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.186538268 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.188343438 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.186158137 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.193532473 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.204167796 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.187485499 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.192806045 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.203958272 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.186362985 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.190222387 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.188467765 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.184548655 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.190184214 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.19602878 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.187351671 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.18754204 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.188548904 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.187369658 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.187684734 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.19367561 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.185446944 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.186575945 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.1878784 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.189775046 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.185098359 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.188088635 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.188875712 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.18823598 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.190570468 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.188695549 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.188314136 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.189890549 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.189063326 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.189778866 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.188988157 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.192240033 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.197264489 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.193763136 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.189201104 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.190866601 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.189612391 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.192671131 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.188349201 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.189810803 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.188150446 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.201410413 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.197604501 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.196844335 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.190388957 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.189540611 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.193972865 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.190459286 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.193595202 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.188911812 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.189533496 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.189025777 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.1889074 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.186305428 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.189049515 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.189894751 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.190301522 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.192959395 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.193449686 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.190442667 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.187883228 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.190142542 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.191013019 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.189248534 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.189497887 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.189672917 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.191123875 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.192528804 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.188959542 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.189533375 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.195746397 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.208579187 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.191364576 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.190061241 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.189823027 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.189302171 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.190864093 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.191889243 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.194387552 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.199657123 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.194219861 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.200481444 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.192412279 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.20108059 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.192825105 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.193677501 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.199830108 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.188984935 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.190568006 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.19183512 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.192092963 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.197922807 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.209382516 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.192982873 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.196321702 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.190379747 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.191982169 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.190759795 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.192037889 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.191535001 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.192906903 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.199855019 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.210517505 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.196851529 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.193300576 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.189828085 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.193010858 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.192652094 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.191767264 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.195570004 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.19247726 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.19284633 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.192168981 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.192947002 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.192458783 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.19355368 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.193600215 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.189991709 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.193435921 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.200125402 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.211512793 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.197731299 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.193001349 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.201301989 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.19413737 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.199781087 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.211550196 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.193530055 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.193745328 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.194519828 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.196383373 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.19275699 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.193637867 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.1943857 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.194612411 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.197530108 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.19387326 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.195547789 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.195145498 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.194997787 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.193597445 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.205028154 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.220672328 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.195645798 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.199376396 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.191228578 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.195438386 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.198694905 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.19468781 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.193260876 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.196942693 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.205903514 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.202505443 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.194966649 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.194978407 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.194345296 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.19511286 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.194511512 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.195680327 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.195193212 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.195487909 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.194869488 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.193848737 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.197217073 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.194498932 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.194327767 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.196458159 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.195676988 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.205450299 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.196158185 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.195913463 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.195251577 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.194731324 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.196400757 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.196312996 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.19575249 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.195822678 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.194508481 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.196983773 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.203013924 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.202537221 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.197408365 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.196030267 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.196068099 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.196143574 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.19519654 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.196607292 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.197372507 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.19675633 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.197340894 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.196068275 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.19742558 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.19466109 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.196577051 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.197257927 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.196975226 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.200271386 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.203936075 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.196464429 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.192926954 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.196449685 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.197187568 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.195794191 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.196480268 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.204790803 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.20057794 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.20792805 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.206229737 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.202929905 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.197216551 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.200144841 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.203947999 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.195511445 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.197156662 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.197920839 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.198551363 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.198759615 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.201809635 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.198679258 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.203809218 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.197447034 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.196953772 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.206241903 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.216045176 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.198481652 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.200195071 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.202205034 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.196692913 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.195692555 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.19849125 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.197334764 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.206061205 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.217483895 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.199090553 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.199948364 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.195594196 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.200115503 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.203510012 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.198661882 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.1991662 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.195494932 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.199607609 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.19934993 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.199188891 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.196450458 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.199178959 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.198410831 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.20164318 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.206044805 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.19744144 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.20050462 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.199409956 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.198523705 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.200406537 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.200175456 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.197035225 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.196457398 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.198851196 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.199523853 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.199894255 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.202263196 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.19896359 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.200528394 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.201923827 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.201168121 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.202779124 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.210587029 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.208712008 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.198182246 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.200226498 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.200784888 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.203176717 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.200100402 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.201786822 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.202003479 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.201692539 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.201265576 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.201852191 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.201996089 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.204691765 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.216809636 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.21963914 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.200332678 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.201752669 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.204028595 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.202189636 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.200095644 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.202152504 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.20413027 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.205327617 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.210088899 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.20305099 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.207131541 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.219363357 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.202605443 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.205971425 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.204691837 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.208678297 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.204770239 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.20199694 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.202587025 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.208161237 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.218738092 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.203152933 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.213047918 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.233718413 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.220881806 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.203563993 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.204383752 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.201278646 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.202780133 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.204865168 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.203603607 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.203517346 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.202702959 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.202465498 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.203000346 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.209088494 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.204515068 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.203003252 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.203299984 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.202135501 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.203206557 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.200580246 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.203144314 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.203669885 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.20383206 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.203891188 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.203572315 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.203263044 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.215385427 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.213556436 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.203124315 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.205140978 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.20088219 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.206766201 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.207184713 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.215026518 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.211994114 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.204757208 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.205057594 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.204851429 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.204753964 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.20116839 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.204060503 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.203494441 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.201895907 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.201602503 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.217766332 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.214507871 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.208515019 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.204082006 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.204425582 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.203825893 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.205943475 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.205360827 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.205935498 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.205917439 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.206348438 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.209575151 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.20539536 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.204827745 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.208226868 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.213880459 seconds)
  done (took 711.955913225 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.202736605 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.202595045 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.201921585 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.203069072 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203564987 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.203635552 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.203677239 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.204002527 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.201727119 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.203109542 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.20346541 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.203864956 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.203649242 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.203989848 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.20398621 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.203583771 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.203231418 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.204685292 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.204424669 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.204430198 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.203939252 seconds)
  done (took 26.414353464 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.206617675 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.204115643 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.204685551 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.206031985 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.203097937 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.206442251 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.204750861 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207544562 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.206866239 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203521202 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.207114997 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206911809 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.204515755 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.203737354 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204081077 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207399977 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.207124309 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.204213846 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.207517384 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.204539928 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.207303593 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.204888998 seconds)
  done (took 27.666132511 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.209209434 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.207359667 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.206756303 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.204759327 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.207516801 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.205012118 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.208187609 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.207688472 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.209126069 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.208249825 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.206730016 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.209383689 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.215273902 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.213194982 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.208754853 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.208520165 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.352682685 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.208405273 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.208748858 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.208984703 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.205754625 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.213172408 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.205827784 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.206408902 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.206856813 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.208591158 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.208186615 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.208496542 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.209453006 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.210032958 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.213498669 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.208800242 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.208132481 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.210395623 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.207567209 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.210354217 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.213629767 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.210118736 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.206131529 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.208164975 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.219860882 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.233155312 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.208750742 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.215996395 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.20936877 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.20982015 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.21335023 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.218446972 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.207624603 seconds)
  done (took 60.576419389 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.210147318 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.20973256 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.206732366 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.210773689 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.211168465 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.210388021 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.210206778 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.210923996 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.208141761 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.208038137 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.211239846 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.208092723 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.207580924 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.211674715 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.210397916 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.207413433 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.207770624 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.207929097 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.207369866 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.208104668 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.20878867 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.210367221 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.209957919 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.209165204 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.210887977 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.209005373 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.208764225 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.211619929 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.208907228 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.207572217 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.210722377 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.211712598 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.211934578 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.209316233 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.208332985 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.211177763 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.2117282 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.208621299 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.21164308 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.209387612 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.211993144 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.211443755 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.212255529 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.210745614 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.209462477 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.209756975 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.209372545 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.209622052 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.210220056 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.211944445 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.212348941 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.210466772 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.211412857 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.209707497 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.211608774 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.211778136 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.210454957 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.21011159 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.211914957 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.210535136 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.211008282 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.211934641 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.211382301 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.213292059 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.213916446 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.211096127 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.209907324 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.213010964 seconds)
  done (took 83.443954087 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.213674865 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.213369831 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.214489395 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.21369804 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.213557251 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.214582009 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.21299818 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.212812476 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.213546745 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.214285351 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.214579855 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.213993077 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.214767037 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.214111686 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.213497693 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.214211418 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.214593619 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.214598289 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.215049341 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.213735238 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.214721746 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.214427899 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.214800015 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.215118385 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.215043031 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.214566492 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.214388464 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.215221825 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.214604031 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.214581314 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.214688088 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.21416594 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.214629924 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.214847145 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.213707968 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.215116533 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.214145018 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21495027 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.215284162 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.21472846 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.215008228 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.214577859 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.215158329 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.216188294 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.214971354 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.214629324 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.216125246 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.216403811 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.215006706 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.215816705 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.215724667 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.216357705 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.216455311 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.215434587 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.215886546 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.216111846 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.216184368 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.216459769 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217044956 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.215700494 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.216479365 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.216238959 seconds)
  done (took 76.473269742 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216086256 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.216460155 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.21372269 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.214033396 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.216196585 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213633032 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.214667887 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.21687962 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.216378694 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.21549932 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214985777 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213405927 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214486487 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216238227 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.214859327 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214321358 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213906239 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.214357446 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216837221 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.215035537 seconds)
  done (took 25.455068336 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.214608553 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.216215674 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.214875322 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.215871447 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.217486577 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.214678618 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.217181836 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218092717 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216109755 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218235072 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219153444 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220516461 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215298317 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.215613608 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.21820894 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.214945693 seconds)
  done (took 20.620653255 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.215693155 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.2184689 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.218332698 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.218431909 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.214720835 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.216198594 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.218106517 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.216326833 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.216014362 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.218120344 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.219083417 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.217694455 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.218346213 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.219452489 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.216263018 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.218768353 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.215450586 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.215237674 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.21909264 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.219173308 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.217219384 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.217417538 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.218739281 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.218844318 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.216265359 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.216352573 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.215849682 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.216806289 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.216710077 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.219217789 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.215669567 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.218574014 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.216742509 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.215992042 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.219780808 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.216667161 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.219940064 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.21919978 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.219920061 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.219955128 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.219355482 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.21708187 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.219413759 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.219646992 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.217325357 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.219989715 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.217965964 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.217825934 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.218779074 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.218020075 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.220343118 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.220340752 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.220438392 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.221723888 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.220530859 seconds)
  done (took 68.149110392 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221133885 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.221146917 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.218463854 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.220742596 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.221065834 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.218873965 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.221760549 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.21916018 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219309012 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.222534295 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219448266 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.221180466 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218421309 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220599732 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.221059112 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221848505 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.218845617 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.21953513 seconds)
  done (took 23.12182799 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.220341299 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.219606316 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.222503982 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.218007117 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.218417397 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.222953312 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220095932 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.222202876 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221808645 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.218899123 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220825472 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.22227156 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221932341 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.222240822 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.220353906 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221947567 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.222549617 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222520976 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.220901946 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220328701 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.223464098 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222044135 seconds)
  done (took 28.024289521 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.221050244 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.221605388 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.239160307 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.265590139 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.255100479 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.220471067 seconds)
  done (took 8.580866123 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221295657 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222720297 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.221548663 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223597816 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222267565 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221193472 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221067115 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220499027 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223172267 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220823752 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220657466 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222555509 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222740429 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22071374 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223928781 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224120816 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220800734 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221006819 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221753448 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223591763 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221131748 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223991368 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221973031 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221558931 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221310935 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221536817 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223620285 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222498663 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221346693 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224557767 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224912048 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221293938 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224219447 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222491857 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224973948 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225146151 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222585954 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224396358 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225387789 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22281139 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.225123649 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225838825 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225021951 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221633907 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2248637 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222779566 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222448674 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222925465 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223067196 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225744386 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225629198 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222700979 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225327244 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226533627 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226720373 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225721739 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223202779 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22342593 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226359311 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224719852 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224050019 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22696134 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224132788 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224133123 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225667193 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223914698 seconds)
  done (took 81.900937099 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222986464 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.223887353 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223395022 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225055996 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224376888 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223845124 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223733217 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22446405 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223458845 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223634376 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226108793 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223294781 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224581938 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224279586 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223873758 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224828931 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224251663 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223682459 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224188227 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227228157 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224932918 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22539645 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224610409 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224763926 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225449302 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227607353 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225258631 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223656573 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225230904 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22573461 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225644949 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223897497 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225046171 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.225703229 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224301681 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224459068 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225050496 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225540276 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225047201 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227669936 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225401175 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228598828 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225005964 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225359332 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226341216 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225518881 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225212141 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226437393 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224899285 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226074684 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227491542 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22701295 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225583494 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226164319 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224794893 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226598087 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225658361 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226359604 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226450944 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229331367 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227264745 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226720737 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229575542 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226518055 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225382709 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225834971 seconds)
  done (took 82.039153242 seconds)
done (took 1660.126793637 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.291730039 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.350875432 seconds)
  done (took 13.807397376 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.391900153 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.34394173 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.225785361 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.272495642 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.226916986 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.23499378 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.252317815 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.227174519 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.226813264 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.227420252 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.227203771 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.417458528 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.262125412 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.227741535 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.228160809 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.321462997 seconds)
  done (took 41.486542938 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.257523428 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.234911739 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.357349063 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.25246029 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.257928248 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.430159403 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.289441238 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.231725015 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.41974218 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.280756831 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.895373071 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.257303467 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.233747354 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.413098985 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.252115959 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.430565544 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.492397702 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.90127217 seconds)
  done (took 29.052444297 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.716386564 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.269526699 seconds)
  done (took 9.151894684 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.239169578 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.236763051 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.22494412 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.27012262 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.257279199 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.266624346 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.291402515 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.302193494 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.287460438 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.239287474 seconds)
  done (took 63.793459228 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.252893231 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.233579119 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.232648245 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.231468281 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.224591704 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.224181747 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.231527629 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.22468702 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.222609002 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.368504752 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.24878236 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.24014712 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.232717371 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.234221907 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.231499821 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.270881433 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.3775013 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.230183726 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.229117204 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.239965871 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.232239985 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.339239849 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.277171524 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.231809956 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.368063987 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.194842227 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.236591072 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.242084661 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.359519194 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.231745489 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.232920669 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.23351011 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.235985291 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.822033122 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.741826848 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.242738003 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.258351526 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.243746437 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.231872509 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.362011225 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.23487001 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.239870152 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.228663726 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.740611226 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.398385303 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.354299929 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.539251779 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.235151842 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.236097347 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.299838939 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.235355813 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.235809315 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.265927433 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.00815798 seconds)
  done (took 106.720976364 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.237064342 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.717895835 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.39863574 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.248358368 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.105767693 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.885686181 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.227210331 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.538466529 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.261805971 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.229138238 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.520760919 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.759457134 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.236370811 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.244830819 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.749047254 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.302476025 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.228805478 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.070340887 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.229915041 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.230242153 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.658526825 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.246031369 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.229270547 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.274668762 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.269209022 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.714282719 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.786855598 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.662188452 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.232060281 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.229024432 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.7210492 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.232237274 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.264916366 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.229838469 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.514344203 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.609805303 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.583234789 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.23287451 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.23751721 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.233074025 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.256250682 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.71117917 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.595056124 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.229407784 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.229518637 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.716187623 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.229283218 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.240276442 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.235207951 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.440054188 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.131818055 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.229584189 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.790098647 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.22978657 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.493227531 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.308190766 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.298612663 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.743434314 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.229685916 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.32674428 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.23633961 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.229959212 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.231925622 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.231008009 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.231813107 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.600479243 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.618313587 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.229050221 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.601662781 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.714901 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.230286611 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.780970628 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.206345093 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.246365676 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.280532403 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.230304944 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.921958729 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.742943453 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.255702239 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.231157831 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.588028131 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.233526108 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.521963689 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.246102938 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.232576358 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.671032483 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.251989904 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.254597892 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.230848747 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.231861195 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.990232241 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.235238916 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.51055869 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.24759943 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.231637862 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.232190843 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.27143438 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.231671215 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.232267933 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.236386689 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.781491099 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.239821938 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.385024144 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.252915744 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.232731676 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.250544652 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.233035922 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.23279048 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.461818716 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.855507189 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.241017798 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.232367888 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.233616835 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.233955 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.33071241 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.239087343 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.562107022 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.235811094 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.232597153 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.238419442 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.929511188 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.274509304 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.232090907 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.253142221 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.073867825 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.442834139 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.252950548 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.23238815 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.233445965 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.250509652 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.696045556 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.232913102 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.24556978 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.234109316 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.96895729 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.250621199 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.273300207 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.797750942 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.240650581 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.234168966 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.233849476 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.234137404 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.548110967 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.520809446 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.550274336 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.234522664 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.234434288 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.957178684 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.25167806 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.378176411 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.254272682 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.26475742 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.434111535 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.364674195 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.234303673 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.802530014 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.23623809 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.457095538 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.235286041 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.560746332 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.750106439 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.235252277 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.242357559 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.967582749 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.895818949 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.89039535 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.235877206 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.524275991 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.233047998 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.684672234 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.23444136 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.234165792 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.822379337 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.237811014 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.235460082 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.236454241 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.23719851 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.303757796 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.413329035 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.809471239 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.239010256 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.722896809 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.235408601 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.237646356 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.241427296 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.239505601 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.589225021 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.270824388 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.239237851 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.251800616 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.236648604 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.236106034 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.731339276 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.24248013 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.240166373 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.392366313 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.895279056 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.236559234 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.236902404 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.034190918 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.482868963 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.810526927 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.271157449 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.575773754 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.244132226 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.27880063 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.048960484 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.275551248 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.776559583 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.240467482 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.237547104 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.864484614 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.237401295 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.288087758 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.237067894 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.248281028 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.796078612 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.237009493 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.242974725 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.828092908 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.23957278 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.49735343 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.239318194 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.270406711 seconds)
  done (took 1091.042516986 seconds)
done (took 1356.218958538 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.238848679 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.239918803 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.227005942 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.240324458 seconds)
  done (took 26.127027352 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.250886446 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.244952247 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.246268127 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.244021042 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.249110655 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.245283938 seconds)
  done (took 8.663323369 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.442455438 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.24033107 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.241182732 seconds)
  done (took 19.104747744 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.484148473 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.595698634 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.644850507 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.594423594 seconds)
  done (took 10.503413809 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.247238109 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.244899763 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.246859454 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.24864254 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.250976912 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.252731565 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.248521788 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.249838563 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.252248215 seconds)
  done (took 12.425233775 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.45219676 seconds)
done (took 83.455636063 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.890733615 seconds)
    (2/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.570567948 seconds)
    (3/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.241882833 seconds)
    (4/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.820481153 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.212275018 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.241103068 seconds)
    (7/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.056261107 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.531050224 seconds)
    (9/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.382083258 seconds)
    (10/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.643007604 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.281386691 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.226204423 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.125270257 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.285880244 seconds)
    (15/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.598401901 seconds)
    (16/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.227684802 seconds)
    (17/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.626193535 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.216287463 seconds)
    (19/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.257425278 seconds)
    (20/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.251921387 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.996000555 seconds)
    (22/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.540190289 seconds)
    (23/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.262344926 seconds)
    (24/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.242239592 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.247491569 seconds)
    (26/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.881623757 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.005262776 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.267634429 seconds)
    (29/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.923652941 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.980618588 seconds)
    (31/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.409785686 seconds)
    (32/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.270045363 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.384878122 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.016835661 seconds)
    (35/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.329789607 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.91257644 seconds)
    (37/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.874018575 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.005110009 seconds)
    (39/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.476730718 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.262686901 seconds)
    (41/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.441169303 seconds)
    (42/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.252174081 seconds)
    (43/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.482797481 seconds)
    (44/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.026246359 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.244505283 seconds)
    (46/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.327944778 seconds)
    (47/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.241503041 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.354822567 seconds)
    (49/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.701372558 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.523170035 seconds)
    (51/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.366663772 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.240593841 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.300230095 seconds)
    (54/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.242898721 seconds)
    (55/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.328980198 seconds)
    (56/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.347655456 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.340384981 seconds)
    (58/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.309648647 seconds)
    (59/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.294884184 seconds)
    (60/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.167176193 seconds)
    (61/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.647527296 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.610614073 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.257631985 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.338947339 seconds)
    (65/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.35284219 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.424278904 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.884467239 seconds)
    (68/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.159794691 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.246185204 seconds)
    (70/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.632962301 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.529706562 seconds)
    (72/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.525413249 seconds)
    (73/309) benchmarking ("sort", Int64, false)...
    done (took 5.488469165 seconds)
    (74/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.942865933 seconds)
    (75/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.641074153 seconds)
    (76/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.287119835 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.24657829 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.480228529 seconds)
    (79/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.286424172 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.729853022 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.627163204 seconds)
    (82/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.309513957 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.039114092 seconds)
    (84/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.152989328 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.693926112 seconds)
    (86/309) benchmarking ("sort", Int8, false)...
    done (took 4.362285192 seconds)
    (87/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.356024649 seconds)
    (88/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.955899999 seconds)
    (89/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.805009681 seconds)
    (90/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.346982234 seconds)
    (91/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.244949782 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.782581101 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.977929959 seconds)
    (94/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.246091946 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.244764647 seconds)
    (96/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.464386161 seconds)
    (97/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.25441654 seconds)
    (98/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.240811175 seconds)
    (99/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.760725811 seconds)
    (100/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.370204255 seconds)
    (101/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.330145916 seconds)
    (102/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.351861916 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.230094158 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.346939616 seconds)
    (105/309) benchmarking ("sort", Float64, false)...
    done (took 5.592430757 seconds)
    (106/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.732513442 seconds)
    (107/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.347621594 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.267158656 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.257744928 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.144735698 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.462408429 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.684939608 seconds)
    (113/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.444298991 seconds)
    (114/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.368306723 seconds)
    (115/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.272268638 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.759199538 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.24498196 seconds)
    (118/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.233920785 seconds)
    (119/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.296673541 seconds)
    (120/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.517023316 seconds)
    (121/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.396472826 seconds)
    (122/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.642579006 seconds)
    (123/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.446780242 seconds)
    (124/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.201701359 seconds)
    (125/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.646966813 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 1.772726211 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.271313995 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.504688818 seconds)
    (129/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.027714009 seconds)
    (130/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.262144726 seconds)
    (131/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.266033603 seconds)
    (132/309) benchmarking ("sort", BigInt, false)...
    done (took 6.246236965 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.750731836 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.066072346 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.505235841 seconds)
    (136/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.232895228 seconds)
    (137/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.145043267 seconds)
    (138/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.593188706 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.349546252 seconds)
    (140/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.069699795 seconds)
    (141/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.311565012 seconds)
    (142/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.682308622 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.087359495 seconds)
    (144/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.272660256 seconds)
    (145/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.737235528 seconds)
    (146/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.329178286 seconds)
    (147/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.273379167 seconds)
    (148/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.354698047 seconds)
    (149/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.573507511 seconds)
    (150/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.311706331 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.67042245 seconds)
    (152/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.6651075 seconds)
    (153/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.312012723 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.269603003 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.702356091 seconds)
    (156/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.274202073 seconds)
    (157/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.925940641 seconds)
    (158/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.250545122 seconds)
    (159/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.249572513 seconds)
    (160/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.44321221 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.244474549 seconds)
    (162/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.676128734 seconds)
    (163/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.241068231 seconds)
    (164/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.33289429 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.673448137 seconds)
    (166/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.089518579 seconds)
    (167/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.806958494 seconds)
    (168/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.383001065 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.301831589 seconds)
    (170/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.2622565 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.92999017 seconds)
    (172/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.272422677 seconds)
    (173/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.851349401 seconds)
    (174/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.249796418 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.673009206 seconds)
    (176/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.290315922 seconds)
    (177/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.277016053 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.391533378 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.141025648 seconds)
    (180/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.297166107 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.248948003 seconds)
    (182/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.23436098 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.70912253 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.275428415 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.276335177 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.114378581 seconds)
    (187/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.891781011 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.291214329 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.235897574 seconds)
    (190/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.571656596 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.253180068 seconds)
    (192/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.249357589 seconds)
    (193/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.010143751 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.988136323 seconds)
    (195/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.259122083 seconds)
    (196/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.81566965 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.750634072 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.271338968 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.306225776 seconds)
    (200/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.687559381 seconds)
    (201/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.288900046 seconds)
    (202/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.076813673 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.235432826 seconds)
    (204/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.598484285 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.250397416 seconds)
    (206/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.252404958 seconds)
    (207/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.196594399 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.116703488 seconds)
    (209/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.262422228 seconds)
    (210/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.356658578 seconds)
    (211/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.309684259 seconds)
    (212/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.294467638 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.279570633 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.182009141 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.460770341 seconds)
    (216/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.270510212 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.922868367 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.900944497 seconds)
    (219/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.891825493 seconds)
    (220/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.26649889 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.299993469 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.236444003 seconds)
    (223/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.250597471 seconds)
    (224/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.713279571 seconds)
    (225/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.94084743 seconds)
    (226/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.741942108 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.243817595 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.279413737 seconds)
    (229/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.277093905 seconds)
    (230/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.251568318 seconds)
    (231/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.402287069 seconds)
    (232/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.278797404 seconds)
    (233/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.883392042 seconds)
    (234/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.667619981 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.292668296 seconds)
    (236/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.157016269 seconds)
    (237/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.941974295 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.849917353 seconds)
    (239/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.336152726 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.251879024 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.618850687 seconds)
    (242/309) benchmarking ("sort", Float32, false)...
    done (took 5.300238449 seconds)
    (243/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.675350947 seconds)
    (244/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.536459984 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.155059601 seconds)
    (246/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.246173792 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.254306598 seconds)
    (248/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.831469145 seconds)
    (249/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.798541622 seconds)
    (250/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.251253648 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.245676899 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.291698384 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.332672192 seconds)
    (254/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.241554846 seconds)
    (255/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.918909904 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.360730304 seconds)
    (257/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.135866448 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.477997611 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.697102762 seconds)
    (260/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.272605502 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.275387917 seconds)
    (262/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.370274304 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.280522584 seconds)
    (264/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.096547599 seconds)
    (265/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.398155423 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.254204745 seconds)
    (267/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.970254447 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.634558463 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.873728752 seconds)
    (270/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.945769813 seconds)
    (271/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.69278698 seconds)
    (272/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.329387472 seconds)
    (273/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.35417332 seconds)
    (274/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.30303384 seconds)
    (275/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.388684408 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.239598133 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.764253005 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.497927308 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.05507024 seconds)
    (280/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.306402748 seconds)
    (281/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.91982577 seconds)
    (282/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.28987179 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.075664035 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.74219063 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.335831419 seconds)
    (286/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.652385857 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.336836381 seconds)
    (288/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.744466415 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.198448772 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.37126075 seconds)
    (291/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.25838687 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.301496022 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.001154987 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.631853224 seconds)
    (295/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.529105667 seconds)
    (296/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.35437517 seconds)
    (297/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.324287527 seconds)
    (298/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.597580657 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.297250333 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.329305105 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.328642259 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.305149045 seconds)
    (303/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.450943048 seconds)
    (304/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.270323142 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.685615993 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.295154125 seconds)
    (307/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.882249942 seconds)
    (308/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.982381801 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.255565709 seconds)
  done (took 910.603883772 seconds)
done (took 911.785991611 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.28958762 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.283463256 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.265755185 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.289565983 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.377915193 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.296508822 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.278722346 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.269957965 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.315434825 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.317757492 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.266375066 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.294081016 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.268621167 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.267645192 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.267677479 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.281924253 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.44379145 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.270814851 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.285280575 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.277532105 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.284447174 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.267230605 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.317428023 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.296280221 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.273251179 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.271712411 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.271444712 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.286960736 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.379274649 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.271893388 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.272180558 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.280635645 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.442224727 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.26898206 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.263867454 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.288445914 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.280295374 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.278555169 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.271955052 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.300720882 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.890705017 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.270809174 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.270312869 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.270738728 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.270686909 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.273969877 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.271262093 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.276770785 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.281924594 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.282862537 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.886541481 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.286562713 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.27296826 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.271305167 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.28065351 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.27002612 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.273612935 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.286262586 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.289874646 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.285997776 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.438220446 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.277747994 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.27262785 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.287005694 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.277185741 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.830523507 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.266463606 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.275161979 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.8015461 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.276082899 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.835296926 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.279324671 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.271952259 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.284665239 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.301847904 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.448784769 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.267374356 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.270755729 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.278552429 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.270324694 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.282294906 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.284529162 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.274671714 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.272197733 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.28487791 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.298973795 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.282080476 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.273001772 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.281441318 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.29177961 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.279010051 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.283240634 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.274760425 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.268098085 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.283696369 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.275607428 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.27543489 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.27517341 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.27781656 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.283662907 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.804350532 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.288981687 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.269345677 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.269139158 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.272483269 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.287745826 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.805463873 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.274435185 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.294850861 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.320767499 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.275387935 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.444073586 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.278762255 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.288809815 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.282404554 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.276030179 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.269343108 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.44439887 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.803256296 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.288100951 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.274501872 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.27294697 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.290031697 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.275981704 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.269824922 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.453969208 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.277306126 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.288028409 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.393962209 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.284716608 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.306833794 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.272514189 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.278890065 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.305718062 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.289967549 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.305149996 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.276655902 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.290293066 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.289829598 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.270142944 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.286694794 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.284916295 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.276237146 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.282093368 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.269105237 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.303413615 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.286317331 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.287409489 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.295772352 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.395206688 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.27188927 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.429949476 seconds)
done (took 218.031215981 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.34755936 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.264398456 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.365238767 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.271016376 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.385144742 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.383742842 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.267242536 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.268735273 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.268382959 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.689377455 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.266952352 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.268708211 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.270926375 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.268098991 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.370290567 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.270574467 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.269308866 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.65994915 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.271647457 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.345053321 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.265325528 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.268782837 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.271582308 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.711374076 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.266360995 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.270906271 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.345108825 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.271439703 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.638591112 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.265966611 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.268754967 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.667519047 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.361015838 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.288139521 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.280572967 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.279237774 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.384309081 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.2903482 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.362855612 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.369459294 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.368255335 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.310795853 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.268084805 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.268613442 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.273819052 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.273697294 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.269993866 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.299059391 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.273339007 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.269359935 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.631239194 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.281865859 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.270472768 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.270790892 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.271109146 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.301297604 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.270363318 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.272966752 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.362204345 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.27342086 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.336899322 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.677625225 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.706982664 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.272089116 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.27399501 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.270805092 seconds)
  done (took 144.725613895 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.341074868 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.346319457 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.389941993 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.274541145 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.322419672 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.394842958 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.275514151 seconds)
  done (took 10.55205247 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.279674281 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.274656644 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.323519649 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.322328845 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.273066734 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.421549306 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.273871549 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.285165251 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.27239878 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.326767579 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.27588755 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.275163321 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.280842067 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.272484365 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.321493434 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.284498115 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.389433222 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.274239923 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.27512548 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.425171496 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.27190138 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.281812993 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.331477634 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.28450088 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.276259677 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.279290784 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.844405233 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.274364706 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.27225018 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.274858192 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.272304804 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.312717421 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.274706356 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.273461433 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.27261485 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.390091452 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.275536505 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.272741417 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.275303738 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.27404259 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.275116478 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.275071264 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.276669299 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.273580872 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.276546126 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.29712172 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.275734767 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.276153034 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.276649121 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.276595941 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.326479943 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.276425777 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.272483556 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.274273323 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.333095604 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.282631868 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.278126941 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.273679097 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.277448232 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.27444094 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.427362009 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.324125314 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.277976653 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.323932578 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.277658526 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.278135691 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.277786696 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.27621693 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.332116547 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.276825981 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.324909567 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.274312951 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.431363165 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.3012881 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.278714527 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.280207333 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.279049105 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.278348694 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.271879912 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.282206851 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.273967123 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.278204338 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.282761281 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.275413719 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.274475475 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.38028701 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.385698332 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.275036176 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.289566429 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.283913938 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.275118851 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.330351862 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.277551075 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.276333016 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.328878831 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.390443355 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.340429469 seconds)
  done (took 147.563857666 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.281929387 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.287951709 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.279987054 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.296153194 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.278809948 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.278280573 seconds)
  done (took 8.915048447 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.281332165 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.281200068 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.279645517 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.278477976 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.278663192 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.281039545 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.280185705 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.281716992 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.283733091 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.278681535 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.280785988 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.281577429 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.280523068 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.280433285 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.280432168 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.279999569 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.280340946 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.27700196 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.27998237 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.279987039 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.384005883 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.278514274 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.280637281 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.281407361 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.285640051 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.279864384 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.287353045 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.280512988 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.28052454 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.289879848 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.282892361 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.281555545 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.282372729 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.288206311 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.286922031 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.281010103 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.285693333 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.283457435 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.279284266 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.283428926 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.283481482 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.282253612 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.280869685 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.284361147 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.2833575 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.286721918 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.288552797 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.288857324 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.282358634 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.28433516 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.284028034 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.28175065 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.281127968 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.284692849 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.282926168 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.285508257 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.288142642 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.282629894 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.281627753 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.283423097 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.284088399 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.283743493 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.284228449 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.287483836 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.28010122 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.284868669 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.283723082 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.287347827 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.283029283 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.283073634 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.285980147 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.280655205 seconds)
  done (took 94.672933233 seconds)
done (took 407.635299685 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.307936524 seconds)
  done (took 7.524169617 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.667013773 seconds)
  done (took 7.885273028 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.198080229 seconds)
  done (took 24.420298892 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.355902742 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.377614517 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.306896248 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.285330202 seconds)
  done (took 26.549852398 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.285206877 seconds)
  done (took 7.502005789 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.27624447 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.276127291 seconds)
  done (took 13.772278228 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.483478039 seconds)
  done (took 7.698851529 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.289641697 seconds)
  done (took 7.513110815 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.280042497 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.292777286 seconds)
  done (took 13.804611048 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.260696583 seconds)
  done (took 7.477518681 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.508510171 seconds)
  done (took 8.726571342 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.282676005 seconds)
  done (took 7.500942606 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.357061315 seconds)
  done (took 7.572680117 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.892746516 seconds)
  done (took 10.107581522 seconds)
done (took 159.272765942 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.274372351 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.278536791 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.275380591 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.278203919 seconds)
  done (took 26.323173925 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.315748723 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.314145918 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.317261935 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.326023246 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.318195641 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.314674506 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.307627596 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.308703589 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.326456835 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.319004527 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.317838284 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.317731648 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.315218477 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.307866992 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.318370535 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.316951726 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.327379672 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.317457599 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.309146553 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.31922781 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.283993907 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.326976512 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.31925945 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.283322586 seconds)
  done (took 32.7712308 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.481334914 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.353959542 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.436755893 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.335014976 seconds)
  done (took 6.822851473 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.334288077 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.336316819 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.347344441 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.395160557 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.42008152 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.345685193 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.309414519 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.304612391 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.292099112 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.336879548 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.411856338 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.352739664 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.442492312 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.283420752 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.468597973 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.284435614 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.282749091 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.336602173 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.388580996 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.401773287 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.283341088 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.337023393 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.340056622 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.353471247 seconds)
  done (took 33.60549458 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.282885991 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.291332318 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.289417851 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.283793468 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.283689696 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.28378918 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.289667726 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.284421093 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.304391126 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.285071375 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.28262444 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.283150185 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.283060536 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.283840865 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.283608577 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.295857743 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.297741063 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.283936349 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.286583345 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.290134158 seconds)
  done (took 26.967436168 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.278268194 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.137259373 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.628382002 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.535033162 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.277981281 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.278920268 seconds)
  done (took 27.354777089 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.362664545 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.498478193 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.283514255 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.676460954 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.753042163 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.284872074 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.286034443 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.53572167 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.874795335 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.897845575 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.345840719 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.355874084 seconds)
  done (took 19.3816605 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.288812667 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.281071296 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.298251301 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.29687074 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.345483437 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.288340357 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.292167459 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.279419777 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.348561387 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.349940611 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.289698649 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.347247405 seconds)
  done (took 36.926636065 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367234242 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.329335276 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.351095338 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.137287264 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.99551623 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.491810766 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.191454705 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.207081224 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.286670855 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553638309 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28026472 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369668373 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.538709562 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286942143 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.282332026 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.374395617 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508340107 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805538392 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284203737 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.5127086 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307216724 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.286499988 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.609055009 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.313591 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.493168079 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.26551991 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.541715858 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.058548214 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591690067 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.294504715 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293172285 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.282548334 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555099652 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977239963 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379005907 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292935579 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.169056463 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.915508422 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.27334988 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.520635973 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.285702157 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.301558136 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293203561 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281794419 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.216279016 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.286387128 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.733816904 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.289965992 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.994597201 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.283058677 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.293464077 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.377690872 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.287209638 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.275491325 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.506415827 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.291344541 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.282179192 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289443576 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856797448 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.073663883 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290091042 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.218868552 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.784025054 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.600201729 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940635356 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.386420318 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.287694296 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.287215935 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228272825 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.573582166 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.301379456 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427566451 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.309192074 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.976302638 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112500825 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.28694214 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.226487846 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873312052 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.286611046 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.220029004 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.515086292 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.061515826 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224809274 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.232393939 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.220422271 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041364886 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294423602 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.773509547 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.293666713 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.727427324 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.297949518 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30181865 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308743271 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.510556533 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.170258296 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286015516 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.298243647 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409120425 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307127979 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.730008866 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.229772514 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.289567541 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543592436 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.49698725 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.289617631 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.383609514 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.501389019 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286292361 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.302869687 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.295963649 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.297712416 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.910115415 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.298724428 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.025384376 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303940734 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.062342034 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089821012 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30363378 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.387986284 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.295826701 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551883233 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.120096272 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.184108789 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355452402 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291383847 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.28684257 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.629982728 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.13998201 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.187538855 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.29001993 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292397044 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.299276788 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.288884084 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286514731 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.289126828 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298796564 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.066407185 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.511999525 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.291343182 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.563169748 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.222166331 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431518321 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.335102924 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.511905023 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.587254004 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.286843831 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.549389005 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29823498 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.290838224 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.300542524 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307723308 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385930611 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309520509 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.30152687 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.547710028 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.290609154 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.29160016 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.610797154 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.070986167 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293249718 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.294477242 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.240977436 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911930795 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27859639 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.296853735 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.183311258 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.30258801 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355750948 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.295257018 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.299698586 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.347151287 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.297180999 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.298267581 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.28682232 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.516183702 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.301236194 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.614983759 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370922707 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.504902129 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.917563957 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.303398937 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.225518835 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.002180159 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.983373824 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289189661 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.481879394 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.291099635 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299850105 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.301000671 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.957825073 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.913490508 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292920022 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.617699573 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.298510822 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.301702475 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.296080101 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291634758 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.341580321 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.103746247 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.303611594 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.303003069 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435731362 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.304642203 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.225231201 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.807297827 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.296303496 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.2910463 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.067754498 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325690402 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.550309573 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800090121 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554663338 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.143324496 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.304414874 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.632066532 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.324606354 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.297133469 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.295653716 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310151579 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.296923445 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301340827 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.301720866 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.551729268 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.780131962 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86070214 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123478675 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862636443 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295954819 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.306230069 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.19585606 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.742237556 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.229047767 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.953261761 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.499506175 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.740377645 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287881319 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.505797789 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.595199084 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154992277 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.305086078 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.521956987 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289423925 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.30799763 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.306506668 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.504826683 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327232057 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.305101888 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.23438351 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.582292517 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548356374 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299212427 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374916681 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740828933 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.30508269 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.072356086 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.29218795 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.732433444 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485574822 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.927845312 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.720384583 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.29382122 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.313873715 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806765302 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.30288249 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.824841052 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966173187 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.303085564 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.510064681 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236114788 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.30608546 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.305380968 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.296020758 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.771904442 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.30513279 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.551655873 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.305772077 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.229970708 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.310311994 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873142463 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.150908829 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.301294854 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294531898 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092939798 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.296677779 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626923856 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.30275081 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.262201848 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30134972 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.229992138 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.230114504 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.989670205 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.298969234 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281359992 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822653974 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.733994227 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.450403811 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.31900159 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163006746 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.555549122 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.310403408 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.925777183 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523056123 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.252412959 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320477478 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.397891221 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.296840941 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.283954467 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.205898918 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.533025479 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2427994 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.523305739 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.381897059 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.203802793 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.295180742 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.512014895 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.190965685 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.307004694 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560952263 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.008945082 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.312821524 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116081689 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323895783 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.301376869 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.344897829 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.799527242 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.306332245 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368921921 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.309251886 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.308544411 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.309236276 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487439078 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307545718 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299287175 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.311422662 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.3928807 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.327646145 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.270586421 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.072394292 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954533018 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147396355 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.959216005 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.314161634 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.297195433 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307308324 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241229932 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446922256 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.828941846 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572089426 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423560216 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.876915284 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323646014 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.299539551 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.303558922 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.512088456 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.574388401 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.175358013 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307810854 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.963370816 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.198191651 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.309883238 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.511278133 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828689444 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891737262 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414703706 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.30454602 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.747065676 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.574241688 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.393119643 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299992411 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.897833328 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.321580579 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.750094324 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.305960397 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313253801 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450844473 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.309502428 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025788417 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.312514533 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.46155635 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.073628682 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.747484483 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.56113248 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.855881596 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.312555028 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953203286 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.062023322 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.5664526 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370479418 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.311800076 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.409687207 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44669817 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.307021611 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.196310139 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.301880244 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150390074 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.011442697 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.311817674 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937493128 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.5675027 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.299681827 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.306779574 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324153622 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.31107348 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.525340143 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086121502 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.527025202 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.310899147 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.30550019 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.293745534 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959096458 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.318364425 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245491594 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.30508831 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566860691 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.538285734 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.326667007 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.754463805 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.012803812 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903166809 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.280453523 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324427292 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.302011471 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.062848045 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940331866 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.28308659 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838303471 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.964879688 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.302160952 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577979606 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.308914951 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.313253242 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.581194004 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.307892677 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.312476055 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.317490866 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.935741072 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147546826 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.328049991 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.674530152 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.242921942 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.532863857 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.023927674 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252315307 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313306979 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.511577097 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.309578199 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429319132 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.316959041 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.317859832 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320174967 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.040266763 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.621313713 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.312653565 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.307299341 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.298349172 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.314699974 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31258494 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565038329 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315658983 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.984441379 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.655804113 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.564920003 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.306622423 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.317021175 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.312497518 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309767255 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.066013657 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.315688952 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.991652792 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900406692 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.317617943 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.315526485 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.312163033 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.521835658 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.518029328 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.312428387 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.323905773 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306317731 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.324934613 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.211433885 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.108640986 seconds)
  done (took 1580.081652269 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.357705505 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.346324791 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.330306596 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.416855091 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.33147701 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.35362527 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.345260305 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.370756578 seconds)
  done (took 52.102962266 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.312516186 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.465942502 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.339135392 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.317955338 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.317343187 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.309943044 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.786635132 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.313943421 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.31560918 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.316600928 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.321894538 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.313124635 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.973165497 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.315873903 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.313703118 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.306203822 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.315616835 seconds)
  done (took 64.916955409 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.310626686 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.778721983 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.338804214 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.315751253 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.733719626 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.320345836 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.922035909 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.394556053 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.32379466 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.615223679 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.990444852 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.314228856 seconds)
  done (took 80.61132339 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.315077432 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.316774466 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.315477727 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.316570839 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.317306401 seconds)
  done (took 7.829149598 seconds)
done (took 1996.918109497 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.555544166 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.087789293 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.017165001 seconds)
  done (took 5.361509752 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.455455809 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.504564641 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.661567272 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.649061152 seconds)
  done (took 7.523599734 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.602950905 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.684099257 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.502658614 seconds)
  done (took 6.044416385 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.89552539 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.313546999 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.454719266 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.309708078 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.312750115 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.309613423 seconds)
  done (took 20.18002849 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.312099183 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.318089174 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.314992732 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.316950459 seconds)
  done (took 6.51953743 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.294716571 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.034272053 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.295322957 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.313936402 seconds)
  done (took 18.197605937 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.058955761 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.071444568 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.055660781 seconds)
  done (took 7.435094265 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.315706229 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.156200148 seconds)
  done (took 9.72156015 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.617522945 seconds)
  done (took 2.87411371 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.445058551 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.586268813 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.470820273 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.350362249 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.469047315 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.613120876 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.164884591 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.683034011 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.338577339 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.762225307 seconds)
  done (took 29.13444847 seconds)
done (took 126.468760878 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.487616083 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.331973997 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.520780499 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.500332287 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.539951077 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.518145405 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.581184578 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.466554551 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.301529867 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.957929051 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.465505879 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.539227989 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.529734199 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.341332117 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.532102463 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.716346255 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.541831266 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.532881724 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.152714978 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.316939178 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.586257573 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.105846984 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.291690185 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.128301801 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.547729579 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.478032695 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.685345124 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.721148666 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.320807299 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.709950839 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.479818755 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.315138798 seconds)
  done (took 195.503487338 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.314598595 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.339481964 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.31586129 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.318144296 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.321420385 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.316216182 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.324960256 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.313981567 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.33078277 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.317668412 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.316013431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.313486747 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.315627419 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.317707255 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.317733263 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.327674989 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.321688244 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.321403899 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.314072537 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.321436386 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.317056678 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.334966726 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.323414131 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.326747596 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.315219203 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.316483489 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.334980936 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.333011797 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.316684631 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.315608385 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.318420605 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.334375828 seconds)
  done (took 203.542716018 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.333061561 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.317503772 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.319704804 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.31631132 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.316099088 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.315352525 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.316180549 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.348294404 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.323562481 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.317776995 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.314843425 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.319004926 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.336154784 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.315536725 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.321306573 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.315205134 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.317998201 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.326765792 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.320231765 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.314527911 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.337148721 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.332935882 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.317634596 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.317989034 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.31821719 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.31828789 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.326328038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.3152889 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.319003077 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.31635262 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.317110433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.317593687 seconds)
  done (took 203.539443359 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.524962856 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.328363109 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.326174118 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.282767986 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.32823927 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.326055881 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.319879441 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.51752768 seconds)
  done (took 14.210983984 seconds)
done (took 618.049038208 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.780342833 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.477820987 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.528372832 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.346594806 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.180794269 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.344943882 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.344475864 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.53342159 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.277076764 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.536217588 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.652708431 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.344179279 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.801862309 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.344077646 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.615948055 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.449503044 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.235187851 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.354751484 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.683324607 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.957437898 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.612352569 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.903301522 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.530321462 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.284428209 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.805494562 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.920062955 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.142534079 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.239511626 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.346453918 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.68766237 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.129686071 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.394926255 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.41604003 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.393663771 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.449406252 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.430436558 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.378606678 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.391318501 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.535616481 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.662204897 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.943029467 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.095369806 seconds)
  done (took 92.744759623 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.320305167 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.319270969 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.318854249 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.31862064 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.31886758 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.318663998 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.318295942 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.317824186 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.317714606 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.316423663 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.318095593 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.321099259 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.322068013 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.319850114 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.317838223 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.316187885 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.317457359 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.322810797 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.319619344 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.320387027 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.32111638 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.321891493 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.318091978 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.320131312 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.323297936 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.319665114 seconds)
  done (took 35.566562573 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.331858408 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.602206864 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.774816035 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.336037118 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.332638485 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.338131667 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.41749813 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.33460016 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.338121059 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.336329147 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.495913805 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.334696696 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.374677413 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.782738609 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.334149467 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.333520975 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.332304152 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.331401255 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.612318966 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.342259879 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.42308589 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.331652318 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.423868005 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.342419034 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.336281939 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.334033834 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.3390188 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.861542068 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.333870085 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.499330167 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.215259462 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.421316054 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.818436708 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.787059303 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.215793101 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.338172875 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.333249258 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.501254376 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.33552759 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.334535937 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.42260217 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.336298175 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.790335206 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.979357373 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.352126696 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.332857584 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.887277363 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.49915683 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.619586986 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.342097447 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.81043506 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.337214894 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.336074182 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.335252669 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.60876209 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.340184747 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.33384342 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.887809227 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.339416721 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.419570332 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.335374802 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.335714535 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.616082573 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.33331554 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.607391135 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.333818406 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.345109583 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.3377014 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.788809255 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.335105046 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.002727011 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.351224394 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.33670987 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.499479358 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.606306893 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.921498935 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.337991393 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.622064796 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.823440691 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.421557813 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.337970753 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.853167739 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.420620861 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.340887344 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.337921446 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.341587597 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.338345428 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.389223024 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.420893258 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.925920001 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.994763744 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.90482372 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.425687461 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.347808631 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.338141904 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.890518092 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.339213397 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.339074566 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.784479507 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.997415125 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.353990825 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.346674599 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.984416529 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.359006392 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.424739357 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.341586844 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.794962857 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.337436808 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.38891509 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.337864016 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.347084103 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.342780454 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.424356325 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.342796025 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.338001567 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.977947648 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.52501084 seconds)
  done (took 176.849367629 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.333458498 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.332654325 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.331083056 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.331717005 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.333711931 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.337802232 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.33511089 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.33151636 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.340091149 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.334915829 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.333079366 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.338193348 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.334359877 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.329258674 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.339353694 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.341295093 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.947036959 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.33560835 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.331564421 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.350779765 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.152007836 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.334525554 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.331918473 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.349084842 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.337781065 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.335722433 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.341822225 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.331991404 seconds)
  done (took 152.106612571 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.341276432 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.971954228 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.341981282 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.494161291 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.361427701 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.338975267 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.491171174 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.402426659 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.340972693 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.338133936 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.335416665 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.678134282 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.339330702 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.911302759 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.55030459 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.493069763 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.909624296 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.341435731 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.338941029 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.339805363 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.496083799 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.348760016 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.675564892 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.966911097 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.339935043 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.967741305 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.327210919 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.34118755 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.341503029 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.970599169 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.337241711 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.679807271 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.429087803 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.402063843 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.970796893 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.914643605 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.914863547 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.502743346 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.339125214 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.338281852 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.341100476 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.332484989 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.975311756 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.339717754 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.341955075 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.967689234 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.359330061 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.342969736 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.350504139 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.341540735 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.410189494 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.40519236 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.683076716 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.975054974 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.430940587 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.360257041 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.489850262 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.739627359 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.345492384 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.923709496 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.327774804 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.026188196 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.346183682 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.333165327 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.346308441 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.34623455 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.516314319 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.494603597 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.918297394 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.341652488 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.921456338 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.517887613 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.34309304 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.343961597 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.3464483 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.983027866 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.917772661 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.520537474 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.498384924 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.564931448 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.329003042 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.341729799 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.33191048 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.429348367 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.344055138 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.032797223 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.924796756 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.342844214 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.344145641 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.347742043 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.34473235 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.543509878 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.998695175 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.429034877 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.91613487 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.699510472 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.68246585 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.34158856 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.407114365 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.346024999 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.689039138 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.343313152 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.409213459 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.805732637 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.685656232 seconds)
  done (took 162.362978123 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.61984911 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.684049082 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.440863208 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.472130394 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.959132017 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.926621629 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.676368592 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.472706506 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.458243216 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.603602172 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.594132868 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.431117354 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.53681511 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.429761307 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.093937233 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.414821674 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.440603715 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.47545777 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.450565272 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.455962025 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.994792574 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.652000968 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.531055045 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.409235135 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.441858739 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.155237061 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.921072819 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.912104164 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.535866239 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.720734413 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.894896377 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.542174144 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.369756845 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.054329136 seconds)
  done (took 66.047285805 seconds)
done (took 686.939513088 seconds)
SAVING RESULT...
DONE!
