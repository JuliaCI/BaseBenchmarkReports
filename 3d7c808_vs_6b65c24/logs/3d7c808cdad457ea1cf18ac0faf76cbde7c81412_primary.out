cset: moving following pidspec: 4735
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.325716649 seconds)
loading group "string"... done (took 0.587129296 seconds)
loading group "linalg"... done (took 7.361667475 seconds)
loading group "parallel"... done (took 0.166516118 seconds)
loading group "find"... done (took 1.16275518 seconds)
loading group "tuple"... done (took 2.030274786 seconds)
loading group "dates"... done (took 1.281572541 seconds)
loading group "micro"... done (took 0.239210859 seconds)
loading group "io"... done (took 1.025116439 seconds)
loading group "scalar"... done (took 39.516711703 seconds)
loading group "sparse"... done (took 12.428729818 seconds)
loading group "broadcast"... done (took 1.000140957 seconds)
loading group "union"... done (took 14.095586802 seconds)
loading group "simd"... done (took 4.650202557 seconds)
loading group "random"... done (took 9.384839069 seconds)
loading group "problem"... done (took 1.963148972 seconds)
loading group "array"... done (took 22.232455178 seconds)
loading group "misc"... done (took 2.012846571 seconds)
loading group "sort"... done (took 3.395270241 seconds)
loading group "collection"... done (took 19.156231941 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/9) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.47456833 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214339292 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.242646199 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.139216111 seconds)
  done (took 2.015975356 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.149078182 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.064150616 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.064016435 seconds)
  done (took 1.033345312 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.399348766 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264233281 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.247455275 seconds)
  done (took 1.62588025 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.305934271 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.254022635 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.457486064 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.29722132 seconds)
  done (took 2.12908327 seconds)
done (took 7.516622698 seconds)
(2/9) benchmarking "io"...
  (1/1) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.652978006 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.43745574 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214104762 seconds)
  done (took 2.053106023 seconds)
done (took 2.763916398 seconds)
(3/9) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.93311848 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.263945763 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.196515242 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.476374645 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.154193893 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.190826582 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678925497 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.323301312 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.218457249 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102884538 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107082443 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.392892505 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108040369 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.65913026 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078452799 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.108645784 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159671259 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.420067279 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081659143 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083344532 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104849022 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141605825 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.10490046 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079990528 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169945676 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073312814 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.156574355 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.097169138 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068663016 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.250091009 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189765122 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685153882 seconds)
  done (took 10.609506089 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.107036536 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.110056724 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069872549 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142174076 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.124505569 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.074560704 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074587276 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084766753 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094972053 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.163206834 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.120200339 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.125486825 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067842449 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084750438 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.103607904 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.23081505 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.094040725 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104204855 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.0746882 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.092627552 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110086564 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.101085793 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083508034 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.097097648 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.154407023 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195496864 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098669049 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11273759 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072172559 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101330404 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131615976 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132412029 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068753278 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086751734 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.16122453 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098693151 seconds)
  done (took 4.67727474 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.108059173 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.158238936 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.175017551 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.110321456 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159792036 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070090365 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.130389185 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067326766 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101724875 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253143371 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.107832916 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.468721662 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130648156 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.088896463 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069000646 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.0875402 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068273756 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.641537498 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146719548 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.143373401 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087085704 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091068857 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072847593 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.35975312 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068629192 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067062093 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085494457 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060389667 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14786781 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069650519 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.379139235 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.073721972 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.107501263 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069093983 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120293414 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.11209301 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083562494 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126293491 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069902787 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082267487 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175306964 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075889333 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067130457 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108188241 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120563664 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.106294468 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084935153 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069428098 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184413809 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068746134 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101960372 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.931427623 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167494312 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.068053213 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067431442 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.294701099 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086110891 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086153391 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065197044 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.259906574 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.16310483 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068121664 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085302459 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067326012 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.080841615 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070501492 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067897281 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.377200886 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085638487 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078370358 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.659934202 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074493003 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085958825 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074953284 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089833287 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087898852 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067461042 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.086280635 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067547665 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082102783 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071256146 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.102002171 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205603717 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068902991 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067099738 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083777115 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08707857 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11453189 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070944182 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083044726 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116287528 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070967508 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06816043 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.129243705 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068043306 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.104976341 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085348495 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115037062 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085021028 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065712516 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.119416808 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082377156 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100656842 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.088830243 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116449619 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097376043 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071148981 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153610587 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066133558 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066178832 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085767423 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066796188 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085991807 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070381908 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099503931 seconds)
  done (took 21.332093937 seconds)
done (took 38.439762479 seconds)
(4/9) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.590696135 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.754688822 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.92920844 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150618451 seconds)
  done (took 3.170729747 seconds)
done (took 3.929735092 seconds)
(5/9) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077939498 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080080372 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.097132069 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078163266 seconds)
  done (took 1.080291321 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.091831264 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.088407269 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077559722 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071211828 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.094423972 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072650488 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.090809797 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077028808 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.088297849 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074310564 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072004422 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.08846249 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074983995 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.090016451 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070227064 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.091108086 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076680501 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072015799 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.094531323 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072461682 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.086878017 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074406476 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.09151132 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07194907 seconds)
  done (took 2.709169131 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.086655501 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072311041 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.090223879 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.0720346 seconds)
  done (took 1.08030619 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076938062 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.106814112 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090498922 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.092086523 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092353545 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.102544726 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069340465 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068258581 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.086735463 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076588249 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.083293959 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098226625 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.104242239 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076532709 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.094904914 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065740057 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.083268527 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087827728 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076527086 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.094901487 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069415571 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.093116578 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067465231 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.105723191 seconds)
  done (took 2.823677553 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088127169 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.11805434 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078575926 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.1056173 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091829045 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.10614661 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07539636 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.106592167 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125014719 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.082437625 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069883209 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064565239 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.088520059 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.089814746 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.092878959 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108306588 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.128933016 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067968777 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.114603322 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064499086 seconds)
  done (took 2.626818752 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.085496402 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.079507576 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.081752303 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068116262 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.092002882 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072826808 seconds)
  done (took 1.242744729 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067919349 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065848406 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.082286874 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066951923 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069852992 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.083063403 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065355769 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065769844 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.083231696 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066299252 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.084255627 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065434614 seconds)
  done (took 1.629111365 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.46061626 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.088795669 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06898642 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.084019353 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071349065 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.083736427 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08025354 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067902197 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.107993576 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070008628 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.083658025 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068158502 seconds)
  done (took 2.140642723 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26128113 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085288886 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.304913628 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160782064 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130144523 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147968341 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120400782 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132462504 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.165428675 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129844931 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212260883 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209385495 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109242941 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176382097 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090604463 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.1348229 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195881488 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189760074 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12260282 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212387045 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175607689 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150517191 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192186501 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119966929 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127041539 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138355917 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071449145 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096319531 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220773197 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154544659 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184550618 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113346528 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112364551 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21709303 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207212536 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162572506 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153953466 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102958698 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.141531937 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.159826952 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247381494 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106390099 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188101961 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126231487 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098222528 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165232915 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138194872 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.13940786 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.128722642 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105970465 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168026205 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225696044 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.175848861 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088377354 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129082757 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132711759 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.135733818 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120449261 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232134623 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205784808 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155033331 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071208853 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115027586 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182050713 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16940654 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.134869163 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.148006155 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110706896 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163536139 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182884824 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135987831 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186199398 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.153117623 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107732767 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140115129 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163313065 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165385784 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197413391 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146284167 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.089851831 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143569314 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120435507 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081689421 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.160820228 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074950497 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225019588 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117519517 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.133091254 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130622774 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127883453 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111657434 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205073039 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18922861 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122523815 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067112734 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122318329 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.142810331 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168499495 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105709317 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126980931 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141904826 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078349972 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177665472 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075572517 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144372285 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.095236587 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143897972 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155156718 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.092696881 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14607981 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102104345 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.120757819 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173662553 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188713565 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107981456 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082588836 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216372758 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146562566 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.124533356 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187357223 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185392693 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.120045216 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119814992 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171949687 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230053444 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107627039 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211307199 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105219851 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101824895 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.10533059 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147657918 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131909029 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149391528 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082799693 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.16297224 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19629948 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.092515823 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096191621 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180058812 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082133053 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09973995 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133412129 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11920844 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.204894461 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.119690718 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.125686727 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161810913 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162693968 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109383329 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164560097 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099455455 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207701938 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10821266 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.122167958 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10433122 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.087641935 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.15769384 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206072964 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080105588 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211207188 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.147577124 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12332716 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141241144 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100102602 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164519113 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07923835 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.088549211 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166216647 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130852415 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130441107 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.177489185 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123258344 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.147043573 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.163126841 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155318399 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153559767 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.155132495 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126558827 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.105555968 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132515436 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149652264 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073276097 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.112999996 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.101257096 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12218826 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096513495 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101171351 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165006594 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147493127 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116663509 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132507444 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115246372 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175666932 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.094497879 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153720355 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.140917061 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113226553 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18091568 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200608422 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161931784 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119989281 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188361629 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07216311 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074109098 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.10796241 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150166518 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102330725 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083980703 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137038389 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193837904 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150601403 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158088882 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129317676 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141813679 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201365853 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070854681 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.136359424 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173655562 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164176522 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.126150607 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108810652 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099629301 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189725065 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124409531 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236057745 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137889163 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146930341 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19702951 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105615111 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10140184 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123919293 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16181539 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124706932 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195447798 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101587307 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107513075 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130656648 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.098725098 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124142662 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149563233 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140199379 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159659257 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.137370489 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174461467 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078495721 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136163717 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144953307 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142136083 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081626676 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141211973 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211329487 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095664513 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139394352 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200108909 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097593143 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.125835091 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22536748 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188572744 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085006606 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127884997 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142764648 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170819371 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139939432 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16630002 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128859246 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157825001 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130989409 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084660033 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106805713 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117475792 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129684614 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.0957388 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151992864 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.138819477 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094941097 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171895436 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133175333 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11194489 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139487687 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.116513938 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.10837822 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097733399 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223602618 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142411655 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221393606 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.11972938 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.194833482 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195234954 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093539081 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079043725 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.101971545 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1640987 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101420246 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156749022 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.113829894 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107028098 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150478404 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186043052 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114159633 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068671355 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130586786 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156779739 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13098665 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117741996 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.126551669 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191083379 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.124270221 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097647284 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147202748 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104874351 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123567284 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224538525 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.078233483 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098873203 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093201776 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081666541 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153558287 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202053179 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.101033415 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.124065021 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141037347 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144000336 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17203646 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10200216 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116685254 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133333632 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172445021 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169426833 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091406403 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134639649 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151580965 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203603901 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126715548 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.115005836 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217308635 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183862579 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.211941237 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.10596888 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137389154 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140277248 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111417872 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186220823 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101610868 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196164463 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101475203 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160077434 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123637487 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113013922 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150281386 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.116036467 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107545063 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175867516 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141384178 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101509446 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079546218 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134546832 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160753432 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105872548 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.094019373 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162886172 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.091332129 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16242409 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217095416 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082147109 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131186208 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117094977 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081877243 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127867267 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124763845 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106801254 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.114164539 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219581691 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.111487114 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19678508 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166786823 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135348 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182420669 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121032268 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637895834 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.098462516 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201383204 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141037508 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228145925 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116158802 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141623229 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113264795 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162944341 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166773695 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126921456 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.195281886 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157513134 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.143503419 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09883471 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124438548 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132218106 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090911605 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126977758 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135950177 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137008741 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.11971115 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.14577285 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150797259 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.100939721 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114391823 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187108255 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140262177 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187066975 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166391503 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104331624 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142056893 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167469725 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099686084 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.14451859 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20196972 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128629157 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119550564 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082279552 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.127841926 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218952104 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073311012 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209300006 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146983412 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13252092 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136496604 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.142244983 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174934073 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127488888 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151669081 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115063513 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.135256278 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138933717 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085964469 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.098525043 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128174266 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135864921 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101980875 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125424059 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.134342302 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186369941 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.091809794 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096370517 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125446207 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19145058 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233277079 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089955708 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10444355 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141872688 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13670999 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.138394958 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150963527 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.099479186 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083298147 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.1018603 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.106146686 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.131953881 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138406285 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124058919 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132536411 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21668471 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.085381156 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.24306308 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115346169 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108005747 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088294907 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080608258 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116189487 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115836933 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124152632 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09881569 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219225607 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.116799064 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091007238 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113413548 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.091079987 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084332625 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153106051 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131516953 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142896696 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117125858 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080572162 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109367838 seconds)
  done (took 67.990302507 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.138436587 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.099669612 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.112527738 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.27117721 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.141523681 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233553648 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.175373747 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.217948931 seconds)
  done (took 2.226294097 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.160418876 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094898088 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.120947782 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.107678166 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066837428 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.124027157 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.29504972 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.09996929 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066550425 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089490001 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.128420332 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069081245 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.452299868 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066413943 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.089909533 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.082138301 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069377227 seconds)
  done (took 3.010952514 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.433043038 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.527006956 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.434481204 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.092504504 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.458879491 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.103084064 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.600518346 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139436365 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.085948551 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.363980392 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.721837907 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.13042196 seconds)
  done (took 15.926496486 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074934155 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072037485 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.101830896 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083640835 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.091316438 seconds)
  done (took 1.262503152 seconds)
done (took 106.510369091 seconds)
(6/9) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 0.076059819 seconds)
  done (took 0.906021518 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.364505181 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052339012 seconds)
  done (took 1.285576742 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082208571 seconds)
  done (took 0.924258298 seconds)
done (took 3.94974994 seconds)
(7/9) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.197436443 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.14583969 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.130952127 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066862165 seconds)
    (5/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.110003725 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.147601535 seconds)
    (7/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.324087839 seconds)
    (8/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.137829834 seconds)
    (9/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.203558817 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083081077 seconds)
    (11/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.327531798 seconds)
    (12/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.286062263 seconds)
    (13/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.276528494 seconds)
    (14/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.28134237 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080861277 seconds)
    (16/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.170046673 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076993596 seconds)
    (18/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.250629811 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.197628769 seconds)
    (20/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.097782989 seconds)
    (21/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077446341 seconds)
    (22/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.25844394 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.278137734 seconds)
    (24/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.271515235 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.259442546 seconds)
    (26/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.224904093 seconds)
    (27/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.265268554 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072822163 seconds)
    (29/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.17216967 seconds)
    (30/309) benchmarking ("sort", Float32, false)...
    done (took 0.148330815 seconds)
    (31/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.228109031 seconds)
    (32/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076194672 seconds)
    (33/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.166179178 seconds)
    (34/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.095811906 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.122842869 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073267403 seconds)
    (37/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.16273982 seconds)
    (38/309) benchmarking ("sort", BigInt, false)...
    done (took 0.207099154 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094091199 seconds)
    (40/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.282490193 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.10391241 seconds)
    (42/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097441286 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.116834469 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.12802989 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065271743 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.222713813 seconds)
    (47/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071199321 seconds)
    (48/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052250434 seconds)
    (49/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.096629317 seconds)
    (50/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078939319 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.118872137 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093805291 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.119904745 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.125480928 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090294509 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.155460435 seconds)
    (57/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.239497698 seconds)
    (58/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080019086 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094118374 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.1510581 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09464206 seconds)
    (62/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.104717298 seconds)
    (63/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.239729133 seconds)
    (64/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.208014658 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071324094 seconds)
    (66/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.073383346 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068430421 seconds)
    (68/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.157748374 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05226173 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.155175866 seconds)
    (71/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073643946 seconds)
    (72/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.10445558 seconds)
    (73/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076362956 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.109059394 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.251564226 seconds)
    (76/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.237674643 seconds)
    (77/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075798522 seconds)
    (78/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052460249 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085241759 seconds)
    (80/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061784827 seconds)
    (81/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.052508331 seconds)
    (82/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087296889 seconds)
    (83/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075800486 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065599253 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086075495 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.147082553 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.120476849 seconds)
    (88/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081378774 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.074168889 seconds)
    (90/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.10923126 seconds)
    (91/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.093419755 seconds)
    (92/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.218585485 seconds)
    (93/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.083580529 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 0.06818675 seconds)
    (95/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052847322 seconds)
    (96/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.096828702 seconds)
    (97/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067371374 seconds)
    (98/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.116297946 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.197108155 seconds)
    (100/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053090349 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.159356802 seconds)
    (102/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068204744 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051589739 seconds)
    (104/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.193418256 seconds)
    (105/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100259652 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141404642 seconds)
    (107/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.072375689 seconds)
    (108/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068244047 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065100016 seconds)
    (110/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.097078836 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.096860205 seconds)
    (112/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.072506344 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097555106 seconds)
    (114/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089680856 seconds)
    (115/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052764704 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067871125 seconds)
    (117/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.256719666 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071375735 seconds)
    (119/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.120709041 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.198607532 seconds)
    (121/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073625255 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.112601734 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074732249 seconds)
    (124/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.171427126 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094338443 seconds)
    (126/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.248935465 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.167028535 seconds)
    (128/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072695818 seconds)
    (129/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.161902331 seconds)
    (130/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.052019531 seconds)
    (131/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087410976 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.117875691 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.11420926 seconds)
    (134/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114488202 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 0.158224628 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095923088 seconds)
    (137/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069743255 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136487723 seconds)
    (139/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078221473 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.09388243 seconds)
    (141/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.101451117 seconds)
    (142/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061845099 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.132447872 seconds)
    (144/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114191029 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092924798 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07189785 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.115325458 seconds)
    (148/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086541661 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067929016 seconds)
    (150/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.259521433 seconds)
    (151/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.157820715 seconds)
    (152/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053331272 seconds)
    (153/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074748805 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.168343963 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073888889 seconds)
    (156/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094849642 seconds)
    (157/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.101594135 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092969853 seconds)
    (159/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055485148 seconds)
    (160/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.100231352 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.087067807 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074640924 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093320386 seconds)
    (164/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.071127177 seconds)
    (165/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072212387 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.071914827 seconds)
    (167/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068193984 seconds)
    (168/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061879428 seconds)
    (169/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101165789 seconds)
    (170/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.244374803 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096426899 seconds)
    (172/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.113462594 seconds)
    (173/309) benchmarking ("sort", Float64, false)...
    done (took 0.14766646 seconds)
    (174/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076331965 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.08898166 seconds)
    (176/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067950006 seconds)
    (177/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067372454 seconds)
    (178/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.073291574 seconds)
    (179/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118480157 seconds)
    (180/309) benchmarking ("sort", Int8, false)...
    done (took 0.16493855 seconds)
    (181/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.135705082 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079790104 seconds)
    (183/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.092039109 seconds)
    (184/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.053144774 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095593662 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.168254485 seconds)
    (187/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066830622 seconds)
    (188/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.091675323 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052350901 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072910057 seconds)
    (191/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089852707 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089852627 seconds)
    (193/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.087484947 seconds)
    (194/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054107202 seconds)
    (195/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077719539 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126630707 seconds)
    (197/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077708761 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096683922 seconds)
    (199/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074007255 seconds)
    (200/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.237876739 seconds)
    (201/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053041276 seconds)
    (202/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053222848 seconds)
    (203/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.120244965 seconds)
    (204/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.098015526 seconds)
    (205/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.081658858 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067165814 seconds)
    (207/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068885007 seconds)
    (208/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.07452707 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067258109 seconds)
    (210/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075816935 seconds)
    (211/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.100180581 seconds)
    (212/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.19447205 seconds)
    (213/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07562924 seconds)
    (214/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052103733 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097019173 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074763399 seconds)
    (217/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.10577186 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093786115 seconds)
    (219/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110407134 seconds)
    (220/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.052842138 seconds)
    (221/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066083844 seconds)
    (222/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091934309 seconds)
    (223/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092319372 seconds)
    (224/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.10320914 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.071036591 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073069827 seconds)
    (227/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.23710454 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.107922099 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095809516 seconds)
    (230/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111914135 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066504419 seconds)
    (232/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069215953 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.097853388 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068697226 seconds)
    (235/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053889539 seconds)
    (236/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.083417678 seconds)
    (237/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052744088 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.162290768 seconds)
    (239/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.053171043 seconds)
    (240/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.052566758 seconds)
    (241/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.071758481 seconds)
    (242/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054222963 seconds)
    (243/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075826601 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.072051867 seconds)
    (245/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067720688 seconds)
    (246/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053409973 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088281423 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068321964 seconds)
    (249/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.054160849 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.145674925 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.164456169 seconds)
    (252/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068502643 seconds)
    (253/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08440453 seconds)
    (254/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.073415619 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087320854 seconds)
    (256/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088367452 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067333446 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076589339 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096596016 seconds)
    (260/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063145605 seconds)
    (261/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062506532 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097157593 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069683775 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087328406 seconds)
    (265/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.102548909 seconds)
    (266/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052517617 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.190097615 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065593824 seconds)
    (269/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.083905682 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067358985 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.15499791 seconds)
    (272/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054140851 seconds)
    (273/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052933818 seconds)
    (274/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.096400983 seconds)
    (275/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073263042 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066978064 seconds)
    (277/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.082911379 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.135578216 seconds)
    (279/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074768963 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052492636 seconds)
    (281/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051873309 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095697516 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065755124 seconds)
    (284/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092251228 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06672492 seconds)
    (286/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079167019 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121192218 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066748709 seconds)
    (289/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.091628734 seconds)
    (290/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06720305 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.109981062 seconds)
    (292/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092214663 seconds)
    (293/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.052018125 seconds)
    (294/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.073969501 seconds)
    (295/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080530427 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.110078311 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072966301 seconds)
    (298/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.192305155 seconds)
    (299/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062464694 seconds)
    (300/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053642677 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088244639 seconds)
    (302/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070717283 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067146527 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088376017 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072621171 seconds)
    (306/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053611884 seconds)
    (307/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.07334121 seconds)
    (308/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069803795 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051961169 seconds)
  done (took 34.782124959 seconds)
done (took 35.619072039 seconds)
(8/9) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209339797 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187180296 seconds)
  done (took 1.269272961 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.101594379 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.126019368 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080796296 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.150864596 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069903181 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099251724 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121436695 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081168488 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.088073405 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.072052482 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06774361 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088723874 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131764695 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.089037735 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069639956 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068399685 seconds)
  done (took 2.42908561 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105558702 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.190080739 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111470537 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066939809 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101971512 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07945479 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086499751 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082401298 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094284418 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067680038 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099553749 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078545735 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065883665 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.105888264 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073246021 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.09965948 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065805441 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100813383 seconds)
  done (took 2.558992433 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112129926 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148875827 seconds)
  done (took 1.14091948 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.204946514 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124799403 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205537692 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.43505917 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.216840715 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.296036215 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.177431479 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.179430874 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.157606736 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.171515714 seconds)
  done (took 3.046515485 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101095559 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.175526636 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.34850047 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.141571655 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.116131313 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098139702 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.141518367 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.116648635 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.105222562 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.085610625 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.106589276 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079365322 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.121729216 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096171391 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078290007 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09850462 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104551092 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.095469452 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079274491 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097901964 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10066487 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.087632424 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077780669 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095731226 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.083067497 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.102736986 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069075926 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067496709 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.098550575 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075890746 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.101341659 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117474537 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084135466 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.155382334 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.089626911 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.135812262 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.10033264 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073718486 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097596926 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074580516 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.100097824 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078728637 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.112694471 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07829172 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.089113808 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078822935 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.08835284 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068224888 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101990326 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.082297363 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.102732632 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080469622 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155206931 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.082165348 seconds)
  done (took 6.454247495 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.763971408 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.136797263 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073910201 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.829730285 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117387166 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084549611 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.749337785 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095574494 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236583833 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.723112862 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089635127 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104533837 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.20592764 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.218007365 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.933046384 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.274122408 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.611730568 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105298466 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110618451 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.134529994 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096773016 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092339259 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10852366 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.432054269 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076928154 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094222049 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07472389 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100840259 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14282637 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.10625156 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077155777 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.157319397 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.23017279 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.182177 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076054593 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093020248 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071507453 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.15105479 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.243743053 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193095745 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.159749339 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070916356 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071165626 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099647225 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.0878371 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090243048 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.146172779 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.156113618 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.154278961 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095852402 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.078703626 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097616076 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076838055 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167336926 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.082650071 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.299888823 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288090034 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071960003 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099112907 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.086742089 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240374035 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083552272 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206044875 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115196369 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.170805351 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092867689 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.733316376 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.149795739 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093070303 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077181169 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098818149 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075918791 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099909871 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.146909439 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.371860693 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.081482742 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096414485 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073127875 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.208557098 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106817655 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071621642 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164414319 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077877937 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097055199 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.081420363 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100243004 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.14990265 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.210590065 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.079571511 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099423327 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07474219 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103437097 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.095621378 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.193489606 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.177037015 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164497721 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.189854856 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.078057864 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.145362159 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171441194 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07989366 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.153641814 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098382022 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.083155729 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099953722 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.194392975 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.104007068 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105342536 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095998163 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.076515243 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.128920241 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10665231 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.077592671 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.152543339 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.473516746 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.15090554 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069401815 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109616695 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077546231 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.143290317 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098599201 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.216943359 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101069538 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.154327509 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097739967 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069957538 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.077310541 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.166154149 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.08141232 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099120121 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.078920984 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099336197 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.2170191 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.195261923 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.081548933 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21880156 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.143148415 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098954397 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.152971001 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098509854 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149435834 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079930823 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099244588 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076803289 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.766127611 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.077946115 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099177285 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074569637 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.174625495 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09275138 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085014023 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106100905 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068962224 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780438941 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087118208 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102815232 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104992983 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078567814 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098338755 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075727227 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095068228 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144086374 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.184018141 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100331735 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096282268 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.08586164 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.143624664 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.098407004 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08561311 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10612518 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10591544 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.078785002 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095637554 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086020364 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.150229983 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.142844305 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.197808767 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568025221 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072025903 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10639234 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.185869447 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093403146 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.244640127 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098259119 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.203887407 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146405641 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081367723 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.286476913 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.146649407 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.177435849 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.109331371 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.156370678 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068206248 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097223753 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.146202375 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071023089 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099276063 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.147219944 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100583399 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.080418476 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.941037061 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071462738 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.206131639 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090505183 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.153086513 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075748789 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101490298 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.274600596 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072078155 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104573171 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.147361747 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075042095 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107002002 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.679102987 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10762139 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.078285773 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099419472 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.200254046 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.147127263 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076063384 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097448894 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078426852 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.16437222 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.18937155 seconds)
  done (took 38.85418864 seconds)
done (took 56.634507695 seconds)
(9/9) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083989483 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11539524 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07768626 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.104948619 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08319098 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100506275 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075861633 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080013038 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104788257 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.103814279 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081706889 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055926238 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097222228 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076918453 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096989972 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094595855 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100794236 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074905947 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.095202284 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067264779 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07563743 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08773402 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069283025 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055830148 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100030941 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074788529 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.095948758 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078538572 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068505224 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.091131138 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072909011 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.097476871 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069014109 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082103276 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097351341 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.078175354 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.100603993 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080192428 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070033299 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091238564 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077501118 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068093172 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097990039 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076566485 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096711165 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074906848 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07602954 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.105426282 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119081326 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069523893 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075054281 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.099744428 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.0796206 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.095104792 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072190143 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074674921 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093062731 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094303938 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.09755717 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069418495 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.096117267 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07677162 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072228726 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.0965432 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075574588 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.097731466 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078286762 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072921163 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098211076 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.0726467 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087890631 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075759288 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070519807 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089370894 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078317714 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.099548141 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068555368 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073929311 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.098561664 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076226303 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.088238603 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070348255 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069359403 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093739879 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070441855 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055563711 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.091382833 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074026349 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066200109 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097393287 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072737221 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094783926 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069352532 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077507056 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.08793657 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072671284 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066427514 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.089089853 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06930649 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091646764 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067647736 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06900728 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.097665804 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069778125 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072094941 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.103679524 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066541693 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.094701628 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06674567 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067139371 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.106666653 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078363171 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088875247 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070612835 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066651315 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.096434089 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066874904 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.087446051 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067787562 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067176122 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.095060727 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067475161 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072235148 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095489014 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080571578 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087834696 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072031459 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069326186 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.089111814 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074062325 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066872532 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.089028768 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069344611 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.084982739 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070040156 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066979174 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.095590882 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070521649 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076035845 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.090381003 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076898371 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092806237 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074417754 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073480213 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.087582374 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061219693 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069862242 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090643513 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070385432 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066539809 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.090268468 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066808438 seconds)
done (took 13.334959426 seconds)
RUNNING BENCHMARKS...
(1/9) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.959713909 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.957805973 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 5.943511879 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.958315062 seconds)
  done (took 24.721582382 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.962269361 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.962662962 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.96176315 seconds)
  done (took 3.792149795 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.071813484 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.958735833 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.958943591 seconds)
  done (took 17.894445274 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.13936573 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 1.941579592 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.24169413 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.459879281 seconds)
  done (took 7.687811823 seconds)
done (took 55.002892241 seconds)
(2/9) benchmarking "io"...
  (1/1) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.586731007 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.620486912 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.956644257 seconds)
  done (took 10.067569779 seconds)
done (took 10.976368868 seconds)
(3/9) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 5.956846897 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 5.979094618 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 5.968278783 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 5.94293619 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.0483164 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 5.98229419 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.582060156 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.191405532 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 5.964374754 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 5.946137485 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 5.956293136 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.968907527 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 5.972389536 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.472888593 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 5.959798813 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 5.957800156 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.016130098 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.515835902 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.276404702 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 5.963376294 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 5.96681329 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.007373988 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 5.960608418 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 5.967236517 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 5.987568788 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 5.960236615 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 5.969149703 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 5.960556761 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.459315705 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 5.961567738 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.014326812 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.07771046 seconds)
  done (took 182.820040044 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 5.957882455 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.031616218 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.086099527 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 5.993817248 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.403447222 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.16180696 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.099707841 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.457879216 seconds)
    (9/36) benchmarking "syr!"...
    done (took 5.973416839 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 5.978889636 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.24373408 seconds)
    (12/36) benchmarking "her!"...
    done (took 5.960517479 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.290852529 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.941842996 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.966269539 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.062190298 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.137306182 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.275793365 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.972529296 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.23454806 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 5.960268435 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.223136247 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.158546477 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.187813994 seconds)
    (25/36) benchmarking "symm"...
    done (took 5.97121193 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.050892567 seconds)
    (27/36) benchmarking "syrk"...
    done (took 5.964967032 seconds)
    (28/36) benchmarking "trsm"...
    done (took 5.998179253 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.150580415 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.092257193 seconds)
    (31/36) benchmarking "gemm"...
    done (took 5.97119346 seconds)
    (32/36) benchmarking "symm!"...
    done (took 5.962680795 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.422451491 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.817320705 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 5.970953458 seconds)
    (36/36) benchmarking "trmm"...
    done (took 5.969044272 seconds)
  done (took 141.013014613 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.234220002 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.959133349 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.959648768 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.959110795 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.960032194 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.982708562 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.95881722 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.377747327 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.381348771 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.467073406 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.129738408 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.017841567 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.103633034 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.962182344 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.045723897 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.971021576 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.961497563 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.974464068 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.985996176 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.962205152 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.960573162 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.379043878 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.974743627 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.105543751 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.966501065 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.960720799 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.984009571 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.347185165 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.960768956 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.984736288 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.217501319 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.256674449 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.995321756 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.961171071 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.14394999 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.064905444 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.961280968 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.961893243 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.984456118 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.961378494 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.214329873 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.961330019 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.960900116 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.9639171 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.424053401 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.964614143 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.37990181 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.96470056 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.739239001 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.961135743 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.962192033 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.519933423 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.253127474 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.96414062 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.962540588 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.96401097 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.961824146 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.963088467 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.985545559 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.313969377 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.054550186 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.961300363 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.96466989 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.985057814 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.961489397 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.961120825 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.962471556 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.082321212 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.0155803 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.06926805 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.779093446 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.384931464 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.96530289 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.048699313 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.073006105 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.963461484 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.962292801 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.962656141 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.962745224 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.062120788 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.963344076 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.286797072 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.969045375 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.964504195 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.01912759 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.049598861 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.963205543 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.159501991 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.96660486 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.963244678 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.542594663 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.049602284 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.964094162 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.963551022 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.963310797 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.287979954 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.385500866 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.027321145 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.965557156 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.963084547 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.248251465 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.965517858 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.303663053 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.376185114 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.458857016 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.966970069 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.063977177 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.968469129 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.965677898 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.963239049 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.99262921 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.964080223 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.022398735 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.96435372 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.353457512 seconds)
  done (took 315.729493534 seconds)
done (took 641.707014766 seconds)
(4/9) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 5.989399486 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.018024756 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 5.96635865 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 5.971123919 seconds)
  done (took 24.856906906 seconds)
done (took 25.774015312 seconds)
(5/9) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 5.965250521 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 5.966150391 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 5.96534801 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 5.965891204 seconds)
  done (took 24.774767491 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.006610696 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.005670252 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.008078768 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.017143001 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.008960484 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.005293608 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.998932398 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.998290993 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.016617664 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.008575533 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.007621242 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.008955306 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.006618802 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.9985888 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.009626443 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.008597449 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.017617277 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.007861245 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.999004507 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.010253765 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.973919361 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.017977741 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.010451657 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.974283859 seconds)
  done (took 25.039345369 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.179912119 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.0449914 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.130648798 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.028377967 seconds)
  done (took 5.297862783 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.024313861 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.027668073 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.038476426 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.07806396 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.103683163 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.036725418 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.001250183 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.995386681 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.981419222 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.027559259 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.102786097 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.043761947 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.112004554 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.974595444 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.158912398 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.973954 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.973959945 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.027011144 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.078451909 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.092983789 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.974763604 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.026350913 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.033431429 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.044419706 seconds)
  done (took 25.84762693 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.972760531 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.982395728 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.980001766 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.974097164 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.973964429 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.973898765 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.980820542 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.975633757 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.994561598 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.974621563 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.973176312 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.97326938 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.973803256 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.974157369 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.974225559 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.986455476 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.988557378 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.97366479 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.977928267 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.980177524 seconds)
  done (took 20.474614592 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 5.969369304 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.333887906 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.320126994 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.225191863 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 5.968798381 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 5.968534568 seconds)
  done (took 26.702672437 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.02356757 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.130724182 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.976614284 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.219224443 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.294683088 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.976662196 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.975619792 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.155739392 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.359809097 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.344714739 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.015602293 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.026912797 seconds)
  done (took 14.41883929 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 5.975894151 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 5.971882845 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 5.977745823 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.988481819 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.014067774 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.981236922 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.982915182 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 5.969092789 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.016497564 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.018519185 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.981037405 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.015912417 seconds)
  done (took 32.811065046 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.057676483 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.021366104 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.721749726 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.829795367 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.695779721 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.182452238 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.834885053 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.391398471 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.974978894 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.244744689 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.810840802 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.074081761 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.229369821 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.977981915 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.973754413 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.763099971 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.198406144 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396049544 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.97440274 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.184531996 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.000018589 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.97359428 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.352494294 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.99936211 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.183905858 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.954703902 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.232355897 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.750349353 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.178756328 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.986376522 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.981788515 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.971636725 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.246197822 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548419005 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.067177263 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.982787988 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.865322811 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.738654157 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 5.959038492 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.298976559 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.59803935 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.976207468 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.9826184 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.972427896 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.908250928 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.975496553 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399884257 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.97835344 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.685122762 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.973574279 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.983562038 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.066508554 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.977083329 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.547392929 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.054805735 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.979820089 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 5.97006563 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.980169664 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541419106 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703843608 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.979295025 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.909718464 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.481793913 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.197976693 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505581953 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.074864818 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.977081136 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.977252088 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.908166433 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.286700306 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.99266002 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110966778 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.999251736 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635085274 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611142152 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.841684421 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.917668393 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463635745 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.986111045 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.910788491 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.203181139 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.752409881 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.915090424 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.922032381 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.908741396 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577776917 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.983298339 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.245854927 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.982171904 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.396118647 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.984962086 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.992306069 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.998384353 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.199078523 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 3.860261776 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.974121057 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.581985105 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102974831 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.995757373 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.397968858 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.909485888 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.979092703 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.233152299 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.186398121 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.982720475 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.771993088 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.160930387 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.979892494 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.991688962 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.98016288 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.987709333 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.48319072 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.990321081 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.707902299 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.995117996 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.751354482 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62650954 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.978179824 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.090446907 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.845758772 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.188000594 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.653366977 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.876277681 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.044197549 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.979955041 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.976169582 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.322285736 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.830914454 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.873109356 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.978313237 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.976869154 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.990013325 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 5.976990059 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.935947325 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 5.973466845 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.874249712 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.756529028 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.200943794 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.976400303 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.255829425 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.911299283 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1134957 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.994045511 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.200672724 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 1.939043227 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 5.977604193 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.238197067 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.976574245 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.982603442 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.991065453 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.996404125 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.075565621 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.999405708 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.981968331 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.237800471 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.982196191 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.982265057 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.316721757 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.761280784 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.985995066 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.983575658 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.904871249 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.482982329 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952614545 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.981070589 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.872938464 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.9919967 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.045898465 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.984050463 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.988710815 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.333080817 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.98855087 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.982618258 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 5.97767461 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.204630465 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.989450782 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.300344169 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.062409401 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.159766003 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.493039901 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.995206508 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.913155729 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.690768207 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.671505335 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.978575804 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.170241222 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.980123081 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.988899908 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.989990746 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.650694148 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.48700994 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.983981722 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.229039579 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.987467305 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.990925048 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.986311694 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.979698786 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.315439275 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.733919545 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.987540993 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.992966591 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.123198672 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.994397615 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.913773631 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.496985933 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.9856402 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.9806151 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.757725969 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.01379328 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.2237807 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.44865454 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.242528756 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.842744185 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.990666226 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.386571802 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.01151025 seconds)
    (217/481) benchmarking "4d"...
    done (took 1.982687319 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.63139515 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.994801568 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.003712707 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.991663476 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.991743108 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.229587112 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.431263067 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546612615 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63914942 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428937662 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.754129241 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.989407521 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.892034505 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.408972732 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.916554271 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.643492729 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.124162504 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.410939976 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.938973457 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.165777091 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 1.949678428 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.573513698 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.993645631 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.21036561 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.72844921 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.643538153 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.006558294 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.193378351 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.016458963 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.983983479 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.913137943 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.284221447 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.219791307 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.662636355 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.065113187 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410124981 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.637801972 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.775018888 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 5.981792947 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179756823 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.122793493 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.530138623 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.377116762 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.987970655 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.892494815 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.458917458 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.986595756 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.512899883 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516962807 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.992592006 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.16897487 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.922316679 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.993744902 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.993851144 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.983011716 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.822588126 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 4.882730109 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.252076887 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.994350743 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917231232 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.987814638 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430446839 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.84174348 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.98856909 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.983537304 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628704436 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.986069895 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.194732361 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.996111088 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.300281105 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.989229354 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.918448076 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.918069367 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.677519883 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.994117231 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952998742 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413225911 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.43954927 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.051877738 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.008198567 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861818563 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.242284114 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.997945986 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.49709499 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.213562863 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.950334224 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.0053343 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.0844963 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.697067896 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 5.983258022 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.865768868 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.220331218 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.907117699 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.208107203 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.731800959 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.890026331 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.984577144 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.196520188 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.866491338 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.909342492 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.196976933 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.697667648 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 5.999893996 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634899402 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.010080167 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.913120579 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.016283854 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.49586125 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.993129911 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.056810132 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.995763042 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.996385582 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.996274216 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.126762815 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.909965327 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.999844067 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.998739901 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.07972845 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.75644557 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.3083873 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.760966152 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.506112507 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646247252 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.502881593 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.001566072 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.986530674 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.985565434 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.921349646 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.135015719 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.515458841 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.259882937 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105774556 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.570068681 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.007832816 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.717790478 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.007990162 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.200336462 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.261454616 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.8626109 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.988970941 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.652353218 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.145897273 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.996374306 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.199092053 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413902745 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477517273 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11238976 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.987298455 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.414857517 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.262262579 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.080382541 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.987113464 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.580609735 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.00165588 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.19085986 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.992462007 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.960871431 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.139156735 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.997880631 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577184225 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.996970124 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.147618784 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.761475452 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.343757119 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.248008799 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320346777 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.998495377 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.506868528 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605345115 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.255599375 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.058235868 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.999936544 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.096677906 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.132860904 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 4.926950312 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.894759841 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.98721283 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839452755 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.698858849 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.998445069 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.50487561 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.255929518 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 5.986343306 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 4.965633941 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.022685856 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.998311367 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.213699018 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.600754108 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.215954641 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.000164896 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.998506413 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.562849932 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.505445748 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.005972233 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.923802129 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.993154787 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.187757986 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.229261509 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.014483733 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.442457145 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.700461157 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478027861 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.965970572 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.012033866 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.993884423 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.609798923 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.507051969 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.324428643 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417841295 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.653987728 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.990102009 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.266519817 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.995494217 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.996560347 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.268559598 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.994012569 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.990954845 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.016307654 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.499870591 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592040668 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 5.997290096 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295885787 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.929508199 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.219628929 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.717906368 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.927029653 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.99159436 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.147172216 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.990802342 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11313658 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.002292285 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 4.979049479 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.002367209 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.738053005 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281802019 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.996165919 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 5.983745636 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.748053495 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.995636662 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.000879327 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.232825485 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.996931446 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.679384405 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.344361131 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.249171076 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.995725518 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 5.977977737 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.996350086 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.992274263 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.717111429 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.968962053 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.67876328 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481187095 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.996271144 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.004525714 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.996839612 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.209112907 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.204893088 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.948226416 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.017639998 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.993200721 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.009305345 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 3.897154068 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.764670635 seconds)
  done (took 1368.753943732 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.01667896 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.024906262 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.030095382 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.075330692 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.001918626 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.112432101 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.056067513 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.078568664 seconds)
  done (took 49.33584952 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 5.998738631 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.143607327 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.01895956 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.00277506 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.005040107 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 5.999730599 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.362867916 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.001002657 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.003330253 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.003647886 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.003950488 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.002518759 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.56396779 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.005426538 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.001462591 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 5.988829149 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.003100608 seconds)
  done (took 59.056244817 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 5.998797618 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.322393599 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.054969596 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 5.997047333 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.444680696 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 5.998701969 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.847736908 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.003273973 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.003225057 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.206320339 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.655172878 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.006410519 seconds)
  done (took 79.480526294 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.003969063 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.002289448 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.00338008 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.002524057 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.003491624 seconds)
  done (took 5.956590031 seconds)
done (took 1738.868020419 seconds)
(6/9) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 5.97956474 seconds)
  done (took 6.920452479 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.524478296 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.512261641 seconds)
  done (took 3.978000957 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.292410753 seconds)
  done (took 2.233695 seconds)
done (took 14.078129486 seconds)
(7/9) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.475263617 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.003893451 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.737360996 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.53779828 seconds)
    (5/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.036173043 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.843404656 seconds)
    (7/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 5.980864303 seconds)
    (8/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.926906146 seconds)
    (9/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 5.979907944 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.214538857 seconds)
    (11/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.697891023 seconds)
    (12/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.26949855 seconds)
    (13/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.5025477 seconds)
    (14/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.205706451 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.045824823 seconds)
    (16/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.673500799 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.020815826 seconds)
    (18/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.970069744 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.104077678 seconds)
    (20/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.022141633 seconds)
    (21/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.078619889 seconds)
    (22/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.673905072 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.000049331 seconds)
    (24/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 5.987376943 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 5.980665056 seconds)
    (26/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.158187851 seconds)
    (27/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.236112093 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.58682951 seconds)
    (29/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.490432719 seconds)
    (30/309) benchmarking ("sort", Float32, false)...
    done (took 4.92032232 seconds)
    (31/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.889187982 seconds)
    (32/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.110063995 seconds)
    (33/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.164264728 seconds)
    (34/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 5.997547449 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.008895459 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.66874106 seconds)
    (37/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.071727814 seconds)
    (38/309) benchmarking ("sort", BigInt, false)...
    done (took 5.997931764 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.098112541 seconds)
    (40/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.061166667 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.25551494 seconds)
    (42/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.034052447 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.068419278 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 1.777920024 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.717461766 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.000528539 seconds)
    (47/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.070321152 seconds)
    (48/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.0811492 seconds)
    (49/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.051174687 seconds)
    (50/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.084450004 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.368052582 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.875671519 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.000352673 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.051762199 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.801318071 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.096446945 seconds)
    (57/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.97324672 seconds)
    (58/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.000753146 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.124381104 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.109201067 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.25889026 seconds)
    (62/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.027540526 seconds)
    (63/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.443952788 seconds)
    (64/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.275044583 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.35591553 seconds)
    (66/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 5.9852542 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.058388514 seconds)
    (68/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.457182187 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.070998756 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.038333663 seconds)
    (71/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.080036386 seconds)
    (72/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.017507408 seconds)
    (73/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.086203726 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.022399375 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.676508642 seconds)
    (76/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.427009197 seconds)
    (77/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.027759841 seconds)
    (78/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.074587827 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.590294689 seconds)
    (80/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.145222468 seconds)
    (81/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.440139688 seconds)
    (82/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.050452862 seconds)
    (83/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.025784297 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.103280591 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.361325616 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.011410533 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.289613304 seconds)
    (88/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.122945672 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 5.986530211 seconds)
    (90/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.016691732 seconds)
    (91/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.088718175 seconds)
    (92/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.611627875 seconds)
    (93/309) benchmarking ("map", abs, BigInt, true)...
    done (took 5.985937735 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 5.032293698 seconds)
    (95/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.542739235 seconds)
    (96/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.057923536 seconds)
    (97/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.010908152 seconds)
    (98/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.030857475 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 5.999935769 seconds)
    (100/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.206961128 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 5.994340455 seconds)
    (102/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.001708311 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.982822721 seconds)
    (104/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.002175753 seconds)
    (105/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.770591075 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.002314841 seconds)
    (107/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.571487301 seconds)
    (108/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 5.991315234 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.125336094 seconds)
    (110/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.006725277 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.755738732 seconds)
    (112/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.005627756 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.050115955 seconds)
    (114/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.064252314 seconds)
    (115/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.333078162 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.009318751 seconds)
    (117/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.271711579 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.175876524 seconds)
    (119/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.680901474 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 5.99990368 seconds)
    (121/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.026369172 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.014963085 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.200293612 seconds)
    (124/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.751381272 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 1.787861529 seconds)
    (126/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.212312187 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.000202254 seconds)
    (128/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.110806354 seconds)
    (129/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.737982829 seconds)
    (130/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.245180242 seconds)
    (131/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.103700299 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.096860822 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.025664236 seconds)
    (134/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.876337667 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 1.513801665 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.024183204 seconds)
    (137/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.064983731 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.077472839 seconds)
    (139/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.086156221 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.28249504 seconds)
    (141/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.196450034 seconds)
    (142/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.994614925 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 5.993368773 seconds)
    (144/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.005970666 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.460501383 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.597351703 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.25748862 seconds)
    (148/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.00722259 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.369811743 seconds)
    (150/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.198817053 seconds)
    (151/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.27787177 seconds)
    (152/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.421943375 seconds)
    (153/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.0284654 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.002187004 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.107045404 seconds)
    (156/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.086699862 seconds)
    (157/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.47564246 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.618651213 seconds)
    (159/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 5.98950873 seconds)
    (160/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.309922543 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.618444477 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.028552485 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.028379385 seconds)
    (164/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.27758897 seconds)
    (165/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.028244996 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 5.999325869 seconds)
    (167/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.473953728 seconds)
    (168/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.162044629 seconds)
    (169/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.795718285 seconds)
    (170/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.374855222 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.026101049 seconds)
    (172/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.595890215 seconds)
    (173/309) benchmarking ("sort", Float64, false)...
    done (took 5.148139134 seconds)
    (174/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.087657325 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 5.993561541 seconds)
    (176/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.003846627 seconds)
    (177/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.11454278 seconds)
    (178/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.440489107 seconds)
    (179/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.005859557 seconds)
    (180/309) benchmarking ("sort", Int8, false)...
    done (took 3.999784089 seconds)
    (181/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 5.994030481 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.090417777 seconds)
    (183/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.085851621 seconds)
    (184/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 5.988247214 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.053717143 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.004291348 seconds)
    (187/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.017314997 seconds)
    (188/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.23081054 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.441974157 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.030214276 seconds)
    (191/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.113108066 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 4.64963253 seconds)
    (193/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.557503219 seconds)
    (194/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.500600452 seconds)
    (195/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.012821212 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.075724375 seconds)
    (197/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.004275459 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.048909026 seconds)
    (199/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.030371485 seconds)
    (200/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.853452728 seconds)
    (201/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.511159164 seconds)
    (202/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.877352415 seconds)
    (203/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.186645882 seconds)
    (204/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.175285315 seconds)
    (205/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.30684924 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.710041317 seconds)
    (207/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.102054027 seconds)
    (208/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 5.989351335 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.062902207 seconds)
    (210/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.014220631 seconds)
    (211/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.029993857 seconds)
    (212/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.005277691 seconds)
    (213/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.014471672 seconds)
    (214/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.274034038 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.651312099 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.223652011 seconds)
    (217/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.078870662 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.268786836 seconds)
    (219/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.023458316 seconds)
    (220/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.234370653 seconds)
    (221/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.686394517 seconds)
    (222/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.110287622 seconds)
    (223/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.02029956 seconds)
    (224/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.169273286 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.299629328 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.028676167 seconds)
    (227/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.125085448 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.27076132 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.204714905 seconds)
    (230/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.021671815 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.046096886 seconds)
    (232/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.128854212 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.326248618 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.021933059 seconds)
    (235/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 5.991215734 seconds)
    (236/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.367412298 seconds)
    (237/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.33276121 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.008177059 seconds)
    (239/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.610968457 seconds)
    (240/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.256559941 seconds)
    (241/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.99574472 seconds)
    (242/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.528941448 seconds)
    (243/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.033261887 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.53198167 seconds)
    (245/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.251490477 seconds)
    (246/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.323423638 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.388623924 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.369800641 seconds)
    (249/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.226184885 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.00219393 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.041841519 seconds)
    (252/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.014187994 seconds)
    (253/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.955878235 seconds)
    (254/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.682045881 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.054789134 seconds)
    (256/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.135503814 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.185217487 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.020464053 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.081698583 seconds)
    (260/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.988027019 seconds)
    (261/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.606183153 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.391401548 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.006803717 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.782550457 seconds)
    (265/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.498331808 seconds)
    (266/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.291808568 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.085732126 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.342240038 seconds)
    (269/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.050283158 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.775603035 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.014003187 seconds)
    (272/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.303393336 seconds)
    (273/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.000303213 seconds)
    (274/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.035790383 seconds)
    (275/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.134582579 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.031715213 seconds)
    (277/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.314112509 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.004065669 seconds)
    (279/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.035140093 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.389706767 seconds)
    (281/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.156014574 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.10145846 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.091361572 seconds)
    (284/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.02483864 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.12439092 seconds)
    (286/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.660306209 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.055268455 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.55862499 seconds)
    (289/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.052087419 seconds)
    (290/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.010488205 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.738407514 seconds)
    (292/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.094282761 seconds)
    (293/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.205766919 seconds)
    (294/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.289731883 seconds)
    (295/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.661849142 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.501979637 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.051200996 seconds)
    (298/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.009827586 seconds)
    (299/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.376122019 seconds)
    (300/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 5.996107858 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.419447125 seconds)
    (302/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.085047933 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.599743902 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.387648005 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.045628232 seconds)
    (306/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.912283762 seconds)
    (307/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.080806549 seconds)
    (308/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.13624955 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.096403646 seconds)
  done (took 788.648761328 seconds)
done (took 789.596015589 seconds)
(8/9) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.077773631 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.055921651 seconds)
  done (took 13.089645647 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.178129315 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.130998877 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.015493032 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.047564064 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.01519968 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.022301581 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.016580943 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.015527892 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.015372159 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.015178654 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.015203337 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.206388307 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.030439074 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.016431722 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.015391475 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.109123507 seconds)
  done (took 37.82907936 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.038518271 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.020393364 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.111444228 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.030878984 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.038140503 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.171247748 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.066095482 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.020706762 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.153905252 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.051302452 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.281577764 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.038540783 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.020206397 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.90607312 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.034335002 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.172753949 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.224119346 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.284784322 seconds)
  done (took 23.622628627 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.369133194 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.0361065 seconds)
  done (took 8.362466472 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.056267365 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.050914965 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.011371562 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.024419035 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.030612235 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.034371545 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.060062835 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.063995532 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.032327327 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.025976118 seconds)
  done (took 61.354982753 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.036518983 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.020243608 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.020803685 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.018332112 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.016656856 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.012070255 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.01886086 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.016290851 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 3.786905254 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.122591207 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.032644676 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.026431096 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.019649721 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.020639276 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.018492991 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.051583621 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.164444838 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.017263506 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.016998833 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.025048846 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.02017602 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.115453175 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.05566723 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.019272712 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.121185491 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 3.855159468 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.023610642 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.027921224 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.181725498 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.019013252 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.021316584 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.02090377 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.021939369 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.564075158 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.495267014 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.025751446 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.040969064 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.028027628 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.018317902 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.157327338 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.0212597 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.028011412 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.018156677 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.469072822 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.170423644 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.116551723 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.056156109 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.022901239 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.022673604 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.075861654 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.021596963 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.022693942 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.047266726 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.73516135 seconds)
  done (took 92.08435108 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.021228233 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.502685012 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.181806268 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.028802505 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.817122477 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.589960974 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.017875783 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.239560311 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.030135251 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 4.194409565 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.320770944 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.460572744 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.018860592 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.062527205 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.456905671 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.080159547 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.016428211 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.863686928 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.016732561 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.01750166 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.383036444 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.742834345 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 5.858716251 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.267935953 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.051236377 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.415325801 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 3.198745864 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.531484841 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.01551466 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.015010662 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.426161985 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.025407106 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.027089485 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.016322679 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.261145535 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.306589557 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.284377052 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.0180964 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.061726086 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.019650923 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.048182041 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.412696368 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.295598719 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 5.836540125 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.017526841 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.428380694 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.016765826 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.023434871 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.017312632 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.219688847 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.748784984 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.02001349 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 3.202398049 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.027944034 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.289916291 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.082670505 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.04011452 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.445709522 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.017851605 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.149894802 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.066234645 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.018795263 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.018836044 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.019183636 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.031953948 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.300274078 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.273210549 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.017355464 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.301341275 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.418609547 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 5.814088043 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.502711708 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.677302019 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.03382588 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.06597854 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.017996714 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.678801574 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.446529161 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.058356103 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.018040561 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.287855219 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.018972359 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.308819754 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.02915851 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 4.278119373 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.394154454 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.037240934 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.022044346 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 4.273926078 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.019178214 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.790225068 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.020613324 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.271076575 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.034497339 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.017972074 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.018489422 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.067468833 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 3.733922143 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.031945511 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.024538846 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.490412513 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.026613653 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.169993318 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.022176071 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 4.263733888 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.019568012 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.02000762 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.019021205 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.238483433 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.28662215 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.022696527 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.019913543 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 4.264135413 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.020200749 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.264348048 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.020704439 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.262437765 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.019261405 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.688943875 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.020739636 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.634558646 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.034770804 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.026090573 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.022332205 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.807275079 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.224970391 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.035599463 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.021933659 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.021464014 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.031798128 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 4.939819836 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.021280829 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.085059048 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.021160369 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.668438176 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.034592536 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.05161304 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.437162358 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.028324278 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.655633767 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.037032176 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.021241533 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.279660156 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.268460273 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.235630032 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.021983726 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.02371806 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.656901411 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.058746271 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.168506049 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.037772707 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.021613919 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.216109269 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.196166273 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.023569757 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.58544114 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.022814181 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.235267001 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.021388672 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.30515072 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.451490214 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.02218134 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.028358169 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.669119056 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.669346643 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.822612643 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.023421131 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.325563929 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.031206232 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.4722508 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.022065024 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.022174875 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.61164986 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.024016373 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.028486926 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.022196793 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.022740907 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.089135424 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.195116735 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.546632458 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.024993436 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.420407003 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.065263431 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 4.2954554 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.025016931 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.022431761 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.380060714 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.068318304 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.027793656 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.067106707 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.024028459 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.027234292 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.430583356 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.704810406 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.023420522 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.174370684 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.594125996 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.023462855 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.022924246 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.491486132 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.231670095 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.513797968 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.042360032 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.269288388 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.025383486 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.061425606 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.751574587 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.092159097 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.433073605 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.025280581 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.024256207 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.569699269 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.024598393 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.075964659 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.024924411 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.025934511 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.503684257 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.023889717 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.025405901 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 4.956075869 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 3.740240112 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.283971957 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.025007961 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.075458544 seconds)
  done (took 1015.873394366 seconds)
done (took 1253.17840842 seconds)
(9/9) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.05911199 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.05453344 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.036364424 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.058112914 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.150964934 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.065055076 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.046653105 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.038540757 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.083210726 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.085978469 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.036807578 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.063372112 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.040177764 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.03928732 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.03619716 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.053781015 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.885431245 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.040224924 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.055902389 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.047107375 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.056245283 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.037534074 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.086924856 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.064293426 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.040594031 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.041001709 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.042822015 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.058997037 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.151442871 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.042786917 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.041273566 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.051010641 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.88829244 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.036123723 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.03337324 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.059811432 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.052111431 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.04724742 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.041612458 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.072261075 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.209239435 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.040413719 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.042621234 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.038066259 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.039259162 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.042864452 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.041994853 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.045328056 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.054293903 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.054526698 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.19957014 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.056169397 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.043546043 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.040282871 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.050720613 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.041118487 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.043476561 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.057022098 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.061724166 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.056989087 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.875917344 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.044998675 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.040703408 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.057933291 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.048688064 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.237395274 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.035277157 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.044416713 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.210821106 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.045296732 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.237440838 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.050196755 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.041997527 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.056311321 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.074664985 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.895006331 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.034412463 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.039718949 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.049948762 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.040913952 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.050655754 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.055030099 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.045099692 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.040629357 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.056433275 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.06917379 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.050510118 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.044318866 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.049725245 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.062069139 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.050093301 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.053756859 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.044705744 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.036915715 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.051259241 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.04537528 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.045801211 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.045456675 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.046604032 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.051493344 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.210682204 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.059733506 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.037077394 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.038614137 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.040871442 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.05650221 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.211851839 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.044280913 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.063750703 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.088405303 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.042968785 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.902829171 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.049416267 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.059762053 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.051355026 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.044652012 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.03769312 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.905090706 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.210699226 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.059154489 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.044624131 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.042993399 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.060606408 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.044911056 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.040186776 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.917754358 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.046401913 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.058477512 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.16562915 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.053126461 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.076316935 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.043199293 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.0460032 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.071302189 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.061146679 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.076101317 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.046368685 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.060844641 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.061382387 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.04104231 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.056031216 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.053563063 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.04366535 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.051054615 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.037185598 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.075933009 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.058085369 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.058590549 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.064970899 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.166008374 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.04020311 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.902743251 seconds)
done (took 177.203440131 seconds)
SAVING RESULT...
DONE!
