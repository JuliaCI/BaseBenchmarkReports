cset: moving following pidspec: 17805
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.331724584 seconds)
loading group "string"... done (took 0.59070175 seconds)
loading group "linalg"... done (took 7.369430789 seconds)
loading group "parallel"... done (took 0.173470447 seconds)
loading group "find"... done (took 1.187323901 seconds)
loading group "tuple"... done (took 1.826577578 seconds)
loading group "dates"... done (took 1.242723458 seconds)
loading group "micro"... done (took 0.232232849 seconds)
loading group "io"... done (took 1.046020268 seconds)
loading group "scalar"... done (took 41.547365883 seconds)
loading group "sparse"... done (took 13.31842804 seconds)
loading group "broadcast"... done (took 1.018106994 seconds)
loading group "union"... done (took 14.631241159 seconds)
loading group "simd"... done (took 4.9025105 seconds)
loading group "random"... done (took 9.85009648 seconds)
loading group "problem"... done (took 2.043095967 seconds)
loading group "array"... done (took 22.68447303 seconds)
loading group "misc"... done (took 2.133285764 seconds)
loading group "sort"... done (took 3.463452061 seconds)
loading group "collection"... done (took 19.715956234 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/9) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.487326938 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217815674 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.245220152 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.140216126 seconds)
  done (took 2.106948773 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.152744766 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.065653206 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.065046561 seconds)
  done (took 1.09955917 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.412399151 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274672883 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.257949759 seconds)
  done (took 1.719821042 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.311689565 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.239066503 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472609158 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.280126768 seconds)
  done (took 2.184491166 seconds)
done (took 7.887205993 seconds)
(2/9) benchmarking "io"...
  (1/1) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.664803539 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.455736355 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.223184335 seconds)
  done (took 2.157431506 seconds)
done (took 2.931239199 seconds)
(3/9) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.959886526 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.262962677 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193056827 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.483325222 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.158747451 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.195974602 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.665706736 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.348172624 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.216498969 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.107401333 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109778018 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.404047643 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111138142 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.670543179 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076510444 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109190624 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.161430119 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.45453005 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083527802 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083208617 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105446695 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143647946 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103187754 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078878892 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170982839 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070453303 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.154467045 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096955426 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069470338 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.249730478 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190936591 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.67932568 seconds)
  done (took 10.788191535 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.107197778 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.11107444 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069411113 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143345193 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122783825 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072337552 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072146585 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085263374 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093986862 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.162851438 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.118820418 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.126414273 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067678744 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084529023 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.104742797 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.231610557 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.09254241 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103195654 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072690207 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.092307503 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110088033 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.100599931 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082334363 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096500462 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152733202 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195959872 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099598133 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113356984 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069740103 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100165066 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131297503 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130469442 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065507862 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085277092 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.161499231 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096126982 seconds)
  done (took 4.712385218 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.138943116 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.175092702 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094629822 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157090506 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.090534624 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.131519485 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067212781 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102579701 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256775192 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.089148212 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.48889858 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.16510503 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134168958 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.08892887 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068983863 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08892137 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068675982 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.625897278 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146376658 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.128804231 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107532673 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093231027 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.074072592 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363826373 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07109463 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067820438 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08940363 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061879839 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.154539079 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071047801 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.283852306 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.109332407 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070712552 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120757552 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.179080323 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066826265 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111771415 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12611311 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071442348 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066193677 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173475151 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093506129 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06698619 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108627119 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120490116 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.107223582 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084152592 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06906486 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.18500502 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067796124 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102241561 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.940121768 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.168041067 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.070197096 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06734468 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.099941608 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.297940941 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08790558 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067764166 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083305945 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065388149 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.256772541 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.16396007 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068777263 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085733512 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067241157 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085797093 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.370543392 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068744503 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.0243341 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070205267 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076900794 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087371898 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068499918 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092749436 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073815223 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103677847 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068132974 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.06928628 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085836039 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066141816 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08656785 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087700631 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.207447486 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.085814651 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06814028 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083102095 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088682829 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113300494 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071717949 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066646185 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118913 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069963549 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.089031903 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104052477 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087595787 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107662132 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.07171221 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.13106945 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068011939 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.167565217 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070033569 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115587963 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07401002 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117589875 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099429692 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069702303 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157738973 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065318978 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084406751 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06823388 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083261296 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070096584 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069021808 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100864991 seconds)
  done (took 21.874995242 seconds)
done (took 39.294502532 seconds)
(4/9) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.608841074 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.782190927 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.876519149 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.151901386 seconds)
  done (took 3.22440949 seconds)
done (took 4.043048049 seconds)
(5/9) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078132064 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080735967 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.098158938 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077774684 seconds)
  done (took 1.1435594 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.092854346 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.088562365 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078532882 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07215022 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.095191943 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07262973 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.091531381 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076868674 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.08882621 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073961146 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071414071 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.089705113 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074890051 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.090803622 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070828548 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.091426464 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07731331 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071316337 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.096183174 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07270293 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.087544603 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074636449 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.093029847 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072473913 seconds)
  done (took 2.781883948 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.087108228 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071687157 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.091250514 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071323461 seconds)
  done (took 1.139207014 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078353384 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.1075936 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090199575 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.09298075 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093010663 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.103889768 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069400339 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069176348 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.088712586 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076534001 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.084473566 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098274737 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105927131 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075941417 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.095646296 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066164607 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.084213384 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08791758 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07561908 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.095880813 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069815227 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.093395178 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068137158 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.10697401 seconds)
  done (took 2.897269235 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088306468 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.119186525 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078000053 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.106157786 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092253743 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.10607172 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.076046044 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.107986423 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125242218 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.083236578 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.06972611 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063671566 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.08984105 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.090644966 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.094580189 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108144751 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.130689832 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067071635 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.115442906 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065026865 seconds)
  done (took 2.699552679 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.085652863 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.079344364 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.083190758 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06765038 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.092563198 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073242169 seconds)
  done (took 1.308903453 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068349064 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066137572 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.083781097 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066921362 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070349943 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.083888903 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06647932 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065646544 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.083702609 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066731266 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.084111458 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066796879 seconds)
  done (took 1.700926753 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.464092798 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.089872393 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068938051 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.085155594 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070961532 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.08353399 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08140667 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066442645 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.108502892 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069385296 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.083684846 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068830124 seconds)
  done (took 2.211108795 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263330573 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085769714 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307491125 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160537231 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131294522 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149105331 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120731307 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132463253 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.16823357 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130720197 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213290466 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210822759 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108718993 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177484279 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090451002 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.134215024 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198011221 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193085279 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123811933 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211943238 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176147204 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152267852 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193293584 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120687265 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127856111 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140674469 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072468006 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09760987 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223936038 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159501389 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190985453 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115238682 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11622837 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223576393 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213200821 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166819604 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158503245 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1060648 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.14580798 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165655753 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253984535 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110215647 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191892607 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131070287 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102031821 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170254605 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143251258 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.143726676 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133031731 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11018904 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171467117 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231896389 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.18206047 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091378535 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133432784 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137497278 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.139924201 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12368116 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239545242 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211433777 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16013276 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072765256 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118760497 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186202679 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174205783 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.138258451 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.150633072 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094709022 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180214714 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181272059 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136143277 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186986537 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.152364454 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107803925 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140029955 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163725143 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166840731 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200025598 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150863322 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.093469375 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148492745 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123355787 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083951697 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.164137347 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077435263 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230464574 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120378853 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.135675344 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134617092 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130649936 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113933122 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212465477 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195627366 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125588388 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068538558 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125165503 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.146805915 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170597577 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107251139 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1306209 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143030377 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.098188347 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165219637 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075798593 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148464105 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.099424492 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146911305 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157427682 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.096487749 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149393704 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123678424 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.105781119 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179611199 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193068083 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111107311 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084112417 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221293468 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151045052 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.12825103 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191847368 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189105776 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.123831111 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122853345 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176645087 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236100159 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112016405 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215616142 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125703346 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087712134 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.108550913 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151795657 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13571697 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154345892 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084228991 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.167740879 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200606553 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097077424 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098707058 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183120669 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084742056 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102753323 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137876831 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121615897 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098688967 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.123043733 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.240495809 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16594195 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167964016 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112446558 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169259222 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102929408 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21191208 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108508102 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.123020521 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104609024 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.088145169 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.158503385 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20663069 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080030194 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213704461 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.146474619 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123118336 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140639156 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100339819 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166048399 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078464555 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.089052651 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166376534 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131725248 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129887212 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.177696172 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122865541 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.14810286 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.163754375 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15712399 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153871563 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.155142156 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126724831 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.105311461 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132872798 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149421763 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072599893 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.113735519 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.100734343 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122385214 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096452156 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102768611 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165014767 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147041714 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116730563 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132885572 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115155247 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174721997 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.095353691 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153243107 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.140667791 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113253333 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.181097233 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200732946 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161212166 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119798265 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185723316 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07205635 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073717266 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.108572773 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150592147 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102123856 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083638436 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136764721 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193777003 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151602609 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159543267 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131492276 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14221708 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202081848 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071499129 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.136886114 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174697735 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164942148 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.127611125 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110474772 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099215357 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190095768 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125714149 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236103202 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137289938 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14712907 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197709049 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105477737 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102456562 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123942288 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160906438 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124887618 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19569528 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10135878 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107463326 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131070986 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.097703356 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123957631 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151495642 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139640023 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159721388 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.138052684 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174282331 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078624283 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136790857 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145132798 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142691337 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082224487 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141349425 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210063556 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095692222 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138361591 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201709766 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096296445 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.126289573 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226575323 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191973215 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085494628 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129304924 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143526013 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17132048 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141248635 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165298716 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1303446 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157281634 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131026679 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084008795 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107398061 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118070026 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129945182 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095126007 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.153089578 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.138807313 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094844082 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173076654 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133852 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112112268 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139318613 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.118280369 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.108969658 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097921828 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223008085 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1433346 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223043553 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.12079666 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.194613455 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196750173 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0944245 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079343304 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.10198524 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164816959 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10328317 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157918191 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.114083145 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10575146 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150173187 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185832212 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114583672 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069390695 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132007477 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156792262 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13162008 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118928645 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.12644994 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192468824 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.123373485 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097358623 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14741314 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105121104 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122778422 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225316072 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060288708 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116703398 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092853577 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082036334 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153443075 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20322689 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.101560648 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.122992799 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141445198 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143584396 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171229405 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101630829 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116852656 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132446007 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17169603 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167941665 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091176864 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133371709 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152121543 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203779964 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126160043 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.115525498 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217694649 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18328919 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.212433255 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.106114548 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137681767 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140262623 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111976631 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187807956 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102250988 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195469894 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101931771 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159004263 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12393994 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112331065 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151523325 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.115934487 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107021945 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17451365 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141042305 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10232477 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079640163 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134540311 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161644684 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105494003 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.093749909 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162485957 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.091040273 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162076639 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215902423 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081642141 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130657713 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116695029 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082575536 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127195591 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123470048 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106794312 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.114287208 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221385742 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.111482489 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19662254 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167258968 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135930122 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181795075 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119859942 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638342897 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.098348941 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201549212 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141660388 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230018246 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098532223 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160817062 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1132734 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144248261 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187358807 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12713003 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.195591386 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157203056 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.142756174 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097786608 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122208081 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133540166 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09074658 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126871579 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136445457 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136749482 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.120669094 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.14624362 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151324762 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.101207305 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113002733 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185490365 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140909393 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188706663 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16657316 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084907419 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140671241 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187265525 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099318282 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.145898359 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202601251 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110093524 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120033934 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.101327679 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.126572108 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220049646 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075136092 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207938836 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146832259 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131125242 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136291618 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14357719 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155650636 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127013245 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168311638 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097699887 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.134420307 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137419476 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1044877 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076560457 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12692106 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13327551 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.119556589 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123252741 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.114440743 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198868452 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.069684461 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115013396 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123222646 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168413251 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228487142 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.108281009 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082057604 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140155433 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152950027 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.137332308 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151666088 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082182508 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102930199 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082331478 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.125843139 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.135842273 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138205584 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122056759 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113720935 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215137386 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.104689752 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.243703994 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096992445 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126854862 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068552675 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.099123354 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116710942 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115634616 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107291813 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119172317 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221415208 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.097394216 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.110876812 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114216762 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072739198 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102830297 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153927845 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133014381 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143641513 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117573776 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062166029 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130095015 seconds)
  done (took 68.547049465 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.148217996 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.113105081 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.122261359 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.285968613 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.152440414 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.243763757 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.189798304 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.228572093 seconds)
  done (took 2.379318254 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.160382398 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095354618 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.121020627 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.107681842 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067246839 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.12355514 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.295549914 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.09981755 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066887708 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089906952 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.129867372 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069628414 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.453473941 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065237589 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.087745388 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.080138142 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06789637 seconds)
  done (took 3.072730787 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.43423146 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.541888138 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.433907596 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.092764459 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.529970804 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.104270972 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.743766496 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.142011057 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.086506937 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.372240779 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.725554033 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.137819769 seconds)
  done (took 16.240719457 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074675152 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070750476 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.102006752 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082772371 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.090822373 seconds)
  done (took 1.319006157 seconds)
done (took 108.261628713 seconds)
(6/9) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 0.076015904 seconds)
  done (took 0.967253227 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.365471846 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.051951798 seconds)
  done (took 1.346073402 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081882448 seconds)
  done (took 0.985019042 seconds)
done (took 4.19385407 seconds)
(7/9) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.206739844 seconds)
    (2/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.257330184 seconds)
    (3/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.325133887 seconds)
    (4/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.105052486 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.233132264 seconds)
    (6/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.283098223 seconds)
    (7/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072207545 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100396825 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.108819327 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.098939537 seconds)
    (11/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089035397 seconds)
    (12/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.234573161 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.17231588 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.134286795 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.286609156 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072439242 seconds)
    (17/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125269556 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.159110658 seconds)
    (19/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.095375453 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.146260336 seconds)
    (21/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07886443 seconds)
    (22/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069961232 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.119728453 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.117958946 seconds)
    (25/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.262304403 seconds)
    (26/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077478083 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.162586841 seconds)
    (28/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.096292012 seconds)
    (29/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.218390062 seconds)
    (30/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.14769863 seconds)
    (31/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.293425156 seconds)
    (32/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.096984001 seconds)
    (33/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.247126187 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.111042022 seconds)
    (35/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07429949 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09506951 seconds)
    (37/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.235963984 seconds)
    (38/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.091879056 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.201537131 seconds)
    (40/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.227531364 seconds)
    (41/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.097418443 seconds)
    (42/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.085440181 seconds)
    (43/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07764816 seconds)
    (44/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080540292 seconds)
    (45/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.196373312 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068438955 seconds)
    (47/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.173343245 seconds)
    (48/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133826434 seconds)
    (49/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.13711996 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.122419859 seconds)
    (51/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053917305 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073290222 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.112836434 seconds)
    (54/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.173325361 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093739357 seconds)
    (56/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082584795 seconds)
    (57/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.224304003 seconds)
    (58/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069488537 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067552405 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.132595023 seconds)
    (61/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069869937 seconds)
    (62/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.074982162 seconds)
    (63/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.227643952 seconds)
    (64/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.251707132 seconds)
    (65/309) benchmarking ("sort", Int8, false)...
    done (took 0.163785789 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092927385 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116446792 seconds)
    (68/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.073647065 seconds)
    (69/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054649147 seconds)
    (70/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07604209 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.120711031 seconds)
    (72/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053920936 seconds)
    (73/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.088423103 seconds)
    (74/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.267484499 seconds)
    (75/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.101259459 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.249395501 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065656472 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.098481733 seconds)
    (79/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053937223 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066074948 seconds)
    (81/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.119677822 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.170268625 seconds)
    (83/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114131584 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.068468671 seconds)
    (85/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07674415 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.112387512 seconds)
    (87/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.253310262 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088756888 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.112543802 seconds)
    (90/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07168127 seconds)
    (91/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.12184435 seconds)
    (92/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076621363 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.092630991 seconds)
    (94/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.235646035 seconds)
    (95/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.290810809 seconds)
    (96/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.121811359 seconds)
    (97/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053039054 seconds)
    (98/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.238289459 seconds)
    (99/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091236717 seconds)
    (100/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.130644484 seconds)
    (101/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076748566 seconds)
    (102/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093882083 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074250954 seconds)
    (104/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.249293409 seconds)
    (105/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.1025335 seconds)
    (106/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170260375 seconds)
    (107/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084464202 seconds)
    (108/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066507385 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.166773882 seconds)
    (110/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06767382 seconds)
    (111/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.198185809 seconds)
    (112/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096200223 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072629423 seconds)
    (114/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109164312 seconds)
    (115/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.072726568 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094674007 seconds)
    (117/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.097200412 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087501244 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.150908217 seconds)
    (120/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.250541162 seconds)
    (121/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077758063 seconds)
    (122/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115566904 seconds)
    (123/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.249567657 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.110850865 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.190965992 seconds)
    (126/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062204263 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.156893964 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096443878 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065914902 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116177833 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072086285 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.117198174 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074883454 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.114024233 seconds)
    (135/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.11294826 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.135067024 seconds)
    (137/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067560443 seconds)
    (138/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.052083039 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095778735 seconds)
    (140/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.238493439 seconds)
    (141/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074408115 seconds)
    (142/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052028078 seconds)
    (143/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.062815772 seconds)
    (144/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.072445681 seconds)
    (145/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.237955563 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092841915 seconds)
    (147/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.17874006 seconds)
    (148/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052226261 seconds)
    (149/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054089471 seconds)
    (150/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.096662412 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066830674 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.145449896 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07408618 seconds)
    (154/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.125298669 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.252051514 seconds)
    (156/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054876697 seconds)
    (157/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070797386 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.117692127 seconds)
    (159/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067409135 seconds)
    (160/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.127117586 seconds)
    (161/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.141242179 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.087095986 seconds)
    (163/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053600699 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.08782738 seconds)
    (165/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.055767125 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076673956 seconds)
    (167/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103406801 seconds)
    (168/309) benchmarking ("sort", Float32, false)...
    done (took 0.129958814 seconds)
    (169/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.108807943 seconds)
    (170/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077756218 seconds)
    (171/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.106659993 seconds)
    (172/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.077972184 seconds)
    (173/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.070816915 seconds)
    (174/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089513584 seconds)
    (175/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067740889 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.11050172 seconds)
    (177/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.055126235 seconds)
    (178/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083005556 seconds)
    (179/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097542051 seconds)
    (180/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.13341866 seconds)
    (181/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098134846 seconds)
    (182/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083636044 seconds)
    (183/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.139849822 seconds)
    (184/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079528463 seconds)
    (185/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053353794 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.174905929 seconds)
    (187/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112982525 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067015635 seconds)
    (189/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073064245 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.095227298 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066408316 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.087249845 seconds)
    (193/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066694537 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075402987 seconds)
    (195/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092680298 seconds)
    (196/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068866159 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111603746 seconds)
    (198/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.110124869 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.097972908 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06954377 seconds)
    (201/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070994156 seconds)
    (202/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.073316524 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069401683 seconds)
    (204/309) benchmarking ("sort", Float64, false)...
    done (took 0.128228875 seconds)
    (205/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.102829769 seconds)
    (206/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.099261627 seconds)
    (207/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.085927482 seconds)
    (208/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.082060729 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065117774 seconds)
    (210/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.09757566 seconds)
    (211/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.052341099 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.156410869 seconds)
    (213/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052284605 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.071640775 seconds)
    (215/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071234107 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.165967423 seconds)
    (217/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054694959 seconds)
    (218/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067675839 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.135815434 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075957472 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.09440433 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054085946 seconds)
    (223/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075050283 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.168499717 seconds)
    (225/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080581063 seconds)
    (226/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.073779645 seconds)
    (227/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068820671 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072257501 seconds)
    (229/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075818142 seconds)
    (230/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.219313591 seconds)
    (231/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.074407808 seconds)
    (232/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052952781 seconds)
    (233/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052687782 seconds)
    (234/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.084686777 seconds)
    (235/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064440782 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066699468 seconds)
    (237/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.090041212 seconds)
    (238/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056143996 seconds)
    (239/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070975678 seconds)
    (240/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.099017054 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140089542 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088403866 seconds)
    (243/309) benchmarking ("sort", BigInt, false)...
    done (took 0.21037143 seconds)
    (244/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067614438 seconds)
    (245/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087425598 seconds)
    (246/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054317421 seconds)
    (247/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075646277 seconds)
    (248/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089368062 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.133306201 seconds)
    (250/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.074430719 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052776127 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.199497077 seconds)
    (253/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.05324486 seconds)
    (254/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06354586 seconds)
    (255/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.090137352 seconds)
    (256/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053780322 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066388875 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.089671598 seconds)
    (259/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090266264 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.137313168 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.112789155 seconds)
    (262/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066472842 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066300941 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087563424 seconds)
    (265/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068261735 seconds)
    (266/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052374319 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.113654571 seconds)
    (268/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.052648571 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093253569 seconds)
    (270/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054188018 seconds)
    (271/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074769537 seconds)
    (272/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.05305664 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.0994048 seconds)
    (274/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067564565 seconds)
    (275/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.242275361 seconds)
    (276/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052861591 seconds)
    (277/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096475156 seconds)
    (278/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052586582 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06630832 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.110259591 seconds)
    (281/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073097815 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.108644024 seconds)
    (283/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054006931 seconds)
    (284/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.119933101 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077908747 seconds)
    (286/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074601349 seconds)
    (287/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.075554378 seconds)
    (288/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054188997 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067242673 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088154033 seconds)
    (291/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077471247 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.087024687 seconds)
    (293/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.085622289 seconds)
    (294/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.054585083 seconds)
    (295/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053624941 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.094564182 seconds)
    (297/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.055327235 seconds)
    (298/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.054543533 seconds)
    (299/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.19551844 seconds)
    (300/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061263882 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.087658211 seconds)
    (302/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069964911 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072239694 seconds)
    (304/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.095375654 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135155325 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.087528053 seconds)
    (307/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053781693 seconds)
    (308/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062347758 seconds)
    (309/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.07229429 seconds)
  done (took 34.997268123 seconds)
done (took 35.896146642 seconds)
(8/9) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.218546287 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.202553978 seconds)
  done (took 1.354720115 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.100095457 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.120978955 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079213429 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.153019863 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069224829 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.123109039 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101278246 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080094855 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.089968473 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070494238 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.088135122 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071341058 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131356799 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.089235265 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068458227 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.089866578 seconds)
  done (took 2.513354636 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105459525 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.190479159 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112278926 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066595669 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103018708 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080602939 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087236623 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079622711 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093851702 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068232092 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099425192 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078594087 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.074438505 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098786406 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073080533 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.103189572 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066705264 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102031369 seconds)
  done (took 2.623039244 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109250529 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15552196 seconds)
  done (took 1.204631963 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.206879361 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.126934528 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.208832669 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.440507593 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.216862027 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.298834455 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.179144053 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.18074171 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.166726028 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.173912779 seconds)
  done (took 3.138578072 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101522608 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.175718819 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.340185784 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.142576037 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.089702764 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11907049 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14238469 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.112678431 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084696453 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.104789487 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.104155033 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079314206 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.120785072 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074964683 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099387246 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080445542 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128205052 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07622007 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.103232388 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077955968 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.125154551 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.0688479 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.101178524 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076844859 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.105553866 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.102365041 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071690006 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069389497 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.101590012 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078752424 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105010558 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.120394604 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.086486232 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.138925849 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.108499596 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.138110408 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09884256 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076098808 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075790425 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09588055 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098728475 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080241726 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.106644098 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079184038 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087271971 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080395637 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06681255 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.088735577 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082068441 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.100329634 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080822203 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.101906961 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.135018119 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.101077874 seconds)
  done (took 6.533112707 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.759874991 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.136990749 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073792391 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.823371572 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117077273 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084796423 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.746945073 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095323615 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.241659979 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.764749437 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114865738 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079317562 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.212175239 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.22027244 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.904882816 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290340213 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.655230177 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.1086749 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111000056 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.137021174 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.169031943 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.162996617 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.155089944 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.413988549 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102207462 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075559599 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.142901766 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103783561 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.147936244 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108803007 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077441393 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.161885399 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.230447783 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186105977 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.077786447 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.096938476 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073657772 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.15412285 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.249754099 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196879972 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.164697431 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071709432 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073340225 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.168443263 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137162521 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071708719 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.148675783 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.159107213 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.180385256 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077322829 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.102823563 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149508014 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.148678348 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.14976357 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10747938 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.293776493 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.276765992 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096757164 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12810583 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.08815646 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.243684533 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084324408 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.208512388 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143818119 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.198536656 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074209963 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.765565844 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.155052474 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07064072 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100656959 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124833593 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077978176 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.165938205 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.130261456 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390171009 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.170372978 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07799795 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072040758 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.212237357 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086932927 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096630882 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.148585882 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077013776 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127420343 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.173579407 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.151974916 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.153843989 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.213189853 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.171821193 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.147768306 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077268071 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130668611 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100764294 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.199685232 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.201767164 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.147781856 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.198211451 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.146598282 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.148628539 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.152836573 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103925846 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.156592612 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126030133 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108039883 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148056677 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.200075205 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.128463216 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087592125 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098316706 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.14740467 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.132270575 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090023955 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.16816918 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.155904436 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.439734372 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.153585107 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.092190012 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.091331502 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144826461 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.168017992 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07999352 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.245652225 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128588712 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.157115021 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12690185 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071415631 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127341464 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.148496162 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106303437 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12893294 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.146563577 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.08010589 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.242302042 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.176982655 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106485672 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.202392472 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.168966106 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.101972529 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.157936527 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124950831 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.153978038 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079250817 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.167429261 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.079026375 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756566419 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.150254391 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127613088 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077203045 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.171289496 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093491164 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08514409 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106939663 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068799262 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.750770698 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086873986 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104227365 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107226211 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078783582 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127751372 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143876403 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099715064 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.14875424 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.214313102 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.079681203 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126197011 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.110145877 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.14710868 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.078928714 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.110567238 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.109160332 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.089419002 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128598183 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099320929 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088055191 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.153596893 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.146707672 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.205062643 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.581862269 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074781592 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.109213544 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.189739681 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098141476 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.272372736 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146341049 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.185469751 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171075475 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084784618 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.30751656 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.153831063 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.173355324 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.112554158 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.161037003 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07098545 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.144464821 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.148976153 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.098280876 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078286077 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.17196335 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.155079846 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.151831256 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.948870156 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072134039 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.211028018 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.094405013 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.157733626 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.078288894 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104614026 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.27145601 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074549408 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.154044438 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.172062407 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.078217389 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.109898627 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.837299803 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.107542142 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.14804913 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.080066256 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205911186 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.15060023 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.144443046 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.16825414 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.081553733 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.148299093 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.193242729 seconds)
  done (took 42.090517805 seconds)
done (took 60.397326459 seconds)
(9/9) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084708728 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115943935 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077303474 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.106186568 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084593835 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.10186222 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075645249 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079485722 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.105471449 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.10506167 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082048413 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055821409 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099083189 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076821898 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09861809 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095497308 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.101915713 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074680488 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.095960025 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067721161 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075152069 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089000977 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069409871 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055368379 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.1019504 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074903533 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.095482584 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077964757 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066444645 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089411901 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070623032 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.095764492 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067971231 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080489545 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095916657 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075728758 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098449325 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079346701 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068354724 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089833351 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076068076 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066084301 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096431043 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074527628 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.094814804 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073856297 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074423586 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104256564 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117800532 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070408654 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075116523 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100942295 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079095425 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.096211782 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07211285 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074755588 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.095134688 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094554457 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098385357 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070222742 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.096759647 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077410353 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072435908 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.098156066 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075504517 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10003408 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078854453 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07192683 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099603051 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.0729862 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.089000825 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076267818 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070561479 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.090111946 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077615656 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.099782555 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067285432 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071924345 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.096280763 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073865314 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.088051089 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070236904 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068961098 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094469692 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070092164 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055314988 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.092755901 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074397629 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066421227 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.098319247 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073689986 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095255728 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069949205 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07792469 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.089136338 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072807932 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066771684 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.090258269 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069154542 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.092760582 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068207738 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068770492 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.098209978 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069596217 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072536151 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.10445534 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066810969 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.095476004 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067086999 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066036506 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.106923487 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077263373 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.090071773 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070182589 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065840706 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.097797049 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066738591 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.088036741 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06767101 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066420376 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.095189788 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068220578 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071964703 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096975517 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081443045 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088813552 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072091348 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068558136 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.089417164 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073350833 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066486843 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090252097 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069759745 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.084764245 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071162148 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067580126 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.096385416 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070284385 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074739029 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.091042513 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07655704 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.093569458 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074555001 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072852181 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.088469168 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.06070748 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069181079 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091599013 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069640538 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066438478 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.091148936 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06733065 seconds)
done (took 13.400904801 seconds)
RUNNING BENCHMARKS...
(1/9) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.019864663 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.016387405 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.005511228 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.017140176 seconds)
  done (took 25.021897086 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 1.021716613 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 1.022495052 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 1.022187979 seconds)
  done (took 4.027383389 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.145512123 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.01681993 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.018572399 seconds)
  done (took 18.142986799 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.193447269 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.060266592 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.310386469 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.611675291 seconds)
  done (took 8.138392297 seconds)
done (took 56.29751948 seconds)
(2/9) benchmarking "io"...
  (1/1) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.691662974 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.693862932 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.019757367 seconds)
  done (took 10.367976 seconds)
done (took 11.334116131 seconds)
(3/9) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.021626429 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.069791968 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.042643087 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.002507469 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.116162885 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.046797834 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.197195311 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.160111401 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.027503433 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.010072568 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.019294168 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.017347129 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.029236166 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.240906176 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.031379144 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.019121716 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.053269088 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.71017135 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.353469367 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.031243483 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.038955312 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.078833182 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.026994059 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.018850803 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.07716108 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.017863835 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.022452043 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.030977694 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.629386586 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.018647012 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.082171065 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.388630227 seconds)
  done (took 183.594949888 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.018183964 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.05206877 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.107683294 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.042385303 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.569513656 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.215653065 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.153482279 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.626780321 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.031457436 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.046025507 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.281844431 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.019673339 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.333689108 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.998277545 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.028935342 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.113246767 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.188778534 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.313825942 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.03309042 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.292986006 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.047364274 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.364147648 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.293536171 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.230456551 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.027401 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.110523084 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.050022822 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.040155 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.211462116 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.131917493 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.05351024 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.047959284 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.506567202 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.878393088 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.026962739 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.041356266 seconds)
  done (took 143.493741547 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.271582752 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.019440768 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.02167658 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.020062931 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.044159106 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.020297079 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.455946484 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.458909475 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.551313924 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.188599142 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.079299452 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.020583785 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.15330235 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.020530623 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.108154409 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.032493973 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.022299593 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.035743748 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.047659169 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.021252631 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.020590908 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.458377927 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.035538993 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.042298773 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.032776209 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.022874045 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.045720377 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.408875303 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.02240029 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.046757068 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.321772645 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.058769527 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.021240854 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.261805729 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.619423507 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.02298901 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.123431625 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.023930314 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.047100897 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.022070975 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.279496762 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.022737123 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.02257924 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.025116637 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.546418641 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.023202646 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.45977198 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.024274988 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.843771775 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.021969275 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.020652941 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.532450819 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.397238485 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.024225417 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.022123269 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.022096316 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.024787508 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.023585887 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.022144879 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.022664872 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.045350078 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.502344626 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.117798313 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.02269937 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.025174932 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.046403699 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.022925919 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.503309406 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.024588093 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.046891809 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.081476266 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.129101338 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.461226714 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.024957658 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.109401815 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.136190195 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.023181396 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.023846453 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.022745912 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.022977338 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.122060341 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.024017225 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.366004653 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.02927018 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.025057874 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.079946872 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.110870363 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.023752212 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.241863464 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.025274175 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.023388179 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.621487215 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.109773141 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.024495983 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.023303017 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.02380002 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.375054698 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.464001516 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.139527192 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.026526501 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.730302473 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.028662734 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.384306818 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.454446767 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.505751562 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.024739441 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.12432042 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.028523803 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.025949379 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.023635583 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.052659291 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.025614517 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.083289115 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.024179217 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.413935351 seconds)
  done (took 323.53581992 seconds)
done (took 652.864714307 seconds)
(4/9) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.037690347 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.052689884 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.034781907 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.032150206 seconds)
  done (took 25.127352421 seconds)
done (took 26.103599972 seconds)
(5/9) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.028504465 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.02926356 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.028752363 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.028551442 seconds)
  done (took 25.089194522 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.068669356 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.068195772 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.06979905 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.080123468 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.072076687 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.069050472 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.062134836 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.061671122 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.08002753 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.071622614 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.070936705 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.071077353 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.068945253 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.06178566 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.070910101 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.070754152 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.080138761 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.071666252 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.06255813 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.073474749 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.037540275 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.08123713 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.072617469 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.037413547 seconds)
  done (took 26.609075559 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.241667712 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.112602977 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.194207149 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.091251167 seconds)
  done (took 5.615599007 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.089067145 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.090466203 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.109250282 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.144193813 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.166264868 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.098964495 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.063806233 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.058191283 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.045299758 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.090576203 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.165850953 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.107219751 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.186048512 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.036689158 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.252007881 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.037072548 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.036918109 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.089538528 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.142337795 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.160552482 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.038024011 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.089043954 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.098645112 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.106741882 seconds)
  done (took 27.478855064 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.035908047 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.043877354 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.043307925 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.036740744 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.036202994 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.03709117 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.042402735 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.037770965 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.058814983 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.037495027 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.036040003 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.036283662 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.036340292 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.037379857 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.036542078 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.049057498 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.051260091 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.03776746 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.040118693 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.043340215 seconds)
  done (took 21.790452503 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.030579061 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 3.88608256 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.383782775 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.288629689 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.031994701 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.032655758 seconds)
  done (took 25.630803148 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.09133182 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.206089034 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.040438842 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.29741922 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.377787665 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.041872398 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.039026054 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.231633723 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.447138898 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.428879046 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.085929324 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.094176931 seconds)
  done (took 15.35976189 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.032570322 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.035426013 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.03926863 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.051010389 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.080582035 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.043536462 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.045832687 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.032098202 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.082267086 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.086452919 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.04410145 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.081893826 seconds)
  done (took 33.633867117 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.120608407 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.084181709 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.79615541 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.895827754 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.75999044 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.245764746 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.894605184 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.465493927 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.037306495 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.307922942 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.103892577 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.141682135 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.293130746 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.033361392 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.036769028 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.877534523 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.262582015 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476257593 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.036107599 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373636347 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.061988027 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.0385984 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.459913429 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.0622387 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.246001044 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.017653691 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.295386795 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.810293421 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.255416539 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.048691034 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.045355204 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.033622162 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.308808588 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625378732 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.132525455 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.04557525 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.935022594 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.666764301 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.031787196 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.383595063 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.883713485 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.039557234 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.046073792 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.034715552 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.970375585 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.045008213 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.481135962 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.041040432 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.966180106 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.03644414 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.046686195 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.129997913 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.03909354 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.029023215 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50113745 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.043001903 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.033311303 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.04391215 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.603179524 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.91686451 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.048958636 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.973261849 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.549129993 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.380875243 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610508645 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.13865335 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.040078388 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.04061234 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.971400731 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.385346777 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.05500472 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212882314 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.060891428 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.730869565 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.706686134 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.1231303 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.980773181 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541246798 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.043739052 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.974424958 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.266850951 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.814894525 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977155728 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.983228594 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.972154584 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.662531451 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.045980743 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.337841598 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.046762675 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.466426037 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.048812692 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.056354071 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.061217238 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.262561391 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 3.922124164 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.037593748 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.900159759 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206731626 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.059034014 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.470906013 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.972975795 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.042864348 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.296066128 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.248726892 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.041476812 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.886662856 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.232723524 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.044539476 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.053875668 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.044235665 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.049713057 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.582047509 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.051378202 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.904395179 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.057918065 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.815933755 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.702393678 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.041498344 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.142200882 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.152504724 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.261924447 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.738134632 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.922651901 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.105952442 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.043656695 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.038357349 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.48532114 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.892470869 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.921385032 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.040892416 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.046821528 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.052232207 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.040136323 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.002405167 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.037277205 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.18045235 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.821797568 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.263918375 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.039816412 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.329371954 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.974633453 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215375258 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.08690839 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.262813977 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.044446317 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.041422436 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.302793051 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.040166138 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.042530537 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.067383604 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.05966208 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.137411344 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.063060397 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.040165304 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.301649829 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.044107553 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.044817906 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.493441418 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.82024511 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.040338086 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.045988465 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.979734857 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583866834 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051298699 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.045083418 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.934797285 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.054454752 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.109113643 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.046430326 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.051498638 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.449781621 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.053509521 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.045060063 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.041044617 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.267794775 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.052002732 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.48572913 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.124010472 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.226647748 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588606383 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.057048807 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.977002613 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.753194336 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.735583703 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.041998663 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.233130885 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.041328007 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.050944192 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.053861297 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.712918641 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.589216757 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.043678676 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.405267821 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.049560394 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.052843861 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.048067243 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.041495838 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.432337536 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.941531005 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.046421641 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.067522052 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.186071539 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.055985462 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.976793901 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.55963926 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.046813317 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.043288682 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.822508191 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.077173824 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.408798461 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.516925999 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.304603275 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.91294666 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.056186345 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.571030151 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.074630488 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.049971907 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.945512714 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.058701343 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.068706676 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.053846303 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.054587509 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.465999901 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.530136979 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.609720611 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.731129612 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528259735 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.843790219 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.047248946 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.928358817 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.480974826 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.978109259 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.703976093 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.195551814 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.484793895 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.001813454 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.234942701 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.038054718 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656723435 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.055401593 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.273796009 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.834691843 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.950924611 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.069340789 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.256272232 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.079140057 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.052252813 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.974698861 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.331783968 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.293446651 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.962143737 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.127367825 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.487296791 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.953127613 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.836109194 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.044936467 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.253487643 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.194363207 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.593881474 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.440720834 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.050387178 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.187617716 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.531008164 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.04916033 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.574827336 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61928156 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.047156281 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.238144805 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.98545996 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.056388123 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.056736906 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.045871594 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.940628935 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 5.133436253 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.316658674 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.057232612 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.981228696 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.053725797 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531708409 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.904287104 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.051271925 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.046310421 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.712510494 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.047951009 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.270284021 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.050111242 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.422221461 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.05471038 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.981737248 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.982399887 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.741253299 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.046879265 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049985062 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496213563 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.504385029 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.495968807 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.063199168 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898203615 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.305123863 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.061397025 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.591805144 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.274657778 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.012229443 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.069809177 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.147572817 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.997816315 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.047316698 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.945706706 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.285001067 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.985890553 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.272220835 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.830635706 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.953899211 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.046217835 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.259705791 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.944752869 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.222129868 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.270501243 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.760999852 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.04932552 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.723499087 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.072828415 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.208665588 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.111065647 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.560470907 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.05578096 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.118314166 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.059089772 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.059323848 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.0594384 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.195669955 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.203921307 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.063534912 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.063097305 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.143409472 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.953654883 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.431907789 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.824060141 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597879888 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.737388876 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.599987313 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.062816893 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.049339412 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.050419729 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.983720791 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.197749348 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.577708133 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.323466467 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208343598 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.637654338 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.072305921 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.010557538 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.064850148 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.277026605 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.324783029 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.926673081 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.056987537 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.715430994 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.932542455 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.061346444 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.261091987 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494379864 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556403271 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177710984 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.057133243 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.486252571 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.324759552 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.14254681 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.051272747 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644609657 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.063024747 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.270308937 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.054992979 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.254987587 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.200432291 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.060860551 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648544412 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.06098698 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.207360999 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.824602224 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.44044368 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.310688654 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401123815 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.062758036 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.599343792 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.694605285 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.315213728 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.121334996 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.062998649 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.177401904 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.198778439 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 5.192207823 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.947267619 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.051596527 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900224423 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.762646081 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.062671625 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607807986 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.317989351 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.049412388 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 5.19853188 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.088121872 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.062335832 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.276476749 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.680899339 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.277179253 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.06177427 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.062095368 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.627316106 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604457927 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.0653013 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.986592038 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.056457037 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.261024596 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.290129684 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.077438879 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.507685781 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.763122283 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557325766 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.027403267 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.074909308 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.052905924 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.704030759 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602039295 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.437495515 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499824232 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.714550367 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.052909401 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.330195009 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.058698185 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.060095025 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.331887589 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.057559197 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.053606955 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.06583279 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.601110759 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673985632 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.071612175 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.46288067 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.992322679 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.282798189 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.78599898 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.990274169 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.054013733 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.228329408 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.05512762 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212465688 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.06610476 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 5.219855182 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.068811999 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.824921472 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385394105 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.059532174 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.039586128 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.044002493 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.060684725 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.063309936 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.305391919 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.059599992 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.767036924 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.408010905 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.312713173 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.059369696 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.042063193 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.059362997 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.054943119 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.778821234 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.033546821 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.728537434 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559580739 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.056527574 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.079061418 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.059432816 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.271415672 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.265910901 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.271059532 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.081867077 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.059768621 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.07183353 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 3.960350329 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.857540984 seconds)
  done (took 1409.759846598 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.100509612 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.070556745 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.09213242 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.126978053 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.082608365 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.128111372 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.128853687 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.082249939 seconds)
  done (took 49.811999305 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.060497662 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.20555732 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.081780893 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.056576904 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.068534924 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.05643709 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.447989809 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.067200977 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.067908679 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.068988342 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.066978048 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.063943752 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.651666842 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.069265745 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.058840446 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.04659106 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.069377913 seconds)
  done (took 60.215710593 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.065206179 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.532478606 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.121500972 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.075034311 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.152921023 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.060850111 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.21104659 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.085908813 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.062731133 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.083144289 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.712583297 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.085707095 seconds)
  done (took 78.252229892 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.066381309 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.067266306 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.066741033 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.067341085 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.066426939 seconds)
  done (took 6.337055755 seconds)
done (took 1786.564273496 seconds)
(6/9) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 6.043239086 seconds)
  done (took 7.046353412 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.613464654 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.593789187 seconds)
  done (took 4.208500438 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.362063798 seconds)
  done (took 2.36442611 seconds)
done (took 14.628104626 seconds)
(7/9) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.440378635 seconds)
    (2/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.391962535 seconds)
    (3/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.055339039 seconds)
    (4/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.279077077 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.072026006 seconds)
    (6/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.516723928 seconds)
    (7/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.12683215 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.0995451 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.623686159 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.085595074 seconds)
    (11/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.116795369 seconds)
    (12/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.977294666 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.060984986 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.059777899 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.188660379 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.675956059 seconds)
    (17/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.717867358 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.138023919 seconds)
    (19/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.048743529 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.998729346 seconds)
    (21/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.181454849 seconds)
    (22/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.276606921 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.011020993 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.829602412 seconds)
    (25/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.205412609 seconds)
    (26/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.086764677 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.172709966 seconds)
    (28/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.066202068 seconds)
    (29/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.766658585 seconds)
    (30/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.071286602 seconds)
    (31/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.762939305 seconds)
    (32/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.143685736 seconds)
    (33/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.043717678 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.110731177 seconds)
    (35/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.085149468 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.162038113 seconds)
    (37/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.179808173 seconds)
    (38/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.078139952 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.05973979 seconds)
    (40/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.058006943 seconds)
    (41/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.092664675 seconds)
    (42/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.882081638 seconds)
    (43/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.103755665 seconds)
    (44/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.044808814 seconds)
    (45/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.0774698 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.065797752 seconds)
    (47/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.046956351 seconds)
    (48/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.077069648 seconds)
    (49/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.050938037 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.06599185 seconds)
    (51/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.441542584 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.183325833 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.924952206 seconds)
    (54/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.660995798 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.323522389 seconds)
    (56/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.164173169 seconds)
    (57/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.542944827 seconds)
    (58/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.128938644 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.117366488 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.045285888 seconds)
    (61/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.143673933 seconds)
    (62/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.584357162 seconds)
    (63/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.699097763 seconds)
    (64/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.304587478 seconds)
    (65/309) benchmarking ("sort", Int8, false)...
    done (took 4.068479435 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.43728167 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.078228581 seconds)
    (68/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.591175226 seconds)
    (69/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.047289576 seconds)
    (70/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.170555365 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.380685868 seconds)
    (72/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.046333632 seconds)
    (73/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.063544052 seconds)
    (74/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.173303078 seconds)
    (75/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.392299698 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.278418346 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.450593336 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.438085951 seconds)
    (79/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.069860638 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.389477146 seconds)
    (81/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.091497217 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.063026427 seconds)
    (83/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.158148691 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.133990253 seconds)
    (85/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.08774321 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.373990506 seconds)
    (87/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.0959248 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.138749715 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.599941772 seconds)
    (90/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.08317672 seconds)
    (91/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.37579883 seconds)
    (92/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.152809569 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.7746533 seconds)
    (94/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.801522951 seconds)
    (95/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.346704149 seconds)
    (96/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.547576234 seconds)
    (97/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.616812137 seconds)
    (98/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.136705793 seconds)
    (99/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.076160188 seconds)
    (100/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.430726437 seconds)
    (101/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.073623809 seconds)
    (102/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.206468741 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.275834679 seconds)
    (104/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.259348476 seconds)
    (105/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.738850949 seconds)
    (106/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.159881609 seconds)
    (107/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.517824273 seconds)
    (108/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.456864809 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.065968851 seconds)
    (110/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.062995557 seconds)
    (111/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.866819373 seconds)
    (112/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.090569751 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.716974615 seconds)
    (114/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.272452656 seconds)
    (115/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.391865793 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.123823448 seconds)
    (117/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.072743797 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.15168147 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.16166662 seconds)
    (120/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.337423085 seconds)
    (121/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.073065786 seconds)
    (122/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.072477839 seconds)
    (123/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.598557799 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.057058891 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.066684508 seconds)
    (126/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.71094084 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 1.571215143 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.088695679 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.451905109 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.334081612 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.687099252 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.114843498 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.324681227 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.143568107 seconds)
    (135/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.130595026 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.138700076 seconds)
    (137/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.072513095 seconds)
    (138/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.701432212 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.169061514 seconds)
    (140/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.118139385 seconds)
    (141/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.092438635 seconds)
    (142/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.424478046 seconds)
    (143/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.382024761 seconds)
    (144/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.341261889 seconds)
    (145/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.099552162 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 1.868243536 seconds)
    (147/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.409024296 seconds)
    (148/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.427825169 seconds)
    (149/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.063208149 seconds)
    (150/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.165826239 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.708805568 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.092769295 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.090674581 seconds)
    (154/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.053678472 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.775256854 seconds)
    (156/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.075203945 seconds)
    (157/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.184244574 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.398310379 seconds)
    (159/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.067797165 seconds)
    (160/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.170554109 seconds)
    (161/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.399848607 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.785537008 seconds)
    (163/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.393946394 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.068900093 seconds)
    (165/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.057065159 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.091791265 seconds)
    (167/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.907279482 seconds)
    (168/309) benchmarking ("sort", Float32, false)...
    done (took 5.003474617 seconds)
    (169/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.085835936 seconds)
    (170/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.127084065 seconds)
    (171/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.242022318 seconds)
    (172/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.238699562 seconds)
    (173/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.434349976 seconds)
    (174/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.253401731 seconds)
    (175/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.706051256 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.358749156 seconds)
    (177/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.256279726 seconds)
    (178/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.082581062 seconds)
    (179/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.094921496 seconds)
    (180/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.066799098 seconds)
    (181/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.09166442 seconds)
    (182/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.223790473 seconds)
    (183/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.076762429 seconds)
    (184/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.089910816 seconds)
    (185/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.195034581 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.590296796 seconds)
    (187/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.096739111 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.570406557 seconds)
    (189/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.06841552 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.121909412 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.871521105 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.463322648 seconds)
    (193/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.150219324 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.108965279 seconds)
    (195/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.082922979 seconds)
    (196/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.195029657 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 4.921512686 seconds)
    (198/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.381602499 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.815776205 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.641480809 seconds)
    (201/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.132648119 seconds)
    (202/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.519758281 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.825270815 seconds)
    (204/309) benchmarking ("sort", Float64, false)...
    done (took 5.233972876 seconds)
    (205/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.077476099 seconds)
    (206/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.554453216 seconds)
    (207/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.075015107 seconds)
    (208/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.186675968 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.124697107 seconds)
    (210/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.15020831 seconds)
    (211/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.787135225 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.189880591 seconds)
    (213/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.269083991 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.515424827 seconds)
    (215/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.076841132 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.090806648 seconds)
    (217/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.06588694 seconds)
    (218/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.156838008 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.140734895 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.715357266 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.282907144 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.348874359 seconds)
    (223/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.096735516 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.069728455 seconds)
    (225/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.285408312 seconds)
    (226/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.381069571 seconds)
    (227/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.192506597 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.091382608 seconds)
    (229/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.219807379 seconds)
    (230/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.521119087 seconds)
    (231/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.45981194 seconds)
    (232/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.373352545 seconds)
    (233/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.982961628 seconds)
    (234/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.102430033 seconds)
    (235/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.264677654 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.122973461 seconds)
    (237/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.094706614 seconds)
    (238/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.055412809 seconds)
    (239/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.203573079 seconds)
    (240/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.153792964 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.070363501 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.858502165 seconds)
    (243/309) benchmarking ("sort", BigInt, false)...
    done (took 6.069758572 seconds)
    (244/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.151207208 seconds)
    (245/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.206591945 seconds)
    (246/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.816875661 seconds)
    (247/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.080868015 seconds)
    (248/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.201419672 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.1887188 seconds)
    (250/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.993443986 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.416921119 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.072085849 seconds)
    (253/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.245632099 seconds)
    (254/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.613859699 seconds)
    (255/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.157433831 seconds)
    (256/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.765964471 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.072182667 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.073847648 seconds)
    (259/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.120366073 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.055411368 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.409069678 seconds)
    (262/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.19769105 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.254763666 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.861686944 seconds)
    (265/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.070565665 seconds)
    (266/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.592045057 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 1.875750802 seconds)
    (268/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.271068595 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.112114743 seconds)
    (270/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.964001527 seconds)
    (271/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.110198104 seconds)
    (272/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.13566797 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.45291501 seconds)
    (274/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.070990792 seconds)
    (275/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.100672323 seconds)
    (276/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.104263662 seconds)
    (277/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.105441802 seconds)
    (278/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.462861296 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.397391029 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.611508947 seconds)
    (281/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.09716149 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.173811067 seconds)
    (283/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.293974555 seconds)
    (284/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.260123147 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.154808413 seconds)
    (286/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.097442709 seconds)
    (287/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.582617177 seconds)
    (288/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.308821931 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.155513068 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.188543222 seconds)
    (291/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.080590781 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.797487669 seconds)
    (293/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.703425704 seconds)
    (294/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.526114209 seconds)
    (295/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.177149709 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.114371086 seconds)
    (297/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.562686204 seconds)
    (298/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.401676117 seconds)
    (299/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.072009241 seconds)
    (300/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.390551882 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.453878407 seconds)
    (302/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.21094846 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.094584346 seconds)
    (304/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.159751364 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.074203113 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.738220465 seconds)
    (307/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.39958879 seconds)
    (308/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.11930656 seconds)
    (309/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.05840094 seconds)
  done (took 813.951736985 seconds)
done (took 814.959235236 seconds)
(8/9) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.185364341 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.155575644 seconds)
  done (took 13.358043582 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.246620107 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.199634426 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.078244828 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.102373915 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.079361129 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.102592313 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.081063094 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.079280712 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.078890612 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.079656339 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.07827369 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.270024594 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.08237154 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.078647248 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.078709855 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.172333245 seconds)
  done (took 38.913607734 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.102779713 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.084894613 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.178383744 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.098144818 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.103012109 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.242117907 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.131228993 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.083129561 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.226193886 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.117582851 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.390658781 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.103068745 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.082329238 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.044186807 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.100932067 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.242084263 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.296626798 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.392540336 seconds)
  done (took 25.038459761 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.447298183 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.083361438 seconds)
  done (took 8.549157278 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.074795118 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.121670721 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.091863616 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.104822948 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.086600822 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.115565979 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.098463608 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.095800993 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.098895497 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.11083564 seconds)
  done (took 62.023068499 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.100296055 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.084086693 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.083304822 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.082322915 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.076171087 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.078179198 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.082132403 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.074500068 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 3.975693497 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.192530123 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.099688228 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.089050599 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.082951974 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.084531458 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.08029161 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.116469489 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.236847553 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.080204355 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.080496463 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.089969345 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.083815214 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.176696101 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.119823524 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.081552621 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.191200967 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 3.991005207 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.089998128 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.090064191 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.221721156 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.081456492 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.082722952 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.085174226 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.085514435 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.64482062 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.604955901 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.092220263 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.105097113 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.092116131 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.080888155 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.202169188 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.085779755 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.089456443 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.077687384 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.581623046 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.239247706 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.185878751 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.104676033 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.086660768 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.08422535 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.139864537 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.084792074 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.086060982 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.111063118 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.796741943 seconds)
  done (took 95.848172227 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.11676363 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.569933397 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.24601924 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.093719185 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.815074597 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.634343454 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.080631087 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.31457583 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.080284179 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.07822093 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.348247568 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.529104761 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.084426166 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.114216889 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.746809472 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.145288516 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.077928069 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.800001653 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.079947545 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.078751857 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.477087869 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.093158617 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.080898447 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.237575006 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.115691642 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.491863866 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.310841261 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.418087109 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.084726249 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.078998523 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.492106344 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.086542271 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.0878816 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.080578626 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.328640406 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.386637183 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.371180783 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.084736952 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.087845486 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.083549212 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.11590892 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.491724597 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.375891137 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.082323365 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.082501242 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.508736471 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.081546406 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.083553679 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.085356043 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.276455426 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.777839408 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.080189047 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.296323711 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.080639814 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.470554165 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.148597691 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.134908779 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.526914718 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.082074542 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.039285719 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.117627631 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.081099693 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.085481156 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.080779133 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.080942201 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.377999124 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.22579624 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.084071551 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.377014136 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.48751275 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.083191858 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.551390093 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.966564114 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.09041655 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.163346613 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.081117311 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.631689055 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.518944752 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.083852096 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.081490856 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.361680061 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.08235034 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.335537779 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.094603991 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.093633929 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.499350464 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.098427182 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.128156287 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.082269163 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.093213593 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.701713195 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.097240966 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.327840397 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.119013497 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.08183564 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.08222455 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.12104864 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.084315483 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.082078203 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.088510472 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.552063954 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.085129301 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.356697217 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.100144116 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.083377588 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.097342372 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.08208683 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.081884961 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.295134012 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.476639326 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.088610401 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.083684134 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.082402049 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.089968296 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.217304321 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.089471522 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.33594999 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.085336433 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.083812239 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.086092685 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.749429229 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.093131704 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.08369973 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.09055409 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.915878928 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.289109199 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.098652314 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.096634231 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.08693484 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.09591939 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.224355733 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.084951924 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.109588442 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.084524866 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.734869437 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.118938113 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.089893423 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.407899398 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.088380263 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.863611397 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.098421429 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.085867 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.376428217 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.337123953 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.152306613 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.083846875 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.084704578 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.733536295 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.087947145 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.231911474 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.099568678 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.110764879 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.281612812 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.387353789 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.086290327 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.64658264 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.087479663 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.291565186 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.085661855 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.38942824 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.520354634 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.088192043 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.093697056 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.73112284 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.752251574 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.704404103 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.089075669 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.338831351 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.098440211 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.530715546 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.085458225 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.08566976 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.51587016 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.086041161 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.08629346 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.086179213 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.085557663 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.252328177 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.260567063 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.500750807 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.087399067 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.495529575 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.087462063 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.094358771 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.089553403 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.085953659 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.439973931 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.168193992 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.092027354 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.107136401 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.086739562 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.089578448 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.503698948 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.949530023 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.088948117 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.239074047 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.658742402 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.087893044 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.086580455 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.639154219 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.371641485 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.543005982 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.102035949 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.343388903 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.089604009 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.125410773 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.753212281 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.102489932 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.55222265 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.089857009 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.087140989 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.628651209 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.089622656 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.434798432 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.088226905 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.087931582 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.558491331 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.088836725 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.091051974 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.236019504 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.096320248 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.329833123 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.088305239 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.107091285 seconds)
  done (took 1051.12235001 seconds)
done (took 1295.876833329 seconds)
(9/9) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.120057603 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.115827155 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.096665076 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.118749447 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.21096503 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.124891064 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.10655657 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.099567957 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.144918151 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.146992635 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.098659131 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.123910017 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.101352047 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.099598455 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.096844515 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.112991914 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.004361221 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.102291431 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.116239978 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.10789993 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.116063157 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.09861583 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.147212229 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.123725778 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.101329403 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.100722637 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.103472922 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.120390819 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.213524411 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.103497924 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.102512694 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.111623611 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.004451896 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.099388147 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.093605181 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.120698971 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.111833573 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.1071194 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.101764292 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.132259822 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.319035052 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.100151653 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.102534185 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.099742099 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.098849448 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.103378696 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.102017404 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.106425579 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.115199345 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.114837687 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.34003226 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.116946665 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.105108825 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.100154762 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.109706638 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.101058962 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.10251686 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.11729229 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.121596951 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.118706343 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.995508327 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.10712478 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.1021057 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.117980521 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.10876339 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.346276015 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.096393476 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.10438771 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.319673248 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.106040454 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.344160899 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.111019541 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.100580854 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.115824411 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.134624171 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.012719966 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.097479809 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.099197953 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.109896433 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.101117787 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.110210505 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.115554308 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.104889428 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.100669867 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.116369477 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.128349279 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.110850565 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.104349199 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.110744564 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.123622745 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.110471663 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.114736152 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.10449081 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.096550695 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.110658424 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.10505602 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.106765541 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.106492866 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.105963124 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.112711534 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.349076706 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.122441829 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.099025701 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.098416188 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.102065649 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.117919192 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.342720672 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.107501495 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.123405976 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.149656664 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.103080715 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.004401036 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.109212383 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.121727989 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.111098638 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.105740274 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.098760303 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.002282223 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.350598385 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.122598182 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.104004652 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.103243624 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.121528981 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.105036617 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.099289069 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.018185323 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.10729375 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.118624594 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.226416214 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.114266646 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.137811425 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.103632849 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.106814569 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.130631274 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.121282197 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.136314023 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.105178166 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.121245241 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.122087561 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.100548801 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.117797814 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.114206138 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.104408586 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.109014165 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.097689208 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.135474677 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.118838174 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.11824864 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.125183591 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.227540612 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.101251976 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.003998574 seconds)
done (took 187.351534719 seconds)
SAVING RESULT...
DONE!
