cset: moving following pidspec: 7405
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.240322029 seconds)
loading group "string"... done (took 0.571768547 seconds)
loading group "linalg"... done (took 7.261557903 seconds)
loading group "parallel"... done (took 0.167131925 seconds)
loading group "find"... done (took 1.160732608 seconds)
loading group "tuple"... done (took 2.021055611 seconds)
loading group "dates"... done (took 1.287634173 seconds)
loading group "micro"... done (took 0.238959378 seconds)
loading group "io"... done (took 0.982914207 seconds)
loading group "scalar"... done (took 39.703649633 seconds)
loading group "sparse"... done (took 12.704868903 seconds)
loading group "broadcast"... done (took 1.002168042 seconds)
loading group "union"... done (took 13.799296861 seconds)
loading group "simd"... done (took 4.68372092 seconds)
loading group "random"... done (took 9.372219203 seconds)
loading group "problem"... done (took 1.987979482 seconds)
loading group "array"... done (took 22.27050048 seconds)
loading group "misc"... done (took 2.023499506 seconds)
loading group "sort"... done (took 3.411044382 seconds)
loading group "collection"... done (took 19.243304605 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.537429818 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14121836 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119655924 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.135719102 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186941057 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130805657 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127021333 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.101785485 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.92166503 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146343881 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138821988 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.503534742 seconds)
done (took 4.939321913 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.198038108 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087256801 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095378564 seconds)
  done (took 0.859995859 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066358328 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12704147 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065642671 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.082750745 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066508018 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081262941 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067376732 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065633947 seconds)
  done (took 1.239677176 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073701259 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068461681 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085645907 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067512714 seconds)
  done (took 0.978783272 seconds)
done (took 4.028779004 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.927828153 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.237842951 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191204982 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.451997876 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.151057926 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.190634239 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.668101568 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313214305 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.208277251 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.073456693 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.121957353 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.372873156 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124579441 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.667096877 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076813257 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107448674 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.16163131 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.417607314 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082133832 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082774804 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103198906 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128855578 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103834919 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.088617999 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.157805494 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071157161 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.151011353 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.097259674 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068512047 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.260490451 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173785759 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.694263872 seconds)
  done (took 10.448121632 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097635612 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.119290032 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068619912 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140690033 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104184573 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086685234 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071610743 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082690552 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093414877 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.161237576 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115711081 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107539591 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081302814 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070691349 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.100597439 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.215380988 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109043416 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085731132 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086158689 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075955299 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122177415 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08464211 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094430766 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080876096 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.15254306 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194824185 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099270408 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112811372 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069629787 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098418947 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.129817085 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133760364 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065791506 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083847025 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.157383918 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09635512 seconds)
  done (took 4.546137744 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.077751755 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.175743616 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090777398 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.1545364 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085449361 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111618879 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.08378119 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099489757 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.232811197 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.139530002 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.480571892 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129836364 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.085982115 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086281111 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07047725 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083967371 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.509904574 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146115189 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.122090035 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083645072 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090868519 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071091983 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.142237578 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066775628 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06632568 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088355889 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.099242906 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362620513 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149395693 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069070215 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.191192465 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087543566 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089649189 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120295555 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.177504269 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097854026 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119366639 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065962946 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083327417 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161720126 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074805601 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066636997 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107584847 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120289459 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.104617182 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085112517 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068011296 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182506634 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067247624 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101562116 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.906497992 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067867455 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165785806 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095094311 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083490806 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.272237344 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.107889494 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066140333 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082094373 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.267651637 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.17822908 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084499315 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068575765 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06572535 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.086804621 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374563083 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06816205 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063639201 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084900502 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079099709 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.882920059 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070812406 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083011921 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075193341 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073858393 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103145776 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067017588 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.085850955 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067802687 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066142559 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086822861 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084006441 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.208126605 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08918389 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067569108 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065042279 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.105314013 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112691196 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07195773 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065983076 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117791752 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070988302 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08486366 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102664838 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086825812 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084383558 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087234398 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130347837 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070296563 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.142814747 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.067895331 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065727439 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.117293198 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.08742469 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100904549 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098306241 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068796016 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156227432 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064971163 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083985653 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068011032 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064799769 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086322399 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068777039 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097752622 seconds)
  done (took 21.28146265 seconds)
done (took 38.032788439 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.310082996 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093825221 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.094531529 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076708509 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093977908 seconds)
  done (took 1.429524998 seconds)
done (took 2.158688417 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.133715153 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119937528 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064408113 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115380637 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063799722 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.120364959 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117458271 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082624981 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118078701 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065082733 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113636183 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065344956 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063825752 seconds)
  done (took 2.004137318 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082541451 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085148817 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086643444 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082733927 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063526393 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098322002 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080032975 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104863926 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08049314 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071582819 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08168154 seconds)
  done (took 1.647218416 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081308991 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083937138 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086276191 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080593686 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063673688 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096704866 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080149313 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102167351 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081083226 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073135591 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080753386 seconds)
  done (took 1.640070542 seconds)
done (took 6.010583198 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077770621 seconds)
  done (took 0.801422558 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.733072269 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.603215814 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.099333217 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134650034 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.215442849 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.155751573 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.449363701 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.111087007 seconds)
  done (took 10.401402022 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.113915611 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089415943 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072602826 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08600402 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071996964 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069684716 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086967044 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070451837 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087673785 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071014114 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087018872 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069882278 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068995109 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087281994 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070750999 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085315807 seconds)
  done (took 2.081446148 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.105125509 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.103627756 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092258977 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076414129 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090248171 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073714363 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093428501 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07467952 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071984926 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089410325 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076662448 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.091307081 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073819064 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082034963 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075706237 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092629765 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071643748 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.091879437 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076507306 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091811455 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076645709 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.082142085 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074080683 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.091368115 seconds)
  done (took 2.852411012 seconds)
done (took 16.862951146 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.117376817 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08783421 seconds)
  done (took 0.938018478 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081873361 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098279009 seconds)
  done (took 0.919147399 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083233067 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082080789 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091254033 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094689973 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067017322 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082618967 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103638776 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067733538 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06667478 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083093515 seconds)
  done (took 1.561065169 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069776318 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095139001 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071470973 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097373329 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074733661 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081991588 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074807961 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069048128 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.095688127 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06487343 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.088158442 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100160824 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072524412 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101406245 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074589556 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08659281 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071748765 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084488302 seconds)
  done (took 2.213317198 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066908037 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068007418 seconds)
  done (took 0.874452557 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068108815 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06420489 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08320031 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067408772 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080456125 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063295812 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080361395 seconds)
  done (took 1.249118086 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.411142344 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109506004 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.24893782 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088363182 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105458164 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.279761337 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084807553 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071440321 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088978751 seconds)
  done (took 2.267071578 seconds)
done (took 10.754611344 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079727445 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085594779 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110984602 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.421602391 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093196598 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.080965932 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131466416 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.226688812 seconds)
done (took 1.968027789 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127403123 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.617879158 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404934902 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214664756 seconds)
  done (took 1.983866623 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.380982586 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089609304 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073195847 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067921198 seconds)
  done (took 1.362465048 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067200908 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069973459 seconds)
  done (took 0.886075285 seconds)
done (took 5.101310555 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06738612 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.114684379 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066724999 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064853821 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084621836 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065220541 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065576621 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085202937 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067490671 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06676639 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.082651014 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067693276 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067132437 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080888906 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0651519 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067288015 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080618036 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064693912 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064910806 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08120689 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066929018 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066980695 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08093707 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064737672 seconds)
  done (took 2.5331305 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085257089 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084297495 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072688366 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071822996 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.08796993 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073074165 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.089315139 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067961479 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088581618 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068989824 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086846621 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071286942 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069424493 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08765597 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069010035 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.08786124 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072816359 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084577898 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069479689 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.08826817 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072227742 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068256007 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.087698419 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073081271 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.088226483 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071059552 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085373805 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068046659 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089279086 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071051326 seconds)
  done (took 3.103934206 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071556412 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065062189 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08195495 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071777759 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064739443 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082667325 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064791349 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065366619 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082385559 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064054078 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066353526 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.080962764 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065492887 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08278132 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066053633 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067853738 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.09907798 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064792328 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064879843 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081595642 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068189944 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065048996 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081295471 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064447566 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081514689 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06409217 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065494599 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080981266 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065754961 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06441883 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084361687 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068430513 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06417554 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087656014 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068350393 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064473995 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085180189 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064303322 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06528674 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081374459 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064228128 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064311229 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.08159694 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071844789 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064485892 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083025992 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065593572 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082827738 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064933895 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067995186 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080847242 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065230238 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067355206 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082227936 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069226089 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081139429 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065819458 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064066448 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082661928 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064397445 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064089917 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080718424 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066901489 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065632776 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.0974011 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07163589 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065122096 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082353088 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066145384 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084260836 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067111966 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078356194 seconds)
  done (took 5.96738038 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119971708 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093813467 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084175153 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066547531 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0632622 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082559654 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069073388 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081482709 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067448916 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08839607 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064973082 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066267926 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083547699 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079974436 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065405273 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083675459 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070791155 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080136475 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065574377 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068408111 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081756935 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068859313 seconds)
  done (took 2.453075003 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.189683942 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089254207 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109737711 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092744281 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069735516 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092198451 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071671186 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088353515 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071789446 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086814534 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069167323 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088817848 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068871877 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069608047 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086407961 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069951567 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.197200796 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069787089 seconds)
  done (took 2.440206909 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078846705 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067190809 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107726603 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067665503 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08481193 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07061474 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090245526 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077557294 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086777644 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068243386 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093024854 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070234934 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070310956 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084177709 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069967743 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084759615 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070514101 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067457843 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093008125 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072958463 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089212218 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077005615 seconds)
  done (took 2.501777276 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081559704 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069547563 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103845211 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070620835 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080431875 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066431677 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091592887 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067524273 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090619475 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069642755 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067789502 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082939222 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073322045 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084728205 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072775225 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067884308 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086297256 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067980957 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086838147 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064386555 seconds)
  done (took 2.308316095 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088757559 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085789998 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069671054 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094493011 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06997078 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068765332 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094831271 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069135225 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085215621 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110461718 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069551644 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068757112 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094518533 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090632998 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069519469 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09393227 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078098785 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09485706 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069565731 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08646787 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095207143 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085975182 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077764489 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085286404 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06964141 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069445761 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085800225 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074418049 seconds)
  done (took 3.059835611 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067750668 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067928284 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082791321 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065524929 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065114621 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082488361 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065263108 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065052771 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084421459 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065374404 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067163709 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084080608 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067201402 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06720341 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084140518 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067682518 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067429539 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082098392 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06504951 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065356934 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084491538 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067329053 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067351568 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082999815 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06558405 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066581549 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081633698 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064996817 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067466923 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082340506 seconds)
  done (took 2.924994117 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075929043 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073966493 seconds)
  done (took 0.915217154 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064840549 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082444312 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081748816 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070900076 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08921074 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067702077 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092533454 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071984599 seconds)
  done (took 1.388268706 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082459811 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078136951 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086294301 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080328417 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094571407 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083796593 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158612425 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086615998 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074880552 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065810279 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.098383398 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067438328 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091504865 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068174763 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073939185 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09257499 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066561436 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.09056315 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070306505 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066529437 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085725531 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079843256 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087389879 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.067247981 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069108249 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094613664 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080526159 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.086019425 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071599175 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093055067 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07337047 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062188809 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.085038122 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068937618 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065807611 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093572402 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083158327 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087742224 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076690742 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086703495 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078334697 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080265672 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073207121 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074396511 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095435596 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068413471 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086137813 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063634308 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065958987 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08683051 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063624557 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067981531 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079794143 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075135915 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088708043 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079284822 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083788018 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069512764 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070996212 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08854379 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07498794 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087031507 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070938044 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068052472 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092193905 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073147567 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095143527 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063626056 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062398197 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083723837 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077912427 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108020595 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073998599 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068430343 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086880239 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066040665 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088275769 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069328343 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091495275 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07510356 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068006359 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091656179 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076280847 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085369233 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070660548 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093564946 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066194368 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070731397 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083264627 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085052541 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084107474 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066070956 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065618758 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.096302644 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071753359 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084697285 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066434876 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076150793 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079708066 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069341186 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087055961 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069357491 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079346485 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09120592 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074385502 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.095527248 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075247775 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085984213 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071873123 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065233096 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087047172 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067897065 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093075341 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06198002 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070814558 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086201554 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069235532 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094527428 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066043641 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068399991 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09376322 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073813373 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083706248 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06531667 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070987651 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085644057 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071389871 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094006939 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067457316 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064000209 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080551002 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071583915 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068604895 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090050178 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074387179 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088374084 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062403024 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065747618 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.08937457 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076997963 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086009293 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069409652 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091531423 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069561805 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067082932 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091896984 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071135785 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08459689 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074823502 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069363051 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.08138802 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07222704 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088653046 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066541234 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072504172 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089388407 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071058235 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.087019903 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066899659 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073557359 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086719125 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06749195 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085261047 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066990622 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079190032 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087730411 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06412067 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.08244178 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07626454 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066075723 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085268209 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06817789 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087041201 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069389983 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.0673148 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084651701 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070371134 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098176165 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073216524 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068876668 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090858217 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080068179 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085254246 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071147342 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067903475 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086845889 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069798587 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094314973 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074119976 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090829061 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071116378 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065231239 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091374256 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076235073 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084579775 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066006219 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067084456 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089245356 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075012052 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089894924 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068975198 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066038105 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086697497 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072573436 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088477294 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067652465 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067759746 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.09097047 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068478158 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092950318 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069434385 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096473939 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072098975 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06408162 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089680192 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066737712 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092486912 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064723643 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066592379 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084695168 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069299081 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067869745 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088915826 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06309762 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092880241 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076353646 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068903881 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086232208 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069070389 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092306425 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06985905 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072133141 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089614446 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07446633 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096026694 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06801912 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071499982 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096702858 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068567895 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.080126658 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07399482 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066873134 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085898403 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067433855 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083555926 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071373007 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076936462 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093010864 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062170599 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088620416 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067769927 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068033512 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081895791 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073330456 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088774055 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069358101 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074935694 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087459349 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070095558 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089355465 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068641323 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.07000819 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08675401 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071753859 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086770894 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071224636 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067422853 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08949819 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067315951 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065864568 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087962706 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06903319 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08602336 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074861737 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067367932 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086178247 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071854716 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087009769 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069616472 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069176456 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085564949 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072114943 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068944633 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.085744146 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071071287 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081220507 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075947816 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068091527 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093845181 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069062847 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082585584 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074436393 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070722704 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.091145247 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06986724 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086855605 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070539994 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067233849 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089546188 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075185008 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084081018 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080089855 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094521052 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06900668 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070592698 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086607598 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070060462 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066786906 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087146628 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.07013333 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085754994 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068244392 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072602544 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089838229 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069133197 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088458626 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069527292 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068686207 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087499955 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063318482 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067428727 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085436054 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069111638 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096890516 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069040226 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085219636 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068185389 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070382532 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085188865 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066155076 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094791172 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077974954 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069197028 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093820797 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068188438 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088158067 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079294204 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064680222 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084723819 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067124076 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083926605 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076245756 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069434537 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096643029 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069282938 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085465479 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066292376 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069588009 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.085043805 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063543263 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067330833 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09103122 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067885668 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085446982 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06978327 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071600604 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087804485 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07954115 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085627943 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069225633 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06851504 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.084074869 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067808496 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066954011 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089804986 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070139463 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084656223 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066309648 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068694626 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08811439 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071056482 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067634127 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088485959 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075542876 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086782994 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07166645 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090884955 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064185193 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07171366 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086714776 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06874943 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067794495 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.09046316 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072486752 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087610618 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07856941 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086481222 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069438756 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06916296 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084637456 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069196275 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067952048 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086557984 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068715238 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.088350013 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076927212 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066072178 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089122904 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06854508 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087029926 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076012619 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069147808 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089444234 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076344387 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.0867028 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070592182 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076325421 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090142314 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072107992 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087368461 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070665804 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092075049 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068258793 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075159932 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087525909 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070192407 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070056991 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084203357 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06820607 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086068672 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067781127 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074410404 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088247744 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068808725 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086125112 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066262384 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069808251 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089956577 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076274255 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089157985 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072274911 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064155606 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.084142473 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070228631 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06631915 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088633599 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073345378 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092742555 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071238258 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069642816 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08616499 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078629043 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093002033 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072997404 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066259146 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091096091 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070437081 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089634386 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070574491 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069158203 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088536589 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072849684 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088693357 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068599907 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075672988 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.09012019 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070485986 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087964009 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069460874 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068884405 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082928075 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069602466 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070432141 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091838373 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072227595 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086615208 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079938049 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06598708 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087008933 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072747421 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086461879 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073137658 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064239155 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087828731 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070082141 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087152956 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06433001 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068448882 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084340639 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071346406 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067588263 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082549554 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079968521 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096539225 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07180464 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086905115 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067607147 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064496479 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082405317 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068453061 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069484786 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089411482 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079375464 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086286593 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068143401 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064105465 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086970657 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071576864 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089997796 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066410539 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064101589 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085910444 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071652075 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073791723 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085537077 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068928959 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090567932 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071061469 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066960309 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090727428 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065879245 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090794803 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082593293 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087732131 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069112141 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075679017 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095321128 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069885439 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082181519 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.0698531 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071386772 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08757849 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069494788 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088085568 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085484579 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071524455 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086364112 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067982807 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089867614 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068668803 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.0770057 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088478622 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070313926 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091542689 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071442035 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096516757 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071880164 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076438393 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090250804 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07232141 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085832366 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069687684 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06645193 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085829478 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070218169 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087748673 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073945109 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076247564 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086575091 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079733151 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097468925 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071053716 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083805593 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068998826 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068217367 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082484501 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069588078 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067519236 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084994949 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06721643 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066909518 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088563141 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075051119 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087627879 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070326546 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068111516 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081939139 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071415522 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089184403 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070011532 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065908244 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087994004 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070317006 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073032367 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091239462 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066664442 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088632292 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071257319 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06952717 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083081345 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076341372 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085695824 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071762162 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069142766 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087245789 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070675146 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072738243 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092940788 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070727066 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089370248 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.079036375 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09010987 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066568889 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066317213 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093302803 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067699622 seconds)
  done (took 47.133552153 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109991333 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084100305 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064296454 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083375839 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077661226 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084454052 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064637101 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066374646 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083754027 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067625069 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063986614 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082840608 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073619827 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106792711 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095413653 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069505065 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082482117 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065720078 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06444777 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083788585 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073750178 seconds)
  done (took 2.458365962 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.08824123 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.103628739 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079601446 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101969553 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073156537 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099920933 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09810662 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080720727 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102043851 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076347093 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.101175178 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098670506 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076747635 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094082736 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076225035 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095826397 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082728571 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093064176 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.080487677 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099018516 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077473986 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099385698 seconds)
  done (took 2.788549621 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068618275 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067885192 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088111113 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064398079 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068251792 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082719021 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073122696 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065850893 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.091296558 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.075556206 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085497825 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067971531 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070134273 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.08563162 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06876277 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066015364 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.134585151 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.091509046 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06852188 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088653914 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064336375 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071076107 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.083511684 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065250067 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067393196 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091559025 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069701259 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085094055 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068499275 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067256631 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086708808 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066568368 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070293691 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08800107 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067783744 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067009021 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08743198 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068704685 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082836516 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066598837 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069280928 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.083805056 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06902463 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069408232 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085617785 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066524589 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068983 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087693689 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064231954 seconds)
  done (took 4.534432138 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087819332 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.143882691 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090436254 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105403822 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.104102901 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096093314 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07284364 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124853281 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067265344 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086828561 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.086496522 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.1042882 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068433665 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093043986 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073076005 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087961101 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070991662 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085877605 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072598066 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086646752 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073049708 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093548087 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.084649184 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.101147926 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072995363 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086619608 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06887154 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.091645352 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.082370429 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.091887432 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074529448 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093067142 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08452193 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093897269 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068617025 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091103784 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085602311 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088278833 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071797918 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.085148308 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071105295 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091695924 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07607201 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104982565 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.07008334 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.092337129 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069622266 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065004568 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100819855 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089662695 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077891665 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.103778916 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073632833 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08798019 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074334202 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.103142315 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069543061 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085624613 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072387582 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099854524 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067196297 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090970331 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083660418 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089666757 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.077002948 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101801683 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074164713 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091838013 seconds)
  done (took 6.784224994 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078154911 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094148132 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084694412 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103885655 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07530047 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.096488143 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093695056 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075498207 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09450375 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081307283 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094702436 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116582327 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071391635 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077734486 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.094622215 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094346938 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075775768 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093765823 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075935113 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09398939 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075402669 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.103490196 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075736934 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103668168 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124429892 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071105127 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094186592 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075500432 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103074762 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074559853 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107363498 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09402636 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075840306 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103112183 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.106807922 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075749751 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086446259 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07521226 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.094619904 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075766111 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089690046 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084937913 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093687668 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.0717505 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094952168 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075887127 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103473558 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.107059636 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078564896 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09957257 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07602454 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10353842 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093469214 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076146086 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102635916 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.109466825 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103199828 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102901931 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075811181 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102890025 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101982277 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.091655941 seconds)
  done (took 6.421319003 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090674906 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097539617 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079812572 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084471734 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067774349 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092223307 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067441039 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066524023 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097548327 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077328915 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099841022 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091861823 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077256624 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099281415 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073886665 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095166917 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072732971 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092663748 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077112423 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091777373 seconds)
  done (took 2.517705098 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078481744 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106523024 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.07018541 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074976201 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091320941 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074707965 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090705762 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072326416 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088965368 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072033108 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098643818 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07997782 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069075546 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09518003 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098359841 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075967806 seconds)
  done (took 2.163006201 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081580641 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.099358039 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08331754 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089007833 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067681549 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064721094 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089144687 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065453368 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084807663 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083855251 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089229386 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071630007 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068688057 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087486956 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066442614 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091925942 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066081479 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066593808 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087694382 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.08369654 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.0999498 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067881573 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088962873 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.071615104 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068578266 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095650917 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068351472 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.086582236 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067917988 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.088606509 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07002409 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.095796971 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066552075 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067907061 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.08698098 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06687377 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.088383629 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069777562 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071994207 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.088835563 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067788509 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.088259847 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069831561 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06992026 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084869714 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070112792 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.08419129 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07567705 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06681863 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089176576 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069544677 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090305685 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070051631 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099187931 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.07320274 seconds)
  done (took 5.162563066 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083170725 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071713375 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084647692 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068109914 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091095289 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071727393 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072728834 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089883782 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07131837 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085917794 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071696806 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071316696 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090241397 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073688448 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090214634 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073350555 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064684865 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090502958 seconds)
  done (took 2.246370408 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07505784 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069112185 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09573332 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069173961 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088033914 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071609074 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065533627 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086936622 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068065467 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069113832 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08832856 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072013774 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087200407 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071740238 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069725734 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089126878 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071939541 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067430718 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08895045 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065528845 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091457935 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069100732 seconds)
  done (took 2.518999395 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074936906 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095846884 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.167585913 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.1110753 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.085388703 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.102152968 seconds)
  done (took 1.470285873 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093572674 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102697079 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070760827 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089698726 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098635926 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07110394 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091752355 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070967889 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100912517 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103996903 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071921704 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098628449 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079733341 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103681693 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095844802 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077431956 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090590691 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07283692 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069607248 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110107065 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090375589 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08050125 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091310418 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070927686 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090600523 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07876688 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100435252 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104611749 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071614711 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099850941 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077610844 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090971947 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081116649 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105100146 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072415775 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101131798 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090228316 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090517434 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096429574 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079913372 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092114825 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077107895 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100015363 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095818773 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080246903 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090712106 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077143928 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091355651 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071400189 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116197114 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09556493 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080468343 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096848809 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081052917 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100311988 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116381284 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085210837 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101061088 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096475625 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085755629 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099555173 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09629595 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080593809 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105492403 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077988338 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100273992 seconds)
  done (took 6.753544802 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08551119 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107987541 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071505715 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105454541 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080016664 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092017759 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071042649 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09181796 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070776843 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090354035 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13361497 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07203217 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099259971 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079712446 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091230497 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071210875 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091868904 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099495515 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071485862 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116816076 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071564995 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099255534 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099433279 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080361122 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104058123 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077895134 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091518107 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070465316 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091276265 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071781298 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096702885 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071612015 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099762612 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070077663 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099885785 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091277247 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072485142 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096551383 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071759768 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096629903 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07993318 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109705356 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090950342 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071748335 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105137898 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071515266 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090405674 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071147922 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09129552 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071583568 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105355733 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084911983 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105699841 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098933972 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072803595 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091587252 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072480478 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090951687 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071925369 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096451279 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080378427 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091384927 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117041208 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072996145 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091591107 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080201963 seconds)
  done (took 6.631854816 seconds)
done (took 129.925647454 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201489977 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186380101 seconds)
  done (took 1.220252923 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071377477 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098264914 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100684359 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131051807 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089889309 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103446767 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10187758 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.101712442 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07047142 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089382358 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070646089 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071602177 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.154672901 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071222966 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069538832 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.09211424 seconds)
  done (took 2.326754909 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097232671 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.201576388 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.083400955 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.088790325 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.074340235 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.093034352 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06859404 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07496133 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093798427 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069170736 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072301047 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090813247 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069272169 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069578429 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094043031 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072354384 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.088239893 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072952514 seconds)
  done (took 2.413427509 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097031181 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.112835392 seconds)
  done (took 1.056619695 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.205829399 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.127562909 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209830603 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.427334698 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.249896166 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.283562993 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.180371244 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.180597692 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.158668957 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.176020968 seconds)
  done (took 3.041897656 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102354883 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.164579394 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.2749384 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138754362 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.110929853 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.088495881 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139549751 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.092271414 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.105336 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.104763555 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084824735 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.100864194 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100243659 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.098922735 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077995267 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.10024342 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103806211 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.097547496 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078062113 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098516028 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099777078 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.089061895 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078954879 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096257548 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.082366223 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.10144562 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069633933 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068967155 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.099382916 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077983053 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.096260842 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.087409822 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.102074668 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.133700088 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105786364 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.134800262 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081183874 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094411612 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079038883 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073856234 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.101979646 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100513187 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.087813683 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100020782 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069761317 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080112133 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.08948838 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069571716 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.097572172 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.080767943 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.097767183 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076894929 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.133904601 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.100714974 seconds)
  done (took 6.241345552 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.759083752 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113524273 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098337629 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.831640963 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119181052 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087807805 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.736716098 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120760045 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.212062913 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.730345426 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115624076 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.08109252 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.211343569 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.219586794 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.936333639 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.272344017 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.61742171 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108679684 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111645936 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.138660134 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102747016 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099058357 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115078148 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.413002757 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.077845554 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096197004 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.081063825 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102463978 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143643404 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086192945 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098707331 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.159964956 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.233385327 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186394217 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.078341341 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072344268 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095219786 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.153611769 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.223897572 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196571504 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163403659 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071233233 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.094807882 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.084897644 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115591441 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07157314 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144921353 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.156883341 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.15225722 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099106007 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.080484238 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.104372208 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.083074755 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.168201338 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083808096 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.302592222 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.269380561 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096428072 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083117717 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111312511 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.220069801 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108149794 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207967873 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101029528 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193404455 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073886243 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755096505 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.153459295 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074018321 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099999542 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.082067912 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100656862 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.083229625 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.151307257 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.373712526 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.085055522 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098982047 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074394897 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223496434 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087838442 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072887135 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165771367 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.078660735 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10386442 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.08706016 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108595851 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.151641907 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.218479693 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.084224504 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.103939714 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077978642 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109708308 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.077567722 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.193864304 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.201008364 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.144331953 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.191336866 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106047394 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.146818227 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.150694726 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102391442 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.154765605 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.082589332 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107233051 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083890441 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.198750338 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.1287373 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084593356 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098979729 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.080376034 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.131390408 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109615442 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.081071756 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.152305037 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.459472189 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.151635054 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071998067 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110681577 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.082329126 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.145165151 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101199246 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.218699914 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104899453 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.151670615 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.082300104 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.091907019 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.082985848 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.144929848 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105523582 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.084023725 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106977519 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080786768 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.217025123 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.200448242 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104676982 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203015711 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.16653065 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079813789 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.151951586 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105796652 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149785327 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081259389 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10603049 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075944744 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771972163 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107031903 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.083442715 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098571632 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.148475468 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095005394 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086121208 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10740491 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071650681 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.762558328 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088934067 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104548035 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085581447 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101225513 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.082859691 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102000584 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.078014486 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.143783383 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209849431 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101730378 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.081288981 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.107682907 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.143864155 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.078474292 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106905773 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085912786 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.107984253 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.082615229 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098485455 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086454318 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149480664 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.16605761 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.179879234 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.572377189 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074486843 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.106545625 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.188777421 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09484529 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.247559144 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103914224 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.183583922 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16725416 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083213542 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288165795 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.147559018 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.170578733 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089390705 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15558269 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093114392 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.080843588 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.146166738 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.096394621 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079712489 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.144091021 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10888053 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.084608445 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.943100173 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074848635 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.206295081 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.093033919 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.154926334 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07767881 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104703211 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.278334021 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074929736 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.088611457 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.169123539 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.078071113 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107557181 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.709365688 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085610051 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10696163 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100698324 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.180371971 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.146001693 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.103636337 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.081174596 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103911854 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.144800577 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.189602067 seconds)
  done (took 39.184970381 seconds)
done (took 56.320711494 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.236794782 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.199133178 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.228304889 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152457371 seconds)
  done (took 1.776527498 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.131528995 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.131461799 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.126265162 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068948993 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.133094628 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067937251 seconds)
  done (took 1.528991667 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.319675505 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277470268 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.20403337 seconds)
  done (took 1.66915246 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.269805864 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.22750477 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.451190765 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.282345773 seconds)
  done (took 2.221160837 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.18976261 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114286075 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071284185 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109133756 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.154732334 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.226131841 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125404378 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.157824542 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.103973727 seconds)
  done (took 2.163606396 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.154360135 seconds)
done (took 10.376582049 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.251636381 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114205859 seconds)
    (3/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.275379914 seconds)
    (4/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.079639076 seconds)
    (5/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.184963621 seconds)
    (6/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.150093915 seconds)
    (7/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.209741187 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.154260177 seconds)
    (9/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.235439247 seconds)
    (10/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.154784068 seconds)
    (11/309) benchmarking ("sort", Float64, false)...
    done (took 0.128999124 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.098019815 seconds)
    (13/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.075651653 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.174726854 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.08032856 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.099243578 seconds)
    (17/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.0930887 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.102198515 seconds)
    (19/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.184093934 seconds)
    (20/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.192740945 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.177922421 seconds)
    (22/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.108438531 seconds)
    (23/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.10753871 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.141065924 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.129694154 seconds)
    (26/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.081566083 seconds)
    (27/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.088179186 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.097252774 seconds)
    (29/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.102600082 seconds)
    (30/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.154512731 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.157268481 seconds)
    (32/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.078366938 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.154012256 seconds)
    (34/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.14462803 seconds)
    (35/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.170590837 seconds)
    (36/309) benchmarking ("sort", BigInt, false)...
    done (took 0.212105512 seconds)
    (37/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.101012347 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075971539 seconds)
    (39/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.088048507 seconds)
    (40/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.153498779 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.21110618 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090670563 seconds)
    (43/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.083633194 seconds)
    (44/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.080597584 seconds)
    (45/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.176513468 seconds)
    (46/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.230288725 seconds)
    (47/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.164616327 seconds)
    (48/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.177413664 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.104919018 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.12501539 seconds)
    (51/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.156012033 seconds)
    (52/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080022277 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.093840415 seconds)
    (54/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.185172195 seconds)
    (55/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.149838582 seconds)
    (56/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.075715028 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099902054 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077035526 seconds)
    (59/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078970723 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.117742388 seconds)
    (61/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078667655 seconds)
    (62/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.197355123 seconds)
    (63/309) benchmarking ("sort", Float32, false)...
    done (took 0.153939717 seconds)
    (64/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12288455 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092966852 seconds)
    (66/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078269189 seconds)
    (67/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07877884 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.203811002 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.160645693 seconds)
    (70/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.080635839 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.117531859 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.097983012 seconds)
    (73/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.0974717 seconds)
    (74/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.11546274 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.121668219 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.177858233 seconds)
    (77/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.155934459 seconds)
    (78/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.186076895 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.077358682 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.076003122 seconds)
    (81/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.16758114 seconds)
    (82/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.138667787 seconds)
    (83/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.133870086 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.099718516 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.09203371 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175670892 seconds)
    (87/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.101210279 seconds)
    (88/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07147978 seconds)
    (89/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.097828377 seconds)
    (90/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.142104645 seconds)
    (91/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.093374488 seconds)
    (92/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.115353424 seconds)
    (93/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.115973234 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.099526117 seconds)
    (95/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.103574752 seconds)
    (96/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.137219519 seconds)
    (97/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055426745 seconds)
    (98/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.119370249 seconds)
    (99/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.0747168 seconds)
    (100/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.099285556 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.070279634 seconds)
    (102/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073494054 seconds)
    (103/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.171618258 seconds)
    (104/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.146875679 seconds)
    (105/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095381046 seconds)
    (106/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054012881 seconds)
    (107/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.142730267 seconds)
    (108/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074440122 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.091745038 seconds)
    (110/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.076065544 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.123067578 seconds)
    (112/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08797065 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.136290059 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173275016 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.100488042 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096836175 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.141436275 seconds)
    (118/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081420509 seconds)
    (119/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.124372335 seconds)
    (120/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.146037823 seconds)
    (121/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.094299639 seconds)
    (122/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.142069314 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.1748629 seconds)
    (124/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.296433999 seconds)
    (125/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.095033487 seconds)
    (126/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.061632212 seconds)
    (127/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.194613866 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069749881 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055759443 seconds)
    (130/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.100024991 seconds)
    (131/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.087745753 seconds)
    (132/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.108463797 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.163043646 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077879983 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076636167 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091549263 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.146238861 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116948608 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075241461 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.115979653 seconds)
    (141/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.157936663 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.114152828 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.204659101 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069967636 seconds)
    (145/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.05500212 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.099635231 seconds)
    (147/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072095341 seconds)
    (148/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.1665581 seconds)
    (149/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.055023966 seconds)
    (150/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079352337 seconds)
    (151/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.185286946 seconds)
    (152/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075111789 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.169850675 seconds)
    (154/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.134913537 seconds)
    (155/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069220125 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068846199 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098874979 seconds)
    (158/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055660311 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070456559 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.116238188 seconds)
    (161/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.056707659 seconds)
    (162/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076086342 seconds)
    (163/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098646113 seconds)
    (164/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.055570126 seconds)
    (165/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.158266195 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078155649 seconds)
    (167/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.198200923 seconds)
    (168/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055979279 seconds)
    (169/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070980004 seconds)
    (170/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.078092717 seconds)
    (171/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.083170174 seconds)
    (172/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.101825286 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05576188 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152207317 seconds)
    (175/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.077736266 seconds)
    (176/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.078080485 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.148574446 seconds)
    (178/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.133847214 seconds)
    (179/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.099814029 seconds)
    (180/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054916153 seconds)
    (181/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.116118287 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092300451 seconds)
    (183/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.070162467 seconds)
    (184/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.07810631 seconds)
    (185/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.055708273 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068952094 seconds)
    (187/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.097757854 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.055522435 seconds)
    (189/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.198717718 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.055001794 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076236981 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.190888729 seconds)
    (193/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069930256 seconds)
    (194/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.087667748 seconds)
    (195/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.103751977 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.098764645 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.102572703 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078713791 seconds)
    (199/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.076659978 seconds)
    (200/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083557412 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.116672905 seconds)
    (202/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.166354996 seconds)
    (203/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054506733 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.077832947 seconds)
    (205/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.055888004 seconds)
    (206/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078351491 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.122923443 seconds)
    (208/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.072394831 seconds)
    (209/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074985848 seconds)
    (210/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.099671008 seconds)
    (211/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.184892926 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069321121 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054839968 seconds)
    (214/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.099641331 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.065956637 seconds)
    (216/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070176369 seconds)
    (217/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.114113783 seconds)
    (218/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.056257522 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078461746 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.099626979 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.103455773 seconds)
    (222/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099873867 seconds)
    (223/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.056189104 seconds)
    (224/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.055387931 seconds)
    (225/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.093114453 seconds)
    (226/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.065379015 seconds)
    (227/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.141308983 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.098316274 seconds)
    (229/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055785714 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.056266777 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.078299403 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133649666 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.093364418 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.151325121 seconds)
    (235/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.092939896 seconds)
    (236/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070705036 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067990129 seconds)
    (238/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.079329838 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.07010999 seconds)
    (240/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068053633 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.099603132 seconds)
    (242/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.064350103 seconds)
    (243/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055855336 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.167523555 seconds)
    (245/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07313727 seconds)
    (246/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096664873 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090904626 seconds)
    (248/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.105992187 seconds)
    (249/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.055288427 seconds)
    (250/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.056423779 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.069727321 seconds)
    (252/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.078721912 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070305084 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.117050667 seconds)
    (255/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.056376396 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.195814732 seconds)
    (257/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096697817 seconds)
    (258/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.095464004 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069538779 seconds)
    (260/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06633235 seconds)
    (261/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076821671 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.140574621 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.09400287 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.055306268 seconds)
    (265/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.055124411 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076423821 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.094327007 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078794762 seconds)
    (269/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.165808232 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.0908711 seconds)
    (271/309) benchmarking ("sort", Int8, false)...
    done (took 0.17015086 seconds)
    (272/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054544627 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.078371282 seconds)
    (274/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073182852 seconds)
    (275/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06570236 seconds)
    (276/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.108485303 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.07038174 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.072522724 seconds)
    (279/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.096394468 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070567106 seconds)
    (281/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054662648 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.100760796 seconds)
    (283/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05617195 seconds)
    (284/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070405883 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.091283178 seconds)
    (286/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.073122306 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067678069 seconds)
    (288/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.091297965 seconds)
    (289/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.056670027 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069168556 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.099823769 seconds)
    (292/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075935589 seconds)
    (293/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.064123074 seconds)
    (294/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.078187681 seconds)
    (295/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069439626 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075273971 seconds)
    (297/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079590231 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069198895 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.161539833 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095061223 seconds)
    (301/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.057595491 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.098480811 seconds)
    (303/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.056318751 seconds)
    (304/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.071364141 seconds)
    (305/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.079227438 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069746294 seconds)
    (307/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056348885 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.114808464 seconds)
    (309/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074334443 seconds)
  done (took 34.048873722 seconds)
done (took 34.912661544 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082391545 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093224543 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.10122936 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093558206 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.105224573 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.080221341 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.099618701 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080673903 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104356574 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08325927 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07971258 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.080991153 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079266866 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10116389 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079553849 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094118658 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106198516 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076653579 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.09997451 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06833316 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077284433 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092271406 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.07167327 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05807456 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.103601891 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076683605 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.09835394 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079201141 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069254443 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.092147231 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07370247 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077197733 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091701475 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.084028103 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075987221 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.101055811 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079850305 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.102876723 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072460398 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069813791 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.100397522 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069922598 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075923485 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.099870725 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07623577 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.097720467 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077734207 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081591397 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116936609 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071486355 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.100634335 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080634481 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078594151 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.100003066 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07442224 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103846953 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075284502 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093147388 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.1035873 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072470244 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.102782636 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07816879 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075157534 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.101646741 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079141562 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102642768 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080972984 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075667835 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.102427815 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075305501 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069972061 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.101318849 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072913151 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.09263849 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080393415 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080775821 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.091682669 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075671986 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076387444 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.097500453 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069588301 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072167074 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.094394126 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076336191 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071527738 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.080990087 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074145692 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076124214 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.092077995 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078816572 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.098428158 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076717609 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071854687 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104468964 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06983301 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07484168 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.093014669 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070120874 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071466531 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09708454 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069778337 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071949398 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.101774053 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071604871 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075457902 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.105025329 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06998029 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.098255143 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068709214 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069800192 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.107110876 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080173837 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.092637119 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071843223 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069844352 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.100138373 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069693763 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.070018493 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.092133553 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.07029624 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076407651 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.09260448 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073141636 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077081351 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.106139638 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069666732 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072740452 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095189732 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070558126 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074702032 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.093281621 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070451443 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.09382676 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066361949 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072364772 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.092561492 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077192664 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074922311 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.100949191 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072268447 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078982378 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.097240647 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075823336 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075857936 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092782873 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063030083 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072505454 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09564718 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.072097423 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069945987 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.094830713 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070277133 seconds)
done (took 13.642710696 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070777318 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.166184604 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.109471457 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.124165244 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113776354 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070661699 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080001416 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125805105 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071893812 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125576105 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09207418 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.113770251 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.10498039 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.092715968 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070294723 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.098239967 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071858064 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085374059 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.129646076 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090935848 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.145487605 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.092779223 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.105471982 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.118121214 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.079135582 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.111576058 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071752355 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074356256 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.097142602 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.095493077 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.113776412 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074308185 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070075221 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.115966595 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.088310543 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.102517184 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.071374591 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.099983328 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071170802 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070797519 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.122934699 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.091104725 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.099704413 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075663285 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097143131 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.073424643 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072179727 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.102866529 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08081746 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.074473761 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108162836 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.137588297 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074161816 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.103184324 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069057562 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081013834 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.102815814 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072769047 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.093584727 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.073201839 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069909188 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.096832013 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085285558 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.123219497 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074367777 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103862865 seconds)
  done (took 7.155875571 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087218952 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09673197 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.111930116 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088960396 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.093645203 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071951144 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094132291 seconds)
  done (took 1.573276541 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071702227 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091942008 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117104537 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093932754 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.113283292 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092018765 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104095484 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071676281 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08799237 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.096344789 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091449796 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.133578779 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072493253 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.102185693 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.0952389 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071229799 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119578952 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.07126403 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09782596 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094764391 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073971339 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.11484293 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073438142 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.0949408 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085734327 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071613261 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144185174 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076112287 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096794361 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074509709 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092753982 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.122730305 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109262388 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.083415764 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094378776 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086460337 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085495322 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093708772 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087491102 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099875766 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085624273 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072200709 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.096357577 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069808528 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075750116 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.105572344 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.073076334 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.07179852 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.09848185 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091328427 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.095500822 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085263638 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071873927 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.099070169 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072759631 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100422292 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081430238 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072667709 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.114574011 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07363006 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112198702 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087398967 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084232228 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112034249 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073926258 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108460311 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085244528 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073980104 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097150676 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075101716 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110706353 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069603786 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073361857 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.105262229 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073132867 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094834743 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.118538887 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073142474 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.10498092 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072015406 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071430257 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.096257549 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09464716 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098430435 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071877672 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075667253 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098713046 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069893942 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071201628 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.098745001 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070579504 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073328883 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.098385968 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072091668 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073455553 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111890432 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072140518 seconds)
  done (took 9.616001071 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072701054 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072622491 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09739952 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073486765 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072133734 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096481432 seconds)
  done (took 1.429958999 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096131796 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.098257701 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.086593466 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07760207 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.137582317 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086236921 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.110654706 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079641692 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.114632611 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.084524577 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.110542284 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086923592 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.116665016 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.078140242 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.110111785 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.077673697 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.111199683 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082031266 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.084196373 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102623208 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093855693 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.104036331 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07916097 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.111949866 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075945554 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.101877308 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082552545 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.110517907 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.084348869 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080049241 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.102882759 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075981148 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.101459367 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079955245 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.110674601 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076799085 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101701374 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077059513 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082214242 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.099821037 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087257237 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102983006 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.083553036 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.100374918 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080230031 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.10076647 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076630967 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106882824 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086311886 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076272663 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.100649524 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.077495313 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.099220158 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076373437 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077161073 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104750892 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076023471 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.11133423 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.078285784 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.101153507 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.075094585 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.100075328 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080475908 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075428614 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.110252736 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075897871 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.101145255 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078186722 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102964854 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.078593572 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.101148441 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.075507606 seconds)
  done (took 7.564866157 seconds)
done (took 28.260959121 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.662055535 seconds)
  done (took 1.601248479 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.696195356 seconds)
  done (took 1.637116305 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.583827696 seconds)
  done (took 17.526207866 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.47328716 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.547117845 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.78332794 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158268575 seconds)
  done (took 2.904767292 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.894918296 seconds)
  done (took 1.855803424 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.224854713 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.212096587 seconds)
  done (took 1.384455279 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.734778102 seconds)
  done (took 1.688289721 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.307284223 seconds)
  done (took 2.253849589 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.310623781 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.142123005 seconds)
  done (took 1.412507146 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.53612049 seconds)
  done (took 1.498062616 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.949679983 seconds)
  done (took 7.911843642 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214896673 seconds)
  done (took 1.185608583 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270558267 seconds)
  done (took 1.236281704 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.466380287 seconds)
  done (took 4.423801896 seconds)
done (took 49.463082991 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081277434 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084811832 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108456695 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.0816384 seconds)
  done (took 1.307091275 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083375223 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078879624 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107127111 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077322869 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107430348 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078404864 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079514509 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.108660713 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077729356 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.104131421 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078025686 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077110605 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.106317837 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079682571 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.100249541 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080504683 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.107054333 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078468505 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080967442 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.102863238 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076073358 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.10566829 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.081585683 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076338605 seconds)
  done (took 3.097159406 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081551101 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076160447 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102702075 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075831887 seconds)
  done (took 1.301911096 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082397632 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097475339 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.1205071 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081936571 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.124468436 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.117859465 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.075130505 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074656002 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.10146605 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08221654 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072999994 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.130257904 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.119396436 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082260611 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084200598 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.096131564 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073619082 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.118960183 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082643432 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082575142 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100055073 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081778378 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073073521 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.120856699 seconds)
  done (took 3.242468648 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.082460413 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106532266 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.10883014 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095616699 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.12328279 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070450118 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.107195014 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096720143 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.158178781 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06983344 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.100342921 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070961662 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07772256 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.095173738 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081633607 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.140935059 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117811858 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.098728202 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100813106 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069991279 seconds)
  done (took 2.941051375 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07974274 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07427359 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094957118 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.074123804 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081134613 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.103429809 seconds)
  done (took 1.480085793 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073807722 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071972017 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.096693856 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.07178956 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076143475 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.097005513 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070673782 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071685562 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.097740852 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.07236369 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071393284 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.096076963 seconds)
  done (took 1.932621278 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.467088208 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073746653 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.098024344 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.07121754 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.076153718 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096528139 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085434506 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072577986 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.122070212 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071321886 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.097104674 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073751281 seconds)
  done (took 2.371013894 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216848223 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106302023 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242999956 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16975077 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139775995 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151552392 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13324877 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118872969 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203885381 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138050589 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186582625 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175837552 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13335068 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170709954 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119140907 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.10475125 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204624911 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198920866 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136087609 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184817367 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18036392 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146451521 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159797302 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132250525 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094199698 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150022871 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.102510046 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086264715 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214158574 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158419664 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168458233 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144780967 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12754202 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194405625 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2300479 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175066062 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167355994 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117338158 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.131015728 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.145066979 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245156413 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093526653 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213834261 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114771305 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112586746 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172712381 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148404035 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.155004325 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.131118738 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093120583 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200256872 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191269874 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172779622 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119933175 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14064351 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140354761 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146135145 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106702995 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23199554 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178237089 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159288952 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.100448355 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100951185 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169215834 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161600038 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14727197 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.159677857 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126644824 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17006651 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167474354 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144813047 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169760274 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.188784822 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093526706 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149896467 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154352295 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14938957 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233273271 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161562679 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076962651 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147747115 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129928049 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086448703 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.176484362 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079203083 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220384836 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105068102 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.121408225 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116761948 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13961168 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141078452 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175407613 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19837947 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101736587 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.097390425 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109420865 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.136706341 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167624825 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120946972 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113638579 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140407561 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.11047379 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156687991 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079133537 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155725566 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.10422299 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156427922 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162627337 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081684053 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140195228 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133523871 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102854807 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156151986 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204515553 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094905663 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114064357 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186046581 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155283871 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.12958904 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156695335 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180382182 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102857318 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131058919 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177741378 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223892063 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094815338 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209611961 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109706663 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116213209 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.120337371 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158705393 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10997593 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.141965543 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114103882 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.16115959 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189314279 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079908684 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118889534 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166582689 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114157937 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085757451 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140624851 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128137109 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.092973038 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127304229 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131230776 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16080424 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158527966 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107427802 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146277046 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1316554 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229292091 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121237393 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103716792 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129205459 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075815365 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172445942 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201774415 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085489992 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181808214 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.151428828 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137310357 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150921207 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088924515 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156511195 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110773449 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075506554 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172486407 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145898175 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142283046 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.174228614 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13509948 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161373382 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.161008378 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152634134 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154137907 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.144208345 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11306469 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.118991899 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138802034 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145069037 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078933976 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123790612 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.087986797 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137567756 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123362354 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088305584 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176729777 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148265772 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129419606 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139962251 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103338269 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159561938 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.109201095 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156678726 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.157391624 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127541953 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.177564546 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172657182 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165543832 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123410782 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185676639 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075152188 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106466348 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.122537621 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124430261 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114712359 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089884279 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148206074 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160361559 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161710175 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155058995 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143641502 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154708874 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171518147 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076576758 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.149665566 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163860057 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155227544 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.164647307 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09690063 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.131459589 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155988488 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13705041 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207137476 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147190182 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156412114 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216010685 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.103429238 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113296103 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104911939 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163414024 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133618924 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156899272 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128894065 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120023266 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113584239 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.113963596 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139759797 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162171433 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141669084 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169401862 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.13080789 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16273002 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081753753 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145180854 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140245145 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144979185 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06853295 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154612089 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207464288 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101347974 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149361192 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170316401 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113829321 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.156276565 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191431121 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17297076 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119449907 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139230161 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112540646 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144555776 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153126321 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158448477 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140136294 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169433632 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110619967 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.116938987 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120329754 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103334641 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132177265 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092309905 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128492252 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.15448954 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.120813165 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167219317 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140810333 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110763937 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149852959 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.131262381 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.098081153 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129938312 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195180509 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155297747 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217070792 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129673338 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.158109531 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184124245 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080168644 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113070009 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.08752701 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15735571 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116636103 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168353485 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.101576316 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138080459 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159957585 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171566336 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120642361 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073635725 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137373894 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153249882 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144113854 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104721191 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138754977 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182692539 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127414191 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085947228 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150891166 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13755437 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100979093 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202022422 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.067674709 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128767149 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082462772 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087233728 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144520762 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213803162 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.089692912 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.163048215 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149458246 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147711315 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143472181 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102841632 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129535607 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144890764 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180221642 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164997225 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086210328 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136960811 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1553989 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173424141 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140471159 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.121149941 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182498915 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172387792 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.176770174 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.123110528 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147059602 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146833011 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109939533 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189464675 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089402201 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183748968 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115466126 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176371447 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132775727 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123201128 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153993954 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.101200716 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138801277 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165897434 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152876687 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115424091 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087359056 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147978378 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159350758 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135659953 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.080413833 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158079042 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.106026421 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170270569 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237267277 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088437508 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134710591 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100228333 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116204721 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137013406 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138642002 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093539084 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.143719952 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184921849 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.115070366 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170339914 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181272502 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14807876 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153738108 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1247842 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.673193502 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.0835533 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172663539 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135437085 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183126327 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131303234 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15151231 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109969661 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147534413 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203208112 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11191658 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.2112364 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170489483 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.183610342 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08595965 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138624445 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141992153 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.096726361 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132290663 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147685828 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139181743 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.104912686 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.182166173 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121305501 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.114654619 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093621631 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203503107 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107047458 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164238805 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158642982 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120074546 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15184042 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163846954 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086111307 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.18613995 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186448373 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122641817 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104068777 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.114538369 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13474797 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209770892 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.105074713 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178079201 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1547974 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136837249 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11907637 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.127026385 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168151531 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137054687 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155820336 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126252394 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.138895339 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135361884 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090117626 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.110129123 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106743209 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146282814 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.12888043 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138674491 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.118311775 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169348292 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077361918 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12581953 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137152876 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168515812 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192769499 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.123585343 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087504327 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141903215 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131565196 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.154365797 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156477275 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08874685 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116670594 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.117087648 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.116809019 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.098695965 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134223688 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134043075 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144732317 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184817894 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.089666188 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.261029673 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119563971 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106837477 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.10154949 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.085681464 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130978203 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125406031 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108728573 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13092802 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238136416 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099530863 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.112532628 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100485001 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.107055628 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088786706 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145821579 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14547882 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157146657 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124532348 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067683189 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137811141 seconds)
  done (took 68.931350943 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.13914229 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.110553134 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.12497831 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.180412251 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.15350336 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247369445 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.188067322 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.230871611 seconds)
  done (took 2.414935727 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074728288 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.123920729 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10623102 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.114779109 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.0721995 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.098874893 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.308649986 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111420456 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072318584 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.093574469 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.15217701 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.075022751 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.48686729 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070851408 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.099672479 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.092115441 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072838993 seconds)
  done (took 3.262365017 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.433791143 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.667333302 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.475587584 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078122743 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.976326043 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.114980954 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.581798275 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.172262361 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.096856279 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.448996497 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.731941517 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.138291174 seconds)
  done (took 17.959991198 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080385255 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.074276488 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.114803667 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.088788588 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07703876 seconds)
  done (took 1.48676342 seconds)
done (took 112.675886526 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085002666 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.370684922 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.058824331 seconds)
  done (took 1.509044572 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088318102 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089271344 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.117838998 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087416508 seconds)
  done (took 1.438318138 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07881659 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08011686 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.116503903 seconds)
  done (took 1.326881446 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.302004565 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.14083837 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.119760508 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088188265 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082153625 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.109891406 seconds)
  done (took 1.334720016 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078544962 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080329434 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105170628 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.082622089 seconds)
  done (took 1.396986854 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080342413 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05752839 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059442901 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087738043 seconds)
  done (took 1.340879115 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094322381 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083503921 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.11167079 seconds)
  done (took 1.340560912 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110909804 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.117678523 seconds)
  done (took 1.283623192 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.0857113 seconds)
  done (took 1.138111619 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098501135 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.148293877 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.169642931 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.143758008 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.179223789 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.144158848 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.092929172 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.122207398 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.110016616 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.096001232 seconds)
  done (took 2.361867629 seconds)
done (took 16.161336943 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.0835749 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.395224938 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.366906433 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123593136 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673510074 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361112684 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.048882739 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09818215 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141936493 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072713539 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117160316 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652557042 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.998827346 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.321986053 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.985315329 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32264209 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656635637 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100301481 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072803163 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072696129 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.031120234 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072235467 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100207213 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073857821 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.658480307 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.403469675 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072903143 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.348615989 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073069134 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07472896 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.387070095 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073045504 seconds)
  done (took 16.082190183 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076043241 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.150435477 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080004114 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08877751 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103334656 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074638025 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104107205 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.074374217 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154608186 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074339622 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089780899 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.100354577 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077495396 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.100902794 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09288856 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073408727 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102113618 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073390307 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100483933 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075188222 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091810656 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100139839 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074523184 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07301133 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101111876 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08559054 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10105613 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073627473 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073292364 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102448284 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076573682 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073963768 seconds)
  done (took 3.955307477 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12216569 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.160171574 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079635837 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135358227 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120246355 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102959871 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.177982445 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09988777 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158167778 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073761185 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118036365 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07385081 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.13398326 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074542366 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092610328 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100875806 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075108418 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100748634 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074160092 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074073361 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120004545 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073698377 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100960227 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07477907 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073993408 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.115100789 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073910792 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100129034 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074489654 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075254964 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103835589 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075029118 seconds)
  done (took 4.27242842 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078134936 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080486233 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.116182715 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089579356 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074689629 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.104902241 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077878816 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.102586228 seconds)
  done (took 1.788445433 seconds)
done (took 27.148695528 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084373231 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.075264644 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106165027 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087417487 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.078186387 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.110726555 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072364523 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.106537432 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080760927 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.078389589 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.109047909 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.072888687 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.076459008 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.100315905 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080790999 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.072851193 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.111574452 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077212843 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.111425073 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084270583 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.075489435 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.108788191 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07943083 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.111277116 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084679792 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083321896 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.11566607 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.079479997 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.102529818 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076267009 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080919725 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116872069 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07475464 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.111750212 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.074305274 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.07282292 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.100587675 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073628413 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084245281 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.107992319 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.076075969 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.10811706 seconds)
  done (took 4.82971176 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092907587 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096394728 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.118291129 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067658883 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.072624211 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.095026718 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094023698 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.09380228 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.068053851 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092816291 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.088795414 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063994114 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064530588 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05868499 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.090895353 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.062483526 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065650425 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061625393 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.090417057 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063884142 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.065230594 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.087260869 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.065758496 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065127666 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.061219032 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.094497727 seconds)
  done (took 3.10457474 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080989669 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088122106 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.121718782 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130979065 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.140306213 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081555 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.112022795 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092368625 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.11904096 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.073998406 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076854671 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.129966587 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092413816 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.108092371 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.076883012 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087830291 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.116558295 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075426408 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.079686543 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122963156 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089600673 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.111506425 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094616025 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085255959 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.101235232 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075561776 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.106479698 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087457997 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.080613667 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.111290253 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.079312443 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.104699168 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075547377 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.085124355 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.106750195 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074841759 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.121341178 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084157082 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082431771 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.103360342 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077215656 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.076164538 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.122300952 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.119202581 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.101727621 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.080761989 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.10877011 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083945639 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.074432321 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119962457 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083484709 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.073657515 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.105147588 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.07529998 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.102695345 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089629293 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075520044 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.113316015 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081688653 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076851163 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.114283339 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.078312156 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.117565077 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.074916061 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080953191 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.10398975 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074096485 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072231549 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.123987097 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078416691 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.143586967 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.074401081 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.102386851 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.083508851 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080468985 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107943834 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.073654911 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.117477709 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08377864 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076953234 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.111907984 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076814625 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076726929 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120370858 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075938449 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.102596794 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074885315 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.079676354 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.104729218 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.075298812 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087256172 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.101785478 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076466201 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11488978 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.074325428 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074518255 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.108092379 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.078454557 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072592035 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.115065084 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.078712481 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.102487753 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.083169802 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.0744243 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.105084026 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083519041 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.106838683 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.073826833 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076667539 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.107849467 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.07407152 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07637563 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.104674803 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.075662274 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.082758392 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.108197528 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077457055 seconds)
  done (took 11.936880389 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.205851349 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.196412149 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07603849 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.190083562 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.084793218 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114341673 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.190510688 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104830902 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.103095452 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074441175 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07434457 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.142836145 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10686328 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.146248482 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.112160361 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073904971 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091789918 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.144238105 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.193351295 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.18600318 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093029432 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.111984235 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075593223 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07417983 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.105352521 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.084020701 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.118160106 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.086550369 seconds)
  done (took 4.442299445 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087862693 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.135254404 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079489098 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094731362 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.12683371 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073402055 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.106962736 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075037241 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086605164 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.114052292 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073327166 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.108960282 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080489017 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.111476036 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074285764 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.081975192 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.113238082 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074809025 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.104797648 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07830237 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079075134 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.116128141 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.078151117 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.10162561 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.080514191 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.07213948 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.100832475 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.09305025 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.102091309 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095680294 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.100808148 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.081083359 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083273052 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.103775908 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073199692 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.075436164 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.105671055 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.075891522 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075125092 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.102551396 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072604837 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063253986 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.101747511 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.086910641 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.108319127 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.066027863 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.080353192 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.108360041 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.079065604 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071092719 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.105233173 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075987332 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.105843373 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081691229 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.078768966 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.108165064 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.077100518 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.071158702 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.109418268 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.076551683 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069820093 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.101599759 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078329752 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072865753 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.111679229 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078420023 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.101125664 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.076100852 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.077470492 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.108990654 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.076305536 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076659363 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.100266478 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07610512 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078787947 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.107263735 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.076860421 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072333073 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.101969645 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074287722 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.060801669 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.103839368 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059917345 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076241744 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.100562215 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.072123244 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.075654992 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.108350549 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.087366534 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.103934631 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.08025074 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.103075083 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072956225 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076934511 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.097648564 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07771463 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087781642 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.119744148 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073266342 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.101552446 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.087650513 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078618038 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.1023485 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.062760605 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.081014745 seconds)
  done (took 10.360641661 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096904232 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098497526 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.104434892 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087643679 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.129377164 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.097327161 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.110718835 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080593642 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07464265 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.120659911 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074190654 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082176719 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.10728665 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.0824257 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125602214 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082433248 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075547583 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.1126523 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.081565416 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.138018444 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087871548 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.089956723 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.113439805 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.074150969 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.107676253 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.086071129 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.098855124 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.114544309 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.083192492 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.116954597 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.084047414 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.098409119 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.119225249 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.078364556 seconds)
  done (took 4.407441112 seconds)
done (took 40.133739196 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.132998448 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.378963545 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.136176588 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.054556878 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.148360284 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.15322941 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.145664348 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.130833213 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.696491281 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.136823903 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.388824459 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.824346344 seconds)
done (took 59.403235546 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.230785502 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.273644533 seconds)
    (2/2) benchmarking "String"...
    done (took 1.403078151 seconds)
  done (took 3.76536941 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.494345378 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.138137573 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.412964505 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.130167719 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.147171447 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.548802388 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.777793371 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.515451174 seconds)
  done (took 27.74460778 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.135161835 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.525335727 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.767705542 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.784199444 seconds)
  done (took 18.287133747 seconds)
done (took 59.596873031 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.145016011 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.197379775 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.162303232 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.116691183 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.24226386 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.152489757 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.316030675 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.260206391 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.134916707 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.118457609 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.151885203 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.138666289 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.137999251 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.428665549 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.130954177 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.141966172 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.224870227 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.863270699 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.538920001 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.131990099 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.162192348 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.193664978 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.140813902 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.135761032 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.146345316 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.143826751 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.132110135 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.133098867 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.652034682 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.134751167 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.134519795 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.639494861 seconds)
  done (took 188.559150618 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.131916794 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.147982777 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.251531165 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.169955137 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.476640365 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.329968345 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.26648725 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.662845459 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.150607543 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.155974904 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.417432645 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.134332057 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.475282654 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.120826327 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.142520454 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.236190944 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.448935084 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.471692052 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.151527135 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.410339372 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.149620297 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.408830186 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.310876687 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.36298785 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.154495733 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.210415845 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.163597968 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.154317527 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.32738385 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.382183439 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.175339524 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.173968474 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.754915914 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.994476594 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.138053656 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.156339337 seconds)
  done (took 147.852554181 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.41083475 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.133085128 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.13405409 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.13299079 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.165789848 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.134046928 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.705009615 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.707153642 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.658399549 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.620564951 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197400088 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.478124496 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.137481038 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228724724 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.146588092 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.136380822 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.149562345 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.161494516 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.138554823 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.135375182 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.708275886 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.150247397 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.135763346 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.141713996 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.135061786 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.168084656 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.53045923 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.20347975 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.13933931 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.168373466 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.456538794 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.182337101 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.135807397 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.521660068 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.376033432 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24916692 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.137698284 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.168544578 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.135838394 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.408169793 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.135455695 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.136548986 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.139026736 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.797296518 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.138860222 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.707807622 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.137996925 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.124158851 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.139494863 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.135532108 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.886437494 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.141303391 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.867049268 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.138351387 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.135682195 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.138172128 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.13557249 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.135411617 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.168707399 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.729728937 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.238382441 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.13680594 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.139505826 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.16876596 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.136091573 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.535376681 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.1387657 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.137510131 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.193109707 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.358743447 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.393442032 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.713497783 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.139551715 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.231578628 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.25576543 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.13646532 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.135975839 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.136528835 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.136006833 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.245065871 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.137708126 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.570554153 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.142582178 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.139102202 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196825053 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.231867444 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.138159888 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.522942985 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.139832752 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.136852461 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.970706431 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234581325 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.136441589 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.13720205 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.137132938 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.574406006 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.712018707 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.447612544 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.141732704 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.25095136 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.142315069 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.138251872 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.5834045 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.714321747 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.835707452 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.142796182 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.246658978 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.142410219 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.139418928 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.138463702 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.167200939 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.13802326 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.197150292 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.139051533 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.536453027 seconds)
  done (took 339.914238292 seconds)
done (took 678.8110597 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.83441255 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.782680855 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.911678162 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.794316174 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.775733294 seconds)
  done (took 10.180428507 seconds)
done (took 11.261116474 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.326707525 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.326524877 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.199563935 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.327686527 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.167904358 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.344006812 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.306496697 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.159817122 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.241950023 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.216329996 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.240399544 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.188301886 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.166832967 seconds)
  done (took 17.294871104 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.460173479 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.452591074 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.203957215 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.456353787 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.180228562 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.449947201 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.339533772 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.35395761 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.34578974 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.156744893 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.155622852 seconds)
  done (took 15.638570864 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.45539952 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.454322732 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.209043717 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.462926148 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.183242967 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.463613337 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.346477502 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.353223807 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.34513083 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.157245532 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.15602761 seconds)
  done (took 15.670641542 seconds)
done (took 49.685458122 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.150602782 seconds)
  done (took 2.235033321 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.185732505 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.351886042 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.166825897 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.156893403 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.150388223 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.154357471 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.157159578 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.150833358 seconds)
  done (took 10.559640291 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.149475143 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.149641404 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.150194848 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.146154252 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.15064544 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.147730495 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.147852983 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.147808878 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.150670189 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.150667172 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.149914504 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.146879596 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.147069066 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.150483245 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.147229808 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.147393768 seconds)
  done (took 19.463869323 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.14981109 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.147935694 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.148759734 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.148637032 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.148919089 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.148383056 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.149602492 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.148129667 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.148882984 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.14823029 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.149784257 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.1476676 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.148329912 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.148023343 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.149519044 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.150367215 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.148454141 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.148926193 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.153378313 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.149296345 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.14998139 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.148679488 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.14948982 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.150170907 seconds)
  done (took 28.667062646 seconds)
done (took 62.00861855 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.281708442 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.856888257 seconds)
  done (took 9.224504744 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.151152518 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.151753598 seconds)
  done (took 3.38999289 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.151671876 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.152092497 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.151676775 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.152392886 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.152805698 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.150753618 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.152061621 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.152206297 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.152136671 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.151842043 seconds)
  done (took 12.60610818 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.152285145 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.151960769 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.149132077 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.15196945 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.152871661 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.149054181 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.152595523 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.15338589 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.152686261 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.151313641 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.153135334 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.15054581 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.153797579 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.151857725 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.153763579 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.149912522 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.150453744 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.150555685 seconds)
  done (took 21.818175985 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.152898733 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.153107704 seconds)
  done (took 3.393642739 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.151411224 seconds)
    (2/7) benchmarking "second"...
    done (took 1.151832108 seconds)
    (3/7) benchmarking "month"...
    done (took 1.15138832 seconds)
    (4/7) benchmarking "year"...
    done (took 1.151013558 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.151651136 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.151885411 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.151031424 seconds)
  done (took 9.148177483 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.154885802 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.339224217 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.422016387 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.768800217 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.155693587 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.157453975 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.996729275 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.158594723 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.15992897 seconds)
  done (took 13.400584585 seconds)
done (took 74.065467223 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.159923803 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.148508676 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.019527011 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.168590549 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.164589978 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.447888295 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.191659198 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.270517189 seconds)
done (took 36.659379686 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.150570841 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.907754146 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.926492808 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.151351523 seconds)
  done (took 11.074122508 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.140068256 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.090773311 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.138147533 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.191569035 seconds)
  done (took 17.6510968 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.190208718 seconds)
    (2/2) benchmarking "read"...
    done (took 1.48336032 seconds)
  done (took 4.76359851 seconds)
done (took 40.726287607 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.157579303 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.15331316 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.156759607 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.152933354 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.155985968 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.153736076 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.154010816 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.156720643 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.156565884 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.155319412 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.155733997 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.155590425 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.156260704 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.152956721 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.153634813 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.155065882 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.153459655 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.153829915 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.153148979 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.15409396 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.156871531 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.156881293 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.154050867 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.152722892 seconds)
  done (took 28.807941315 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.156682266 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.155106896 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.155447705 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.155960372 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.153436664 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.155988587 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.156135091 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.154326693 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.157142853 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.15583726 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.152933695 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.154611283 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.15670406 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.153612595 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.156631756 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.154498612 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.158049974 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.155295893 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.157085793 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.154334129 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.156903706 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.153985487 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.154501748 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.157235957 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.156438617 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.154962844 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.157409298 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.156274656 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.15639965 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.154455418 seconds)
  done (took 35.759665309 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.162671856 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.165225657 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.157907909 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.157440455 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.158015184 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.157947925 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.156773855 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.157322657 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.159107061 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.158357199 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.158144235 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.157682296 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.157364779 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.157393377 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.15811302 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.158025327 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.160074045 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.157630359 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.157842375 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.158472935 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.158275167 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.158675976 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.157937493 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.158721702 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.158502261 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.159573412 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.158492251 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.159156807 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.159066595 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.158762844 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.160210909 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.159626956 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.159126735 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.159762185 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.159826046 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.159782104 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.163289407 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.167362342 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.158870773 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.159406153 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.160045872 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.159932609 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.159847244 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.159379218 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.159936461 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.159539721 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.159755858 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.159798615 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.160229765 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.16030855 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.160285328 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.160183091 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.160123582 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.160098585 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.160507343 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.160621284 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.161036661 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.160104229 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.161494843 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.161208429 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.160394784 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.161408967 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.161338412 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.160940474 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.161017004 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.161072481 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.161088514 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.160887956 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.162181663 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.161704551 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.160834491 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.160988925 seconds)
  done (took 84.598563025 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.161044798 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.158581624 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.158613471 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.158693926 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.159684387 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.160839655 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.159241178 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.162645434 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.159328935 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.162134129 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.161479444 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.161678469 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.158853848 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.162266656 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.16107522 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.159473594 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.162126355 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.159268262 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.162043228 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.162014899 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.160954181 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.159152696 seconds)
  done (took 26.627358225 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.162415646 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.162224744 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.161340844 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.161893425 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.159916046 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.16237283 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.163076414 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.161925346 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.168108127 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.160667847 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.159635036 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.162501257 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.15992814 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.161137457 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.160380132 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.160703088 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.162793774 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.160276582 seconds)
  done (took 22.007835925 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.161504885 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.161315812 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.163619019 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.160482155 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.162289549 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.163938287 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.160542342 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.165338324 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.162700992 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.161179449 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.164516511 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.163028981 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.164430456 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.160448907 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.163098023 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.161174688 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.164666698 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.161797825 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.163673171 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.16169383 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.16130895 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.164603802 seconds)
  done (took 26.675218653 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.16374379 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.16427595 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.160640021 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.161760372 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.161044628 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.163987214 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.165092758 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.161000893 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.164225361 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.16479094 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.161186899 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.16476991 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.162366004 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.162555541 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.161515132 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.162687541 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.164803997 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.16288445 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.164152965 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.161606515 seconds)
  done (took 24.356483289 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.165316974 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.165727848 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.16530945 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.165501649 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.166106755 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.166114179 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.166801607 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.165869717 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.165347301 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.166756732 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.166620242 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.166813064 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.165544974 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.168262645 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.166754016 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.166508498 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.167124644 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.166738432 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.166908189 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.167129976 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.167574991 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.166863868 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.168086978 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.167237538 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.167062371 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.167624647 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.166246603 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.168434987 seconds)
  done (took 33.766666594 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.167331273 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.166592132 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.164569531 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.164644187 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.165061039 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.164116063 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.166600773 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.165545062 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.167101194 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.164906732 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.167606492 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.166581224 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.167493201 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.168063417 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.167843421 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.167776249 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.165862767 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.164776067 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.165677899 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.16620426 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.168606569 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.16754979 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.167978756 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.165193437 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.165877704 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.168591069 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.166822422 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.165813368 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.168001695 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.165897191 seconds)
  done (took 36.09556606 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.187452607 seconds)
    (2/2) benchmarking "in"...
    done (took 1.187686633 seconds)
  done (took 3.476696023 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.166588904 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.169317015 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.168808111 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.166506825 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.166301227 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.16869925 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.168408597 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.166230809 seconds)
  done (took 10.443129626 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.168233892 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.169962303 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.169096854 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.168338448 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.168308883 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.168757453 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.175551287 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.186218384 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.169176879 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.169191856 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.175262234 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.174566595 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.171137503 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.168852781 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.168158695 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.170785631 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.169673886 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.169377988 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.170200076 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.170170809 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.170057197 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.171174579 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.17170372 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.169047769 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.170645705 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.179285422 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.174457067 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.171201817 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.169852936 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.172737802 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.169846052 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.167762053 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.17031567 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.170240532 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.170168424 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.171087733 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.177892235 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.186917176 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.176443033 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.171982434 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.170831062 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.168815898 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.171535718 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.171386063 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.171842786 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.171713861 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.1714191 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.168404414 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.170237042 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.173881034 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.176767174 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.169857527 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.169832014 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.174840235 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.172938636 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.179122147 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.189166576 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.174007581 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.179511672 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.180938599 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.184377424 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.179370673 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.172813515 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.172592712 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.18176331 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.195901832 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.178969714 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.188775893 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.169828195 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.171783299 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.179135436 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.185633212 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.1811807 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.173997103 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.173120932 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.172656129 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.172679427 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.174136498 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.180266336 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.192481466 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.173081786 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.172483147 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.182577422 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.1943745 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.171902527 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.173300357 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.173595953 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.172780519 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.174033837 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.183841048 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.190301686 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.17432223 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.171919349 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.172904727 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.174440425 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.173619907 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.171787491 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.173442187 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.172132847 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.17482291 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.173844174 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.17718577 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.182934516 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.17476075 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.173993121 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.180867909 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.175944289 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.173845091 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.179905471 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.175363007 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.175389539 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.175063122 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.179671516 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.173215803 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.177844247 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.182210047 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.175286632 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.175729683 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.175126603 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.174891854 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.185348009 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.20038961 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.175195857 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.176252427 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.178572531 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.186719811 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.175586608 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.177928482 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.176135104 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.172092388 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.173508842 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.177108527 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.176468008 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.175124213 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.176748298 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.175374044 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.174721569 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.176123188 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.176509937 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.17622947 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.17649713 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.175743209 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.176857422 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.17650623 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.177478472 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.175710665 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.182953534 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.177194318 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.17689114 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.175751298 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.173854528 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.17651668 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.176438363 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.177319573 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.176263247 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.176550946 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.176239135 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.1776841 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.177221227 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.177028273 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.176726641 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.176662085 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.180280073 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.176724432 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.180106635 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.176378338 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.175008846 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.177640494 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.178532112 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.175146909 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.177690106 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.174882799 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.180290377 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.185066275 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.178927921 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.176887457 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.179699711 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.17807932 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.177454383 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.177876417 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.18027255 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.185196891 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.178232462 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.184044105 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.178854456 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.179046692 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.178338655 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.177138311 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.17734337 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.177548266 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.180713831 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.185787474 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.190239519 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.186431077 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.179565275 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.182990925 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.179334065 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.183275881 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.181967916 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.179670081 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.179773049 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.180125591 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.179875059 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.180202889 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.179906968 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.179603143 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.17772618 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.179474863 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.179815713 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.178684855 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.179945731 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.179650414 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.180590898 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.177973256 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.18135262 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.179568185 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.178827635 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.178105555 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.178476 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.178773763 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.180302269 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.180272843 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.186556726 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.178524634 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.180544856 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.180674279 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.179106587 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.178809056 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.181537884 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.182174193 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.179221893 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.186591865 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.1983544 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.179714552 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.187454417 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.196588623 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.179529541 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.182920461 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.180967639 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.17920408 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.183894155 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.189662291 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.181872141 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.181801769 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.181681836 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.180535065 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.181120197 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.187229441 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.180455165 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.180080632 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.182549015 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.182079512 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.18095592 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.182716453 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.181175679 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.181043747 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.182730524 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.183111842 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.182515071 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.182129281 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.182482586 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.182107384 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.182153205 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.184163043 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.189388299 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.186435451 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.183115155 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.183465346 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.182929263 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.187241564 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.181934593 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.182502753 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.181729006 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.194788524 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.190670681 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.188946619 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.183555925 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.183499105 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.188766947 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.183343315 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.18586089 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.182220926 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.183397359 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.183135639 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.18161127 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.182359823 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.182745606 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.184013395 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.184796713 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.184888193 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.188409382 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.183461982 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.182199962 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.18278864 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.184234019 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.18458106 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.18195477 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.184589607 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.185465382 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.18466077 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.182935204 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.182839267 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.190861412 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.200730766 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.185301288 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.184413571 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.183637898 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.183403754 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.185075509 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.185656268 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.187165366 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.193378574 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.187033058 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.192817492 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.186438949 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.192411962 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.185866223 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.188242616 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.193474748 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.18377778 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.183391738 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.185231836 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.185992903 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.191279293 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.204338141 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.185788296 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.188955642 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.186862086 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.185711257 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.185731965 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.186466367 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.186417534 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.185811514 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.192941458 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.203189455 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.189194338 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.187033024 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.184027682 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.186329569 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.186342994 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.184555902 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.188495051 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.186528249 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.186251384 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.185961464 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.186616826 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.186289016 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.186860264 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.186920239 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.184076417 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.186819395 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.191881979 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.203298404 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.190915406 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.187031581 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.193156053 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.188836251 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.192621549 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.205644813 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.1866167 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.187765332 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.188063817 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.18804699 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.185476835 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.187520526 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.18723697 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.187880367 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.192023279 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.187220003 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.188739901 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.188135643 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.188406602 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.187749647 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.196744061 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.211375756 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.190203531 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.192996764 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.186250577 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.188851845 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.192420467 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.188899514 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.185595048 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.190791375 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.198206401 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.197826303 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.187951007 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.187953955 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.187801307 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.189973012 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.188695889 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.189475825 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.189125709 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.189469049 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.188649873 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.188266759 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.191082577 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.188136727 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.188846667 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.188416671 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.189519134 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.198485437 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.188914991 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.189175963 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.189349577 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.1899097 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.188891864 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.189423766 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.189375764 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.189389588 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.188988682 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.188992881 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.196149358 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.195236608 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.190917882 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.188609462 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.190475284 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.188446297 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.190921979 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.18898095 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.189592483 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.190039304 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.1898213 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.190349487 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.190317345 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.188699472 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.190284377 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.190515501 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.190993163 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.192091727 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.196745609 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.189714331 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.188310683 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.190708523 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.191201489 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.187923179 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.189986671 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.197038325 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.194068222 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.200110297 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.19966834 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.194826094 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.190805981 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.194455291 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.198627659 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.188689396 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.191207494 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.191848282 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.192027468 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.19176025 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.193570615 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.1907824 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.196655879 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.191932635 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.190450395 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.197331828 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.209842885 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.192569226 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.191434393 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.194969751 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.191027847 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.189468478 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.19260705 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.189941324 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.19832903 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.209746654 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.192989143 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.193030951 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.19088136 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.1935909 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.196926098 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.193446194 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.193502841 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.191043733 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.192683112 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.19395499 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.193644008 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.191292714 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.193051378 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.192208734 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.196121232 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.199305858 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.191161369 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.194231833 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.193186046 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.193739648 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.19451342 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.194056825 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.192241734 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.191281868 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.192755463 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.19356464 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.192497903 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.195617082 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.19303229 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.193913754 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.195783907 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.194915552 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.195641472 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.202710838 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.201859439 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.192539982 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.192711072 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.194311496 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.196478073 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.195065462 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.194808614 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.193364551 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.194899627 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.194949118 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.19505552 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.19469612 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.196800765 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.208663092 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.212744896 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.193471994 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.195877739 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.198213775 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.195250903 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.193392138 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.196041592 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.196660493 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.197664488 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.202954856 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.196330516 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.200770429 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.211789954 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.195582936 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.199655678 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.198303907 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.202371503 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.197314964 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.196486739 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.196359912 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.19998158 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.211045038 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.196548374 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.205294421 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.225119981 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.21415333 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.195623205 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.1960124 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.194289073 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.197137438 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.197158695 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.19732499 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.196862468 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.197631947 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.196345173 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.196663925 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.202781138 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.197051733 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.197297782 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.197547949 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.195828696 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.197261964 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.19500182 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.197428251 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.197158348 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.197820707 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.196567772 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.196656493 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.197478928 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.209114673 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.207333845 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.19692824 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.19734745 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.195946211 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.199212184 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.199435062 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.207851189 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.20580574 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.197282181 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.197425341 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.198931602 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.19752217 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.196020337 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.197062069 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.197517531 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.197089992 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.196249794 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.210079108 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.207551667 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.201146186 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.197406857 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.198272668 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.198817026 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.198860109 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.199344101 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.198943782 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.199729836 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.199513008 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.202866354 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.197691388 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.198385008 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.2014122 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.205736956 seconds)
  done (took 708.001879602 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.197896243 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.196987258 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.197193804 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.197408167 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.197061584 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.197148487 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.19638715 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.197858031 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.197261985 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.196003623 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.197909939 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.197723598 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.197485412 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.198146221 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.196771565 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.197160214 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.19800947 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.197515458 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.19768548 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.197648267 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.196983638 seconds)
  done (took 26.275898505 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.200166709 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.198058127 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.19848927 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.201352439 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199027747 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.201653896 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.199121973 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20178612 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.201052475 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19994909 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.202883891 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201053876 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.199735895 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.199599084 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200246525 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202323638 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.202239991 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.198735647 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.201224607 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.199419327 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.201963869 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.199350318 seconds)
  done (took 27.54267056 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.201413803 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.201522719 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.200084549 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.199992954 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.202510577 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.19966904 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.202324136 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.20119973 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.202654732 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.202527727 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.200117371 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.202172015 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.20808518 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.207903149 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.203286525 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.202475914 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.346783269 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.201988588 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.202927128 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.202269799 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.200299323 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.206574247 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.200191064 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.199636773 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.200852825 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.201911103 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.202729402 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.20286568 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.202671763 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.20286888 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.207788843 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.202771536 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.201347728 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.203685005 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.20120143 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.203726534 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.207043941 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.203439899 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.200422466 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.202717198 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.212573268 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.224243142 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.204098191 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.209080692 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.204329324 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.203426328 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.205927265 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.212236971 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.20123622 seconds)
  done (took 60.259102714 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.203388602 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.203788164 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.201825643 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.204143352 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.203811388 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.204745608 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.205283394 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.204843545 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.202471779 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.201679491 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.205340221 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.202995939 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.201773636 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.205227004 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.205620802 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.20272751 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.202024293 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.202161192 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.202215965 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.202954806 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.202486865 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.206524605 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.205056777 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.203208024 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.206368653 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.202847344 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.203580279 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.20599855 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.203785161 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.20455885 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.205643328 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.205069962 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.20606039 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.204269339 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.203438901 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.207058141 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.206993174 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.203873326 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.207020896 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.203949936 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.20741694 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.207142998 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.207295199 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.206499051 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.204226179 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.204822121 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.203837614 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.203506811 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.204809066 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.207157435 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.206601942 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.204906525 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.206806947 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.205021496 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.207419844 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.208145136 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.20436171 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.206038074 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.20701045 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.20565311 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.204922712 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.207426175 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.20445088 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.207742669 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.20683023 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.205549528 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.205523436 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.207832326 seconds)
  done (took 83.074030993 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.207735658 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.207348381 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.20696906 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205464585 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.205948581 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.207545373 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.205256115 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.20776388 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.206548244 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.208082786 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.208061223 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.208576354 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.20760699 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.208219019 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.207282646 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.20801996 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.207479682 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.20721812 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.20701908 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.207530876 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.207871928 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.20789954 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.208415654 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.207791175 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.208217594 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.209142206 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.2081804 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.208938198 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.207496327 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.208763169 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.209875268 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.208772239 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.207727762 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.208359967 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.208048535 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.208651792 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.208439071 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.208806711 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.208391828 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.209977014 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.210095737 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.208246521 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.209103606 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.209397876 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.209992498 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.208643434 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.209425386 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.210196433 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.209266155 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.210351017 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.209513069 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.209731055 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.208893367 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.209182574 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.207966526 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.210686022 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.209764566 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.209729237 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.209646742 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.209903441 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.210308494 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.210814423 seconds)
  done (took 76.068342194 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210408109 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.210486152 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.208762167 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.206488587 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.209157728 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.207191931 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.210473442 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.210811672 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.210839472 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.210300791 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20988252 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208261952 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209255249 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211378162 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.207833459 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20821277 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.209336213 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.208091006 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210918323 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.207339512 seconds)
  done (took 25.32762745 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.208661916 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.211008698 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.208671266 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.209078093 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.211497097 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.208467042 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.212093477 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212069753 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209351779 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211514545 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.212608741 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.212442508 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209579457 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.209003361 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.212308008 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.20896546 seconds)
  done (took 20.510803456 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.209901323 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.212503821 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.212433192 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.212922404 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.209999439 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.210282539 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.212472007 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.20925128 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.211758911 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.213097321 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.213499502 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.21247922 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.211642215 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.212927861 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.210914147 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.212188637 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.209916485 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.210204667 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.213875118 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.212505401 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.211318995 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.211191933 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.212482051 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.213387573 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.211644155 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.211931338 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.211973661 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.210549576 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.2105085 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.213721285 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.211929339 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.211934495 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.211569776 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.211401165 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.213413518 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.212199034 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.214844952 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.213975754 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.213052164 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.213694541 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.21476092 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.211469842 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.214412775 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.214365363 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.210945823 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.214996954 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.21117826 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.211627305 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.211509892 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.211791105 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.21412705 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.213692136 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.214206438 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.215688534 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.214021774 seconds)
  done (took 67.825458522 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215671308 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.215365448 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.211299236 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.214630696 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.215041273 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.212818086 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.214637485 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.212444257 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213633861 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.215390497 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.214763646 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.21517368 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213700009 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.215371044 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.212711367 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214409772 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.21309408 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.213194411 seconds)
  done (took 22.999166068 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.21297796 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.213172923 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.215643306 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.213063256 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.212954738 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.216720403 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213686224 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.215528479 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216306559 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.213382301 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21328305 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.21625229 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215920256 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.21682986 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.214421748 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213623401 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.216393273 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215262174 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.214475025 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214596498 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.217974066 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216865174 seconds)
  done (took 27.876275935 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.214646896 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.21486389 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.230325886 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.25623433 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.246177305 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.215745361 seconds)
  done (took 8.525436421 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215924672 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218360357 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.213765017 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217962654 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218307403 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214664896 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21553194 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215262038 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217619193 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21686736 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214665119 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219072329 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218753024 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215707393 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218634169 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218940995 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216961982 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215878482 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217333756 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21906023 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216639987 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219008856 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216104472 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214915384 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216569525 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215875035 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21870296 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216548406 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216604967 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218561883 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21920717 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216228861 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218660659 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216738542 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220376257 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220276925 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216660549 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219809046 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219616021 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216683496 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.219080142 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219131252 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219361912 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217026085 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219066075 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216949939 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217453375 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217960726 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217968975 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21986072 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221436245 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219164111 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219951122 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221243044 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220598987 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22234478 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21816341 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217815013 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220566081 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218978497 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218238306 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220489274 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218130591 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219342115 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221009955 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217704922 seconds)
  done (took 81.542278778 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218213052 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.218802987 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218714636 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220062356 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217966537 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219219708 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218150822 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218246645 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218065801 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219718427 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223857395 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217747432 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218099696 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218492156 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220885893 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218154147 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218698911 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219519944 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219605037 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222942238 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21895518 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218163747 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218205715 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21891734 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219530174 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220948185 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219956112 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219076344 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219856988 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219239329 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219350138 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21976548 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219845447 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.21983953 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219331496 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219655995 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219466785 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219946183 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218988426 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221541221 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219207468 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221968953 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220250968 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21972515 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22009968 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220269912 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219781002 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220342933 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219826264 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219494946 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221413387 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221303986 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220553098 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219526106 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220747259 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220986571 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22081868 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221128924 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221215682 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223607102 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221730072 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221206641 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223644037 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220971455 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221220258 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221562114 seconds)
  done (took 81.671633924 seconds)
done (took 1651.204233845 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.320358802 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.327126651 seconds)
  done (took 13.801055813 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.38541384 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.336318764 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.221401001 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.25474595 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.221103038 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.221015868 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.244969375 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.221964136 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.222218047 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.22184578 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.221057114 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.42023657 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.225621807 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.222219453 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.221512249 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.31594628 seconds)
  done (took 41.342234888 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.253326983 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.229426201 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.347264698 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.245895975 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.251625867 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.422663981 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.28511363 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.227271895 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.413177706 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.273356736 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.954849119 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.255358831 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.226398542 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.456684872 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.24942126 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.421405771 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.489862463 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.889892811 seconds)
  done (took 29.049336728 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.714118017 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.254123763 seconds)
  done (took 9.123926841 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.262105154 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.249523148 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.239960879 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.230816476 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.238160305 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.259281288 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.288174926 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.246584507 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.252314958 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.238284266 seconds)
  done (took 63.671902673 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.247171278 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.227423807 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.226980211 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.226103293 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.218027017 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.217990548 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.225468306 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.233922395 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.146674286 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.365554666 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.245712647 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.233640342 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.228424829 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.22757343 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.226384868 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.264719154 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.374452794 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.224962172 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.224805488 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.233441281 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.2285301 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.316178129 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.272084036 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.2252696 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.362156422 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.167753547 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.232342323 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.234130305 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.358110744 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.227118651 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.227046766 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.22870365 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.230259137 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.807498034 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.746198714 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.238893344 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.25289642 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.236732859 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.226941344 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.350498571 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.22996805 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.234598206 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.23395284 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.714707389 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.389194275 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.346996743 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.574257482 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.231373929 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.230999736 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.292985298 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.22940857 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.230056062 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.259781121 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.003563689 seconds)
  done (took 106.349612458 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.278489426 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.710899799 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.393960246 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.24568332 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.102507908 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.002070809 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.221692536 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.536758275 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.278774962 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.222477135 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.570799625 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.761857194 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.231240291 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.254650259 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.73969358 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.237341348 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.222608284 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.048548146 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.225636792 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.225103849 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.656365503 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.240295628 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.242815964 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.379812099 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.263446598 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.708152098 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.812304592 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.696538862 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.226731059 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.224207282 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.724125869 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.233222995 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.29161383 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.226679575 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.513685748 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.615945717 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.579008358 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.224890253 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.2676186 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.225558373 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.243059975 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.704990812 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.588824488 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.225662044 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.227060093 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.71031464 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.224912314 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.234323848 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.228875868 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.43442721 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.153804534 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.225416498 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.820271758 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.227379031 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.495341006 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.325140067 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.231658076 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.737057011 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.226007923 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.40047936 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.274067373 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.226147617 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.231892968 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.230025319 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.229164679 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.599142019 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.45812496 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.230100672 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.604353241 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.721922232 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.229608581 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.780004045 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.074226067 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.248205081 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.268681795 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.224982679 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.828968294 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.744386255 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.268292924 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.225324384 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.587033528 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.227158756 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.562241371 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.242420076 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.225360912 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.668386923 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.248124107 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.258121147 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.227002416 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.224656962 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.978603027 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.232610354 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.520782651 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.251618978 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.225723467 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.226829815 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.25642868 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.226228737 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.241344038 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.231444641 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.78113288 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.235179472 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.534022559 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.248049488 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.226385568 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.22706712 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.230881804 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.229361769 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.453755044 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.76680665 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.231227378 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.227849277 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.226471339 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.22787352 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.366091372 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.226433689 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.562469538 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.230345167 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.229291379 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.230030797 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.057637086 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.22906142 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.227222352 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.249740528 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.066151821 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.436288253 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.247605641 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.230426444 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.229518663 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.243226722 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.754901947 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.232161249 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.296116841 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.231677306 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.960032252 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.253626059 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.259909457 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.807805975 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.232556013 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.227570576 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.250491737 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.229706288 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.539575998 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.51416444 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.458980117 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.230003116 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.230630516 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.942441458 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.237290376 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.372155869 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.247484774 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.22356517 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.427908064 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.39547288 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.228811572 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.788663193 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.230852336 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.451196254 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.229039576 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.554505099 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.752633351 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.234011749 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.237312907 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.969796616 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.914566675 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.87964869 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.233881479 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.577724474 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.237532807 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.6873774 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.230360726 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.230007856 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.828006597 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.230897525 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.239990041 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.230052193 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.231174704 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.30143155 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.406903038 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.810295226 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.238308581 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.725172146 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.291280822 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.235399907 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.233172446 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.231900805 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.583085312 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.241064187 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.232322819 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.276806747 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.230977247 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.231361205 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.737238707 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.113624631 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.232103107 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.386602909 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.893124441 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.233837387 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.243505682 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.918735578 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.445509706 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.776488332 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.292284154 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.577214645 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.241221655 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.274524347 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.053338865 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.312724776 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.783725601 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.23681342 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.232522175 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.858193711 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.23329838 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.311256738 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.23314539 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.23403246 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.802292467 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.234664439 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.232627684 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.759747 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.235766925 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.502444447 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.232646432 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.274538293 seconds)
  done (took 1090.548615833 seconds)
done (took 1355.03955183 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.232752376 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.231753922 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.222226074 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.235170216 seconds)
  done (took 26.093016551 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.24636413 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.239167337 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.241863714 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.239203855 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.24345241 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.24104902 seconds)
  done (took 8.621330134 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.424504896 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.233495312 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.235835198 seconds)
  done (took 19.065696526 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.474265625 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.608919268 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.632670525 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.605278045 seconds)
  done (took 10.492208996 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.242084251 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.242494698 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.241249092 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.243731949 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.246801631 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.248121656 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.244407862 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.244472747 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.247078869 seconds)
  done (took 12.370488028 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.475749952 seconds)
done (took 83.286901952 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.575697332 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.305648314 seconds)
    (3/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.220319268 seconds)
    (4/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.263418333 seconds)
    (5/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.281573382 seconds)
    (6/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.599285179 seconds)
    (7/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.99047036 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.839939717 seconds)
    (9/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.676925843 seconds)
    (10/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.76643876 seconds)
    (11/309) benchmarking ("sort", Float64, false)...
    done (took 5.591651049 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.505508368 seconds)
    (13/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.512560468 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.325159171 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.276390368 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.10863288 seconds)
    (17/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.246770429 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.262945027 seconds)
    (19/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.044461174 seconds)
    (20/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.146215007 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.207544441 seconds)
    (22/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.2381487 seconds)
    (23/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.338657247 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.350778359 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.661573937 seconds)
    (26/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.370197878 seconds)
    (27/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.299458332 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.924422992 seconds)
    (29/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.319424565 seconds)
    (30/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.923441427 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.343108997 seconds)
    (32/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.341165412 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.221651611 seconds)
    (34/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.6829163 seconds)
    (35/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.627929059 seconds)
    (36/309) benchmarking ("sort", BigInt, false)...
    done (took 6.237074562 seconds)
    (37/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.250132501 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.34299032 seconds)
    (39/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.570881522 seconds)
    (40/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.210703885 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.837365613 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.916322593 seconds)
    (43/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.361813502 seconds)
    (44/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.296703032 seconds)
    (45/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.258936646 seconds)
    (46/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.2549706 seconds)
    (47/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.074614111 seconds)
    (48/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.657718006 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.287108343 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.237859721 seconds)
    (51/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.43097813 seconds)
    (52/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.22690569 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.427617069 seconds)
    (54/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.223615315 seconds)
    (55/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.255096948 seconds)
    (56/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.744138246 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.348622358 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.494808414 seconds)
    (59/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.264352364 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.455924938 seconds)
    (61/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.26485337 seconds)
    (62/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.957960341 seconds)
    (63/309) benchmarking ("sort", Float32, false)...
    done (took 5.276956987 seconds)
    (64/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.23980553 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.295957149 seconds)
    (66/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.321860088 seconds)
    (67/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.23825555 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.239912443 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.258210689 seconds)
    (70/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.325763987 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.284706995 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.214409049 seconds)
    (73/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.506203811 seconds)
    (74/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.662358224 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.773176799 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.340888492 seconds)
    (77/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.223075491 seconds)
    (78/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.240396383 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.169798261 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.057364158 seconds)
    (81/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.174053632 seconds)
    (82/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.804997148 seconds)
    (83/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.663109985 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.106202646 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.489283638 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.246439526 seconds)
    (87/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.265583643 seconds)
    (88/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.2392187 seconds)
    (89/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.268828711 seconds)
    (90/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.538350314 seconds)
    (91/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.85904638 seconds)
    (92/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.922713454 seconds)
    (93/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.255948101 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.239604639 seconds)
    (95/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.288541165 seconds)
    (96/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.504380025 seconds)
    (97/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.81524746 seconds)
    (98/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.269517935 seconds)
    (99/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.26690648 seconds)
    (100/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.267188081 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.163911964 seconds)
    (102/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.304218662 seconds)
    (103/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.051478031 seconds)
    (104/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.432649223 seconds)
    (105/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.255771171 seconds)
    (106/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.388939547 seconds)
    (107/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.146574034 seconds)
    (108/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.324815582 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.225319671 seconds)
    (110/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.438955973 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.033277571 seconds)
    (112/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.586557599 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.230712415 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.241534322 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.48152266 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.773161136 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.316463151 seconds)
    (118/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.266580702 seconds)
    (119/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.433478262 seconds)
    (120/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.819007829 seconds)
    (121/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.25388251 seconds)
    (122/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.409120731 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.240119539 seconds)
    (124/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.246986872 seconds)
    (125/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.365830431 seconds)
    (126/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.723208572 seconds)
    (127/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.265197631 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.23174614 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.816646381 seconds)
    (130/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.286494943 seconds)
    (131/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.655928961 seconds)
    (132/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.692818269 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 1.762807376 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.265626325 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.516456895 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.464205853 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.256654903 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.247207391 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.075086031 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.504953933 seconds)
    (141/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.287146115 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.702262096 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.26090387 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.952517599 seconds)
    (145/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.116827796 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.373329474 seconds)
    (147/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.307205502 seconds)
    (148/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.647799822 seconds)
    (149/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.679603446 seconds)
    (150/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.350533359 seconds)
    (151/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.930077231 seconds)
    (152/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.270445227 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.264619316 seconds)
    (154/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.799946158 seconds)
    (155/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.777470171 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.078936799 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.270033096 seconds)
    (158/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.229191761 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.243067332 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.41578614 seconds)
    (161/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.811731234 seconds)
    (162/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.26981011 seconds)
    (163/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.252340422 seconds)
    (164/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.914287889 seconds)
    (165/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.243451806 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.266716546 seconds)
    (167/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.753265391 seconds)
    (168/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.229887266 seconds)
    (169/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.362520116 seconds)
    (170/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.682846339 seconds)
    (171/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.354972547 seconds)
    (172/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.329645759 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.229014224 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.244393062 seconds)
    (175/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.536759878 seconds)
    (176/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.242611288 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.274842758 seconds)
    (178/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.247072241 seconds)
    (179/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.775268646 seconds)
    (180/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.765116587 seconds)
    (181/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.348372973 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.699336543 seconds)
    (183/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.269511945 seconds)
    (184/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.206686456 seconds)
    (185/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.46465159 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.11673581 seconds)
    (187/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.271334103 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.961971005 seconds)
    (189/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.248796656 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.532333752 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.290582622 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.478846706 seconds)
    (193/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.246837204 seconds)
    (194/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.622288102 seconds)
    (195/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.653425484 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.717394348 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.609421931 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.302307172 seconds)
    (199/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.894289816 seconds)
    (200/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.010298592 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.318161309 seconds)
    (202/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.688375131 seconds)
    (203/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.44299072 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.29204734 seconds)
    (205/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.990358727 seconds)
    (206/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.248677476 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.29849669 seconds)
    (208/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.408676123 seconds)
    (209/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.330659401 seconds)
    (210/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.25605019 seconds)
    (211/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.364769392 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.303525414 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.744645304 seconds)
    (214/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.352730798 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.931708415 seconds)
    (216/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.302699712 seconds)
    (217/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.84180835 seconds)
    (218/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.244125387 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.881159737 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.462368764 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.231273786 seconds)
    (222/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.30579551 seconds)
    (223/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.367649741 seconds)
    (224/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.916253795 seconds)
    (225/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.249220039 seconds)
    (226/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.1285955 seconds)
    (227/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.886732069 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.273833622 seconds)
    (229/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.545068531 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.255017313 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.243801244 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.353809504 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.661749378 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.262366332 seconds)
    (235/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.257658249 seconds)
    (236/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.295072824 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.293865288 seconds)
    (238/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.712134211 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.869478883 seconds)
    (240/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.346762302 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.151150539 seconds)
    (242/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.632551262 seconds)
    (243/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.186321215 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.249451344 seconds)
    (245/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.289968626 seconds)
    (246/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.36165838 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.009989407 seconds)
    (248/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.990085466 seconds)
    (249/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.643859355 seconds)
    (250/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.240664873 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.685858438 seconds)
    (252/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.906548548 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.083997402 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.920712662 seconds)
    (255/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.584579888 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.368750397 seconds)
    (257/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.27936052 seconds)
    (258/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.334460916 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.472110345 seconds)
    (260/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.761586116 seconds)
    (261/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.277102859 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.244105814 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.250933499 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.182900105 seconds)
    (265/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.576293464 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.27823787 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.027383984 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.636371684 seconds)
    (269/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.891165401 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.999173833 seconds)
    (271/309) benchmarking ("sort", Int8, false)...
    done (took 4.310559132 seconds)
    (272/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.763131984 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.73586185 seconds)
    (274/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.313332553 seconds)
    (275/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.693654794 seconds)
    (276/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.904866094 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.617083655 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.350068825 seconds)
    (279/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.268387881 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.248930072 seconds)
    (281/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.715232855 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.336894646 seconds)
    (283/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.754038839 seconds)
    (284/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.254067363 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.334298242 seconds)
    (286/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.972038426 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.359882989 seconds)
    (288/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.374984035 seconds)
    (289/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.320218694 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.68698269 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.046322594 seconds)
    (292/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.388250178 seconds)
    (293/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.626903995 seconds)
    (294/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.654691719 seconds)
    (295/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.737689606 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.293324019 seconds)
    (297/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.235570913 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.092317011 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.251123964 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.129201146 seconds)
    (301/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.23820877 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.276174188 seconds)
    (303/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.189621243 seconds)
    (304/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.312403726 seconds)
    (305/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.02590384 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.17955614 seconds)
    (307/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.885416674 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.982866401 seconds)
    (309/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.341423247 seconds)
  done (took 908.397035499 seconds)
done (took 909.567385911 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.285240071 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.278658995 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.263389342 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.285312123 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.373731346 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.291456108 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.275585478 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.266984379 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.313982137 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.314607226 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.261424435 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.289932234 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.264092054 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.261715733 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.26371767 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.277025752 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.418668034 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.267537572 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.280520123 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.27509161 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.279391879 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.261584405 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.313657104 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.290729829 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.267779101 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.268281013 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.265864273 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.282735937 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.374992426 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.265304655 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.267625202 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.274406388 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.417003695 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.264658173 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.259731349 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.282004044 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.27498914 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.273558935 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.268495286 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.295345889 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.804105036 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.263951827 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.26423497 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.265855103 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.265888699 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.270767006 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.265479074 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.271641039 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.276108805 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.278447497 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.798023257 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.280041377 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.26724725 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.266529333 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.277203118 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.263672138 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.268727504 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.27975702 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.284246244 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.279010962 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.408758737 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.271868054 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.268473771 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.281720157 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.27211256 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.838093998 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.261654447 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.271482535 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.81131105 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.27255157 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.838221254 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.273887053 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.268951358 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.2796431 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.297187903 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.423716316 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.265530942 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.266982787 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.27432082 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.264580863 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.276761166 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.278760632 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.272386467 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.267936049 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.280418879 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.295387602 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.278509714 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.268405829 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.276668768 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.286583621 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.273710543 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.277020562 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.270888485 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.264836766 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.277432753 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.272193227 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.270129673 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.269159842 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.272481208 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.279731398 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.811255366 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.283012634 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.265566409 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.264887165 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.267856398 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.281179588 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.87313535 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.270592181 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.290319487 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.31741407 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.270821018 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.416739562 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.273793864 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.283997368 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.277909254 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.271821911 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.264927971 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.418135557 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.885412552 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.284311764 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.27171759 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.266480296 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.284932003 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.273139491 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.268032954 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.428454183 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.272775504 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.283327059 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.390439574 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.281125348 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.300717928 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.267310459 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.273239346 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.298971342 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.284606824 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.300395978 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.273016816 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.284772676 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.285453297 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.26780957 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.281078164 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.281389454 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.272670247 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.277723457 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.265118349 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.302693132 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.281978497 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.281938605 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.292453318 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.390575745 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.269459499 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.41490932 seconds)
done (took 217.203095652 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.326339174 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.264683683 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.349139771 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.266167212 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.366911242 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.364123665 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.264993253 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.263421682 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.264381034 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.642873947 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.263638485 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.264089092 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.257574833 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.265246244 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.346893428 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.266219766 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.264557312 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.632060718 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.26647252 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.335936177 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.264931397 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.26461023 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.266070086 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.674198032 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.262316267 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.262214766 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.335009118 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.267293333 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.612703149 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.258143349 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.263983514 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.613292763 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.355272654 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.285346964 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.277680413 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.273897635 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.368930915 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.28546348 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.346989528 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.345575727 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.351453818 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.305971181 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.260428945 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.261005875 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.269141527 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.268157033 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.266479889 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.294938498 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.26100783 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.266112897 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.631763387 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.277866282 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.275042355 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.265752117 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.26712817 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.288953005 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.266835754 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.269288077 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.356656205 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.269607209 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.330562405 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.676844769 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.646428855 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.268553502 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.264777599 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.267235249 seconds)
  done (took 144.043881067 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.334763308 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.341938568 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.382790152 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.269401793 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.318887426 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.390312484 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.270056716 seconds)
  done (took 10.505068897 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.273921429 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.270468209 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.318773941 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.317994368 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.269962028 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.41682647 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.270832016 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.280125996 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.268037711 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.323837074 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.272251443 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.27085325 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.276616043 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.270473726 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.317505391 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.280460924 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.385060871 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.270634683 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.270875978 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.421419085 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.267162016 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.277836159 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.322725191 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.281396199 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.272978717 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.276495132 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.841210786 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.271132659 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.268619468 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.270790159 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.269333887 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.313068467 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.272239758 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.270148275 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.270093555 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.3856801 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.272241761 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.269850877 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.272817283 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.267082774 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.271369491 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.272214035 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.272332743 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.270874976 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.272550288 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.294181945 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.272095452 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.273134788 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.272398679 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.272231016 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.322208083 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.272942782 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.269808105 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.270393711 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.329387276 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.279304086 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.272986462 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.270410216 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.273264955 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.27114989 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.422483079 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.318222278 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.273576471 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.318995623 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.274258739 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.274240785 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.273376046 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.273101915 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.325670532 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.272325127 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.320084414 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.271584003 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.42914657 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.294233005 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.275463467 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.274969613 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.274382087 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.273114548 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.268996661 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.278093408 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.271296857 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.274813561 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.278399439 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.270530172 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.272230065 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.374795927 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.381376484 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.27245359 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.285137237 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.280495592 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.27140013 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.326585201 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.274804196 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.272629419 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.326516639 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.387448821 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.330493037 seconds)
  done (took 147.174299049 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.277318891 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.282087565 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.276399684 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.289119654 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.275630007 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.27410258 seconds)
  done (took 8.876069132 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.277408182 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.275545793 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.274987608 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.275842868 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.276071438 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.277067321 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.276281708 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.277244451 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.279060058 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.27515308 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.276938438 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.278688626 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.277497373 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.275618152 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.276882439 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.275098216 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.275756675 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.272918274 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.276247562 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.275912134 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.380145363 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.275317189 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.276303049 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.276574882 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.280715217 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.276007603 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.282690801 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.276737555 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.277928368 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.283528344 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.27868843 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.277845231 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.2774176 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.282241113 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.281252261 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.27756705 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.281891941 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.2802525 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.274082301 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.27877289 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.281117811 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.276567801 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.278658154 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.280716016 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.278893759 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.282598048 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.28538388 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.28430516 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.278572387 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.280485675 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.28178645 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.278615344 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.278910397 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.281767769 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.278944132 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.28224164 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.285961989 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.279482633 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.278553583 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.278832059 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.280689827 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.280066377 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.280616786 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.283317879 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.277541947 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.28203835 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.278847291 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.28345042 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.279058515 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.279367799 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.281844099 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.276954101 seconds)
  done (took 94.383840907 seconds)
done (took 406.174921089 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.314147189 seconds)
  done (took 7.520213803 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.462207454 seconds)
  done (took 7.668753504 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.317777765 seconds)
  done (took 23.531296361 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.308105881 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.353059145 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.292376032 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.280172529 seconds)
  done (took 26.440597706 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.34993562 seconds)
  done (took 7.556871727 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.271441864 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.288059468 seconds)
  done (took 13.767890925 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.885738944 seconds)
  done (took 8.094079953 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.927603329 seconds)
  done (took 8.140836587 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.27576611 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.274939157 seconds)
  done (took 14.00743592 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.256896615 seconds)
  done (took 7.463611878 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.769841219 seconds)
  done (took 8.978574835 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.280129544 seconds)
  done (took 7.48872836 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.317897611 seconds)
  done (took 7.524691582 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.982545264 seconds)
  done (took 10.190298837 seconds)
done (took 159.577946525 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.270820745 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.272210272 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.271583099 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.271161222 seconds)
  done (took 26.292664688 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.314290084 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.316094786 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.315315182 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.793073818 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.317515449 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.315437235 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.30630093 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.306828296 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.325293621 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.317092422 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.315485762 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.316248485 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.314895115 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.307470646 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.315241936 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.315713847 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.324650544 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.315374607 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.305380705 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.316937662 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.28177939 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.325702411 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.317894971 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.281560853 seconds)
  done (took 33.190033915 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.478531659 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.35168199 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.434299928 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.332227213 seconds)
  done (took 6.805284866 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.334033093 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.335448392 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.346636674 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.38447574 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.410824774 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.343551859 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.305504513 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.30349967 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.289057446 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.33522478 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.411043564 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.350947924 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.430691153 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.281937918 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.466373123 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.281821619 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.282213697 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.334581692 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.386771859 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.400804803 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.281203789 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.334629887 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.33871982 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.351258267 seconds)
  done (took 33.529857939 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.281581971 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.290428049 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.287397989 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.283367016 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.281751381 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.28213323 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.286826569 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.283121116 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.302888928 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.28393033 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.28201682 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.28277306 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.281637949 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.282686314 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.282479955 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.295629301 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.296420202 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.283099387 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.285578879 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.288340405 seconds)
  done (took 26.935292437 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.274557181 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.147159087 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.627942043 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.53483521 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.276315515 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.274452113 seconds)
  done (took 27.346710202 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.361955214 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.50165007 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.282023143 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.691961513 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.773911219 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.289130752 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.282936076 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.54378368 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.884124172 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.900193494 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.348491747 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.355034164 seconds)
  done (took 19.428663665 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.276909333 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.281403463 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.278111169 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.297328839 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.343891609 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.287904048 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.290477986 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.276575726 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.345390093 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.349101892 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.287555196 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.345054807 seconds)
  done (took 36.873249504 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365587293 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.329197473 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.4308543 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.120745099 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.0087251 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.491925308 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.169110232 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.726401138 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.286316461 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553295892 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294312947 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375160726 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.539444799 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279187146 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.302779339 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.379014401 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.51165722 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818535261 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281842234 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.58435153 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308835045 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.295167561 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.778945417 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.312546065 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.49213355 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.263189557 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.543474548 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.058333745 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596636232 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.295324573 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291280092 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.280337127 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554704863 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977176439 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.377398384 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290891808 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.150613517 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.835539311 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.270198856 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.687348822 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.289778553 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.28769117 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291623673 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282094215 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.215785148 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284095429 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.73374762 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.288879674 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.993243856 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.281134657 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.292306969 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376142853 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.285729469 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.854880466 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350886654 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.2896857 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.279383349 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288238162 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854685259 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.128391456 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292261639 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.221379827 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.761535434 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.589406199 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961852785 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.38536103 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.287019057 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.286665462 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217906813 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.594976049 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.304751471 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420894364 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.309195162 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.944764739 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049049528 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.292849525 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.214179015 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887138902 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.30022263 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.223034183 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.513906849 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.060553404 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.222950654 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.231016033 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.217991481 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075497369 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293245548 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.792907265 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.296150744 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.726902772 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.296377803 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302839587 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308571707 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.509411306 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.168233107 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285937954 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.28326085 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40154597 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307190958 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.728835694 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.222289255 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.288921823 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.542053342 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.496550466 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.284553872 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.3859794 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50623713 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288873306 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.304706092 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.295593236 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.299743195 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.910091292 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.297932368 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.149651318 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306379545 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.063178445 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128422333 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300105593 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.390532089 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.293510071 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554434691 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.149420276 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.450293469 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353720119 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287860895 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.286660124 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.70366373 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.142900764 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.17643179 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.288289574 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298573579 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.300978741 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.285489878 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247438958 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.289435506 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296227728 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.069893026 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.510875847 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.289306003 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564331676 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220277266 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424244312 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.30387376 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.511096322 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.612370582 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.288120516 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548862297 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289214471 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.300231946 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.301940494 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305402301 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382966347 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309191515 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.294228648 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.548486006 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.291246375 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.292640909 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.711007658 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.070458412 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290232263 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.293429529 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.185404918 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921316305 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26027816 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.297607012 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.182546932 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.3017522 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354886771 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.293683997 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.298263912 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.321907522 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.26298559 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.294332147 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.299916831 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.511016498 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.299293057 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.702624103 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373015548 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.499622088 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.92753911 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.302104017 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.223047142 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.999821603 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.982203696 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289005718 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.479267579 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.288045375 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298259726 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.299272667 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.945216018 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.92401966 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291068486 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.622385056 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.30066034 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.300421862 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.296165777 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290850049 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.289435051 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.161934871 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.306920794 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.30539195 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433343422 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.304099306 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.22383188 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.806282728 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.294556664 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.289844456 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.065720895 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325298549 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.622076985 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794758673 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552882623 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.124665016 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.306671697 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.737161303 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.327073951 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.295125361 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.299844885 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29668938 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.324285153 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302288491 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.301231054 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.694802089 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.74357064 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860495078 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068839949 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880101418 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340093226 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.311749913 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.173656454 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.740938843 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.229542916 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.951638161 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.501162486 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.737847388 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248978371 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.506956071 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.632991311 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135171477 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.301438482 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.521612274 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329706229 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.300513932 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.308012944 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.504624387 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326897207 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.297889835 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.225599814 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.578548477 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537222353 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.300597576 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377310944 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.741918871 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.295766265 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.078115878 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.291430126 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.775879883 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482319036 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.845019021 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.688498888 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.292040169 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.293659576 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800544718 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.302299309 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.822955102 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960179186 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.30886183 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.512484569 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.23717786 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.304901141 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.304528119 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.294260171 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.789187376 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.297006625 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.551489929 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.303962932 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.227788361 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.297752919 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870285085 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.151699101 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.300660901 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294171332 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15544081 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.313863816 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614570526 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.308883893 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.282264775 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296946126 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.229712946 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.229069829 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.987041952 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.295490652 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265919901 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852803539 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.719804912 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.351030248 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327922586 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146267491 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.552976464 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.30845521 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.933806512 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52182203 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.238979906 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320908917 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.394907295 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.295548108 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.285399792 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.177544172 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.53165048 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.186533533 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.52151602 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.463638509 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.203395428 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.293790861 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.511649435 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.189928382 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.311252751 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564978853 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.008101919 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.310733572 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062330537 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322263646 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.295206448 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.319371716 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.779050056 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.307490734 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368026677 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.309249298 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.307485709 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.306899334 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484467576 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304826653 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30325423 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.310949735 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391142374 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.204279239 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.320395803 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.072041331 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941203667 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089576319 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.935250336 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.310533231 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.298282366 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296309537 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231963657 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446554529 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.827122845 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572125286 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418347432 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.869176474 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32160287 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.309546613 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317189202 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.513668012 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572180446 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.173471853 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297892298 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.963905017 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.458742301 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.308539875 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.509904346 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858467087 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921685311 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419401748 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.303220194 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.745993214 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.574779832 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.391585858 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298493148 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.894423656 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.321413538 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.799566437 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.306019519 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303489999 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451321335 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.310485621 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007584398 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.309786617 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.460572501 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.074547619 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.752496534 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.562582729 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.856223463 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.311895614 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944886003 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.067731639 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.566614791 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370411734 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.310972946 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.417652851 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44620856 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.309153151 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.200332699 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299614709 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149005213 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.00928859 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.31054221 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942540114 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567584044 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.296457761 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.311504502 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328145289 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.310782112 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.524874703 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116913465 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.528834673 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.310781383 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.303011041 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.875034454 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944868351 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.315335841 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236296459 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.305571001 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565098267 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.538294083 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.327256173 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.753274184 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.011962385 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91270036 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.278482067 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323212186 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317450539 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.068993681 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939917122 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.334384097 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856484492 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.963964338 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.309093611 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576168774 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.306702848 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.310778136 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.581794087 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.306233911 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.31568681 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.313232709 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.943601984 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161442318 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.32858841 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.686861192 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.24295153 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.531310779 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.009532145 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243503698 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312827792 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.50282413 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.305182093 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421718998 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.315010196 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.314304865 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313751505 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.056966252 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.590473053 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.310571252 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.311038567 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.302513767 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.315028635 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309750678 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551959574 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310377967 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.979888493 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.654752391 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.562345233 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.321468348 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.288309512 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.309009448 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303816287 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.028253212 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.281902061 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.979806061 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930384777 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.305098041 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.314837664 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.308834646 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.522340474 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.517361836 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.313844184 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.320663714 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308916185 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.318520922 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.208590441 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.077826018 seconds)
  done (took 1579.519796399 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.342463187 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.336959074 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.339260824 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.356965667 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.314266469 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.356169374 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.414965551 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.37394078 seconds)
  done (took 52.071477495 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.307397799 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.459186163 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.337102377 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.320692643 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.31267726 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.308238592 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.804062441 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.314567749 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.313084126 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.314690901 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.3199894 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.314414384 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.012695078 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.314419246 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.305876531 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.306502847 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.313603353 seconds)
  done (took 64.923273261 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.311283003 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.813495035 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.328490831 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.310433203 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.871714258 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.324780419 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.813625119 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.316056387 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.338038596 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.645391096 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.982453522 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.336951962 seconds)
  done (took 80.632568539 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.314007525 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.314089234 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.313048094 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.313261852 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.313247171 seconds)
  done (took 7.805850801 seconds)
done (took 1996.562476136 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.555006361 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.087654046 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.031164148 seconds)
  done (took 5.357329419 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.452396643 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.504218831 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.628908817 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.630743836 seconds)
  done (took 7.45499806 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.580124341 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.688778953 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.492819356 seconds)
  done (took 5.999328278 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.897909202 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.309708146 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.451264629 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.30652166 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.30979144 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.308211227 seconds)
  done (took 20.163260738 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.312418074 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.313750012 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.310985279 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.313714461 seconds)
  done (took 6.491230216 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.293305136 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.022308418 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.294427129 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.30720828 seconds)
  done (took 18.156122286 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.057466206 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.068576044 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.05459017 seconds)
  done (took 7.420628252 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.30524928 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.146031093 seconds)
  done (took 9.690504608 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.629022061 seconds)
  done (took 2.868747444 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.443538262 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.639750733 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.476313942 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.382822589 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.476889438 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.636361137 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.167778677 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.686229459 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.395248528 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.771494973 seconds)
  done (took 29.316595753 seconds)
done (took 126.371192067 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.503635928 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.317513071 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.512818377 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.477453974 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.541926253 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.513888977 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.814278439 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.449112532 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.98807265 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.976421565 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.484229818 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.541155121 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.538080595 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.328546584 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.539786157 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.325270028 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.646168662 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.545855757 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.205932346 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.308552483 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.815968457 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.117092999 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.316368921 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.138977327 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.589861565 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.464370352 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.699427847 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.324731874 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.318004967 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.719942505 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.46446065 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.325356706 seconds)
  done (took 195.095379616 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.309022302 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.308675049 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.326566596 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.308925836 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.309012037 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.309136709 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.307943533 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.324444816 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.30898915 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.311704484 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.312135625 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.309706494 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.327919479 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.332702449 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.308557968 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.311324104 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.308247973 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.323067155 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.308847704 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.321819481 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.310618683 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.310714972 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.324062785 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.317922251 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.310745885 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.310865879 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.330552953 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.325631546 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.309783232 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.309730481 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.309168983 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.325787531 seconds)
  done (took 203.327529834 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.309728038 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.310154554 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.312430539 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.310988578 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.309864717 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.312452338 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.310444174 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.328121519 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.310257862 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.338956654 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.309324923 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.310315304 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.313322016 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.310841746 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.311213818 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.309876121 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.318778632 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.310693931 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.322843506 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.326415689 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.311056469 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.320306129 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.318955407 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.312100684 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.331992292 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.31278107 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.310915038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.332047844 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.311363732 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.30997115 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.312372141 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.310426147 seconds)
  done (took 203.335555545 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.508927275 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.319891426 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.319944975 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.257689404 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.324026765 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.3202518 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.32015502 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.519087954 seconds)
  done (took 14.135310261 seconds)
done (took 617.132497641 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.742760848 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.446538399 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.52595272 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.341364833 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.20972707 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.341121955 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.341391723 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.524350228 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.283452281 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.529343977 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.658116114 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.338356463 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.80639565 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.340207847 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.610677574 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.445184739 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.279330512 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.403154986 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.68197993 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.945944265 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.615067123 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.894920184 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.522824829 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.292228606 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.807014513 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.892558325 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.117566511 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.274858689 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.341510769 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.6865768 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.116633413 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.38558362 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.406863673 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.387102124 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.442222988 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.423527971 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.357005978 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.384790613 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.531267726 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.651027424 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.963927556 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.104847987 seconds)
  done (took 92.64206272 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.309714342 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.310695577 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.309415135 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.309617134 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.312596966 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.309877069 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.308653151 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.309216623 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.309493532 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.309359494 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.309097099 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.312285175 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.310434659 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.311935282 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.309465566 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.309214385 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.310923222 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.312608309 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.309535005 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.309958364 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.310497591 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.310065815 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.311033458 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.309358771 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.31042154 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.31018009 seconds)
  done (took 35.315218707 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.324916913 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.590238224 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.764026679 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.331601195 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.324299116 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.327703486 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.411895562 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.32747553 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.326625196 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.326925038 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.501405584 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.327715042 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.363400618 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.793807463 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.325236944 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.325859412 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.32525724 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.323599331 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.597202441 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.333563415 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.411015672 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.327088806 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.41018029 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.334685404 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.32649274 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.323776807 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.330045157 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.864259056 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.326529991 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.502030999 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.229439469 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.413078196 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.848153608 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.779981557 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.236660334 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.332648533 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.326345221 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.506477729 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.326475819 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.324635548 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.411037073 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.325208804 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.775719725 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.980555931 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.344317724 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.32705025 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.88629919 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.507339483 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.602768801 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.334353538 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.801090185 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.330014137 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.329857725 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.3266937 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.602177467 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.332755073 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.325858076 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.941679951 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.349958899 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.412940968 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.328183708 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.326933712 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.604847542 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.326645968 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.594956927 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.32824354 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.336836475 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.326794944 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.776848931 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.329965992 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.006623709 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.344529459 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.329052526 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.505153155 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.595656801 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.920068791 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.330383029 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.608786583 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.863097733 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.412350187 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.330966341 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.853560829 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.416324395 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.330794046 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.331392605 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.330680818 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.329422022 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.373666032 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.410942387 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.925641605 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.000699471 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.94937838 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.433760921 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.335581117 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.328937673 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.934499604 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.347446101 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.329954526 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.771294512 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.009031077 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.347005886 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.33697337 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.986249008 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.347504421 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.415666354 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.335132013 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.787030273 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.329047836 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.375645294 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.33098389 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.336255074 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.333112257 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.417040249 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.332542141 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.331473439 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.974896358 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.532607133 seconds)
  done (took 176.373404302 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.322916719 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.323638711 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.340372181 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.322937273 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.32329242 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.329132533 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.322849295 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.322510913 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.328081953 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.32280322 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.322431165 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.322841679 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.323029055 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.352453772 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.334584425 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.331575992 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.936018735 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.325547789 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.323886583 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.323367666 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.146685624 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.324743501 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.323931595 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.325159086 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.324139512 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.325176647 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.332261377 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.326488153 seconds)
  done (took 151.839169621 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.33202307 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.958799096 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.333496204 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.477345377 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.355974279 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.329857723 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.475851223 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.394669395 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.333012196 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.329642409 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.330441773 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.668099827 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.334226266 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.905529147 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.546190252 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.479382479 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.904198369 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.334251786 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.330347139 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.329925702 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.479869947 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.34110169 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.669267851 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.961866811 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.333046495 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.962880627 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.322195401 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.332037743 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.330539716 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.965125528 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.331937999 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.671373906 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.418347943 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.398839096 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.965944375 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.907330192 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.908753261 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.495215354 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.331693657 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.331949969 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.331899839 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.321941891 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.985499071 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.341352571 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.333463126 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.959937923 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.352359071 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.335291374 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.342796273 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.33188482 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.399124133 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.399584008 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.676261462 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.972606979 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.419290091 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.354052919 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.478608087 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.722392095 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.336479708 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.909234551 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.320824612 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.994650327 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.342553271 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.32305342 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.334326645 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.338920963 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.50052379 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.480260734 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.910465534 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.334373872 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.910773834 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.503665726 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.334163005 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.334563402 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.336859888 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.001052125 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.9175306 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.502938734 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.483522565 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.552702054 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.323677377 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.333704228 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.323545639 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.420068439 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.334325123 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.004457654 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.917592146 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.337348835 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.336670785 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.336572871 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.337427979 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.532435223 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.00342576 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.427413969 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.906066558 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.707726159 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.693782887 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.338860293 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.401846139 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.336542459 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.689882085 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.340153198 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.398508255 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.789540451 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.691586678 seconds)
  done (took 161.529131193 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.600878263 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.651918025 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.435815166 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.457448375 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.980455525 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.93634014 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.662302092 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.468778242 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.45290909 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.590594199 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.635975619 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.432806707 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.522057512 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.419547847 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.097216543 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.408478194 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.433776572 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.466166128 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.439571289 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.408192763 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.023579378 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.645366527 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.520690743 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.404532508 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.439878576 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.146840897 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.911663116 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.887307681 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.528650765 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.7724841 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.898430381 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.496159504 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.362537446 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.045851398 seconds)
  done (took 65.848419724 seconds)
done (took 684.791683205 seconds)
SAVING RESULT...
DONE!
