cset: moving following pidspec: 2318
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.972642061 seconds)
loading group "string"... done (took 0.542165381 seconds)
loading group "linalg"... done (took 8.858364568 seconds)
loading group "parallel"... done (took 0.170818821 seconds)
loading group "find"... done (took 1.435074922 seconds)
loading group "tuple"... done (took 2.082804664 seconds)
loading group "dates"... done (took 1.369610386 seconds)
loading group "micro"... done (took 0.218604429 seconds)
loading group "io"... done (took 0.636627084 seconds)
loading group "scalar"... done (took 43.281351913 seconds)
loading group "sparse"... done (took 13.352925124 seconds)
loading group "broadcast"... done (took 1.077715328 seconds)
loading group "union"... done (took 14.606615115 seconds)
loading group "simd"... done (took 4.950514268 seconds)
loading group "random"... done (took 9.991432214 seconds)
loading group "problem"... done (took 2.158957174 seconds)
loading group "array"... done (took 25.464528395 seconds)
loading group "misc"... done (took 1.08066078 seconds)
loading group "sort"... done (took 3.61204591 seconds)
loading group "collection"... done (took 21.469558481 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.62536069 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119455084 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.168364069 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.197192116 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.195722875 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157966541 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161394612 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.562189582 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.03705716 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.217583045 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.145813263 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.547009709 seconds)
done (took 5.876211552 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.262976562 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.433330479 seconds)
    (2/2) benchmarking "String"...
    done (took 0.113808841 seconds)
  done (took 1.218533376 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093901432 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.176047624 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093367603 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.112449548 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.114392392 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.113771161 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095168806 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113255871 seconds)
  done (took 1.490761627 seconds)
done (took 3.744095162 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.48742728 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.856806539 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.507657878 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.14009553 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.16187231 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.153205359 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.327012238 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.16102373 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.123763109 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.099777796 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173624169 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.379548304 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.492949725 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.957506945 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.096424541 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.128433636 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.088975381 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.707654322 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080000316 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.133776912 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.524051575 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.123102756 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11798803 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.139889529 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.194266404 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132571169 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.183225158 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10979962 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.667072722 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.100822941 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185215493 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.100345708 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.16620387 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.247729156 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.09456564 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.093313868 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67482296 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.189177475 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.112425566 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102141934 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682316904 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080111515 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.202314886 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.115248985 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.109834921 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.191530046 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114749452 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078555104 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.104256367 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.105724931 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.160578443 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.453846173 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107204897 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.147817586 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.109078001 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.693613406 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096280998 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.156595888 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.14185866 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107667401 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.10154073 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.107157518 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156509601 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.109418541 seconds)
  done (took 19.724518014 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.116849693 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.143299118 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095787011 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142181748 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.141426817 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098177871 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084805394 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096332044 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.110811841 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.188152977 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140531371 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.146276508 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092902386 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081197038 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.119175463 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.25071463 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105532149 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121954103 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081888353 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107653223 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142323098 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097935145 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111039803 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.111271659 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171758491 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207153568 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111205314 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12594757 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096546408 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099689935 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144225925 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.16520185 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076962107 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.095394016 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.185577574 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122150759 seconds)
  done (took 5.217486022 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.197659229 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.1155177 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.19089376 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.179771932 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.162542225 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148426274 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.168107378 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119606515 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.270364189 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.190633999 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.184633136 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115472705 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116786915 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079518846 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099620067 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081162984 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097971134 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.708769762 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.180798434 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.152347466 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.109054918 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107575268 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099900715 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.384495123 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086322764 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.099902658 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086526813 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.091279465 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.179841161 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08596329 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.338773232 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101282034 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.112620877 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133576967 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.204353653 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132143703 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126269226 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105864502 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084152648 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.238759541 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.110020676 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079743513 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.127957043 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118039394 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133967598 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.103397565 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.112526656 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.227542642 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.102007303 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121031513 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.083019601 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199709867 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.097272037 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100578854 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.359097043 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.119711115 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087478056 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.101866687 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.279507666 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134752401 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084468349 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078641018 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105882024 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096164454 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.410146472 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.092399623 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.87827923 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.098280495 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157669347 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101465708 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108433409 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088012399 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104295266 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10249999 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098934903 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079702046 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09791312 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079515905 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.103108341 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11614008 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086229751 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096561303 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148167562 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.119508082 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102087338 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128882098 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102799555 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081306568 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129299972 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08282853 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.101611134 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.147952017 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087222464 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118790561 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103361707 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144896242 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083204286 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.099412726 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.188651915 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097169198 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125226901 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.085357535 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131418377 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.12400925 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098367782 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085882918 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095631965 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081098878 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162284458 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082571588 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079172829 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.102043558 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097908197 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094883282 seconds)
  done (took 23.867282337 seconds)
done (took 49.483157654 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.458807485 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.097466318 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.116628497 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.117214023 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.115214622 seconds)
  done (took 1.651727133 seconds)
done (took 2.374420202 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.335461543 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199451774 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102937775 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.204188986 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088521016 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.208792235 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.170262019 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.119031686 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204015439 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.102577885 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.182156625 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083847222 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107355596 seconds)
  done (took 2.85704115 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094379852 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120384154 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08172983 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11156113 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076426846 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110491232 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092421521 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.137428334 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091891452 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104173236 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07617068 seconds)
  done (took 1.818909218 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09039356 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115333465 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081590274 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10814579 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076427372 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090383389 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109191186 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117914343 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091170577 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104716409 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07677201 seconds)
  done (took 1.78501606 seconds)
done (took 7.172355733 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.077620131 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.371515715 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.102781747 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.166207038 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.346841883 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.191698912 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.541293488 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.115579727 seconds)
  done (took 11.847065253 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.111265896 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097740138 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.081239103 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.117028606 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.084233618 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099347827 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08109016 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099951274 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.080733738 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098081796 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.083779326 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101006795 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084336855 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100256726 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.082495003 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098350064 seconds)
  done (took 2.282355921 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.116951166 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117504326 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105637574 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110532687 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08510425 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104133561 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088535833 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.104047693 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084213165 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102415669 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091548761 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10827286 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107112703 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.083329271 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104479154 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092431529 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.102173906 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104604865 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.088917967 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.105037945 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091088869 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.103312375 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.106971314 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.090876722 seconds)
  done (took 3.227313976 seconds)
done (took 18.07841763 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.169820956 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08535452 seconds)
  done (took 0.981434169 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.099592481 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.118456345 seconds)
  done (took 0.953133196 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105927459 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09803456 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138184581 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.115941396 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082905841 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099116962 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115038207 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.101508709 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082720772 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.099865946 seconds)
  done (took 1.774548047 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08371163 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101798724 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.090374514 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.120935651 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110697865 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084165316 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.104871563 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086701063 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.106085867 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081100084 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.107185972 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118535792 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088829324 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120219348 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.087206682 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.106021576 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.110234179 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.086778886 seconds)
  done (took 2.52795612 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079530399 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.084404465 seconds)
  done (took 0.898946459 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08269597 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096869138 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08466418 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102531609 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080270694 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.097602582 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080777792 seconds)
  done (took 1.360840671 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.517294458 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.262493835 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.345165255 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099768319 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.15408767 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.371632547 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.137111625 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.115686978 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.114398732 seconds)
  done (took 2.896447255 seconds)
done (took 12.126272214 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090997448 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.191587087 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.677507299 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.120084177 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.080215087 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.16192783 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.264354563 seconds)
done (took 2.319577428 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.354736869 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.123182448 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090080806 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080556214 seconds)
  done (took 1.381851049 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079487557 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103829324 seconds)
  done (took 0.923520227 seconds)
done (took 3.049246423 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077910101 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077362913 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.09400251 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079955325 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.094810765 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077836667 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.0975048 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079493491 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.078824616 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.097158628 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079573805 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.112487854 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095238506 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077290562 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079437345 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099275104 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.076977267 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.097040661 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076737482 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09420515 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079924597 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094881684 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077237215 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.078863096 seconds)
  done (took 2.867506903 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098762492 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09724303 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.086350084 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.1029561 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.084822153 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10454199 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103770448 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.080872718 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.105170677 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.082807508 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102562233 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084834749 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100333691 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084862124 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099867346 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.084238323 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.104741447 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09874184 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082951364 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102792762 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086341254 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098880544 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084437783 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103518063 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084249048 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101365147 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.100295773 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081437243 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103178872 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08380353 seconds)
  done (took 3.562723101 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086768898 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07559759 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.096010766 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.089480064 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.096912633 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081535133 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.095648178 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078875511 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.096996345 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.077152977 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.097223812 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.077131075 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077687816 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097828244 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079065875 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102808169 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096963217 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.096482149 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.077046115 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.096644724 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.083289352 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.095759603 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081229057 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.095587633 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.077862062 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077230617 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096355103 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076685548 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096102485 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078450716 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101381819 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08509272 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09604325 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.091530054 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.103252146 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077553815 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.104538923 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077089143 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096665637 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.077717096 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07737657 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095340113 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.0784781 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.107380826 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081773587 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097159929 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078576717 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097192172 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078845765 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099936279 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078778304 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.078089495 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.0992979 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080503625 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101732069 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077902659 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096984624 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07753171 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097488942 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077961481 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095932738 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078804876 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.084664269 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097866186 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.121600638 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.090192597 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096339963 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080828068 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.081911683 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.105911492 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.080558681 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.116051486 seconds)
  done (took 7.178368301 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081629889 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106616772 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080897184 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098799334 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076964319 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.079151852 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104213602 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09721771 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081521702 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116329086 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079408412 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098685184 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081341049 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100641581 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079198921 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.080643676 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108757163 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095469287 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079552275 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082948103 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098466387 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103498558 seconds)
  done (took 2.761468845 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.224694954 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105639797 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.147093647 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11735237 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099927133 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.115514763 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10434561 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088581232 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104568919 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08997383 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107533604 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087099732 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116522501 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107281613 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089003142 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109223499 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104537197 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09147903 seconds)
  done (took 2.757974894 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093064886 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099847575 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.11036917 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101087924 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082158753 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102385427 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088882372 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116397565 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.101950371 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.08176374 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110774069 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083887541 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102712156 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082587066 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102173813 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082304569 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102525936 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082488499 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110347081 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105285432 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089350246 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111144665 seconds)
  done (took 2.896953666 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096698429 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100815615 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112921081 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104029596 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077746705 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098132183 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.08950441 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.101060654 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109311902 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.083117014 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100171387 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080140153 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.107150374 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081897359 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106793661 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082201198 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102424409 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082271021 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101928189 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077663139 seconds)
  done (took 2.646896814 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122843619 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114459755 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097168481 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127101309 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118236914 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.099635999 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127946511 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117299256 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099336758 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130481177 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098733765 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117237279 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129044197 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105544804 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117746145 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128094656 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109885171 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12711622 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117234499 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099517489 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130524305 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11662774 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110658713 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.117014341 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102145555 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117246722 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100046585 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124621866 seconds)
  done (took 3.978019516 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079201495 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080202612 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.097921848 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.079779947 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09774652 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079058315 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.097394071 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.079269554 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081835283 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097629478 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081996718 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099859415 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082207595 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100513503 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081586761 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.081639985 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100511872 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.07917432 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097549823 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079955489 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.100068345 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081671987 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.100306895 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079624264 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079184149 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099512929 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079485145 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098458884 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081532177 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097398224 seconds)
  done (took 3.407613837 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.087711117 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105013891 seconds)
  done (took 0.946931479 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077419094 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114840372 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078990632 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.1035029 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088116111 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101320076 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09184791 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106408933 seconds)
  done (took 1.516911112 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.104155887 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.119883777 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087812796 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112494164 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.100297703 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.117223484 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167652725 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088992256 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108782945 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083727312 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.121922254 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081909321 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.113665109 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08780799 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.111554847 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116518419 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.0803808 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.111974574 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.091680697 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.103823608 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089045718 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118562289 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094244506 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10982242 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085843564 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114289454 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115730419 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.09662052 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106908698 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.096410481 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.109911993 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.07699657 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.106724978 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.089696178 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.099784008 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.102380639 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120101461 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089335049 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111967135 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088990313 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111406209 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.078632913 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.112514116 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.089846217 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116184243 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.107039955 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.089508748 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095368656 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084726871 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086578722 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097596299 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086829972 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096393479 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093331333 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.111908324 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121419521 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085923945 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.107489256 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088616955 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105798568 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091744119 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105948641 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094597942 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.105733317 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093431992 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.112242795 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09129785 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098239057 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077222394 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100943854 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093851724 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127186481 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.114137561 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.089148352 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108725355 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081008486 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107810184 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089590385 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110345113 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094994104 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.107499733 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091183521 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113138705 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087693242 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.107360421 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090691972 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.103998185 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084217887 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100417931 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121616205 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086467541 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080532854 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.10165544 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109571111 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085695725 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101925289 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082108626 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108053997 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075390657 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085807276 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104174962 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10577004 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093465046 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106082962 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089630947 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111026499 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.095026286 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107560083 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087815427 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097495866 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089009602 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.10320629 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092528063 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096198934 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089131288 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.106376811 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.089497675 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112888236 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085908929 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.108267962 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095348958 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114437084 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.085722927 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098532402 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088041721 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.107166827 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094108986 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.112948482 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.086140744 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095103387 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.076257581 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.108821514 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084442435 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106541633 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104147777 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086783806 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075825515 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097837402 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.094864677 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111242921 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.104134798 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.090747564 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.113951613 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.09112383 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.105702292 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093927058 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.105562939 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083979393 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.112582473 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087810433 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.098167557 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094436956 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106680634 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086692498 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107490094 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093531309 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107822153 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.08950288 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10485675 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089150239 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106483126 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083730836 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108403696 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.086573383 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.116863914 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088337298 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098401124 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.080927049 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110397533 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085789391 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.106443638 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084821006 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107465189 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.090578996 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101439625 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.0877161 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107027153 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101895877 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.116523739 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090347127 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.110948367 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.115856613 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.088457471 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.109561919 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.08824979 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109204558 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.090264932 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112754581 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092620749 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108698053 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089809921 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09964523 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091276161 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114704253 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084774056 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101084822 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08479819 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.108421997 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097028005 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.107477546 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.088022867 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103181013 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089100748 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108964005 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086968411 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103784164 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081877089 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105232796 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.094216911 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.109702946 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090742782 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115771289 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091004776 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09909155 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094066879 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106030483 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.09370642 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09975388 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085343973 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.10413098 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.091123352 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.106533656 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088644998 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097795482 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094854946 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114600818 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.090419229 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104298531 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.090084644 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117581219 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088040377 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111599119 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090344715 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110948798 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123047007 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085204594 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108131848 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.098373957 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.108110232 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078882161 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111607993 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.087388265 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102685796 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.088092793 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08628826 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110940784 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091941557 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110683427 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079067623 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.108863002 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.086891296 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.104600197 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081402991 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.114485038 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090659358 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10974464 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118272379 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091973803 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.109469452 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091618842 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.108386394 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.090925585 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.109896421 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093610781 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.109451223 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088610898 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.104789868 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090154175 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104510665 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08410525 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.106835617 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.089965786 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.109438444 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091975074 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.107388882 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095971619 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.109016348 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090060543 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.128106463 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105804949 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085339799 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109948438 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092169847 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.107948938 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08938248 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.099567912 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09565996 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.108331574 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0968876 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.108926396 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082088425 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.109609893 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089678396 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110656691 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.091129107 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.110553525 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088296388 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.108263922 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090117931 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118248718 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086512753 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.116914035 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092621931 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11240368 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089007961 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.111623152 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088250608 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.106057877 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089287324 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.111713081 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09009336 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.109164203 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.111694465 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091320981 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.108490713 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08840317 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.110438921 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.091503908 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.111130746 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079148381 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084691416 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106100167 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.089310146 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113640229 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.11016032 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088566648 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.087349599 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112771907 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.088411542 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100813072 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094296688 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112405502 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.090886605 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118562453 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.104348601 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090740007 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120016653 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079704288 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.106791609 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084015217 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086887645 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11739044 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.109744614 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097040234 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.110543973 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087061689 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.102070012 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.091997173 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.107060484 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080269659 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083727107 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112390357 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087864228 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108468664 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.091920052 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.110680528 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091474179 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116307167 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.089185911 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.110161137 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.110532615 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083447172 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086366542 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.106883063 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090487246 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.108244356 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084896552 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100110648 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.089824761 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.107671103 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091342622 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10948664 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089071796 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114876423 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089294943 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.111165434 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096119487 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.101212321 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091345387 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.109168579 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.089935684 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.105659805 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091643553 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111830122 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091512775 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111899357 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.088320554 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112935474 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089572026 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102973181 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.090975953 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.109279281 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.091351925 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.105075754 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.092506095 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118111322 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.084349946 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.110390704 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09156366 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.107989874 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092205524 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.112829866 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.11084638 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095146943 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.110537837 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091737842 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114004169 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091813881 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111438486 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093252623 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.108577718 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09596098 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.105971096 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098345319 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.111363149 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.092815686 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.109412395 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088047185 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109887054 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.090855945 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107503966 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094598149 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107368213 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082836883 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102304284 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081831322 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106793098 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094284505 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113157303 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087647761 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107733632 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.07794662 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099865649 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089550336 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.103246545 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089050161 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108767088 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091627953 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107516066 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085979169 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.106128705 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096179294 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112749966 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093225839 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.10813893 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092824586 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.11287658 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.111147815 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089136267 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.109407668 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092871957 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.113809251 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090457847 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.106188935 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100813541 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.115837989 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093953311 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.109941851 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.093874134 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.110619643 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081680143 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.111287836 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.09191571 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112921758 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091881242 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110346154 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101469022 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.106830951 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090386201 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116374435 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090544776 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.119033135 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.08206073 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.112739771 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111516758 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094053599 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078028506 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.106538837 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088141108 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.113713059 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086512249 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.103843271 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121412438 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096971628 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.11175146 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090695167 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108143631 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081846938 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078887354 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.106474083 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088791112 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.108499759 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114403737 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085477594 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082458175 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.103351601 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090845389 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109743149 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090463687 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101921592 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.081298651 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.105158071 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092292335 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.119352544 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089444551 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.113528748 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092560842 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.113729022 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085018581 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116212138 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083457314 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.113003859 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124112097 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.092704504 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113444456 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096010763 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117897714 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.093114043 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.102907123 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.09294275 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.112148374 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093064371 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.112071076 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.091935777 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123920302 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107183247 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082971989 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084769666 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.110478593 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084873947 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.120590449 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112628442 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.09347134 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110886088 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088129733 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109759227 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096775333 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112754599 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092641938 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.112052175 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.090828413 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11142052 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.090176578 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.110998546 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.094990221 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.113502111 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092012843 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.115016658 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088710016 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123175768 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099604591 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.114492981 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084159642 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.108080787 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088773698 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.104489092 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.094505523 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.106969925 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.0903139 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.108551867 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.091888702 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.114852259 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095395914 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.111945825 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.094776655 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.11152099 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082604767 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.116270442 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09354022 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115073383 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.087195054 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.112146528 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.094692145 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.116628769 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097967506 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.111045721 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09305512 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.111253234 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095697757 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.10368224 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096228619 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111274188 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091408377 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.108396191 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093472863 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.113514911 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094852682 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113933663 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095157997 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108317871 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.092418089 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109671652 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081603634 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100219387 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091386322 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101003063 seconds)
  done (took 60.288442289 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149936086 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086659822 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078242444 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099660383 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124857808 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080062152 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098161102 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080662529 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100943659 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094633251 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098627859 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07915992 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121320501 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127876624 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125233117 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115087617 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080094446 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101012293 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081286384 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082164293 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12151714 seconds)
  done (took 2.933432845 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104257246 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117592348 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116934025 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101237335 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110774899 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119615868 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099769391 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118815555 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.12200131 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113423427 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.105031579 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121798189 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.115931754 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.097723618 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116384746 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119297697 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.106315112 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.115276589 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.123106556 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101092518 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.120304542 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.120714698 seconds)
  done (took 3.294442769 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.091486354 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.086285026 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.115039297 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.084414015 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.106714849 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.080924107 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.112007656 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.08384707 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.110233696 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.087232836 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.104328525 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.087673926 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.111469616 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.08113643 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.104889591 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.083689235 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110537299 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087054738 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107080392 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.081468849 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.128766175 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.080513353 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.103255856 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.085776356 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.117250206 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.090699535 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.108745903 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.089087048 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.10391156 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.088100234 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.103032595 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090478385 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.110657308 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.085848177 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.106035093 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.091389285 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.109548248 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.08710927 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.107265848 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.094178101 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.103894774 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.091153554 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.117236126 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.087647212 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.105973545 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093535941 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.108367884 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.082061433 seconds)
  done (took 5.497599009 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.120955412 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157334665 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092494492 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.154139169 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.127549122 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.118410692 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092094157 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14583338 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.083671807 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.108543082 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12456784 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12317954 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088192865 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.115933187 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.087708773 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108059616 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.092670848 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.113089571 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.118629229 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087322229 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.116094123 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091727513 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.12127565 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.121244755 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111762625 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087790962 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106010947 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.097650476 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.120380682 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114139501 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.093756108 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.117456137 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12872327 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.095615335 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108857591 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090521355 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124276646 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.108823135 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090318031 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.104645475 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089959163 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.118763409 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091668261 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124889138 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109259408 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.088896553 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.111916264 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.109044611 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.105946365 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.112799518 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117353793 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.102709725 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111777617 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.089180159 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114427385 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.128915653 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087976513 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.105725983 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091984543 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119612126 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.108091256 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.100494083 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.129629112 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.114779976 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096919191 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121650694 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110957193 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093857448 seconds)
  done (took 8.378977584 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095365532 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.131459003 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124517002 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10423746 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114604697 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112812841 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093533297 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.112906779 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093645531 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120201925 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112609049 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.163236147 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087087768 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119188463 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.093507067 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113763575 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112619297 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093785659 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.113053352 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094843752 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113458867 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12485985 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093503032 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124273441 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125778778 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086202169 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114632687 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112774472 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104171464 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113939236 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127015984 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093329223 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113352896 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.124089349 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125874312 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094307588 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102685173 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093895103 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.113013522 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093466032 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106089003 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124102166 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094119416 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105594279 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093069934 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113465333 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123600287 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.126516396 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099092524 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120130237 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112753598 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104132657 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11329272 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112908378 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104838852 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.13184225 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125974424 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124260962 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09372563 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12405164 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123664953 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.132556001 seconds)
  done (took 7.731335908 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084995903 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083514982 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.102074965 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.081684528 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.104431535 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082145691 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104261393 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085074128 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083826783 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.104237454 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083480482 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102083154 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083574074 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104182636 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083066309 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101103704 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082342762 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08134474 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104692503 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083231728 seconds)
  done (took 2.645229133 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093437554 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125421882 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084962864 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113127178 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.087123211 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.113062362 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.1061211 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089125966 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104236841 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08818992 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118013795 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09806401 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106205335 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.1122785 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097798213 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111437849 seconds)
  done (took 2.471530801 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.105418424 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11911946 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.13106531 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.091096508 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103343891 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.093810902 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105563714 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.081126625 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100499347 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.09420839 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.111847157 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.095960954 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105389588 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082800685 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10519837 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091807147 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100363958 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08932202 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105429621 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.109831266 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.110645069 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087372059 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107716268 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086637896 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109846112 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.112532397 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.093087944 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102815352 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082873546 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104969245 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088976589 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.11409212 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082178233 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.110487507 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.083805253 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.102620685 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.0854219 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.105705266 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.091845559 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10594699 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083744002 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107909281 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085525007 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107624554 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081679537 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105720647 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.081670016 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.111811221 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.087525271 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.108704679 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.085014965 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.114769635 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.091900151 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117660311 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.115127144 seconds)
  done (took 6.303413983 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100169637 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109263422 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090170293 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102421196 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088830705 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.114528836 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089549627 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106854473 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087838902 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.103638881 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087897846 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110291685 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088600025 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109630975 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087828368 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110654589 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080246682 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107537452 seconds)
  done (took 2.601891376 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091406283 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105112693 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093636677 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10517821 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086442458 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086833221 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103276117 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.083377387 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103985362 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085134494 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10503237 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087788141 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103809111 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087580079 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105929259 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085486891 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108698153 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083973336 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106002135 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082367798 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107644848 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084900844 seconds)
  done (took 2.921704973 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.10410527 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.138737873 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.100003229 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.149086082 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.110995345 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.089051905 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.120125689 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.090434445 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.129551165 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.109680402 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.089867679 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.109318132 seconds)
  done (took 2.173944878 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112259606 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144601088 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083301242 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109097071 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119137391 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091951037 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111556769 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090916047 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122891615 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123593073 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091091336 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124423612 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122996458 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122142404 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098444211 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119311124 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11169535 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092140182 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107143522 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132687619 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091671299 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1225369 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090897879 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112378823 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111480824 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101708081 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124486304 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124513841 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111582213 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104021374 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120070571 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111383587 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104205975 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124943139 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107927449 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103049591 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112211826 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133233271 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119704076 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102225045 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.1086156 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098700973 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124509636 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118976278 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123415558 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091808972 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119615588 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090589616 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112392498 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139662277 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118831991 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122781905 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098492412 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123237016 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123613771 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13940933 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103493214 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123231079 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119401247 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125095537 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121861908 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099855397 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121985478 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124297274 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099019376 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123501196 seconds)
  done (took 8.31444676 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127032977 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105949429 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090063386 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125306469 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124166453 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111890531 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092055639 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1117017 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091223258 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108692809 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159238918 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111883331 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10250765 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123731356 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111393394 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091888263 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111691535 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122769857 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088728888 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139771 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112146484 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101980498 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123676594 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122834203 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124720156 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098784415 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113093167 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111751152 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091381038 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112786449 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119607097 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092256814 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122549601 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084065738 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123371372 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11165295 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091757181 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119881869 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111109996 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099922223 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122821691 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132887624 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11072575 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091849627 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125583485 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090677682 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112511956 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107448674 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091462093 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107914016 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125026534 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105682756 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125578972 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123432078 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111840986 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092628994 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111317735 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092155773 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112629381 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120193759 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103039134 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112243115 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140270841 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090914283 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114614391 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12254723 seconds)
  done (took 8.178687703 seconds)
done (took 158.99274491 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.104367656 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.143206683 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.10080614 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.17042447 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086293084 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142059746 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119813112 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.122501029 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.085701369 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.107363133 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.087167414 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.110898659 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152405211 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.107579819 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087003766 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109624638 seconds)
  done (took 2.67224129 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.181750812 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.286759101 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105655265 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112197737 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.092939051 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11062963 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089919978 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.114476952 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.088015735 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.121243533 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088213865 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.111160227 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.119851545 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.089999966 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.10815634 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.08901606 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.120110227 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089755691 seconds)
  done (took 2.961452227 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112956373 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.160724597 seconds)
  done (took 1.117748129 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.123329009 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.188325704 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.305943771 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.163643932 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.115909659 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12995396 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.164460683 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.12780124 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196104382 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.129326066 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.108815402 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.115239437 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137943632 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.099623674 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.118187765 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.093505917 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141038663 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115903069 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.09597164 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116124965 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115491389 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.115780991 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.098057626 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.117194062 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.185535302 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.129536954 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.093899365 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.116964577 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115142948 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096967392 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.119120195 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128727376 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.107839645 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.190058046 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.099453348 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.186895605 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.101606039 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113637847 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094958503 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.114055341 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117753722 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.097926192 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.130048608 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.092291712 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.115200294 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121955249 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.095034646 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.11493535 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100676885 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.125211047 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.122357956 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.33822028 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.189196726 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10299227 seconds)
  done (took 7.932552832 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.834069983 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157461962 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113923178 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.935270988 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145778334 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12657878 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.830348416 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113380416 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.267378977 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.828472623 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131822781 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126523948 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.211695406 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.281616098 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.164972572 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.319874647 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.733622914 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103519408 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.145442958 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.158566949 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1193822 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141132172 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111494703 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.415900457 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.114991176 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090177721 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123721878 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125295381 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168254002 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.090745104 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116242626 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.184819048 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.292148572 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185923219 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114351267 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090270882 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112118791 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.173944059 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.280451277 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220510929 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.177173445 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088134515 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088919439 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126070851 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133061621 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086533728 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.191392438 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.179633734 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.179283372 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116959689 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124112868 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100644978 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124968424 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166921621 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.110115141 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.320971641 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.352882528 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11321955 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099311061 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.132360991 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278110325 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.090110044 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229625201 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140505083 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.2189398 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090729755 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.862236587 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171087389 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11177467 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100453755 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120698983 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095861758 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124996659 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171670443 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.381932807 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128869223 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094425576 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113400082 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.209178933 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.113708217 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089624536 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.191558311 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092788523 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12209527 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106606011 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126949211 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.177372862 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.278267033 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.104864133 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1221788 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119342184 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104030595 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115226662 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.223636972 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225456856 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164538522 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.243682275 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104544834 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.191997584 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.172742051 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101596638 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.200508949 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098084649 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132935638 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125655185 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219255855 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147538515 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.092606543 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117171352 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.099212064 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151516349 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.116132931 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098697827 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.173793007 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.470705662 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.171711734 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.11057351 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096269269 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121740168 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.170430748 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119876309 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.248778693 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12445126 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.173536928 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121227201 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088218833 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122685157 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.170328209 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128069532 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120796808 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104909765 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122578556 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.256789775 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228238325 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129243255 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219800882 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.187034994 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123210083 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180056433 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122406943 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.177156325 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12394591 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103221475 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11630226 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.849426009 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104361883 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121775955 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116990262 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.173151873 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114983335 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09113647 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.113479487 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088324892 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.842299671 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093425969 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.112865291 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.092272212 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123511255 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121649943 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097579343 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119019255 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.167153534 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239350758 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125683997 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098492463 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.114601578 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.168173755 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115255506 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.091880719 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0905843 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.115230878 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122543131 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096926226 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.114513927 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.182112454 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164947991 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.228117758 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.550747568 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092341558 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.11288374 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.215642215 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114001156 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.312178082 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098336542 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.23223989 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.173301513 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.111343044 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.34312993 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.17586513 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195221969 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.115254783 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.177405308 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08828465 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119827538 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167380031 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112379256 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099147575 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164463523 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130597042 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128934681 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.159768353 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091258337 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259862586 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088986422 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.175477553 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115204622 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103847502 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.315538646 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114262521 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112342844 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.193063713 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095822656 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.114488229 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.590200334 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.115047292 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101690297 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123620087 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229412261 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.172873829 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12144245 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098949529 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127214685 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.167892915 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.246141377 seconds)
  done (took 45.106309101 seconds)
done (took 60.629522814 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.304784801 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.26989731 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.306292064 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.198276279 seconds)
  done (took 2.02239775 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.181966279 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156028479 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.128407902 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.112433872 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.158627005 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090210164 seconds)
  done (took 1.697468394 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.484784665 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.378425017 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.346315632 seconds)
  done (took 2.083636719 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.264352199 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.284224552 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.363939356 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.411934672 seconds)
  done (took 2.301555962 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207227591 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.128705847 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.102757283 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.142042682 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.17740111 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.179849053 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.146708059 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.156514931 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132567457 seconds)
  done (took 2.292043434 seconds)
done (took 11.269436905 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.170027201 seconds)
    (2/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.28211699 seconds)
    (3/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.282788128 seconds)
    (4/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.27966943 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.198278814 seconds)
    (6/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.163843127 seconds)
    (7/286) benchmarking ("sort", Float64, true)...
    done (took 0.267222567 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.110026756 seconds)
    (9/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.26022629 seconds)
    (10/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.12068615 seconds)
    (11/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.193593881 seconds)
    (12/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.24262194 seconds)
    (13/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.088555988 seconds)
    (14/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.208870496 seconds)
    (15/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.280238328 seconds)
    (16/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.126056671 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124694501 seconds)
    (18/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.103581467 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115828558 seconds)
    (20/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.105769614 seconds)
    (21/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.208362363 seconds)
    (22/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.076047399 seconds)
    (23/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.224215097 seconds)
    (24/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.131487706 seconds)
    (25/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.126825815 seconds)
    (26/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.102085626 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.144731335 seconds)
    (28/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.08872999 seconds)
    (29/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.231231143 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.206073745 seconds)
    (31/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.119399811 seconds)
    (32/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.104935596 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126507575 seconds)
    (34/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.191615817 seconds)
    (35/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.098849718 seconds)
    (36/286) benchmarking ("sort", Float64, false)...
    done (took 0.175414658 seconds)
    (37/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.143931847 seconds)
    (38/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.218234042 seconds)
    (39/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.155769561 seconds)
    (40/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.135941919 seconds)
    (41/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.165107807 seconds)
    (42/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.102956612 seconds)
    (43/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.182491646 seconds)
    (44/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.133501383 seconds)
    (45/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.238843374 seconds)
    (46/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.077300142 seconds)
    (47/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.115923071 seconds)
    (48/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.098265258 seconds)
    (49/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.118869585 seconds)
    (50/286) benchmarking ("sort", Int8, false)...
    done (took 0.195470867 seconds)
    (51/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.196120878 seconds)
    (52/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.096975114 seconds)
    (53/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.240959136 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.119812717 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.143637042 seconds)
    (56/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.115192349 seconds)
    (57/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114844182 seconds)
    (58/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.094426771 seconds)
    (59/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117372314 seconds)
    (60/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.101742011 seconds)
    (61/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.174402667 seconds)
    (62/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.127537062 seconds)
    (63/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.152439536 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093423668 seconds)
    (65/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.21209251 seconds)
    (66/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.09926709 seconds)
    (67/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.093158154 seconds)
    (68/286) benchmarking ("sort", BigInt, true)...
    done (took 0.218067432 seconds)
    (69/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.141059617 seconds)
    (70/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.118353558 seconds)
    (71/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.126373892 seconds)
    (72/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.093762111 seconds)
    (73/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.120112501 seconds)
    (74/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.217536285 seconds)
    (75/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.077191743 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.147769545 seconds)
    (77/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117347026 seconds)
    (78/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.095986897 seconds)
    (79/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.193296881 seconds)
    (80/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.144395067 seconds)
    (81/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.119411045 seconds)
    (82/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.211712931 seconds)
    (83/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.158189502 seconds)
    (84/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.224953925 seconds)
    (85/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.078370409 seconds)
    (86/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115582262 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.104914145 seconds)
    (88/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.156517518 seconds)
    (89/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.192438808 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.095882121 seconds)
    (91/286) benchmarking ("sort", Int64, false)...
    done (took 0.112510769 seconds)
    (92/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.200667165 seconds)
    (93/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.218625973 seconds)
    (94/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.167252193 seconds)
    (95/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.1509932 seconds)
    (96/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.129644185 seconds)
    (97/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093849156 seconds)
    (98/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.205592786 seconds)
    (99/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.238367833 seconds)
    (100/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.167211709 seconds)
    (101/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092060823 seconds)
    (102/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.122232114 seconds)
    (103/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.076843421 seconds)
    (104/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.114272893 seconds)
    (105/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102143772 seconds)
    (106/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.100023417 seconds)
    (107/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.077874429 seconds)
    (108/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.10040693 seconds)
    (109/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.106092274 seconds)
    (110/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.11221761 seconds)
    (111/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.078206132 seconds)
    (112/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.125893736 seconds)
    (113/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.104906573 seconds)
    (114/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.16414677 seconds)
    (115/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.086296403 seconds)
    (116/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116350031 seconds)
    (117/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.096855142 seconds)
    (118/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.099875234 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.146602635 seconds)
    (120/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.109434301 seconds)
    (121/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.202924864 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 0.19059529 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.125945377 seconds)
    (124/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.120741931 seconds)
    (125/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.100793106 seconds)
    (126/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.209116045 seconds)
    (127/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.098224081 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.119853157 seconds)
    (129/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.090830531 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125746197 seconds)
    (131/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.12709501 seconds)
    (132/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.209929995 seconds)
    (133/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.164518049 seconds)
    (134/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.163477372 seconds)
    (135/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.100631309 seconds)
    (136/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.109174756 seconds)
    (137/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.166059523 seconds)
    (138/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.155567771 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.12466055 seconds)
    (140/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.1045968 seconds)
    (141/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115415575 seconds)
    (142/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.078741599 seconds)
    (143/286) benchmarking ("sort", Int8, true)...
    done (took 0.205006041 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.114185353 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094366139 seconds)
    (146/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.129979131 seconds)
    (147/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093911871 seconds)
    (148/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.127797716 seconds)
    (149/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.078358133 seconds)
    (150/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.23130214 seconds)
    (151/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.225331073 seconds)
    (152/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117427047 seconds)
    (153/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.14687773 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.130057577 seconds)
    (155/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.170997782 seconds)
    (156/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.078750583 seconds)
    (157/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.100530473 seconds)
    (158/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.104307254 seconds)
    (159/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116779758 seconds)
    (160/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.102883901 seconds)
    (161/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.11868745 seconds)
    (162/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.085658018 seconds)
    (163/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.125913128 seconds)
    (164/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091164007 seconds)
    (165/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.191386893 seconds)
    (166/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.077896891 seconds)
    (167/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.150964162 seconds)
    (168/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.132575534 seconds)
    (169/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.101909241 seconds)
    (170/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.114374667 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.097948271 seconds)
    (172/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.101760175 seconds)
    (173/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.078501763 seconds)
    (174/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.101140985 seconds)
    (175/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094475009 seconds)
    (176/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.100749838 seconds)
    (177/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.110658963 seconds)
    (178/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.101611932 seconds)
    (179/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.098164882 seconds)
    (180/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.116102396 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094344426 seconds)
    (182/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.113079428 seconds)
    (183/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.172241621 seconds)
    (184/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.12766918 seconds)
    (185/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.204534286 seconds)
    (186/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.209031924 seconds)
    (187/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.096336906 seconds)
    (188/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.136737911 seconds)
    (189/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.107057364 seconds)
    (190/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.130380231 seconds)
    (191/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.077432992 seconds)
    (192/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.101282476 seconds)
    (193/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.07911353 seconds)
    (194/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.118870543 seconds)
    (195/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.079709872 seconds)
    (196/286) benchmarking ("sort", Bool, true)...
    done (took 0.20555212 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.118487642 seconds)
    (198/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.096836365 seconds)
    (199/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118066372 seconds)
    (200/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.07895407 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.129587512 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.104192432 seconds)
    (203/286) benchmarking ("sort", Float32, true)...
    done (took 0.208283392 seconds)
    (204/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.101990224 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.097971358 seconds)
    (206/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.102611661 seconds)
    (207/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.07792856 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.120340359 seconds)
    (209/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079460088 seconds)
    (210/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.114058565 seconds)
    (211/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111689432 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11597942 seconds)
    (213/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.078876703 seconds)
    (214/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.100320472 seconds)
    (215/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.078426116 seconds)
    (216/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.077154103 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.117742003 seconds)
    (218/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.085564409 seconds)
    (219/286) benchmarking ("sort", Float32, false)...
    done (took 0.178655171 seconds)
    (220/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.120707162 seconds)
    (221/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.078707449 seconds)
    (222/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.086024111 seconds)
    (223/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.15093524 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.120726011 seconds)
    (225/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.104826217 seconds)
    (226/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.100982389 seconds)
    (227/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.078916142 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.120784265 seconds)
    (229/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.095481263 seconds)
    (230/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.116220105 seconds)
    (231/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.078524702 seconds)
    (232/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.100579064 seconds)
    (233/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.078827179 seconds)
    (234/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.141355291 seconds)
    (235/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079016016 seconds)
    (236/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.091653496 seconds)
    (237/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.138210161 seconds)
    (238/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.078402671 seconds)
    (239/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.119829127 seconds)
    (240/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079171248 seconds)
    (241/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.101206009 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091014959 seconds)
    (243/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.124548381 seconds)
    (244/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094706101 seconds)
    (245/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.116381705 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.097494416 seconds)
    (247/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.12004196 seconds)
    (248/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.088681491 seconds)
    (249/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.140781686 seconds)
    (250/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094775911 seconds)
    (251/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.126497958 seconds)
    (252/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097489433 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.128481896 seconds)
    (254/286) benchmarking ("sort", BigInt, false)...
    done (took 0.232768562 seconds)
    (255/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.121759491 seconds)
    (256/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.079385723 seconds)
    (257/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126956419 seconds)
    (258/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098431669 seconds)
    (259/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.101741571 seconds)
    (260/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.087157382 seconds)
    (261/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.10044267 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.098554974 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.120161606 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.097823626 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.112950833 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.091518872 seconds)
    (267/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.133565617 seconds)
    (268/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.079818703 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.120567242 seconds)
    (270/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091277893 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.128900548 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.097841323 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117203139 seconds)
    (274/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.078700095 seconds)
    (275/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.135247232 seconds)
    (276/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.11324737 seconds)
    (277/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.11978063 seconds)
    (278/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.087394324 seconds)
    (279/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.100576509 seconds)
    (280/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.078681639 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.11671786 seconds)
    (282/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.094267179 seconds)
    (283/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.117434189 seconds)
    (284/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.079190009 seconds)
    (285/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.118819966 seconds)
    (286/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.144510841 seconds)
  done (took 38.113589787 seconds)
done (took 38.991349705 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104226791 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.155781467 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.102493136 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.144589682 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.127481934 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.108422481 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.124417664 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.10225639 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.127787022 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.104647889 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.130448307 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.109197033 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103309643 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.125758625 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.103908853 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.145280677 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.105290453 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.121592141 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.093955758 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.118658498 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.094089515 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11887605 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.09542543 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.109388628 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101618937 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.125215059 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.121097801 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.102271512 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.118909512 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.092474732 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.116287642 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.099439354 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.116563285 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121998924 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.119511365 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.094300515 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.12623592 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.101057045 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.12021101 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.094678611 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.122087339 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.094984227 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.121463086 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.099757506 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119315232 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093665475 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118161227 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.10518606 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.145616901 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117983889 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.099230769 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124859686 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.10433024 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.122421393 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094209792 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.117161054 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.095688303 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145705556 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.093738956 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119374474 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.09952851 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.122233591 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.093582201 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.117945233 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.094936701 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.127683485 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.1011871 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117558508 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.101215276 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.122135873 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.089745598 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117367182 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.092975942 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.115597647 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.100496175 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.125567427 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.089377985 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.119530507 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.098543384 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.119663343 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.095005625 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117038795 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.097079928 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.119376755 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093362321 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.109335133 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.093570773 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.119997503 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.094710279 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.118378001 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097865591 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.121031296 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.096739826 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125019612 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094660929 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.119486727 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.118294247 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.095967183 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.120224176 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.092973232 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.113648772 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092961532 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.099218636 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.117856998 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095212375 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127230372 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.115506346 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.097795604 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.117737929 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.094756952 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.131368051 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.102032674 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.118544088 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096046422 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.114760836 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.099241453 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.116559274 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.093133496 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.116172263 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.09522425 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119652518 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.095881006 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116680202 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097733507 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127088639 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.091037159 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.117783154 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093941497 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.118650614 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.098127184 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.119334782 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.092790121 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.118066303 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.089934924 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116935822 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.092882599 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.12223178 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093634793 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118045867 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.096140851 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.118506215 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.097606745 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.119561671 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.096846861 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.117978426 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.087778119 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119081242 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093217694 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.120290013 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.096183874 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.119575071 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.09087983 seconds)
done (took 17.610519191 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.10183525 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.188799535 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15072762 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.154653312 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.152461617 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112531968 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.129575637 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.15100111 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.103549935 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.148811461 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.149469845 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.140606147 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.130855239 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.126836995 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.137449461 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.102857771 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.125084687 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.135304069 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.136077031 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.145928956 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151466622 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.103261229 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14718907 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.14627874 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.100289736 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.155961212 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.128538759 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.102297327 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.130089109 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.132476161 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.118459052 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.129825806 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.127098329 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.114187614 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.132674261 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.100240037 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.136378566 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121835496 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.101823382 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.126215292 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137682471 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.1137767 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.122079519 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.108737664 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.126973849 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.129915465 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.101429373 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124748183 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.102674962 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.120312644 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107159577 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.147447266 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.124004596 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104338077 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.127932829 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126228444 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105378622 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.129038583 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.104120849 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.12985449 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.125820916 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.105822904 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.131660985 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142668891 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.101445626 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.128966988 seconds)
  done (took 9.286796026 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.117577694 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.155927004 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.133210854 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110337439 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.129692924 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.09097803 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.115555393 seconds)
  done (took 1.792243607 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092991911 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.145977378 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12604133 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.149622571 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.137324958 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.129341881 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133834519 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.092887227 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.143445457 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.129232581 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.120550359 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.174218322 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118450649 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.105056924 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.152092741 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.116430682 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.128311279 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.117069857 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.101124818 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.149948412 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122485262 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.115409069 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.131281194 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.093346461 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.139074276 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.094767777 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.185150011 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129489093 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0927614 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.123768743 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.098145373 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.189235326 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139503587 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127987543 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090777101 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145718117 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.113677194 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.1221669 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.141992796 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097830399 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.138734512 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.100175745 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.124766912 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.09827978 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.124960791 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.107169179 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.129890528 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.126164832 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.09867896 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.145144729 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.103631488 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.140499044 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.119455292 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.097508014 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.127715371 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100610476 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131844113 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.0993834 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.145583244 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.100690212 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.144798992 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.145037007 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.114085302 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.145296156 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135644708 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.115018583 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.139056369 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.098715619 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12546885 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.100120787 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.145429125 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.121803106 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.103901814 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.133314806 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101534102 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.145736651 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.145791514 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098354767 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.13030251 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.097558776 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.121280051 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.09348417 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.133533631 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097273286 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120486134 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110279038 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129802678 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.123244443 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.097739444 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.140476183 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.097924822 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.131851282 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.129205274 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.097960136 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133527463 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121119353 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.130392159 seconds)
  done (took 12.858099944 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094907767 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.094677755 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.125122255 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.120125147 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095686193 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.09462178 seconds)
  done (took 1.576407452 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.125279456 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.122495319 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.109296806 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.125698036 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.162830094 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.11812809 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.143929721 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.127621785 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.114737577 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.133883986 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.117705542 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.144985256 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.148153546 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.102108563 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.142255977 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.102192637 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.143497638 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.097526159 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.134733095 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122284264 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.110640797 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.125558514 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099029721 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.141603721 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.101554613 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.128033532 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125408597 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.109534732 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.13412387 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.104565065 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.126773427 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.101442031 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.128571963 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.128450702 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.118401979 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.125906855 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096069267 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12906055 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102083586 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.127143513 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.143984916 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098077042 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.132606707 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.105987064 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.129470081 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.101810118 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.128633547 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099724818 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.143491551 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.128771786 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.104533416 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.126813762 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.101523654 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.12892642 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.102065399 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127965923 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.103553356 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.143800677 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.126845531 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.101292263 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.123600294 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.102357868 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.129258272 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.101595862 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.126481187 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.102851161 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.127456004 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12296137 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098813618 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.125987003 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.104359749 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.123377959 seconds)
  done (took 9.626713917 seconds)
done (took 36.074560504 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.698506602 seconds)
  done (took 1.645150523 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.869978484 seconds)
  done (took 1.819375527 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.733748444 seconds)
  done (took 18.71674943 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.524229654 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.626262452 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.974357268 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.170977661 seconds)
  done (took 3.243497301 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.969207235 seconds)
  done (took 1.936186474 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.313029053 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.265817917 seconds)
  done (took 1.531336108 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.836497209 seconds)
  done (took 1.796459441 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.570690075 seconds)
  done (took 2.527380115 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.354621936 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.205157416 seconds)
  done (took 1.532137221 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.587982028 seconds)
  done (took 1.554498922 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.304402215 seconds)
  done (took 16.275735896 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235172465 seconds)
  done (took 1.216126955 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305498884 seconds)
  done (took 1.274940465 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.632382261 seconds)
  done (took 4.599511449 seconds)
done (took 60.624173283 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104453194 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.133516545 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108604293 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.129933269 seconds)
  done (took 1.437515759 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.108598353 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.127003935 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105434737 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.127069993 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.110104766 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.12707138 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100887393 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.133621204 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.100737932 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.130076547 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.126228582 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.103140873 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.127769001 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100923025 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.125180002 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.103639987 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.130857609 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.101324281 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.127002112 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.102605254 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.126525445 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.102352254 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.131122451 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.127498809 seconds)
  done (took 3.775512047 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105403236 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.098046207 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.12588809 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.096899656 seconds)
  done (took 1.396883578 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.109311171 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141570018 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.115872185 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.134138238 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141910508 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115490752 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.123732514 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.09843455 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.126162495 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.109558271 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.124580481 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.118933745 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.141200209 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.11790821 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.111403035 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11730768 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.09489264 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.141603806 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.108978924 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.135904753 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.09856647 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.133821464 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.106299431 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.137498883 seconds)
  done (took 3.880924941 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.175305593 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.138137745 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.147549357 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.171660063 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.125230902 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.122490669 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.12345913 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130847143 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.126914728 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.098088221 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.123472901 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.15334049 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127519314 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.124789274 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.097966353 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.129318395 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.105369118 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128102806 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.099683576 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.136768484 seconds)
  done (took 3.56188175 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.10551317 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.123381561 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094453722 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.122540817 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.105159114 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.126190653 seconds)
  done (took 1.655635329 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094997761 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.093438599 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.11933896 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.09329749 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.123471711 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093298355 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.117132856 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.0944488 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092211787 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.120326085 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092742903 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.117638928 seconds)
  done (took 2.225854513 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.494253495 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122541316 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.124432072 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.098694927 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.128232478 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096887009 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.137760121 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.096027405 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.178622915 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.124929386 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.112387307 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.17711713 seconds)
  done (took 2.867872339 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216433746 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102492235 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280137947 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.381998209 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164623446 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172128607 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283034204 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173033331 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.192952526 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143263532 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210306234 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164133665 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133801431 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184889017 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146873702 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.19118638 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183692527 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205589208 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155254634 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245139472 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170901404 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147148093 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.222228354 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131397055 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143789996 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165547355 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123886563 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109191531 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178586967 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176279508 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20454271 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128073072 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144550185 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205998764 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248574412 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184323344 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.309247791 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139747031 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.197750448 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.197909227 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282962106 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146453572 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201993758 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161371472 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135870354 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185745672 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162436238 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.187600238 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.110952757 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14790105 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189548278 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183937688 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.186595793 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144793447 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32545349 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127447233 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.152679918 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187365364 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196367962 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231666402 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146295348 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.129339935 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193070921 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196935398 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187173061 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152463759 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.173589499 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131645233 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183531797 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210778836 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184489486 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173708952 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.219091039 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139613659 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169395595 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185925391 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132121026 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185812863 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166671308 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.127765208 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155265819 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115558351 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135224673 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.190880513 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103216516 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219817875 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1435356 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.295410917 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240993085 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164591569 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140461096 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17145271 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202272029 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12627932 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.125465559 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152760041 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.177067399 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136291426 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138900974 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164545933 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15234245 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.104753796 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158575737 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.13013986 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164569335 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.114523097 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173942985 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17139513 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.135803923 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170919357 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128574034 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.164312928 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176441836 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201814427 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140836979 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138916163 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211067946 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165085687 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.115682646 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190106166 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227662326 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.179470693 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116551954 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174529421 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229835467 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121365873 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230713471 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121202503 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140788928 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.15759973 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164546253 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16395264 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.134466322 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135633386 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158636694 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209084371 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.13431628 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115386094 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180803577 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133762845 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133624801 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123678687 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143609459 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.147987173 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.129416994 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146759472 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162851678 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166880811 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160039166 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165198779 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148859071 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201060019 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139096175 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.138845903 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15545876 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123934322 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.186266203 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200651481 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107138282 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220695188 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.175008772 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202442308 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168899235 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136451167 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187031762 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108632231 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.126039654 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173197745 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166554868 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168465738 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198363047 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199472081 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.172615116 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.15907825 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155635968 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173625158 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.191732479 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163749389 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.151514275 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142931223 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201966729 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101333304 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.129596817 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.105884267 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147232839 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136642321 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11101565 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188061395 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16965731 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222069675 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166355056 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118200885 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198275361 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.133715008 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170927184 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178144137 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146039244 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200680931 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197927653 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173938329 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150260179 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178864088 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098354182 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132849698 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.137546711 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173303337 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112241359 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140456322 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149589682 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198586419 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182194053 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155939337 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210477043 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173612076 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209013 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.128452017 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171332115 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186889555 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136242394 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.193518404 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140038715 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.167617572 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194075579 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121952683 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231070571 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168782938 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174132953 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207261519 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163603129 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136529674 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128458 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174129324 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148269862 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17833788 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15198241 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11367193 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159081054 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.144201021 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1320449 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187592641 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148793391 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186100783 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.173866171 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181840458 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131611308 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122670053 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168049277 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152567624 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.095844739 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175160376 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232107026 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150570613 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164842434 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191408338 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108104872 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.324430554 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231747275 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192389443 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14463337 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121454388 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169550778 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177194104 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171714361 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190166019 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151488747 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18811775 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165070103 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.121110259 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142708075 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154496497 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157246012 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.129271984 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.142331292 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160483787 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.150018222 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193912139 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151930554 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167027244 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170717007 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.127285071 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.162448402 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147377047 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21927464 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165621351 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186899501 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.162951738 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.182098839 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195855647 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10256622 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136568175 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.104906229 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189213747 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139443915 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16633069 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190318775 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229237643 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13903074 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175396393 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145695872 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.129324992 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137905052 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1559655 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233110039 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122170493 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.1421446 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206997129 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.158738566 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138710541 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172554403 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287879128 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150379327 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191306402 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.09937352 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.288550261 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132802051 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110288763 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176644509 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178033405 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.139409704 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.189574409 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171577106 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123222273 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177368535 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144924349 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198773538 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242869512 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178704813 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182155321 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.120751972 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16431708 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168964322 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221145973 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122023376 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.152638891 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170073243 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203131728 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.201886617 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140203194 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168580971 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168557697 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137902021 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210325945 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11205793 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194301086 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138737379 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172321346 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146459835 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102283154 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165385512 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191076434 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140506239 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191661339 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165628864 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138163017 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104565862 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158809258 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166013894 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150297104 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.107811848 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185551863 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.137046337 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169171605 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186669514 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108230348 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162100582 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152876258 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107890102 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148690733 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152275513 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141526397 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.150866344 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197325546 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138047264 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192600076 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178040147 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172345217 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166544602 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151880295 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668248335 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106817064 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198526521 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154853888 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194411131 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15648737 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173865144 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167385131 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156241074 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175036169 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12818799 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229174848 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172742007 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165221413 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138235137 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12194013 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152026388 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.138700174 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158711639 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16856253 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118800414 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.144143149 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.163804314 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15248415 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.122650102 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147101821 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201891012 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154593711 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190204504 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192060887 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145183905 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171910355 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183635771 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107483399 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.168495872 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178403737 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15027101 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158190674 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136863451 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.11336036 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188094041 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.13020975 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168812152 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137958539 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167493203 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169602979 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.141407574 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166933162 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149013248 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139381264 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132958688 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161972517 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164707891 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10914928 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134911934 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162346193 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166539313 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.135227383 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133795644 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.177438107 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198894851 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.102666644 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14105656 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288322835 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166269389 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201056125 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.160571905 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112942885 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1521073 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162916666 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.160705882 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16575141 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.106307557 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139941557 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13687248 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.186738432 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.144268488 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164363035 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192713655 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168540978 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196752288 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.143009469 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.271645262 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117608557 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162880586 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.137883895 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107031647 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149437097 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141662822 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123377596 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.227040933 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186323053 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.133053333 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.153010525 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134624346 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.102556777 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140116003 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179437414 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16217221 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136504001 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151353653 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.125159489 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150289216 seconds)
  done (took 80.440874625 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.156503951 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.148680947 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.152829587 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205156641 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173385493 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.261809086 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212279839 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.2345445 seconds)
  done (took 2.608361398 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.106992175 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.14183421 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.147924691 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.130018428 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.130069555 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.352745563 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.141862026 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.103048286 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.190683651 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.141928109 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.128284037 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.619901478 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.10074306 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.131922528 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119645754 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.130783036 seconds)
  done (took 3.878059088 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.380471768 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.544078271 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.095661756 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.23864084 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.248636241 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.162630411 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.755695029 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.169779884 seconds)
  done (took 12.659986687 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.131316346 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147321132 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.146188872 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.173519723 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.157707274 seconds)
  done (took 1.830352887 seconds)
done (took 123.180750189 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.102472132 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131760718 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102310178 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132805554 seconds)
  done (took 1.528019447 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.114697449 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.086592467 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.11906242 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085854159 seconds)
  done (took 1.472104675 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.438798129 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.117115504 seconds)
  done (took 1.660612335 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.126497879 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.14318175 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.126428609 seconds)
  done (took 1.470630704 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111203714 seconds)
  done (took 1.187187053 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.11410614 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.111710688 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.149587799 seconds)
  done (took 1.4501739 seconds)
done (took 9.834668809 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117335389 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.438536367 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.391293494 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145059082 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.727859992 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385460287 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.05501986 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.161883489 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.170520788 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097279174 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.144563388 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678262648 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.042556703 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.353682834 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.029065279 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.344899015 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.709749281 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100144452 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131486779 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098086761 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.033800616 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097007626 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126881589 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.099696436 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705854366 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.40156025 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125968859 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.35802001 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124637383 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101614213 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.41541956 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096973276 seconds)
  done (took 17.073052707 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.099803008 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186232073 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.10497356 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127409221 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.10138751 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127962823 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.107730572 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.138706829 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18507057 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09727171 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146944828 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123011756 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102637625 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097597172 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.15049379 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12510622 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101406413 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099672889 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133033546 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126547793 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118145704 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125196292 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100191422 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128143955 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098395665 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139025714 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098976935 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.137175879 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098106755 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131230289 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103220579 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126166133 seconds)
  done (took 4.967028087 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147284097 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.195851799 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135032569 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133118877 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.177094657 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127574316 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.213292417 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.134956715 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189950361 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125747805 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11761763 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126741014 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.164143294 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098717158 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.148094925 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097746718 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128454489 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100924425 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132267028 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099417373 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.146482375 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097239394 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127234263 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100162247 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.127105553 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111841656 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126553979 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.109674085 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.127907728 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102509645 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.133101623 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096692913 seconds)
  done (took 5.279700985 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.104957901 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.132496774 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115609356 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.143008284 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100921733 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.13235768 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.105672784 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.127888624 seconds)
  done (took 2.047609999 seconds)
done (took 30.442130257 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11594588 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.10272359 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.141537568 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.138921608 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.108003458 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.16091369 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.097273859 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10898846 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.140316389 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.105899098 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.142308226 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.096464089 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.127576973 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095836763 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.140509399 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.103306878 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.141018234 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.107514403 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.147135965 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.113237873 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.128188955 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.11069733 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.137756997 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.118208123 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.147886159 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.146011796 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.115408634 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.132338492 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.098495585 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.127349038 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.115358962 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.151811077 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.102257255 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.143165397 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.102475888 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.131370032 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.099046771 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.127523432 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.113553826 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13706328 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.104012796 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.136998726 seconds)
  done (took 6.234653588 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.126260124 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.171369907 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.095619933 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.125029304 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.095071562 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.166365729 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.162001576 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.095447675 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.123628523 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.122919549 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.15326427 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.095892736 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.125658889 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.095840051 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.124010282 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.096897656 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.150983472 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.121544591 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.158584908 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.156706589 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.143904686 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.159486868 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.161364107 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.123642027 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.171009048 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.163308644 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.118906706 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.164603326 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.154367262 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.096003749 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.158728636 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.129691758 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.125239648 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.09540687 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.169106782 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.163698768 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.126432645 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.168858019 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.158667036 seconds)
  done (took 6.403595053 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.106621845 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.143703196 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.124619421 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.198563482 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.169104627 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.113574868 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.14079363 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.116676104 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.156483018 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.097742736 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.139312444 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.131147946 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.144953909 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.138108162 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.103778471 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.14178503 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.119027455 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.12844848 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.106035509 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.147199437 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.117035099 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.141474973 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113195623 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.139148791 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.097680092 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137450669 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.103558093 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.142373961 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.104694754 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.136561252 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.102212267 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.133378978 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.101050156 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.138778733 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102078235 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.136697905 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.15005494 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108743836 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.141507196 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.132569004 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.13837065 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.102477202 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.149431063 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.175640952 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.101044789 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.135403097 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.110251115 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.137261606 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097133893 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.147008107 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.113230554 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.129086754 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.114183097 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.127067427 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097960882 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134757537 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099572916 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.131022276 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.107565457 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.131850181 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.120170718 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.1375769 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.106855525 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.13045583 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.1049276 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.127596722 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09765832 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.133455788 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.123049522 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133370394 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.159906561 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099879787 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.133743033 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.108079242 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13476096 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109197887 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.128212029 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106421317 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136788171 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.104899887 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.136586747 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.10208692 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.132029112 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.117796787 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.143775547 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.107022361 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.133513014 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.105588756 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.133165161 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.100986405 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143034 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.100019227 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.134140186 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.108765678 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.132300993 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.101911328 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.136199571 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.104629143 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.128955569 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.148482957 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.105376507 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.098679005 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.148033367 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.128829971 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.103722802 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.137351776 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.111750537 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.128352802 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.104182574 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.134584457 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.099379226 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.133014983 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.103372854 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.098245383 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.14298529 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.139066024 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.105111434 seconds)
  done (took 15.636523499 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.248071718 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.227900139 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.200327634 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.31192642 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.151875997 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.125224884 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.224746553 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.180580999 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.12970743 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.169222716 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.184672657 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.195574124 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.153466463 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.193839885 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.189367664 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.130896566 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.162109708 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.153105308 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.261488094 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.278703829 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.163585153 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.143930036 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.169798073 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.139847495 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.146915704 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.146083229 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.123330338 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.150823328 seconds)
  done (took 6.164449388 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.115710115 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.169603963 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.106203625 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.160543589 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.154888497 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.099013641 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.135017741 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.099794838 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.144581088 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.144367707 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.100991359 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.135190125 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.105606426 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.137848981 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.100169855 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.138329045 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.109641122 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.13790485 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.103033345 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.132358912 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.117302921 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.146614976 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.104538228 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.137086045 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.146733314 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.106203814 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131422142 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.150616125 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.109479458 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.158927478 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.095946403 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.138518075 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.1138807 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.128846504 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.105454335 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.131992223 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.100730194 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.131065678 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.102963841 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.126091106 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.099588254 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.118811918 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.106240391 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.144647011 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10694294 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.13030535 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.104875513 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.135488508 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099955983 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.126115102 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.10119218 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.131275288 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.104125703 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.146254255 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.10260741 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.130018641 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.103779111 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.129095873 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.110899123 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.102221685 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.126140265 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.104555677 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.136182221 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.134518286 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.107924485 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.135845835 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.105173595 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.132119483 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.104506186 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.137900578 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.102976107 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.142153089 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.096697778 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.132047744 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.110153673 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.142472665 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.10347301 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.134914889 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.106684366 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.129124359 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.08928671 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.127573664 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.086976779 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.102624749 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.128897074 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.104696227 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.133353317 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.104714105 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.146611975 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.140073673 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.106987975 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.129748803 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.106872095 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.13472936 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.097163073 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.13429454 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.117306058 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.148731763 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.097276638 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.126963489 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.121076902 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.131242537 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097349477 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.118299594 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.109464611 seconds)
  done (took 13.830903186 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128683405 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.168449637 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100325161 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.149440216 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.16499301 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.128963625 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.146159675 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.108779804 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.130584289 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.121599915 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.137916252 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108885691 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.137810817 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.114771866 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159887063 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.113374839 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.132375039 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.115841589 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.136891121 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.1713295 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.119399354 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.158300039 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.161703158 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.112494686 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.135615873 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.124556253 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163449156 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.113215215 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.14340393 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.163464229 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.113254936 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162189262 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.133080129 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.136535283 seconds)
  done (took 5.740596556 seconds)
done (took 55.087968819 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.215956052 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.429939739 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.178093585 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.178742302 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.230829356 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.221407676 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.18190692 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.375404638 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.96821007 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.168147406 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.18126605 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.183965135 seconds)
done (took 27.622856669 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.257425664 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.765143507 seconds)
    (2/2) benchmarking "String"...
    done (took 1.496711734 seconds)
  done (took 4.37215711 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.179218675 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.182179421 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.429901091 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.179791316 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.197860613 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.199281875 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.182339988 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.191536063 seconds)
  done (took 15.671517429 seconds)
done (took 25.586891032 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.25473702 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.369019973 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.450716237 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.212569876 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.181723111 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.193029801 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.183487422 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.22148799 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.189215048 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.186251709 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.19188231 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.448954479 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.201947583 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.556014613 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.182284674 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.195459832 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.21191484 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.409922214 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.200668909 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.223911448 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.168314944 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.193509209 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.204367637 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.221102934 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.201983006 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.186399681 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.241241731 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.185690623 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.383264733 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.193721566 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.221735457 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.187376272 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.234933431 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.192026548 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.293843142 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.210452356 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.372073437 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.188732778 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.168377957 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.196025797 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.376073026 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.590740456 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.18388714 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.195468614 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.197893421 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.264245395 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.169490861 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.901322961 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.189355076 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.196041046 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.1874649 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.546041792 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.187252063 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.193903548 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.191940951 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.412556884 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.184003665 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.232616434 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.212422506 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.187273848 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.18512266 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.183910347 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.20210951 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.200293267 seconds)
  done (took 142.392486677 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.181849124 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.185958986 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.186014457 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.205109856 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.187646666 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.188829597 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.183653446 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.185237949 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.18801607 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.216274968 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.187977323 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.187293767 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.192593496 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.143693373 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.185402441 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.197473087 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.186013694 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.189348774 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.20898987 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.185886909 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.195051128 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.186561837 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.204902482 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.187436872 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.192591944 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.26302714 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.237985166 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.188987754 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.186537093 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.186452575 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.189587955 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.19697261 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.819252667 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.041857621 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.200580912 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.219277354 seconds)
  done (took 79.579111158 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.18584124 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.184822216 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.185006628 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.218235251 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.184705653 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.185634408 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.773971523 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.776808091 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.915062151 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.456025992 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.58830394 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.449183726 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.187280684 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283096857 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.2019323 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.188206166 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.188168479 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.203573378 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.21460246 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.190930258 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.187550925 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.75962112 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.199970815 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.21334308 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.382451538 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.204730419 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221278514 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.585740101 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.188555643 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222342522 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.521805936 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.24013377 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.188447828 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.549428209 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.999343538 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300303036 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.189249333 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219552348 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.186128642 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.47168413 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.188392072 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.187570282 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.189925943 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.843620331 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.18717376 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.779774816 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.191759341 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.137868524 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.188826717 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.188439086 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.419269492 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.839896455 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.205753911 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.188009652 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.189907949 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.187654365 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.188280348 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.220320496 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.333216627 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.300230698 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.188931351 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.190075671 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.220957823 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.18754375 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.208676564 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.189398118 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.877157246 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.249363402 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.295994175 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.77308005 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.192803679 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287973218 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308324234 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.189098991 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.189038502 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19023059 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.188575729 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.299418618 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.188736535 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.60358347 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.366593661 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.208727386 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.57828972 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.288185119 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.18826971 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.597832486 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.190532463 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.186655421 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.927736183 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284388639 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.187674354 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.185849356 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.186129436 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.595025518 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.765193612 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.453726507 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.191617637 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.187710802 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.622967775 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.190401338 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.607296377 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.743954579 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.89798208 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.192738417 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30036467 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.362695658 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.205940215 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.187428267 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.556977195 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.191346865 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.247962759 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.187443768 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.188176317 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.585632061 seconds)
  done (took 364.925684098 seconds)
done (took 588.0042008 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.908746541 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.856652868 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.983007506 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.882824281 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.84870201 seconds)
  done (took 10.592771192 seconds)
done (took 11.703915183 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.381853212 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.38612446 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.252161935 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.387479811 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.224293278 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.403079261 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.36588499 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.213946168 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.295443087 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.274988667 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.296338115 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246811245 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.228455381 seconds)
  done (took 18.070249384 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.457486064 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.192860129 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272659622 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.440811911 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232466234 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.456324766 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.48984503 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.192700698 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.33366438 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.201981659 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.202367979 seconds)
  done (took 17.586652607 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.459741331 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.19241469 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258343821 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.437849563 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233952812 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.46100878 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.491421903 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.192107695 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.334623859 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.203089711 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.202549636 seconds)
  done (took 17.583267174 seconds)
done (took 54.351866821 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.229762465 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.361892176 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.220487694 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.205556964 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.199270388 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.199736433 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.205954421 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.197942348 seconds)
  done (took 10.936665606 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.196733156 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.193762642 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.19516718 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.198381875 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.198260418 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.197207387 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.195897455 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.198583719 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.195336471 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.195267322 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.199242463 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.198518057 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.198654482 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.198227278 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.197793058 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.196696133 seconds)
  done (took 20.270348702 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.199250428 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.195144548 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.194949875 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.196335653 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.197365229 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.196976024 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.198005983 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.196750622 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.196517188 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.19662027 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.197965387 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.196830357 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.19693328 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.197016106 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.197308341 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.198299243 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.196603168 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.197401904 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.203111448 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.197982515 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.197635666 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.197276886 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.198533733 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.199221599 seconds)
  done (took 29.859412735 seconds)
done (took 62.179296272 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.193160964 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.198544202 seconds)
  done (took 5.507463429 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.262276665 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.262789988 seconds)
  done (took 3.64409739 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.202428136 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.200650416 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.201582615 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.200678404 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.200523749 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.200619328 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.200749481 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.2010141 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.20045696 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.202072551 seconds)
  done (took 13.127978078 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.201611638 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.201898633 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.200009285 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.201684987 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.201271226 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.200264678 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.201888808 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.201770098 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.202049109 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.198337415 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.202040885 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.198482488 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.202865678 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.19990711 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.202912752 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.199403392 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.199942853 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.200033817 seconds)
  done (took 22.735340849 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.214987247 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.222410045 seconds)
  done (took 3.55666508 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.340426833 seconds)
    (2/7) benchmarking "second"...
    done (took 1.24155919 seconds)
    (3/7) benchmarking "month"...
    done (took 1.316911227 seconds)
    (4/7) benchmarking "year"...
    done (took 1.307332084 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.240657029 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.221362266 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.241601326 seconds)
  done (took 10.030325308 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.20304623 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.390944226 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.499231757 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.763601624 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.202862498 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.205943468 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.081187747 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.206330389 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.20835631 seconds)
  done (took 13.882821436 seconds)
done (took 73.600771909 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.194345902 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.229726649 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.213434588 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.21152228 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.515484155 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.212818806 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.199036317 seconds)
done (took 15.895616218 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.186316731 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.186477342 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.19336091 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.20002742 seconds)
  done (took 9.886298734 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.196455842 seconds)
    (2/2) benchmarking "read"...
    done (took 1.550226765 seconds)
  done (took 4.867934655 seconds)
done (took 15.872962765 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20431167 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.204216982 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.201303899 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.205416063 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.201281704 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.202414809 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.204808572 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.205001772 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.203447194 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.204744334 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20510754 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.201772913 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.203373976 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203357409 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.204460884 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205641611 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.202842174 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.20234646 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203491245 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.203355119 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.204979636 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.203564587 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.205683822 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.205305663 seconds)
  done (took 30.01455866 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.206358212 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.203102401 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.206619435 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.207266681 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.204601161 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.205388115 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.206148649 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.204493959 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.207844087 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.205926015 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.203278984 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.203243044 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.207338717 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.203919754 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206773415 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.204936508 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.20625155 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203829947 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206183904 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.204003694 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.209067533 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203837671 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.204230212 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207468505 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.204953185 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205732919 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.210044811 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.206130843 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.207271819 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.205480631 seconds)
  done (took 37.29643823 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.213811035 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.215421799 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.208185777 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.207211646 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.208902385 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.2089861 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.209422261 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.20778431 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.208232189 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.207771812 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.207478262 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.208506687 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.209039813 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.208538822 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.20799525 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.208182908 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.20906949 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.209824742 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.208930423 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.206801289 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.209897526 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.207844399 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.207783673 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.208452578 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.209842147 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.208529295 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.208751697 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.209617112 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.208858608 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.20884656 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.210912123 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.210161209 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.209943808 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.21169317 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.209531986 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.210471677 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.214000347 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.217075196 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.209331122 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.211044806 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.209758668 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.210524181 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.208649634 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.210063697 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.209376038 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.209533604 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.209278015 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.210407677 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.211778481 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.210741969 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.21122826 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.209629676 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.210938285 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.211781177 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.209788258 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.210896032 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.211265292 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.210189833 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.211265864 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.211586057 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.212866054 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.210550126 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.211196807 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.211733037 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.211754561 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.210761794 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.210963613 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.211615004 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.210863163 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.212287835 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.210984361 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.21161311 seconds)
  done (took 88.255801295 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.211493475 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.209474223 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.209927747 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.208501245 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208938723 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.212330552 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.209435178 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21175349 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208719342 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.212632345 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212489275 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.210833947 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209888597 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.213368766 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211638386 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.209524013 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.2123427 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210179176 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.212673124 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.213203856 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21396555 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.211372933 seconds)
  done (took 27.773448847 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214012387 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.213208687 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.210169153 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.21593892 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.212401218 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.214889472 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.21335044 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.214127129 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214806294 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210758119 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211722972 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213668088 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.212412327 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211125361 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211430576 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.214108034 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214692133 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.213629166 seconds)
  done (took 22.966301558 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.212881917 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.213207591 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.215667069 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.211648855 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.210977146 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.215613322 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210675246 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.215265549 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.214647731 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.212352793 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.214538294 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217376134 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.21669476 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212820661 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216111969 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.212746591 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.215284969 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213004436 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215546237 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213124664 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.213294551 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217039776 seconds)
  done (took 27.842177246 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216319488 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.215348729 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.21423036 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.214097745 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.212663823 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.216434702 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.216461923 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.214142326 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.217500401 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.710416832 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214066059 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.215459096 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.215370411 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.214242742 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.2146411 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21482643 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.215739159 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.213327086 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216576753 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.214677416 seconds)
  done (took 25.928788283 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.215830661 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.217977845 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.218207885 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.218600946 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.219152901 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.219318957 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.218607056 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.218916615 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.219041737 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.218167007 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.218467099 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.2180587 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.218690731 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.217938847 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.219046724 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220290953 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.219090458 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.219027197 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.218599379 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.21899401 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.22048222 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.220199548 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.219454822 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.219197962 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.219822309 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.218445048 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.218847736 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.21978941 seconds)
  done (took 35.26137619 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219888237 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218529508 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.216059011 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.216317704 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.217352926 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.216808997 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.216777038 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.217048037 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220262884 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.216723102 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.219384633 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.221469569 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.220013009 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.218759696 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.218497852 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.220451789 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219251757 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.217953317 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217101815 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217955067 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.220100119 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219529643 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.220385834 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216060103 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216689028 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.219436231 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217329083 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217073425 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22004016 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.217494169 seconds)
  done (took 37.685874143 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.260401003 seconds)
    (2/2) benchmarking "in"...
    done (took 1.265823324 seconds)
  done (took 3.663986571 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.218445951 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222197697 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.222121014 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220250932 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.218953721 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.222378847 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.220826805 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218892657 seconds)
  done (took 10.900960559 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.221757768 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.22220561 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.222849411 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.222050231 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.220964605 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.222089224 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.229675604 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.241966126 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.222525111 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.223228217 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.22982679 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.230099794 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.224865587 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.223474623 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.222693061 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.224612018 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.222862986 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.224240231 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.223376577 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.222953617 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.222200675 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.226044797 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.225056742 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.220766461 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.227327059 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.233664765 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.228068973 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.223855393 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.223412154 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.22737796 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.224665534 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.221276871 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.222965047 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.22434818 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.224154723 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.223499839 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.233625376 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246978329 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.230320926 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.224853383 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.225048243 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.220430749 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.22587521 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.227115431 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227835475 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.22454408 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.224120051 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.222987676 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.224828911 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.230359474 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.230828215 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.225405944 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.223077351 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22836692 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.228444973 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.231997977 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.245595615 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.229949448 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.23626687 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.236794269 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.239905816 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.25162972 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.228260766 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.224558723 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238012748 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.250038131 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233275241 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.244190151 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.223888687 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.226475988 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.235107066 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240868906 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.253875199 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.226980459 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.227130753 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.227687377 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228022503 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.226527212 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234228454 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.249380772 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.226308446 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228923215 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.239417032 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252601461 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.228494216 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.22830989 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.228888068 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.228199863 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.230746911 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.238760056 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.246557802 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.228641133 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.227578466 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.229937664 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.229124067 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.228703727 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.229657178 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22895017 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.225755425 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.228495615 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229432197 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.233191577 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.238462229 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.2292984 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.229135926 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.236358965 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.230011348 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229264065 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.23627699 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.229461567 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.228328412 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.232174978 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.236259505 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.227253856 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234100088 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.238386971 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.228292141 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.231925981 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.229894995 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.231393071 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.24042468 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.255996402 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.230506627 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.230091325 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.236821981 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.242660138 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229092463 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.233791064 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.231431945 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.228064511 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.228017891 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.232158744 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.231986653 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.23183073 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231109267 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232923235 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.227424875 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.229764677 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.22997851 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.233892055 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.231717427 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.232300282 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.23272171 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.234021384 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.231576392 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.234622514 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.238538068 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.232094229 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.234126232 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.232473326 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.228849681 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.231066849 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.232079484 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.232437675 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.233199843 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232089008 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.233229805 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.232282017 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.233253615 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.233310626 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232329774 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.234205536 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237377028 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.234249566 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.238559928 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.232933819 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.232152984 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.23355281 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.233339481 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.234436502 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.232680931 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.23156334 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.237578472 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.241021837 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.233998076 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.232556488 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.236747609 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235347473 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.234839924 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23392684 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.238746649 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.24432536 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.233806117 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.243039716 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.233802196 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.233929849 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.234915414 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.234599266 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.235415604 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23510924 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.240463287 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.24299766 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247913378 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260938517 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.23723626 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.238568022 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.236286506 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.240266486 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.241008856 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.235131626 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.236161074 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.234698786 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236193454 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235087193 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.239310966 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.235206784 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.234853725 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.236657732 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.236296765 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.235816516 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.23714837 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.237992093 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23763054 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.233600783 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.236697538 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237029452 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.238880969 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.234220541 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.236644944 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.237432073 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.238632018 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.237941685 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.243397172 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.234319254 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239335638 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238627427 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.238062992 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.237335446 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.237762124 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240050098 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.237766059 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246386285 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.259473557 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.241031011 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245323046 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.257844353 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.238294329 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.240747307 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.237874376 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.236609436 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.242037255 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.245946846 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.239429631 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.239681483 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.240622806 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241133997 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239342398 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.245080219 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.237255547 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.240086853 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.239157537 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.241278265 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.237169615 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.240093024 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.241212796 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.240370481 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24227711 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238899197 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.239517377 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241031827 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.238305025 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.240054407 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.240416686 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.24505635 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.248037357 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.245287193 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.240932298 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.243072626 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.24137019 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.243644811 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.240839846 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.240260998 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.240835857 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253671674 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.265251579 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247235106 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.261048318 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.240706427 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246724766 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.262255018 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.246023858 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241371527 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241381724 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.242638655 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.242524705 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.237489461 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24105758 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.24119101 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243155156 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.243663935 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.246453658 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.242074552 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.242741196 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.241066711 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.242529815 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.24155671 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.241900041 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.241432805 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.243836874 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243858811 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.242250639 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.242792524 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250026196 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262907268 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.244847684 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.242598824 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.243408114 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.243597112 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.243780891 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.244293464 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.248066583 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.251208714 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.248133094 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.252286588 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.244943651 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25351203 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.243917001 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.247256414 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.250879503 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.243232163 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.244230831 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.243449769 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.244291274 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251107876 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.264163349 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.247388482 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.247576473 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243567797 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.244861048 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.244493992 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.244522243 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24587346 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.244016856 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252712192 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.268417603 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.248460754 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246192735 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.240990301 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.244484681 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.244935805 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.245051042 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248992371 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.245223007 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.246144114 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.244978674 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.245186146 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.245079178 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.24626227 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.246594867 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.243082729 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.245260952 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252351411 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.26754788 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249683685 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.245816821 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.251932162 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246194005 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253097508 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.265852903 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.248113881 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.244766162 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.245326343 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.247552599 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.24713389 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.246144118 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.24659853 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.247879427 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.250801273 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.245531399 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.249670047 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.247508149 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.246506582 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.247772446 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256469847 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271036503 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.249107185 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251990179 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.244943708 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.250182058 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.251105015 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.248145096 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.248439975 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.252434591 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260602239 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256463681 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.248641285 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.248624251 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250642472 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248052671 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.249121103 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.248971259 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.249180578 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.249544468 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.248338919 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.248858027 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252044849 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.249150529 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.249014299 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249953252 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.250490918 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.26007273 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.247871221 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.251674059 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248823509 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.252342811 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.249808889 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.251089387 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.249845951 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252044093 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249660549 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.25169375 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256782518 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.257014728 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.252864821 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.250753781 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.248837121 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.249164867 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.250165829 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248713448 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.250206319 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250932773 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.251752024 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.249010321 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.251507033 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.249159607 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.249166434 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.251088923 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250677465 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254039801 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.258926141 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252591454 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.247313863 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.249488996 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251246778 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.251079215 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.251981017 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.258503666 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256243671 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.263611185 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.261314971 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.256004098 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.251806172 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254846753 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.260291923 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.251975514 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.253379978 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.250671997 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.254658742 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.254284254 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.255894582 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253371769 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.258797524 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.25212164 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.254308083 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260096378 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.275850793 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252419158 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.255359269 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.258674404 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.252339349 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.250665377 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.252629866 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.253428622 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260685613 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.274102998 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252890619 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25546808 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.254430714 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.25664156 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259228805 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255517304 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.254981267 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.250451266 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.254897661 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254443677 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255030862 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.251825775 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.253893756 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.253588858 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.258282614 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.262575134 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.252073082 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255673921 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.254589889 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.255172527 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25567881 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255271288 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.251541423 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.252518993 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.254716231 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254313335 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.255813773 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.258697801 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.255263165 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.257250944 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.257859227 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.2552373 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258010301 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.268319351 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.263419957 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.25287414 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.256931727 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.25625873 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.258448841 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256588752 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.255582098 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260542187 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.257171549 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.256812761 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256503861 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.25633464 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.258996284 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272529 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.278833016 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255327468 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.256828711 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262146698 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.256580408 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.252789295 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.255847928 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.257792544 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.261789267 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.263845576 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.257405099 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263743066 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.277385275 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.257537938 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.2610506 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.26092761 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.264616202 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.260036742 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255461431 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.256211691 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.262530631 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.274448427 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257329485 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26781397 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.287639389 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.27778246 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.258877771 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.25714313 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258924999 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.257874943 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.259244718 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.257627342 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.258218762 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258586156 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.258671181 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.260470496 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264513125 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.260455585 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.26044828 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.259039357 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.259358305 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.261072083 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.256716525 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.259951921 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.257500881 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.260760898 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.259601738 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.259425843 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.259332742 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273709889 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.286486326 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.260358638 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.259958728 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.25706177 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.263015574 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.264838402 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272556042 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.267298505 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.260741862 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.260133507 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.262757733 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259602738 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.259600802 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.261315489 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.261320496 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261618833 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.25863586 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.274049413 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287200937 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.265829327 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.260304607 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26148195 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.260822558 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263351361 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261234912 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26108133 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.262576026 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.264958916 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266035056 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.262308805 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.261559882 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.266878853 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.270363913 seconds)
  done (took 743.187269445 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.259658793 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258357463 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.257597054 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.258883021 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258322245 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259166161 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257391238 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.259856386 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.259725384 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.258273579 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.259557708 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259258036 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.260165246 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.260308573 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260007298 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.259645468 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260374478 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260164278 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.26048576 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259180049 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.26144217 seconds)
  done (took 27.620624176 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.261917084 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.261350766 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.260281376 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.261744339 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260645886 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.263266136 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.260696191 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264463289 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.2649458 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260589745 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.263127406 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264001997 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.263148177 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.260534058 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261728333 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.264939285 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.264300399 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260825349 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.264944195 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.262259817 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.264489207 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.262078454 seconds)
  done (took 28.951162181 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.266995967 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.265034196 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.265620545 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.262620049 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.264889644 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.262090177 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.264931307 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.263999264 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.26494697 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.265625974 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.265771527 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.266829224 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.273628523 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.270996524 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.26732381 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.265194445 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.265100645 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.265347643 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.265267199 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.262843982 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.271632476 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.284788423 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.263006824 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.264220266 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.266237478 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.265014626 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.266873048 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.267975756 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.267499376 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.27072386 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.264936744 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.267431456 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.268081818 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.267101132 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.268582684 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.271948513 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.266556848 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.263671458 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.266054064 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.276546353 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.287215828 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.268002468 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.273127887 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.288791595 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.266532904 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.270707016 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.275604567 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.26502464 seconds)
  done (took 62.055225275 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.853524043 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.876500112 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.873479525 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.876656063 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.878589752 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.879219725 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.883177143 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.877564043 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.867232022 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.870492678 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.872830184 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.870645904 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.874338826 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.871679452 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.871646559 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.873577771 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.869540666 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.87061201 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.879852948 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.882991274 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.884770157 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.874503655 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.875060457 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.877563522 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.877042945 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.876287155 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.879612371 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.879520301 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.87810199 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.876284949 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.884100412 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.888282225 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.889309674 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.879506236 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.875264779 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.879416753 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.88314594 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.877380999 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.882723745 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.879934889 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.882348172 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.881426798 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.885995566 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.887235732 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.896438701 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.877656726 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.878473995 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.878956684 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.880808951 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.877025956 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.884554975 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.877891487 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.88318862 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.875476576 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.88309621 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.883879039 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.884465039 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.890434359 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.882017945 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.879347279 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.878616257 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.881212071 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.884000951 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.88234251 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.878906927 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.884996321 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.885963893 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.886982511 seconds)
  done (took 128.966801754 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.272060942 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.272592884 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273601614 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273631821 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.272138902 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.273427962 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.270032671 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.272293871 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.274085932 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.272524115 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.272300186 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274827692 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.274301224 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.274732082 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.273048957 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.272138168 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274741284 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.272912613 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.273293137 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274441005 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.272951404 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.27366917 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.27385891 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.273460831 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.274964724 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.273438198 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.273998142 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.274350196 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27377146 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.272641048 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.273489968 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.273097663 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.274891931 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.274510601 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.275785001 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.273897067 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274522979 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27339528 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.27423289 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.274235585 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.27465496 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275214496 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.274007179 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.274748856 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273964538 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.275496249 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.274591502 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.275907466 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.277149007 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274950424 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.276269052 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.275324007 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274562501 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276111635 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276730657 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.275515426 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276049769 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.275918237 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27606839 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.277009963 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.276392642 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.277607338 seconds)
  done (took 80.191743973 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276078477 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.274203307 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.274845249 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.273093334 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.274930384 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.274366819 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.277449684 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.276208191 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.276836809 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.276529478 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276706498 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.274349849 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275641972 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278385849 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.276009013 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275844637 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.274817494 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.276166417 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278742948 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.275272287 seconds)
  done (took 26.703245247 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.275031462 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.279281288 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.274035594 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274760991 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.277928947 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.274965164 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.277976297 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277038826 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274527755 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27864999 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.28047963 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.278302025 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276291998 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.276220962 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.280141717 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.275865082 seconds)
  done (took 21.621230071 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.275575413 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.277752237 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.279340154 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.278171893 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.275549787 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.276448018 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.279186705 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.275506963 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.276774024 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.280524958 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.279322425 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.27928465 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.279852044 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.28015868 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.277387026 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.279812411 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.276774967 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.276858232 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.279979198 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.280388935 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.277528047 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.27755918 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.279091244 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.279887479 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.277772819 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.278317365 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.277895979 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.278431302 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.278141068 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.280107658 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.277331186 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.278330931 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.278106391 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.27773072 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.281309382 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.279745924 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.280789315 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.280246986 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.282293062 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.281038629 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.280010952 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.278778716 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.282392083 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.281690383 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.278560512 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.281469199 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.279010132 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.279907937 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.278567092 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.28003797 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.28126726 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.282117088 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.28346186 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.282914411 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.283892369 seconds)
  done (took 71.549144773 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282652908 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.283393119 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.280143948 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.283404414 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283613009 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.279434415 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.28261918 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.281752321 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280507091 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.283499979 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.281535808 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.284542103 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280684046 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.28372876 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.2820373 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282989102 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.280432517 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.281524293 seconds)
  done (took 24.27103759 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.281691249 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.282483675 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.283927878 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.281112493 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.280402596 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282951608 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281923331 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.283591305 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284242476 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.281828146 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281369981 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.284161196 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284459938 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.285291723 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.283101397 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281948214 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.284462995 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285283922 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.282837956 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281885133 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.284746465 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285263012 seconds)
  done (took 29.422602755 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.28425373 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.284560232 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.285148144 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.30206639 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.30469006 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.283792073 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.28527745 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.285341348 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.308450138 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.344576697 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.337523518 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.306354354 seconds)
  done (took 16.805603239 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283148932 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286333389 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28377129 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286037365 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285207166 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282635973 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28350243 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282799847 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28721662 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2831371 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284222224 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285390928 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286515083 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283937598 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285804639 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28715529 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284351357 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28393415 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284128367 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286795603 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2835066 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285279006 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283961487 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285162128 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285544897 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284257834 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286614144 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284743802 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284308275 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287203853 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287285377 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284498975 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288283994 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284898609 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287369925 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288060526 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285584826 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287532954 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286527891 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285710382 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287866521 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288479838 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288437694 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285452296 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288356385 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285878496 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28496862 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285358928 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286724066 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287656589 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288751974 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285127714 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289375252 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287076983 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288120739 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289368163 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285317444 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286262021 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288774734 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286454681 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286876991 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289110812 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286827565 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28731909 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289615183 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286080023 seconds)
  done (took 86.078325939 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287193973 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286529278 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287321633 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286689938 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28751231 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287111119 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287661838 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286733961 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287379365 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286600095 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289891325 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28702753 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288686256 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288579857 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287283296 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288394482 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2882921 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286873278 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288105898 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290678662 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288558832 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288050553 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288139973 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28864978 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287875155 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290156448 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288712651 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289086891 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288330314 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288756919 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288465479 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289601347 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288471709 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.289331882 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290790444 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290202783 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288590523 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2897654 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289313767 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291881674 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290207496 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292976827 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290967644 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290237191 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28985125 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290604071 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289898728 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290073666 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289049865 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290229295 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290367151 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291144452 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289746428 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290068275 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2901954 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289692014 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291163598 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290076664 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290370199 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292997898 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292190828 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290332012 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292893545 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291441456 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291103815 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290792187 seconds)
  done (took 86.296720368 seconds)
done (took 1782.430114764 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.455874788 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.410866841 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.293979164 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.303623684 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.292879857 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.287921936 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.305145078 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.293722439 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.293390894 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.294235197 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.293833002 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.481224417 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.289420598 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.293933219 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.295100997 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.3898676 seconds)
  done (took 26.478007079 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.324003092 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.301200322 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.421081902 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.317310215 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.32473115 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.492379646 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.357271728 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.299672822 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.482570838 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.347092791 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.291097487 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.3422225 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.310425305 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.289997864 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.33698033 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.495552855 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.568503591 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.294466868 seconds)
  done (took 28.79894855 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.78349121 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.317784733 seconds)
  done (took 5.307634511 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.319480013 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.299786224 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.299563157 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.298124029 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.291202521 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.294301603 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.297129518 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.299335493 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.303091084 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.438889633 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.305338344 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.310910401 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.321978379 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.300773813 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.296945821 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.341191698 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.462455047 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.298145457 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.295770905 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.30531812 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.300300597 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.414886006 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.347293159 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.301701152 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.437010266 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.310096895 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.306476827 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.307394072 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.498556853 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.298475812 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.298311326 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.299741287 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.302913608 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.268334189 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.816264108 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.304954859 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.327238067 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.310603309 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.2964293 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.466103301 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.301322559 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.309549601 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.292542138 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.787147468 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.45009165 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.432772495 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.315502129 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.322059459 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.302745786 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.370932875 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.305300502 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.302765399 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.348919259 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.18460857 seconds)
  done (took 83.834040996 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.333995815 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.294120371 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.478348084 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.318017591 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.302363403 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.297200249 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.29814701 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.611832666 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.303066607 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.295011151 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.602563032 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.8955007 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.312305913 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.345826484 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.144553512 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.358912541 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.29430411 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.311174479 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.296890192 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.301863477 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865019808 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.299767614 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.317453004 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.366370367 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.335208634 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.834606486 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.300977594 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.3062841 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.296986581 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.295845854 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.844560507 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.316450118 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.357136323 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.296516361 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.583984255 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.701070855 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.655372644 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.300858636 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.349679317 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.300185785 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.309409947 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.81794159 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.676053388 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.296173142 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.299030461 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.830205264 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.296216108 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.305376275 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.296051164 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.549871603 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.301545768 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.298859796 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.323129089 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.299300268 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.297231833 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.416467291 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.372354696 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.836283935 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.297910809 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.300457813 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.348808685 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.29773838 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.307130294 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.302187064 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.315670016 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.680683984 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.587463931 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.302858541 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.67958691 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.842039664 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.315538722 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.90280125 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.314747715 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.323582638 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.491667892 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.297930437 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.310107923 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.830358047 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.318444632 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.298572179 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.661351334 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.301751964 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.60969575 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.322866937 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.299189514 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.881229939 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.304880611 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.387518127 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.299533295 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.299034769 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.318372342 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.303811118 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.611066005 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.333997544 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.29853586 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.29822876 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.338913109 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.303710757 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.298508165 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.308943987 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.903149669 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.330001698 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.301051402 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.306214822 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.316551484 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.304558273 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.302566386 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.299898813 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.576171692 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.308123473 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.311405388 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.302887215 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.300571224 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.308112087 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.377540858 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.302568181 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.632362967 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.304656808 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.307416877 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.308268991 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.301893724 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.350612158 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.301787073 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.310001775 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.183065331 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.57616033 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.324262309 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.302681474 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.302350525 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.301720836 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.331649796 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.303450545 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.339550739 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.303126839 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.089827063 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.326385013 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.316362356 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.302738761 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.310642546 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.308816278 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.307013558 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.302923656 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611694354 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.597214122 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.578057066 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.306508328 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.310742662 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.075395106 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.356972183 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.488046985 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.329566006 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.304886591 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.559314941 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.590187469 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.306909181 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.304138454 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.305758596 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.5672881 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.30773801 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.623807068 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.880073281 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.322052581 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.305460419 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.095054547 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.048159475 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.309025383 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.30812944 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.612753226 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.32842474 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.304404997 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.304910364 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.306007546 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.322980741 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.323785244 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.312059256 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.305657827 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.305916318 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.319679772 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.500128054 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.325528919 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.311004517 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.838549331 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.340272838 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318708928 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.313726867 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.30842058 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.305562956 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.400767882 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.307542725 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.340700426 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.308049849 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.314586695 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.853670738 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.307826605 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.312518419 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.50063086 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.024433644 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.326392539 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.307795044 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.325278038 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.211278268 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.865019827 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.326722317 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.640077861 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.313461048 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.347929144 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.31002902 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.316104405 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.864151684 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.308915213 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.325218266 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.989564156 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.324273627 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.722218541 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.306929837 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.310542157 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.942207791 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.327000581 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.31169304 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.320590437 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.312004006 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.604225268 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.312124547 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.312271359 seconds)
  done (took 492.662577579 seconds)
done (took 638.280639352 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.307905895 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.31234502 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.297374361 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.314585997 seconds)
  done (took 10.452735104 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.319540844 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.316998175 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.317364315 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.315908183 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.319189488 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.316953952 seconds)
  done (took 9.128785224 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.310035973 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.313986492 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.314362985 seconds)
  done (took 8.161263747 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.538465477 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.344813801 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.673947375 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.337029818 seconds)
  done (took 9.117404477 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.318368536 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.317654686 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.318741577 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.319639845 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.320796923 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.321617977 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.320746227 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.320492945 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.320962162 seconds)
  done (took 13.100195341 seconds)
done (took 51.178301656 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.327079856 seconds)
    (2/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.024890952 seconds)
    (3/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.415135103 seconds)
    (4/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.317987689 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.480397513 seconds)
    (6/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.507364414 seconds)
    (7/286) benchmarking ("sort", Float64, true)...
    done (took 2.060617312 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.356100137 seconds)
    (9/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.357184963 seconds)
    (10/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.332867377 seconds)
    (11/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.469220973 seconds)
    (12/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.394197178 seconds)
    (13/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.356501635 seconds)
    (14/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.08520896 seconds)
    (15/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.320252485 seconds)
    (16/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.347092438 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.325163457 seconds)
    (18/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.350685118 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.325657647 seconds)
    (20/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.318180799 seconds)
    (21/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.368714713 seconds)
    (22/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.38555554 seconds)
    (23/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.337058404 seconds)
    (24/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.398933495 seconds)
    (25/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.330607661 seconds)
    (26/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.330389608 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.368462445 seconds)
    (28/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.299243496 seconds)
    (29/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.101069506 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 2.015985561 seconds)
    (31/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.37520194 seconds)
    (32/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.330917619 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.325849327 seconds)
    (34/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.082204522 seconds)
    (35/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.36073904 seconds)
    (36/286) benchmarking ("sort", Float64, false)...
    done (took 1.513857253 seconds)
    (37/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.336935807 seconds)
    (38/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.300149279 seconds)
    (39/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.349788711 seconds)
    (40/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.30431691 seconds)
    (41/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.432154308 seconds)
    (42/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.319201175 seconds)
    (43/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.410193837 seconds)
    (44/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.347792747 seconds)
    (45/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.507217868 seconds)
    (46/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.326429718 seconds)
    (47/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.503085842 seconds)
    (48/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.421562417 seconds)
    (49/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.470273614 seconds)
    (50/286) benchmarking ("sort", Int8, false)...
    done (took 1.474752263 seconds)
    (51/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.148654057 seconds)
    (52/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.330831132 seconds)
    (53/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.966553859 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.337749951 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.340310634 seconds)
    (56/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.53940542 seconds)
    (57/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.331591779 seconds)
    (58/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.315014121 seconds)
    (59/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.370397241 seconds)
    (60/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.326708834 seconds)
    (61/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.205241302 seconds)
    (62/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.345399386 seconds)
    (63/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.315719823 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.327687633 seconds)
    (65/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.317999119 seconds)
    (66/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.423186574 seconds)
    (67/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.366052208 seconds)
    (68/286) benchmarking ("sort", BigInt, true)...
    done (took 2.316486765 seconds)
    (69/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.531999564 seconds)
    (70/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.528784174 seconds)
    (71/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.328334874 seconds)
    (72/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.316229846 seconds)
    (73/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.323337753 seconds)
    (74/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.317935117 seconds)
    (75/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.502758396 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.404389592 seconds)
    (77/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.33231782 seconds)
    (78/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.355588534 seconds)
    (79/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.398771079 seconds)
    (80/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.351514898 seconds)
    (81/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.340502662 seconds)
    (82/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.453554909 seconds)
    (83/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.344713596 seconds)
    (84/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.21504587 seconds)
    (85/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.420439942 seconds)
    (86/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.330368205 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.377399704 seconds)
    (88/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.392774298 seconds)
    (89/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.03952153 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.373271648 seconds)
    (91/286) benchmarking ("sort", Int64, false)...
    done (took 1.511195844 seconds)
    (92/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.457088639 seconds)
    (93/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.401298429 seconds)
    (94/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.355411371 seconds)
    (95/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.362062022 seconds)
    (96/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.515571202 seconds)
    (97/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.333044844 seconds)
    (98/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.31057594 seconds)
    (99/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.964317612 seconds)
    (100/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.476663754 seconds)
    (101/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.346811778 seconds)
    (102/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.403550028 seconds)
    (103/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.375231373 seconds)
    (104/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.402109894 seconds)
    (105/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.357351092 seconds)
    (106/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.449151645 seconds)
    (107/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.489283151 seconds)
    (108/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.330582622 seconds)
    (109/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.33635466 seconds)
    (110/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.47080383 seconds)
    (111/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.333332927 seconds)
    (112/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.374070585 seconds)
    (113/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.344892347 seconds)
    (114/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.36802751 seconds)
    (115/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.481092927 seconds)
    (116/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.359072228 seconds)
    (117/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.400189656 seconds)
    (118/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.979421593 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.432170548 seconds)
    (120/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.405720857 seconds)
    (121/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.086303029 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 1.379742732 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.32722254 seconds)
    (124/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.346074803 seconds)
    (125/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.389580426 seconds)
    (126/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.591008908 seconds)
    (127/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.320512375 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.414641917 seconds)
    (129/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.403667543 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.351006419 seconds)
    (131/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.350723301 seconds)
    (132/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.972423757 seconds)
    (133/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.370627511 seconds)
    (134/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.477221193 seconds)
    (135/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.358846764 seconds)
    (136/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.478438972 seconds)
    (137/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.401776424 seconds)
    (138/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.408227174 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.357076259 seconds)
    (140/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.646262834 seconds)
    (141/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.33341412 seconds)
    (142/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.973454351 seconds)
    (143/286) benchmarking ("sort", Int8, true)...
    done (took 1.829547364 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.419979749 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.334281453 seconds)
    (146/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.330509333 seconds)
    (147/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.33936886 seconds)
    (148/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.337081572 seconds)
    (149/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.226133829 seconds)
    (150/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.426250729 seconds)
    (151/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.677823767 seconds)
    (152/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.353037321 seconds)
    (153/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.444686862 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.453434211 seconds)
    (155/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.320214526 seconds)
    (156/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.441098229 seconds)
    (157/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.453169515 seconds)
    (158/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.351028253 seconds)
    (159/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.336128708 seconds)
    (160/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.331917269 seconds)
    (161/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.337119719 seconds)
    (162/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.370412504 seconds)
    (163/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.344868997 seconds)
    (164/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.363750409 seconds)
    (165/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.083962804 seconds)
    (166/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.996506404 seconds)
    (167/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.364457031 seconds)
    (168/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.544291272 seconds)
    (169/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.338093104 seconds)
    (170/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.403722279 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.397409749 seconds)
    (172/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.684009475 seconds)
    (173/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.409020663 seconds)
    (174/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.558547019 seconds)
    (175/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.340934886 seconds)
    (176/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.309676784 seconds)
    (177/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.558894675 seconds)
    (178/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.372618433 seconds)
    (179/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.385495528 seconds)
    (180/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.338210468 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.336874891 seconds)
    (182/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.383393876 seconds)
    (183/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.471806164 seconds)
    (184/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.351288643 seconds)
    (185/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.077872839 seconds)
    (186/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.535710721 seconds)
    (187/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.353905498 seconds)
    (188/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.467581434 seconds)
    (189/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.370457334 seconds)
    (190/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.333669361 seconds)
    (191/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.344699632 seconds)
    (192/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.452773269 seconds)
    (193/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.490462041 seconds)
    (194/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.349545516 seconds)
    (195/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.438421036 seconds)
    (196/286) benchmarking ("sort", Bool, true)...
    done (took 1.69128322 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.338871267 seconds)
    (198/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.334130782 seconds)
    (199/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.338018704 seconds)
    (200/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.460148476 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.424153494 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.348926112 seconds)
    (203/286) benchmarking ("sort", Float32, true)...
    done (took 2.032759126 seconds)
    (204/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.538509961 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.434638173 seconds)
    (206/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.313509342 seconds)
    (207/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.476467443 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.436159994 seconds)
    (209/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.429522377 seconds)
    (210/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.399347081 seconds)
    (211/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.342712084 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.334617378 seconds)
    (213/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.407872516 seconds)
    (214/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.401359379 seconds)
    (215/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.209641496 seconds)
    (216/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.461166665 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.337174666 seconds)
    (218/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.377074943 seconds)
    (219/286) benchmarking ("sort", Float32, false)...
    done (took 1.495649187 seconds)
    (220/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.451652904 seconds)
    (221/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.155986344 seconds)
    (222/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.487914546 seconds)
    (223/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.348067296 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.436965449 seconds)
    (225/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.335927971 seconds)
    (226/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.347770134 seconds)
    (227/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.085697464 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.519437482 seconds)
    (229/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.387666179 seconds)
    (230/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.353117696 seconds)
    (231/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.982919683 seconds)
    (232/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.31399169 seconds)
    (233/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.097404834 seconds)
    (234/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.373025563 seconds)
    (235/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.412675178 seconds)
    (236/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.341750214 seconds)
    (237/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.714830763 seconds)
    (238/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.313844796 seconds)
    (239/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.350984893 seconds)
    (240/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.519548843 seconds)
    (241/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.501127213 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.38727969 seconds)
    (243/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.455001746 seconds)
    (244/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.364130605 seconds)
    (245/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.335441497 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.384920037 seconds)
    (247/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.345502737 seconds)
    (248/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.375037864 seconds)
    (249/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.376760089 seconds)
    (250/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.341459369 seconds)
    (251/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.341128778 seconds)
    (252/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.34469772 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.366851939 seconds)
    (254/286) benchmarking ("sort", BigInt, false)...
    done (took 2.328648797 seconds)
    (255/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.330035167 seconds)
    (256/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.003371137 seconds)
    (257/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.544695424 seconds)
    (258/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.329934397 seconds)
    (259/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.477803669 seconds)
    (260/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.542705579 seconds)
    (261/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.320796333 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.348825473 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.385573407 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.444124407 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.347788535 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.350720078 seconds)
    (267/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.436538201 seconds)
    (268/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.049564672 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.510579261 seconds)
    (270/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.425778524 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.513932757 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.379967143 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.337309419 seconds)
    (274/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.358146575 seconds)
    (275/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.43723707 seconds)
    (276/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.339996101 seconds)
    (277/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.348680981 seconds)
    (278/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.432021062 seconds)
    (279/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.323811326 seconds)
    (280/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.525751788 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.355756062 seconds)
    (282/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.354972078 seconds)
    (283/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.347590833 seconds)
    (284/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.045309856 seconds)
    (285/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.334230175 seconds)
    (286/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.33154262 seconds)
  done (took 469.846171422 seconds)
done (took 471.069395018 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.373874692 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.386693838 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.339430631 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.37386877 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.453307048 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.517027856 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.35103162 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.37994418 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.388450437 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.389553921 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.348429478 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.515793599 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.343153544 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.341429532 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.340583435 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383616697 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.333407674 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.342580509 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.360938554 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.384456683 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.361463859 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.351047707 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.392404463 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.517962095 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.344245135 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.345114037 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.344871098 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.360844855 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.453149084 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.344383494 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.34458291 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.353922481 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.332976984 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.349348015 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.339502176 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.364576203 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.355686211 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.352047661 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.377593268 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.4537093 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.33248946 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.35543766 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.344834379 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.343382702 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.343603045 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.382428003 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.343927154 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.400048262 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38624219 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387188855 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.34340983 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.357856516 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.363484796 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.344618138 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.354882157 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.343034372 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.401692246 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389547641 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.364317658 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390243665 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.333575552 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.367710522 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.383096347 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.359315261 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.352944323 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.346072673 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.342131995 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.381861621 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.332810617 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.348359402 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.345455148 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.351551339 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.346412855 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.357848945 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.37509208 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.337848183 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.339263893 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.343065365 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.351076601 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.343497162 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.391314438 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387060114 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.394415679 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.345685823 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387093985 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.520328304 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.354590032 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.345551314 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.379880189 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.364245233 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.351297448 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.356236806 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.380344882 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.346280144 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.392127501 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.40252674 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.355284257 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.353653174 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.395202917 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.356912131 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.334759198 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39006767 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.342949054 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.342429795 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.344934823 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.466039705 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.335214374 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.346115746 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.380335717 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.393606087 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.406311772 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.333551224 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.354266237 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392475015 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.353661669 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.405229406 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.348667109 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.334534858 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.340762305 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.471408416 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.348803843 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.351434856 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39259352 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.407225128 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.346791628 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.336406684 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.352491243 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389109914 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.468016302 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.357228986 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.458022563 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.346466062 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.351138547 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.381054964 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.392552543 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.380018357 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.407436922 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.392678188 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.364571357 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.34839786 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.359177148 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.358497688 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.347780436 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.406064515 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.345488927 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.381226345 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390324766 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39198113 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.380260886 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.470493867 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.352661057 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.349046295 seconds)
done (took 225.727942928 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.423586775 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.347096747 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.449729513 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.346864732 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.448029104 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.470550708 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.344644247 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.344968242 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.343925488 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.725035866 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.343855205 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.344258353 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.34757523 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.344199679 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.431823721 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.347531708 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.345445709 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.74262364 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.349443227 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.442732961 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.350051448 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.345803903 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.347623098 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.79504301 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.347875737 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.343204941 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.425512623 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.348780929 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.695914239 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.342748367 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.345718279 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.750429478 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.444650812 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.365662013 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.35943341 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.355515907 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.470033949 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.368663434 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.44251597 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.440934108 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.452461759 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.386954373 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.344635729 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.347242409 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.350244075 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.349412233 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.347181069 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.376270914 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.348710529 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.347328668 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.692694237 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.360461292 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.357591758 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.347953767 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.348302661 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.370022802 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.349123744 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.350924901 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.457951144 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.351593144 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.422282296 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.73183524 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.794683014 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.351018505 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.348362379 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.350109577 seconds)
  done (took 105.856900101 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.418234706 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.432177474 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.469186563 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.352091766 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.404799225 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.474660881 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.351963462 seconds)
  done (took 11.155451719 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.358567994 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.351897352 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.401756329 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.402522291 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.351726413 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.567242662 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.352160568 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.363129078 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.348299627 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.428533899 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.352712997 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355451297 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.356740576 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.348348424 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.402805614 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.364643288 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.469575912 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.355820828 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.353438281 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.505830312 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349817176 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.359842935 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.435251304 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.364815369 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.353502789 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.360397232 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.312721826 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353445062 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35047085 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.352670209 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349610715 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.463836059 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.354364819 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.350525949 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351111204 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.513694043 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.354444535 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350955265 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.353431217 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.346138756 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.354866183 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.35418375 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.354591578 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.351114263 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.353984467 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.378563602 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.354242886 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.354724405 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.353910192 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.357535875 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.431698611 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.357033768 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.351934871 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.351767724 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.43390663 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.362089395 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.354963507 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.35366826 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.356136991 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351822948 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.510321265 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.40535656 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.356100255 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.404293689 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.355262052 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.356020334 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.354447285 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.354934721 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.449309932 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.356048042 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.403365126 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.353867593 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.579707426 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.381665026 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.358248085 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.361077119 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.361555052 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.356329341 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.353263659 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.3637712 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.354388172 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.358379979 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.362569493 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35515279 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35489689 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.540472565 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.514356418 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.355760032 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.369210353 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.364244965 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.355779989 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.436730962 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.357898773 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.354497521 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.409381318 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.473426923 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.440489279 seconds)
  done (took 140.234951716 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.362956044 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.367187948 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.36108488 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.381969657 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.35958306 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.358231009 seconds)
  done (took 9.449413444 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.360866478 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.359159153 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.358893878 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.358673832 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.358504683 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.357933433 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.359750025 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361027161 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.363823568 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.359511037 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.359470914 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.3596187 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.36025067 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.35903116 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.36094538 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.35881464 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.359890354 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.357763418 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.359228416 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358630189 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.359902772 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.359656258 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359697142 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.362913567 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.365138135 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.360776512 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.368639796 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.359816492 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.360777469 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.369625891 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.381912469 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.362084737 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.362590673 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.367929793 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.366457507 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.364300015 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367141108 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.362393872 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.35788481 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.361829019 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.36239339 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361421172 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.359845294 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.35946733 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.364227677 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.36709655 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.365187327 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.368867363 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.36114695 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.361128816 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.361923568 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.36173211 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.362538331 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.363064021 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.365620869 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387871186 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.367562688 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.364176907 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.362720083 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.365487261 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.362292232 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.367135712 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.367438717 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.369817845 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.362614324 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.364075257 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.368956853 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.368652238 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361969998 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.363490332 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.363044487 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.36160247 seconds)
  done (took 100.409589561 seconds)
done (took 368.351129134 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.382472692 seconds)
  done (took 3.645153189 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.386683646 seconds)
  done (took 3.652962439 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.125546578 seconds)
  done (took 24.397931489 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.440434732 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.360316535 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.379696373 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.361124695 seconds)
  done (took 10.805526948 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.689916716 seconds)
  done (took 3.954851764 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.356455269 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.356308181 seconds)
  done (took 5.9787294 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.723051653 seconds)
  done (took 3.9880949 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.837045331 seconds)
  done (took 4.111624081 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.358306212 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.372899413 seconds)
  done (took 6.007219877 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.34407095 seconds)
  done (took 3.608885373 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.299824258 seconds)
  done (took 17.56730754 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.361862953 seconds)
  done (took 3.629624623 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.402761358 seconds)
  done (took 3.666975535 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.235304498 seconds)
  done (took 6.498754052 seconds)
done (took 102.775133336 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.356605582 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.362077555 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.36207323 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.361638779 seconds)
  done (took 10.706994342 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.417041285 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.416933807 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.419749162 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.416985764 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.416337922 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.417004306 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.406335426 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.390497852 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.417427249 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.417529392 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.416852037 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.416554473 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.417603518 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.389969155 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.416731232 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.420498511 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.417493274 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.416284702 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.392722816 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.417582444 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.366798935 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.419790607 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.416564755 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.36741313 seconds)
  done (took 35.095906366 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.885178561 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.439020149 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.522893536 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.418780996 seconds)
  done (took 7.531633424 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.444707597 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.443921547 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.458919916 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.496538086 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.509193226 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.455798605 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.394181949 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.388937529 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.375711025 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.444739336 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.495521417 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.436963632 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.523558615 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.367107853 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.573777224 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.366756856 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.366574055 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.445372373 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.496985149 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.510029714 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.367030602 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.446952421 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.446299882 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.436507737 seconds)
  done (took 35.960608766 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.37445701 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.380735011 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.36585345 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.381958419 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.366114941 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.366957254 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.368280435 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.373376818 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.363922217 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.367021322 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.366714237 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.381095097 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.370506052 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.368112429 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.376416799 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.368902474 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.374135932 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.372080094 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.368626825 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.375374335 seconds)
  done (took 28.699773106 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.361668401 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.362120493 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.714760688 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.620572055 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.363848589 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.363205543 seconds)
  done (took 14.055875121 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.449760499 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.619233539 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.370875766 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.775609069 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.86549163 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.376309246 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.371834203 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.639765495 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.993212753 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.986040489 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.437643297 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.447293665 seconds)
  done (took 20.605211028 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.371047596 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.369956443 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.381764831 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.385687042 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.432501983 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.374888807 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.378874382 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.36576839 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.43606819 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.436934113 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.37505064 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.433099063 seconds)
  done (took 22.01363195 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46031692 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366928743 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.369349436 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458726496 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366527978 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.214582143 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.430012123 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.106515565 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.390961529 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643048663 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381073642 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465532611 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.628645259 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364528087 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392001075 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.352888733 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607505386 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894474618 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368117417 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366359162 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40019664 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365793817 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370476944 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.606893077 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.370097638 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365854709 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.660849357 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365352852 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.677605625 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379684891 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376502286 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365099685 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639846792 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054358221 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485853774 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.60269413 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390693454 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372808337 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.366838534 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.373604236 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371426763 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376204774 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380024553 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367876244 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367556977 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374822066 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118503736 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.393800246 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.364872416 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368885147 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658175082 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468933328 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.372331492 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368576161 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373899501 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373672095 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.370759495 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466199255 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950602305 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383790514 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375949567 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.37446881 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383596204 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368769439 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023446916 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.37547103 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.373500157 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.372107879 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368764864 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369381177 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39057501 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369241481 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.394526204 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370096868 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125437174 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375165291 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376272394 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959892557 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378551873 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.372878155 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601366714 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370173082 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36972008 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.367601372 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.368745271 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15348103 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379160195 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.354894957 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394920362 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.106563719 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.630594535 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394195671 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401519975 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.594087471 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.355632785 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370662332 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.372515376 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377243709 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391386756 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.109577628 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390644864 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.375488835 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629423277 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.58348548 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38689173 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.360789101 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889320245 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390746101 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.391492008 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.383527328 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.610637823 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.012111506 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389966941 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381610039 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392447272 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369606533 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189639038 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391172371 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.47705805 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371093788 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664079264 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.243278512 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376974453 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439287985 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382219744 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371066963 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385745249 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377947317 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3722596 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.599552756 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402290692 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.387088993 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.372340857 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370682156 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.371406454 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37565962 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.37781994 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.595586808 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387565622 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652481772 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371983856 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372740989 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372821089 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.595740535 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.369576494 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.711728564 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636816626 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376365011 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.380196152 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387970485 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392047929 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476538136 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394580116 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.373318536 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.63245242 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.377155029 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.378302863 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389600258 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380092051 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380036393 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.37952759 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37380153 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035342337 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355000569 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378794298 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.266468359 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.387787113 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441747838 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380072522 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610368929 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.388726255 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378699313 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.402833813 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.374686157 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603611823 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383141235 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.387330099 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454013057 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.89723731 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.034283097 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393258998 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.374724306 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.371872069 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.370016397 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373698904 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373065096 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373886357 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.609707675 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39490865 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383311105 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.016829229 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382651532 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390819379 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.385817869 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385533848 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.382139175 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375722423 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.378259531 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390593659 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380380903 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.408604964 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520642547 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.38940145 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375843078 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.892886357 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38187513 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375920195 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375301343 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409761869 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391363628 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214073234 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641677115 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380989523 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67097463 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397016327 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.401179109 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.379188585 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378107432 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383112096 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.38728837 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385257921 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.388913287 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393151432 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382817676 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953021251 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180187936 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971090746 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399034568 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.396017701 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383170954 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.157017397 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401186776 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378407106 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634118355 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.165173597 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402822022 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920448082 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.400254028 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213832487 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671591793 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617476125 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381386498 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.382618011 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.67618164 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598529973 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412938751 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379577916 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383922887 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.364119876 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962639701 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415262115 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465307206 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155277131 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403051584 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388244858 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.402857385 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.384993671 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824476297 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404048835 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378766245 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384479568 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384141164 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217331815 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384530846 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380447626 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058266394 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401497422 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.885362249 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40157175 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616246213 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.396124812 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.385808218 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.387791382 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.380773616 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.638544458 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670288157 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385789748 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392414905 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977788079 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.261258532 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.38663822 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381743259 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201993718 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393437147 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.70173945 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.388469603 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.3947408 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3864653 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381175902 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381076838 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.377405984 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388493958 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358376382 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926142737 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.390462918 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391549792 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388139588 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38827021 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.638548744 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.396555182 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.019966201 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617423188 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39862102 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411493197 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.386955985 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384985928 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.374037052 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381997988 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383113472 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401134691 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.6110476 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.383262443 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.391535694 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.464042854 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600103838 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383871457 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384599667 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655866011 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.385875604 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.408453482 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18039223 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422865036 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385935912 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390990651 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393150585 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410012401 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454838777 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621654794 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.400225734 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.396697204 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829145188 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412845733 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391551864 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.399289071 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482250867 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384355482 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.404417994 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.162950156 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029321155 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188730305 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.034245402 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68237253 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389791979 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393539267 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385629098 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548505754 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385546977 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659231778 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385900123 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.398820285 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413997038 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389298654 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406403392 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602702646 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662440054 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388116196 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390650677 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390208497 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.387192706 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396683932 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.598466522 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918077742 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981797222 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389792032 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401088442 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.135417312 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681583991 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387904252 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387774858 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385511612 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.402663433 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.389819931 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.393543704 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397357467 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537642125 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676315144 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097457909 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.422394435 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.415348013 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.161344969 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38947873 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647607151 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402444554 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.630445879 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03389258 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.163975402 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659646977 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459065664 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6265826 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.391977041 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550842671 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.393209631 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391616597 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388453309 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390565612 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.386101281 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.39813414 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.033536322 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661090962 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.394291122 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.391675555 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424020785 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.40094339 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.612788581 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180186178 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618999394 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400499161 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397029832 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389714559 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035164843 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688677305 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398228689 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.398466803 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66045757 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397636247 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415271537 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.907677179 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.387026638 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001794151 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.369030491 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413093601 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403518307 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.174737436 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038019387 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.393798404 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961286383 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395753424 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398671876 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670116715 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.396985017 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392102008 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693304432 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.393795949 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390779324 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635190466 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.037242358 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.237696073 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.41271702 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393421598 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.416790077 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392000994 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467623872 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395978437 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393250211 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.852973604 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417178837 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391574595 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405076285 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.403443687 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398509864 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.393529063 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391656812 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.398837274 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.393716051 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.383216814 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39915959 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496785391 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984963166 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416046298 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.067600952 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.719959095 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.649393527 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394531109 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.384213504 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.398160392 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394165642 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393291817 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394620325 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394359073 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988249407 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.395466286 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.409775541 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396981816 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.394554049 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606893099 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397158668 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637613624 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39952377 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414425185 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.379875576 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394274257 seconds)
  done (took 983.636118311 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.410115077 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.440153655 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.413073006 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.473537599 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.416206067 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.527747249 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.418030198 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.428794233 seconds)
  done (took 20.826302455 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.399471022 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.412047657 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.402703303 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.412316954 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.404588557 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.912086737 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.423221267 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.405891152 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.413416286 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.398821068 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.409276676 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.382319799 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.428707563 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.412609191 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.39022952 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.412130709 seconds)
  done (took 33.3263319 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.571214879 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.602574738 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.759500688 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.42107374 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.434121324 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.419255978 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.71149347 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.430550212 seconds)
  done (took 27.651594133 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.40976966 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.40957635 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.408388674 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.409696715 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.410525541 seconds)
  done (took 8.349182955 seconds)
done (took 1249.722429761 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.400788699 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.404795288 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.400755765 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.403599875 seconds)
  done (took 6.911607059 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.381600638 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.384206645 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.384591712 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.396268186 seconds)
  done (took 9.847492061 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.170753735 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.093342588 seconds)
  done (took 5.565599049 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.896749607 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.894028943 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.893009187 seconds)
  done (took 6.985221697 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.69826866 seconds)
  done (took 3.001116206 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.310320002 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.293302311 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.086636424 seconds)
  done (took 7.993039414 seconds)
done (took 41.602405254 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.4097062 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.653441185 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.556626492 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.411003454 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.560070406 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.555177773 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.180040147 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.409271731 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.402362001 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.399527167 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.411993032 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.561348624 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.163734229 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.650482215 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.168217912 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.657675836 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.562009825 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.414108922 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.403970524 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.427710932 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.177934149 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.410308175 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.414180666 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.410854066 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.559637803 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.544049468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.406290935 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.651954217 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.397991127 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.405388361 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.551141128 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.408693107 seconds)
  done (took 83.598502083 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.400486658 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.397099681 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.399061835 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.419860523 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.397238887 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.416108098 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.421264157 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.410036007 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.411369508 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.405370653 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.401115383 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.398343406 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.41917893 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.396934809 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.407581161 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.398235965 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.398326785 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.402961252 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.397558563 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.411026069 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.40107995 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.404346245 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.395664303 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.419881744 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.398125578 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.399435779 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.418718752 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.415187392 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.424870746 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.398822532 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.398293093 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.418636087 seconds)
  done (took 78.305770439 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.408591323 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.398087984 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.417359005 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.410455012 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.414539851 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.400866747 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.403065673 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.400664003 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.407487512 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.407115579 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.41250785 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.412001995 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.401981612 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.409125243 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.401784627 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.39986 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.40057055 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.432421646 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.400842891 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.403269375 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.403298805 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.413525727 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.403471749 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.414933731 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.404100206 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.421225561 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.403835751 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.40410662 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.404932325 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.403113684 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.402525348 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.401302685 seconds)
  done (took 78.325575876 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.680743571 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.408548212 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.406791942 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.401266408 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.407570952 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.40829524 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.400316648 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.685486627 seconds)
  done (took 15.101630972 seconds)
done (took 256.632405801 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.411116931 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.411499625 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.610752128 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.428807618 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.400722109 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.435990247 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.429287154 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.632972008 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.405669998 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.658057102 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.424899245 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.427919923 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.401578884 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.426403749 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.691460487 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.557275611 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.347790429 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.403231191 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.76136571 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.421276057 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.682092346 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.411210804 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.685602112 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.380157904 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.433265416 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.415541797 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.419150295 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.337582344 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.446182076 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.761657864 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.425099511 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.402358048 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.498476576 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.511874868 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.626179108 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.568672104 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.402843893 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.497442851 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.635110401 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.404021231 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.425223568 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.203036317 seconds)
  done (took 84.567376698 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.411052351 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.528194903 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.410790625 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.411899111 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.409894772 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.529000931 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.50726251 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.412272443 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.412683787 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.411478805 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.412425146 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.412562558 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.412960205 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.412160271 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.412068604 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.412859509 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.4138896 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.41339462 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.414115774 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.457153307 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.534256393 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.436713185 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.405770189 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.413333625 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.516095932 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.548893766 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.413041608 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.406035297 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.455523972 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.413974388 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.41519377 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.458579316 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.413319274 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.41344094 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.527539113 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.516745987 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.43608745 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.410755155 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.526962937 seconds)
  done (took 57.590559497 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.413069808 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.664204544 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.854565131 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.422878459 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.41459676 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.420012251 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.499050144 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.415429901 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.419737843 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.419728672 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.574272702 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.418689101 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.450965844 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.89113369 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.418962894 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.41568813 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.415796669 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.417824915 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.675765635 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.425314052 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.520866391 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.419661775 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.50040782 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.43144077 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.440755241 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.418149289 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.422145211 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.996048996 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.423586888 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.575034101 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.262257635 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.501724371 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.974867289 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.875212891 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.267169912 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.423676701 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.416354555 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.581675412 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.424873528 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.41934253 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.500961537 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.423195401 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.873127181 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.089197928 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.439518972 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.417269564 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.020209706 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.584627 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.682817276 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.461315889 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.891597957 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.421997477 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.419378336 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.419673466 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.677486474 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.426403723 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.418732478 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.040958015 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.446624433 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.501159631 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.423332217 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.422512394 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.67798853 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.420585498 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.669609053 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.421602551 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.426991336 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.44221211 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.882662059 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.427525176 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.101570857 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.437886699 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.419148437 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.579169027 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.67506565 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.053957886 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.441722724 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.678085237 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.983284786 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.504903713 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.4285422 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.988466728 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.505398792 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.430963391 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.421874044 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.422727279 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.420509976 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.470594048 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.501868571 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.061341716 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.100729846 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.058827106 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.525298539 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.433258257 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.421899549 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.037865547 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.439385644 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.422157684 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.866862836 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.100045128 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.441159298 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.429765923 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.111156393 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.443128243 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.506855969 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.434753842 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.882668097 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.42390434 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.47213556 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.421749203 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.429564368 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.447462495 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.503761842 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.430817934 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.423607085 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.090534225 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.60560699 seconds)
  done (took 187.460721593 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.418526143 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.41726604 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.414681486 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.417071273 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.415889481 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.424359092 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.4175587 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.41826104 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.423154942 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.416084261 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.416649933 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.418757064 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.419346718 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.434315036 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.429355597 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.425212267 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.417372798 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.418657996 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.434663061 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.418241486 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.417337841 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.420505359 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.435355615 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.419692436 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.418818242 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.421278344 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.434453234 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.421047803 seconds)
  done (took 65.122455252 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.42448534 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.011748016 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.426842773 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.564185898 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.449453948 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.421903211 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.562039302 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.484971716 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.427404452 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.423070753 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.421860056 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.74420833 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.428833146 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.966940927 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.630270419 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.5624997 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.977306215 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.44957109 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.423114722 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.423793594 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.564495036 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.436813458 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.751411973 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.037686012 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.432393999 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.031644829 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.421005849 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.427002403 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.427579064 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.033218021 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.430525776 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.752491411 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.513348341 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.494408277 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.037026885 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.974232776 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.98653733 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.580476798 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.428635563 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.425646795 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.427922124 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.41805116 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.0204835 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.428865087 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.430939226 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.02628815 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.452109976 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.428382387 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.435670393 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.426515682 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.493422412 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.495284975 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.75636783 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.113258532 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.512629959 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.44058218 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.567888945 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.801677139 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.437038765 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.97343073 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.438627085 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.033998737 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.452191687 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.417871511 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.427895831 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.433492511 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.58306892 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.565106196 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.98886073 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.454147982 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.989485029 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.60799885 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.426715387 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.427557399 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.430153479 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.039119548 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.993638912 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.606328875 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.570613109 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.634652724 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.425617122 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.428734193 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.418880543 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.511302078 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.428731544 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.039090965 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.010480835 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.453680219 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.431914452 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.433868004 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.432831114 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.617298549 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.065382121 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.516200688 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.983299982 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.78229406 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.764881312 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.436631282 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.492914037 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.452285186 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.824596425 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.435962284 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.491684263 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.831195187 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.764239348 seconds)
  done (took 170.817693033 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.687887275 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.447527001 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.529965988 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.590039739 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.074405377 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.040089984 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.429450586 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.556701447 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.547861982 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.707987721 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.431978007 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.542345956 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.653869327 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.510391601 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.16404768 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.509548601 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.526880744 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.580343857 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.578648715 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.429930932 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.099704536 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.736180033 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.624635397 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.451197432 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.560846873 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.277695303 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.032990356 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.009942967 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.614643838 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.43100156 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.976605623 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.431616919 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.42885528 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.145417133 seconds)
  done (took 66.688925179 seconds)
done (took 633.549661476 seconds)
SAVING RESULT...
DONE!
