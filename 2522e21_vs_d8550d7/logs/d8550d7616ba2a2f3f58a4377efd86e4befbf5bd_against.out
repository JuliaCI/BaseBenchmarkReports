cset: moving following pidspec: 5967
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.97571342 seconds)
loading group "string"... done (took 0.550358921 seconds)
loading group "linalg"... done (took 8.955610063 seconds)
loading group "parallel"... done (took 0.172729455 seconds)
loading group "find"... done (took 1.462767689 seconds)
loading group "tuple"... done (took 2.122409454 seconds)
loading group "dates"... done (took 1.393175881 seconds)
loading group "micro"... done (took 0.219988001 seconds)
loading group "io"... done (took 0.626881332 seconds)
loading group "scalar"... done (took 43.838434567 seconds)
loading group "sparse"... done (took 13.446584733 seconds)
loading group "broadcast"... done (took 1.089512149 seconds)
loading group "union"... done (took 14.802045245 seconds)
loading group "simd"... done (took 5.133506936 seconds)
loading group "random"... done (took 10.344229106 seconds)
loading group "problem"... done (took 2.18473843 seconds)
loading group "array"... done (took 26.138260154 seconds)
loading group "misc"... done (took 1.111353519 seconds)
loading group "sort"... done (took 3.761106132 seconds)
loading group "collection"... done (took 22.360445998 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.645668032 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121059677 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.171599767 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.200008488 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.199145242 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.163345557 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.165796061 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.571683952 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.999320506 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.221021387 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14786717 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.569095464 seconds)
done (took 5.921917713 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.2412172 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.440345273 seconds)
    (2/2) benchmarking "String"...
    done (took 0.11462746 seconds)
  done (took 1.230956033 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.094723977 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.178639579 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095425153 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.110716361 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.113159364 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110226217 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094621936 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111616681 seconds)
  done (took 1.49213776 seconds)
done (took 3.745489341 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.489123562 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.839418687 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.545499535 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.133405425 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.15910847 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.151629774 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.326280576 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.16396719 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.127137844 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.098950212 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.188517485 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.392178611 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.504189798 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.02475737 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.09718802 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127461616 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.082882468 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.753027181 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.082480726 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.136536576 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.531488102 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.115367157 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.119624872 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.144294897 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.194642274 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135104211 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.1816755 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.110295776 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.66954386 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105278308 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.18762861 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099929664 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.162895913 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.253408185 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.09602232 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.093632628 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676297208 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.190683918 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.114569863 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103015572 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683336573 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.086075143 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.200460944 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.117744495 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.111425886 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.191676721 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.11562057 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078962545 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.103266423 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.104970462 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161308925 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.475697847 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.11018807 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.151277014 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.11041956 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.688885928 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097660404 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155987633 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.143535194 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.10700754 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.100933843 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.108283649 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157587287 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.11193347 seconds)
  done (took 19.962265486 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11854331 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.142276972 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095993998 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140251647 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.144260445 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100559358 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086361785 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098444416 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.129820159 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.191636998 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.127097817 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.1493593 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094700669 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082146721 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.121408107 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.253425412 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108573513 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.126091462 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08353971 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.110314638 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.14437205 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.09885982 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112710057 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.112586364 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173387081 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209200254 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112360736 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12734833 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097451666 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100920361 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145611349 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.166366718 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.077694781 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.097903027 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.187155008 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123396663 seconds)
  done (took 5.282850201 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.201108559 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.116086566 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.193303305 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.180086869 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148199899 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.135196831 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.168548981 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120808162 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.270355372 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.213820487 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082379219 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.186617058 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130662962 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096525458 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094784114 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080699442 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094752917 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.746073084 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.143253044 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.172665091 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.131850067 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108290197 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085181398 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.380946652 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105667041 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.100026772 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089567051 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.093281311 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.184199347 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085685583 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.470937359 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.085395661 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118386363 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089989125 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.133705271 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131824322 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.137653993 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125009267 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109020523 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083172703 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.24322114 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.112076693 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081450372 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.129180229 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135691606 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119838428 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.103754291 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.115187167 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.231300207 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.103716266 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123141232 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.111471997 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.201883443 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.100068132 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.10137497 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.356899969 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.118778818 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086037896 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.100506141 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.296433886 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136290879 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085910991 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079776117 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106458101 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095656324 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.41794447 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.093471077 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.983716799 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.099314747 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.161823261 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103670363 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.110477721 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089178874 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103988409 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101971609 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098854622 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078951754 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098354859 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079611933 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101665868 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114781821 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084967885 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095968892 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147657273 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.119759902 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.122294731 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112733937 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.104843554 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080480945 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133072456 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098166621 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083405857 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.147016191 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105267651 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.115428492 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084288199 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143448964 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097322089 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.186451884 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083392807 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127678405 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101887211 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113978455 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.121392055 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098616365 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084547868 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097106401 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081898276 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163756764 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082080161 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079034412 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101363793 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.099466751 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097444873 seconds)
  done (took 24.157155824 seconds)
done (took 50.079462015 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.470248943 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095975871 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.114331938 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.115007607 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.11306887 seconds)
  done (took 1.661351854 seconds)
done (took 2.392440375 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.337963136 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.197965954 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102638 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.198615716 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088393438 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.204733691 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.167371313 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.120130566 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.199006469 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.101363448 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.17797484 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100393481 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088497173 seconds)
  done (took 2.840640378 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094383419 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118606496 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081563093 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110112879 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075892138 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110983117 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093842826 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.134828324 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091862999 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103269654 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075780121 seconds)
  done (took 1.817140249 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090986226 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11390703 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081342927 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108567266 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07617995 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08903484 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107549229 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116486175 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090264686 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103346082 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075766967 seconds)
  done (took 1.780943519 seconds)
done (took 7.157407244 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.078917839 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.629161098 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120281214 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.167755158 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.342500293 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.213790069 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.541405841 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.134662205 seconds)
  done (took 12.140726422 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.113150249 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.116340591 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.080792632 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100373598 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081931446 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09905144 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.082668359 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097797442 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.084731944 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101414832 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083333474 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100073167 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.084356046 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102484791 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.082834461 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099084593 seconds)
  done (took 2.300992544 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118367971 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117472648 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105388201 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112131464 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086609839 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106691577 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.089318983 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.105505944 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.085850053 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104180021 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.109980597 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.092967584 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.108700084 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.085007557 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106730745 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11202354 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086731532 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10702632 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.089940037 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.108102815 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093312932 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.104928001 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.108172205 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.092778595 seconds)
  done (took 3.277209606 seconds)
done (took 18.445943982 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.174038493 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086962717 seconds)
  done (took 0.994301913 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.102105734 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.121224707 seconds)
  done (took 0.963078273 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108202241 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099034676 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.14004154 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118594878 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084770266 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.100698251 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11710857 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.102044693 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083691958 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.102587008 seconds)
  done (took 1.797949356 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086127462 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103235599 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.090949646 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.123301317 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.112576956 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08614934 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.106060844 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087587987 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107378167 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081946256 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.109584445 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.120639376 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.091333559 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.122350778 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.088664872 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.108025119 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.111118559 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.087975236 seconds)
  done (took 2.566757591 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08060186 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082646345 seconds)
  done (took 0.905886972 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083406648 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096764952 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083839264 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102014168 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08190704 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.099427399 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081784741 seconds)
  done (took 1.370989888 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.512213457 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.265057965 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.348708948 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.100587971 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.159563109 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.380554258 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.1414358 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.117787946 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.117262182 seconds)
  done (took 2.931009603 seconds)
done (took 12.270717799 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09211267 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.189458495 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.686977765 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.122212626 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.080781646 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.163366566 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.270563482 seconds)
done (took 2.349024586 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.358941881 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.129285232 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.092206864 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082064241 seconds)
  done (took 1.403459797 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079731993 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104839209 seconds)
  done (took 0.93145429 seconds)
done (took 3.087597446 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079712238 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.133197707 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07831029 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097171393 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080216505 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097548728 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078495216 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080654477 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.100747888 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.080988513 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.098734123 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080322501 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098462027 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078059872 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095897755 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08099121 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077964554 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096308921 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078575459 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096128927 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08154187 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095506819 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078903212 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077986562 seconds)
  done (took 2.90041937 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10011518 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098213417 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.085458129 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.104185956 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.085981288 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.105461863 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104922013 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.081750578 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.105512475 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.083724083 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103342118 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085991775 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101371721 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086065695 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102514696 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104082355 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087427541 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100218136 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083687972 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103906478 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.08751023 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100235516 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.086341398 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105168156 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.103765111 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085179837 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.101584256 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082218785 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105091547 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085652591 seconds)
  done (took 3.606489018 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087514977 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076022573 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.094854193 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08793567 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09536359 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081415287 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.097212017 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080030234 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.0986522 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.078743937 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.098952431 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.079084438 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.097138637 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08050642 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080847035 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10567755 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116087932 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079739094 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078678616 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.099152419 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085174098 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.097262086 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082443019 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.097793244 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.079738324 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.096595352 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079966036 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078858634 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098703701 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07940807 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.103286278 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085545289 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09705226 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.092967322 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.104935651 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078822944 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.106597685 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078876961 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098776514 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.078520421 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.096782172 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.07916966 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079958391 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.110127942 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082469781 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097915869 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080276823 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099578942 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080398103 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101935604 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079508834 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097560578 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08288876 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099038814 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.086392943 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096720518 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081921809 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080093147 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.100108348 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079652308 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.098389905 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07948207 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.105277902 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080522773 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.123228706 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.092630267 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098219399 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082154205 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.102828054 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.088603467 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100523446 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.099855909 seconds)
  done (took 7.291607391 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082350426 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106396918 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079758409 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098422958 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07761322 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.078266462 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10580087 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098561963 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081717519 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117695037 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080046497 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099523233 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081744358 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102533851 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080697267 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100535309 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090464349 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096188825 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080006001 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10170448 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08133993 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.105036396 seconds)
  done (took 2.786101222 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.227827546 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107697367 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.149161003 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118294433 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101143077 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11565981 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105326698 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089241033 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105802324 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091297416 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109198842 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087495392 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120031314 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109218675 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090962643 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.11037917 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106219053 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092929615 seconds)
  done (took 2.7944339 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09364629 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.101144377 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108524067 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100575217 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083416292 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10500133 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089847563 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119062012 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.104186518 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.084222205 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.113051166 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085924303 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103891314 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083420754 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104001063 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084385527 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104251489 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084150316 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113026938 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108415856 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090053164 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112012207 seconds)
  done (took 2.937185917 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097561223 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101992031 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112576746 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104236839 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078955244 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101149493 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090704047 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.102196663 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110452148 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.085269798 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102206662 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082040423 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.108857391 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082806127 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.109596818 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083407736 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104308789 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083117138 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103915167 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079830582 seconds)
  done (took 2.686610194 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124439504 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116747212 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100587871 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128659935 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119218416 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.100705798 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130895214 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.119354738 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100828082 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132941321 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100127746 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119651366 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130418842 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107435772 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11872878 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130494369 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111209338 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131057013 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118864152 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100726552 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.131811632 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119095785 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112121336 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.118905819 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103201747 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119955846 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118789979 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108910008 seconds)
  done (took 4.043773557 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080163189 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080718958 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.098423925 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.081193281 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.099356059 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080087796 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.100145592 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.081054357 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082373471 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100134706 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082942235 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101411432 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082951976 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101633854 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083284555 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101226461 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083194554 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.080721159 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098964625 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080889924 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.10075503 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083476727 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.102313871 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081203207 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097669319 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082897514 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080551809 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099317161 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083382506 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099509614 seconds)
  done (took 3.460367067 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089318344 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106108025 seconds)
  done (took 0.962414133 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078956271 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117826954 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080265561 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10655409 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08984339 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103788146 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094493687 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109493251 seconds)
  done (took 1.548397327 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.105954651 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.121109663 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090456234 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114038025 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.104717401 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.123935058 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.173746205 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.091169656 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.111507118 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085451211 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.124405058 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083896361 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.11499384 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109067266 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.094093303 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118583202 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082506354 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.113558577 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.092663652 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.105726339 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090751514 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120764789 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09650332 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.111894109 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087313737 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.116464149 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.117903724 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.097998643 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109953424 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.098779198 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.111290906 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078435523 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.109431979 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.090430481 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.101649814 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.105069331 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122992053 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090346355 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.115387393 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109534596 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095312274 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.098540178 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.096306055 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.111249804 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098611258 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.110069276 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.091738422 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.098925691 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.086282187 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.108657968 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.080191835 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107567421 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079163202 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113913083 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.095344025 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120573994 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.087343734 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.106748373 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089261545 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.108643999 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092383306 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.109596397 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114841329 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.089311896 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114768033 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094977448 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113001068 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080624872 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096950622 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08351982 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.115037991 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111719171 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.117133829 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.090574577 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11079604 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082442836 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110612026 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091255841 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114030855 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.116350506 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.09116743 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112131789 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097077087 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10795052 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089064372 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.11148493 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.088369879 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.107432348 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08576732 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.126264314 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.087211528 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.102363515 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086111986 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.114995842 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089212272 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.106071312 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086071915 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114142881 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079541771 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.110200449 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091566076 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11238704 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.117095597 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091233269 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110172392 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.095245771 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.117213385 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090585134 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109019501 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082156888 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111224071 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08736933 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.11254478 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079046498 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109481965 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089288841 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.110438707 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.097993247 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.106328389 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.090401304 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115430493 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.098170666 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.107647015 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.082093999 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.109260894 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.090687861 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114387955 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.097461907 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.108985252 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080453331 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100284907 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094543802 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.109401014 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092131232 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112531792 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110689334 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.080280244 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083946948 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.11897058 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.115785804 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089871953 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.111942113 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096693037 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.111977281 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08933571 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.113925671 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089358063 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103397243 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.095638948 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.106606169 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080847033 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112151597 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090476077 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.10709054 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091346504 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11490517 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089942916 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.111760946 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087994909 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.111420019 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091444822 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.105804121 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090345899 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.109455546 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.117818868 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090558086 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.099668217 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082562747 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091192792 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.106351325 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086641889 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101930632 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087224508 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.107667898 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080993151 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.107021356 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090129608 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122593566 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118995461 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093257735 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.113491757 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.099308838 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.11060084 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093705528 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.11006062 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092741779 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.11117777 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.095754536 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.113289855 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092165215 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10766605 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082429848 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11262895 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098092374 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103792094 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083969596 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102429027 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089638133 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113818068 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091544591 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.109600516 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088182298 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110849279 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096273849 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.109950862 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.090374182 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.106086461 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.091449448 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.115467768 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.09243642 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112383645 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098293453 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112531031 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080688765 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116280731 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087637554 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.114816776 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080807087 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.10823732 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087432644 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.113398626 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.089799133 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109537276 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080066062 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115966846 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097340791 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.112575822 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086628755 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.111916936 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120101543 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090926769 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114272245 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091217706 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.112907643 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106357519 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.106306961 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090880583 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.119604319 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.091133667 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.100734371 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093972616 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.110610025 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085429693 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.108735323 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.089122239 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112916278 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094494771 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112845587 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.080423867 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.110654087 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.089523322 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.107012349 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.083049268 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.116734652 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092436615 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.110621348 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121129599 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093807244 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.112270573 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093775974 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.110454198 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.092888075 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.11129498 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095974245 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.110901045 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.09053951 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.106151914 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.09232761 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.105608744 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085464601 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.109632882 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.091909248 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.110525865 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093901605 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.109953179 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097481806 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.111885537 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.093088721 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.128996369 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.108379336 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087914806 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109008489 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095838429 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.107893735 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089418138 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.099361881 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09700553 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.108632075 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099237709 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.108280889 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.084302111 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.112500253 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091908899 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.11314015 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.093385158 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.113189313 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090831828 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.111010184 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092277803 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121475096 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.089028345 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.119764679 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094983588 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115249194 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.111769947 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.09340882 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109808874 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087805453 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.110710503 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.093701958 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.112249581 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.091576732 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.113570617 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093022011 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.110810187 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0904166 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.112433847 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093925362 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.113683566 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.081840999 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.107915173 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08780246 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.111477 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097398707 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.112823838 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090680128 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.109016452 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094774691 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.110353739 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.084176739 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.11641741 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095443212 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.113732937 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10258872 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.107895368 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.093303648 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122889665 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081547029 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.11008451 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.086043194 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.108370967 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098748697 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.113250129 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.099294158 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.113728978 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088486038 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.105577507 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.094553793 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.11092132 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.082151764 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.105908161 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097086645 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.109800308 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090962378 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.112881447 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096166748 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114033525 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097137517 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.111644954 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092607484 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.113707908 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.085139546 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.108851076 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088367057 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112699772 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.093931884 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.108399961 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.085954412 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.111683569 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092475748 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112972858 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.093023894 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.111766181 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100210282 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112039485 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093207722 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117823362 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08252565 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.113281709 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.092785882 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.112682156 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087986919 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.113967894 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095033029 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114939942 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.098480717 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.112063058 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095639696 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113042641 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086001692 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.11249675 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.092998823 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.112911347 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089576357 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.11324891 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099903215 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.106636194 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092978448 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11378939 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089894027 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.114903951 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.094390218 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.111846648 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096878574 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.113603963 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092788555 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.117250837 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.093255556 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115014632 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114184256 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092303752 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117424189 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088760809 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.119971004 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094719859 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.114192414 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093086416 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.109301904 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092954962 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.111716833 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092860205 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.118721874 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.094593852 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.109464445 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089330666 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.106557323 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.094004691 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117843318 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099233553 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.113700426 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094643653 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.104538025 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.085492489 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11455935 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089875684 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.112325671 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096478376 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119372968 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.09385506 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.111121731 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.092250121 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.119996346 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097967618 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.117485588 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109632411 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.097136385 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.112600738 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091467163 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.10613779 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.089419698 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10961982 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091728493 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.107117075 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08510871 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118496387 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094824092 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111320934 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087903641 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.11242259 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.088886055 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099845633 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.090321619 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.110051911 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09139803 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.110203484 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088469128 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119883205 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.104004554 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088209895 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113030012 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088519514 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.114817745 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080386635 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.109897341 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090356935 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111857259 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081978807 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.109966831 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.090950954 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.114466248 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089999251 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.104202081 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104896087 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.118628788 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094809259 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11298043 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092622855 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.105327246 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.085598355 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.11030932 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096191175 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.113133077 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.102227826 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.109639212 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089694976 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.105132052 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093570296 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11586994 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096856726 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.106648296 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.085689645 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.107573509 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.095418793 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.120558485 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092707163 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.114474519 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096451876 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.112001444 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082959815 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114575589 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.08233387 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.113404604 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106663288 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.116094468 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096124166 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.119156779 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120709048 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.095452612 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.105041243 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.095835195 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.111429871 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095675598 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.110674854 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.097081819 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.13022419 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09548634 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.110499579 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.093290585 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.114837184 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090733048 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.122923416 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096105279 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.117131096 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09569059 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.109938902 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091402444 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11787628 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112246794 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092108965 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.111425892 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.091287948 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11056962 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.092453251 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.113410689 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.097687092 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.116006574 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094240181 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.115556904 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086957851 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120599549 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097871275 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.113210233 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.086413613 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.11002111 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.091885523 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.107141134 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.096857438 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.107258249 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.089614301 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.107924818 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.093495664 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.114126089 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093486943 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.109739964 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.091251658 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.109220738 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079558533 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.112207425 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089994511 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112476795 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085140936 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.110303748 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.095362891 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.116944481 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094593896 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.107773046 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090199237 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108730907 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09205972 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101450651 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091859216 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108782128 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089115111 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106644294 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090214105 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.111713361 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092347321 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11075293 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09219458 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.111881643 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098974006 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117802528 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.087205725 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.108385221 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098950269 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.109509664 seconds)
  done (took 61.610896697 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152925671 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088367451 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099477469 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080724515 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127508131 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082212151 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100261001 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082381374 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101390565 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094910945 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102774944 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080288081 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12491871 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132007406 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129130586 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121886109 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086266479 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106488269 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086152818 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106775991 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108173009 seconds)
  done (took 3.008041705 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106616567 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119672012 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117593945 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102580972 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113217744 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119431176 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098255775 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120164359 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.123361412 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113003987 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.102890979 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118806232 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.112832366 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094198263 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113922721 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115831877 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104349879 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11320179 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.123233124 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098860708 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119375265 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.120257563 seconds)
  done (took 3.28726406 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093551583 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.087736806 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.115455606 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.082402782 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.108757423 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.082283462 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.114587548 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.084631309 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.113367112 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.08969628 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.106360437 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.089398622 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.11383669 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.082969488 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.109272743 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.089608543 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.119754408 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.091329312 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.111352056 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.083744743 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.131660933 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.104023961 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.085962574 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.086325945 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.120020754 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10888723 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.089909044 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.089844308 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.107170088 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.088906127 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.106623865 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09125756 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.11276227 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086334119 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.107940943 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088747168 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.109898259 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.083766224 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.106048457 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092892484 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.104306255 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.091171536 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.116726064 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.085900264 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104921556 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091598316 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.109628433 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.084375727 seconds)
  done (took 5.571839346 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.124619152 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16835531 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.094596251 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.157874965 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131812416 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.120267663 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.093647513 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.150760481 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.107534862 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.089686804 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128326449 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12480692 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091474517 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.118556704 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092950424 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110961825 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.113199391 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.095626744 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.120862286 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088775554 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11969739 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112724188 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.105836617 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123109435 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114367153 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.089075176 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108490992 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.09867604 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.123790178 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.117424786 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.09522325 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.121159128 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.130209015 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093551055 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.112340431 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111768675 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.106466555 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.111445516 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091852967 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10826221 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.111150818 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09888078 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113484461 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.126492059 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092152614 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.111881899 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.092681671 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.112312813 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.127782511 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.096262369 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.119949413 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12467724 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.095377425 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10993403 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.096985296 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.134197202 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.110287021 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08905858 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.113409403 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121820916 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.090065072 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.119748648 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.108929612 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.116187699 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.118843587 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.104000619 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.113346688 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114221367 seconds)
  done (took 8.5711854 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097109776 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.13434972 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127276368 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106782375 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115604132 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114344361 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095805879 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.114733404 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09539668 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.125669176 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119736523 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.166953578 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089663763 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120681494 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.095056362 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116442346 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115118204 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095493462 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114865553 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09502486 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11738694 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126061113 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095863565 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129564136 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130006004 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108099261 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.096958733 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116834472 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10699221 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.116429136 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128494319 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.115883498 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096071129 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.127797222 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13045279 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.096209068 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106427177 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095573828 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.117582656 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115950865 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089762341 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12727954 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115679131 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.090009465 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115970466 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.096405516 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.128689007 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.129172114 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121193361 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102721398 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116438268 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127496197 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096390805 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.115712285 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.127467012 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.135359823 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107733595 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128942142 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117646274 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107461962 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126841305 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.136711581 seconds)
  done (took 7.916106241 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087773815 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086128171 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.105669122 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084337192 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107938544 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08466268 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107497347 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.087414985 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085677809 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.108613637 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086354746 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105856232 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085245469 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108033915 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085380936 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104675957 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085340531 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083506687 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10916549 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086865574 seconds)
  done (took 2.714676904 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096065235 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128173044 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088379707 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11556845 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090026339 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.117214849 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.112375197 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093404798 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112044678 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097402215 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.128532042 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10515209 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112085789 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.121756696 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104495559 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.118574196 seconds)
  done (took 2.57248448 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.108945306 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121805701 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.13452253 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.097531581 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10822748 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.095742326 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.108663145 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.083342066 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103696108 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.096600957 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.114618626 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.098053386 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.108665336 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086240509 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.108933479 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093303577 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104286636 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.09203035 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.108535905 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.112776917 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.115201432 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.11137589 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088749375 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.109549334 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090843613 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.116731327 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.094892928 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10912704 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087069293 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110586148 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.094235078 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.121520182 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.089673077 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.118821667 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.085994516 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106688483 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.086726069 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.109901258 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.094725538 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.109050083 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084548888 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.112587623 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086489568 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.111766158 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082213831 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.111267195 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.082662814 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.116448469 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.109427714 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.091239385 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107690987 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.096501527 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.115106331 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.100090156 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.119370499 seconds)
  done (took 6.498689453 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103132121 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112133561 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092430049 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105399422 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091065385 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.117915374 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0922095 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.111444651 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089845214 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.106811703 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089950036 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114070451 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089764297 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113821459 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08949455 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113035892 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082851254 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11052218 seconds)
  done (took 2.658810378 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094635472 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107875595 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095424206 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108672164 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088349977 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110247098 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085528226 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085101589 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109449668 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087196874 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110036691 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090327496 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108495377 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089769469 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109174661 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088303588 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.112068461 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086671475 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.109657012 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0838495 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111615662 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086827946 seconds)
  done (took 2.994764103 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.106551846 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.14212374 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.103515472 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.153452979 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.114407446 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.091807292 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.124208324 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.092961704 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.135470461 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.114095802 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.091831374 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.112141431 seconds)
  done (took 2.221359329 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115312585 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150101371 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085555921 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113777488 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122859624 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093714648 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115751454 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093891844 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129338886 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131328325 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094233147 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129483401 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127799452 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126944169 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100950022 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124533614 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114676552 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094373511 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110381119 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138279882 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09574494 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128943151 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116925761 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094426548 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116055265 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12714662 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106383305 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130337285 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117323327 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106215294 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124815526 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115499684 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106234868 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130607311 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112415686 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127621424 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094661091 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137773876 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12275945 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105055136 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.114148293 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121417636 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106445553 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124290061 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128694391 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09401434 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124994635 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116825654 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094768499 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145275577 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126785752 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127941157 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100893401 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128653781 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128599815 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144949899 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12853105 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126414304 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102256591 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13059717 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128509668 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121947542 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10564882 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130215166 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122510181 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126464911 seconds)
  done (took 8.620906894 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130077324 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109488104 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092943268 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130370194 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130037302 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115703646 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094434219 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116389131 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094246107 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113643699 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164854276 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118032379 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10813008 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128857256 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11893793 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09715083 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117460023 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13230125 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096376445 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146097107 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118118292 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126464211 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104929508 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129298073 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130043814 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123874105 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094404855 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116729984 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094001715 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118359638 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124637624 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096858807 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12894604 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110333327 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105579501 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117899259 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096127102 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123645386 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116423229 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102572439 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127590825 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13988927 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117771453 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094503824 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131276155 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117042784 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09381988 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112612014 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093671599 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113162584 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129269649 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129819153 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107069869 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128852658 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116506589 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094071765 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117914244 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115455411 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096643869 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125006727 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128708216 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094541583 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146464723 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119652137 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09778482 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12871972 seconds)
  done (took 8.49834494 seconds)
done (took 162.507550958 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.107484608 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.147911162 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.103848238 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176088603 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088682053 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.146150059 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121688956 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.127327403 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.088642484 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.111164193 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.08837066 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.114807635 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.155944997 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.111719912 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09016173 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.115537419 seconds)
  done (took 2.739149589 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.184963524 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.295372879 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110020563 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.116198002 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097603503 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.115524413 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.094124301 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.120366237 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.091037323 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126576079 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.112713701 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092353721 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.124355332 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.092267842 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.112197198 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091118455 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.123672688 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091371463 seconds)
  done (took 3.04392926 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114703516 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.156352293 seconds)
  done (took 1.127988242 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125372112 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.193825159 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316140905 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.167910095 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118900512 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.135792155 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.172088888 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131055088 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.201482604 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133618697 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11049529 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119287939 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.143440197 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102627747 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.122675794 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096199319 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.147832291 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.120492141 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099370959 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.120517438 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117321895 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.121165672 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.122610983 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.099007793 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.191537516 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134757545 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.118504994 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.097895181 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.119535519 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097842311 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.123919626 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.132649168 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111202586 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.199375834 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100896517 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.197091277 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105772539 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.119192179 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.1181212 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095609898 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.122047657 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099684627 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.136178249 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118838379 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.098499601 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126513255 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.096686814 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.119989748 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.125034279 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106681029 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.125890775 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.122764552 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.414648553 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.127504866 seconds)
  done (took 8.195219341 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.842946109 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.166910952 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117996944 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.953360844 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150110983 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131782197 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.842035892 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116000019 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.275365164 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.844579357 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137722434 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132645279 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.246856934 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.26994072 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.157308165 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.350462797 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.723347451 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.131778424 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123957152 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164094663 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126917401 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147676189 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112965649 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.446810971 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096290153 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116017824 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.101762608 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.130463052 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173583103 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.115723555 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098675417 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.214896176 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.280363974 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.190514129 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121880005 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091505949 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117949591 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18002797 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.287035866 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.230888427 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.183353117 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089269886 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115966579 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105600753 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136488084 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111653729 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178088221 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.1869618 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.208905265 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102562161 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130512789 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102185999 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12988788 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.17394925 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.116245851 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.349582347 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.354175519 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094442723 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126517177 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112045881 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.283858178 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.118020253 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237519079 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120653176 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.228484634 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.117247067 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805397141 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.200283851 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097889054 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126730358 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10140234 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123746772 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127409566 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17628163 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.387410165 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110150506 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12177537 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093028863 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.246187424 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094881794 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117167452 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.175888469 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117822808 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104302322 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13418792 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131196604 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.18422831 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.263496633 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137360126 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124924393 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.101047388 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13138735 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09534499 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.246795574 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21096759 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.195641591 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230885344 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131026387 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.177729742 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.182343281 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.134466013 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.185553642 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12861548 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134493556 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107573655 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229832664 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.159916757 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.119713847 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102988393 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.126093232 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.156134869 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097305903 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.125398807 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.182267498 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.481183672 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.182963848 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.092386328 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.122734261 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102887922 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.197856924 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107070984 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.277815289 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125413824 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.181730276 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102720196 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.117695059 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124188947 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179936932 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132939601 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106952321 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132029848 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125778167 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.265868864 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.236398371 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113535094 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.256451675 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.192794433 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130010642 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190856464 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103768594 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.207641013 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105525798 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13112686 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118655624 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802901126 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132027632 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125418321 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098944044 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.201212602 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118599204 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097651698 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.117481494 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09207599 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817404087 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.098702793 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.115029332 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.095515997 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127718294 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.101553537 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124750415 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.122221222 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177818702 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248228617 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107831867 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127757237 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.116848513 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.175092379 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094713248 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.11955533 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.094253039 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.119561084 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102941645 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121632594 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095378609 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.208807605 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.175655509 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.238071759 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.536401126 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120827465 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.094536107 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246140888 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120818683 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320091444 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105631804 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.239721974 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183793934 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.117716018 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.350956792 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185371636 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.203454786 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.097460861 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.20974547 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090873663 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124884601 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.174306722 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.119379976 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103219993 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.169911118 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140869408 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.132113201 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.165857043 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093728032 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.239335111 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.116278378 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.180843257 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119758546 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106073496 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326986681 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.119776913 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113760667 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.200039644 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099578233 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.119437535 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.599179175 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.119578542 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104016978 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128391023 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.239225983 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.180067968 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127229273 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122866872 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112496718 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.174232803 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.250007198 seconds)
  done (took 46.34439209 seconds)
done (took 62.301812404 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316509788 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279867624 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.321321221 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.205273872 seconds)
  done (took 2.081492939 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.187863705 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.16218086 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.131375998 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.118271733 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.163019881 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091343619 seconds)
  done (took 1.736696965 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.509000507 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.392512426 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.358640268 seconds)
  done (took 2.141746877 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.275779361 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.296279067 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.372522078 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.431668194 seconds)
  done (took 2.365735884 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.215279337 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133303251 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.105863618 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.147778297 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.181401954 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.191482406 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.151179289 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.162088414 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.137512559 seconds)
  done (took 2.357736008 seconds)
done (took 11.571366177 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.300106607 seconds)
    (2/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.159114872 seconds)
    (3/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.187703316 seconds)
    (4/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.314990143 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.098728658 seconds)
    (6/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.184255627 seconds)
    (7/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.328357208 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.104952401 seconds)
    (9/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.210940796 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.12260643 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.167641785 seconds)
    (12/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.094664426 seconds)
    (13/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.228269044 seconds)
    (14/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.122683209 seconds)
    (15/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096089166 seconds)
    (16/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.228469359 seconds)
    (17/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.256680214 seconds)
    (18/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.198023222 seconds)
    (19/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.133212227 seconds)
    (20/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.237404089 seconds)
    (21/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.212822554 seconds)
    (22/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.10105971 seconds)
    (23/286) benchmarking ("sort", Int64, true)...
    done (took 0.211257736 seconds)
    (24/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.219258598 seconds)
    (25/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.130057869 seconds)
    (26/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.292221678 seconds)
    (27/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095955096 seconds)
    (28/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.124207863 seconds)
    (29/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.147054729 seconds)
    (30/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.22231038 seconds)
    (31/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.161347468 seconds)
    (32/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.153541975 seconds)
    (33/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.223801614 seconds)
    (34/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.090252571 seconds)
    (35/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.125957494 seconds)
    (36/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.108657516 seconds)
    (37/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.166612905 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.152027169 seconds)
    (39/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.105886332 seconds)
    (40/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.129942157 seconds)
    (41/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.241834706 seconds)
    (42/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.227550912 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099046756 seconds)
    (44/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.124364193 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.105799175 seconds)
    (46/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.219940912 seconds)
    (47/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.215184281 seconds)
    (48/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.120489714 seconds)
    (49/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.200054215 seconds)
    (50/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.170968316 seconds)
    (51/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.109526456 seconds)
    (52/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.223026736 seconds)
    (53/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.212691457 seconds)
    (54/286) benchmarking ("sort", Float64, true)...
    done (took 0.215828582 seconds)
    (55/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.160446507 seconds)
    (56/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.209043948 seconds)
    (57/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.134979107 seconds)
    (58/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.107760368 seconds)
    (59/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.129915727 seconds)
    (60/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.106411129 seconds)
    (61/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.206693005 seconds)
    (62/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.19712064 seconds)
    (63/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.106464927 seconds)
    (64/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.173264138 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.154328609 seconds)
    (66/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.17031248 seconds)
    (67/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.132490263 seconds)
    (68/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.174431949 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.167070993 seconds)
    (70/286) benchmarking ("sort", Int64, false)...
    done (took 0.091990475 seconds)
    (71/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.134890271 seconds)
    (72/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.125577885 seconds)
    (73/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.096166691 seconds)
    (74/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.197115565 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.099022253 seconds)
    (76/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.214692916 seconds)
    (77/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.123456119 seconds)
    (78/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.10748225 seconds)
    (79/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.119818447 seconds)
    (80/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.099546601 seconds)
    (81/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.14841787 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.098913117 seconds)
    (83/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.146118675 seconds)
    (84/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.101572576 seconds)
    (85/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.192561256 seconds)
    (86/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.136328606 seconds)
    (87/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.103888966 seconds)
    (88/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.08862919 seconds)
    (89/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.09816338 seconds)
    (90/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.106481416 seconds)
    (91/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.080249608 seconds)
    (92/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.102931812 seconds)
    (93/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.213810875 seconds)
    (94/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.082834569 seconds)
    (95/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.122494234 seconds)
    (96/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.193613866 seconds)
    (97/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.131604432 seconds)
    (98/286) benchmarking ("sort", BigInt, false)...
    done (took 0.238846197 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.153041352 seconds)
    (100/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.21180724 seconds)
    (101/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.200735795 seconds)
    (102/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.213636424 seconds)
    (103/286) benchmarking ("sort", Int8, true)...
    done (took 0.211208856 seconds)
    (104/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.135625518 seconds)
    (105/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.128090873 seconds)
    (106/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.08912682 seconds)
    (107/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.131678329 seconds)
    (108/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.110791913 seconds)
    (109/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.193009629 seconds)
    (110/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.180905675 seconds)
    (111/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.124947544 seconds)
    (112/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.120928303 seconds)
    (113/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.104797208 seconds)
    (114/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.122905667 seconds)
    (115/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.116481694 seconds)
    (116/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.111282714 seconds)
    (117/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.123251789 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 0.196254836 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.123906669 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.106690353 seconds)
    (121/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.078459091 seconds)
    (122/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.122375294 seconds)
    (123/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.095743306 seconds)
    (124/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.105286256 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.105500301 seconds)
    (126/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.207345297 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.123587906 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.148726389 seconds)
    (129/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.080376905 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.123289251 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.101124682 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.130538863 seconds)
    (133/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.09798337 seconds)
    (134/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.148324966 seconds)
    (135/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079448442 seconds)
    (136/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.105667886 seconds)
    (137/286) benchmarking ("sort", Float32, false)...
    done (took 0.183101961 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.093559082 seconds)
    (139/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.121133129 seconds)
    (140/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.098093329 seconds)
    (141/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.162242801 seconds)
    (142/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.102399458 seconds)
    (143/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.163552641 seconds)
    (144/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.079994802 seconds)
    (145/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.134035072 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.130468608 seconds)
    (147/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.140551674 seconds)
    (148/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.150398427 seconds)
    (149/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.094941292 seconds)
    (150/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.144386641 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.124480266 seconds)
    (152/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.176160949 seconds)
    (153/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.104722044 seconds)
    (154/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096437892 seconds)
    (155/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.104135896 seconds)
    (156/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.080478631 seconds)
    (157/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.152752052 seconds)
    (158/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.10688204 seconds)
    (159/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.125972757 seconds)
    (160/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.08156552 seconds)
    (161/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.199335977 seconds)
    (162/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113563194 seconds)
    (163/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.097101383 seconds)
    (164/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.146265503 seconds)
    (165/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.100346297 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.121759604 seconds)
    (167/286) benchmarking ("sort", Int8, false)...
    done (took 0.201764985 seconds)
    (168/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.108771755 seconds)
    (169/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.148228791 seconds)
    (170/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.129756526 seconds)
    (171/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.137131524 seconds)
    (172/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.132047475 seconds)
    (173/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.224277621 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.107226693 seconds)
    (175/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.132085172 seconds)
    (176/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.124077735 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.1092535 seconds)
    (178/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.104400498 seconds)
    (179/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.113094428 seconds)
    (180/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.153605106 seconds)
    (181/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.100280376 seconds)
    (182/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.129138814 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 0.211973906 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.097463926 seconds)
    (185/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.121596148 seconds)
    (186/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.093975856 seconds)
    (187/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.105347127 seconds)
    (188/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.111596975 seconds)
    (189/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.10555799 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.109614306 seconds)
    (191/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.131826311 seconds)
    (192/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.081341592 seconds)
    (193/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.105241031 seconds)
    (194/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.109952169 seconds)
    (195/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.105425849 seconds)
    (196/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09675785 seconds)
    (197/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.121671235 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.123327578 seconds)
    (199/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.104566183 seconds)
    (200/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.090038794 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.123644198 seconds)
    (202/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.097506253 seconds)
    (203/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.104054222 seconds)
    (204/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.096114497 seconds)
    (205/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128835802 seconds)
    (206/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081407399 seconds)
    (207/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.079669463 seconds)
    (208/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.123368197 seconds)
    (209/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.17256709 seconds)
    (210/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.094245784 seconds)
    (211/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.105849315 seconds)
    (212/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.095866073 seconds)
    (213/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.124077748 seconds)
    (214/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104571649 seconds)
    (215/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.105137458 seconds)
    (216/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.080937989 seconds)
    (217/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093144603 seconds)
    (218/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.10584795 seconds)
    (219/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.105618554 seconds)
    (220/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.171509319 seconds)
    (221/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.10427569 seconds)
    (222/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.110237721 seconds)
    (223/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.135923836 seconds)
    (224/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099394269 seconds)
    (225/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.129179983 seconds)
    (226/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.08169387 seconds)
    (227/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.117548938 seconds)
    (228/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.081304651 seconds)
    (229/286) benchmarking ("sort", BigInt, true)...
    done (took 0.224676248 seconds)
    (230/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.106858012 seconds)
    (231/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.080874662 seconds)
    (232/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.145749877 seconds)
    (233/286) benchmarking ("sort", Float32, true)...
    done (took 0.215655953 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.100268856 seconds)
    (235/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.138339289 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.097321791 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.126458453 seconds)
    (238/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.08173359 seconds)
    (239/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.112741388 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.101307606 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.133438495 seconds)
    (242/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.113865292 seconds)
    (243/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.106721408 seconds)
    (244/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093466105 seconds)
    (245/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.124998043 seconds)
    (246/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.080806721 seconds)
    (247/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.121031939 seconds)
    (248/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081589827 seconds)
    (249/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.123018412 seconds)
    (250/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098160169 seconds)
    (251/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.10462144 seconds)
    (252/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.082064167 seconds)
    (253/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.079659595 seconds)
    (254/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.141590164 seconds)
    (255/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.120098007 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.100951678 seconds)
    (257/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.104960488 seconds)
    (258/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.093923443 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.125113796 seconds)
    (260/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.093241843 seconds)
    (261/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.120886948 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.094003211 seconds)
    (263/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.088654701 seconds)
    (264/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.124637309 seconds)
    (265/286) benchmarking ("sort", Float64, false)...
    done (took 0.182258865 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.10925954 seconds)
    (267/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.145203006 seconds)
    (268/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093853937 seconds)
    (269/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.105633357 seconds)
    (270/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.10843647 seconds)
    (271/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.12305662 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09636715 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.126304724 seconds)
    (274/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.081823391 seconds)
    (275/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.106428742 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.100256236 seconds)
    (277/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.118920302 seconds)
    (278/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.098077706 seconds)
    (279/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.124245171 seconds)
    (280/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.097574299 seconds)
    (281/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.107460322 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.096674528 seconds)
    (283/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.124188614 seconds)
    (284/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.094079855 seconds)
    (285/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.106189932 seconds)
    (286/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.091601167 seconds)
  done (took 39.364192972 seconds)
done (took 40.253952393 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.106951993 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.160367724 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.104780137 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.148518496 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.130767132 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.110507306 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.129048864 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.105102882 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.131532141 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.13232667 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.108634513 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.112933085 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.105478956 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.128986928 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.106721631 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.150747285 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.108483731 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.127498631 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.096598431 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.123505605 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121188225 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.098630422 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.123077674 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.088958686 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.129384677 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.103731062 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.124659629 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.105459749 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.123244432 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.094967593 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.121448524 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.1018078 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.120782839 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123255976 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.124557616 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.09706332 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.130438807 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.104513509 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.123975351 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.09760254 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.126672398 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.097883445 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.126867131 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.101804384 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.122590057 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.120258242 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.09698832 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.131971021 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126628817 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122620865 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.102275429 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.129506405 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.106596236 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.126310536 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.095541139 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122044046 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.098521904 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149895011 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121640937 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098705871 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.101570221 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.128950014 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.120469489 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.097256347 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121128256 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.106489099 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.128467149 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.097288702 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.1279626 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.100928128 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.117500267 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098279622 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.119460581 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.095251379 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.127904843 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.104457402 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.115810463 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.098554253 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.124862902 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.100019064 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.121080849 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096060522 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.123954076 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09926687 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118807906 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089764481 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.119089472 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.100435025 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.121534902 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097727943 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.124809502 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.100362616 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.123575847 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104449743 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.122162653 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.098764918 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.122424695 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.09830394 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.124985416 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.095239807 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.117867382 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095857717 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.126517555 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.095810886 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.123264304 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.107048786 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.119829727 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.099960715 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.121594286 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.097543741 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.135154564 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.128051329 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.099020045 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12293161 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.094675235 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.124921948 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.096869824 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.119894062 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.095607765 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.122498415 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09936545 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.122500974 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09647716 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.125622469 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.107309854 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.117704097 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.096560483 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120665663 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.09868692 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.125272998 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.098760792 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.119453737 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.097304263 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.116405331 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096439992 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.119661298 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.10240962 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.123269113 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097543114 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.123562111 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098346934 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.124197291 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.099134937 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.124110769 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.095942309 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.115962029 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099723096 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.122128942 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.100740942 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.123269735 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.098309705 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.118120385 seconds)
done (took 18.162923555 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.105399516 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.194753161 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.155686119 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.159110553 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.157089041 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.115787811 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.133026644 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.155521689 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.106223205 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.151297192 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.153729778 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.144212905 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.135874324 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.130936992 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.141462332 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.104674737 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.129070495 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.138159308 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.139657005 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.150568944 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156934207 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.131346821 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126955243 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.15154096 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.128781786 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.125548126 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132125232 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.129452101 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.108669966 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.14614035 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.121230754 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.133876409 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.13179434 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.116723756 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.13714195 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.102455319 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.140765702 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.125848962 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.105634509 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.130389474 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142496168 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.116530296 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.126175676 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.136961974 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.106591336 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.133301708 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.104092588 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.128619119 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.105426739 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.126280546 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.135066015 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.125891694 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.128666301 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.132140755 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.106521018 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.130167065 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107136403 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.134456982 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.131648862 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.108610177 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.130381462 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107534948 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.136394969 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.147100985 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.129254361 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.107780523 seconds)
  done (took 9.550937875 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.123345155 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.160627866 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.137053885 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112393535 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.133711108 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.09361695 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.118583575 seconds)
  done (took 1.83536953 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.099800358 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.151001358 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129401493 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.154130076 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.145070749 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.133071958 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141332585 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.122569038 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.11958945 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.131635549 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.124141649 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.176208349 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.122396567 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.108140955 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.156796614 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.121360528 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.132428031 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.121139035 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.103194578 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.154503304 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125684921 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.119123275 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.135758385 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.097209227 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.144076816 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.097132928 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.191081444 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.133325812 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095289488 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.127219552 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126320034 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.193634117 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.11917399 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.132073628 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09508798 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.151030297 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.143347352 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10224116 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.148425598 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100758598 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.144655727 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.102561633 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.129967012 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.12736703 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.104026656 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.136866841 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.108052064 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.130397142 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.102049466 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.150950516 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.133024933 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119337863 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.12273519 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.101058806 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.1322628 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102295553 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.136349134 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.101408962 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.151601108 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.129791281 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123046064 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.150260569 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.143984961 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.123798124 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13980717 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.144177255 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.118340299 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.127478725 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.104945816 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.129868321 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.123502884 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.127037002 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.132233988 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.112518749 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130723681 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.12452681 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.151026419 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100282281 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.135547244 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.125911011 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.099686162 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.121838806 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11347728 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125340768 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.098891461 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140606463 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108961582 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.127432545 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.099970162 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.145099504 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.126443716 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.109340728 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.133652527 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.100233313 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138024586 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.150907741 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.107175308 seconds)
  done (took 13.263971231 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.100149084 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.097551968 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.129616681 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.123638813 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.098646695 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.098019222 seconds)
  done (took 1.617437726 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.13043775 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.128345349 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.113683014 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.129583509 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.167830126 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.12182751 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.147816432 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.13258842 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.117707632 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.1378674 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.122030546 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.149313044 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.154295975 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.104592079 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.147026506 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.104790362 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.148204265 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126165488 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.112328908 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126445775 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114493382 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.130965798 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101011648 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.146406241 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.130098569 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.105708504 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129233166 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.11274872 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.138295239 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.107021372 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.131033984 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.129977837 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.105721366 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.132332331 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.123279616 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.130718909 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100603051 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.133581105 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.131199595 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.105135794 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.148702941 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101253103 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.137617767 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.109928306 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.132792837 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.130738441 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.107144852 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.129254998 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.122205588 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.132768242 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.106527784 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.131471036 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.104594513 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.133367153 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.129844495 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.108397634 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.132472357 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.122365804 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.130737595 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.104509599 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.127174797 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.104910509 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.134481963 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.130801491 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10528952 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.13253538 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.106195502 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127246857 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102321833 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.130260727 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.106958735 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.127286337 seconds)
  done (took 9.923813856 seconds)
done (took 37.136406228 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.697895358 seconds)
  done (took 1.657681844 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.890129322 seconds)
  done (took 1.84786398 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.972322211 seconds)
  done (took 18.968314309 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.550402894 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.652568766 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.986874297 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.173509431 seconds)
  done (took 3.32060397 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.975053561 seconds)
  done (took 1.95699519 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.323127541 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.273645205 seconds)
  done (took 1.566746052 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.851471872 seconds)
  done (took 1.829707182 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.588361449 seconds)
  done (took 2.558277645 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.368502679 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.208588865 seconds)
  done (took 1.557913747 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.601209549 seconds)
  done (took 1.576743158 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.579227352 seconds)
  done (took 16.562193349 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.240588495 seconds)
  done (took 1.231777799 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.311781702 seconds)
  done (took 1.292121919 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.713471942 seconds)
  done (took 4.695972712 seconds)
done (took 61.588538423 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.111444699 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.136107984 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110960834 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.133337459 seconds)
  done (took 1.461310921 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.113473982 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.129441092 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.109017954 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.130515817 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.113387451 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.131433679 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.103373105 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.138289895 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.104804931 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.133304875 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.130121761 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.104858118 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.132073165 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.104281302 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.128268393 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.106439378 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.134786163 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.104328029 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.132041706 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.105563518 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.131527725 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.132289784 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.108713703 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.132046511 seconds)
  done (took 3.874166763 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.108114025 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.101396189 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.129446125 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.100825153 seconds)
  done (took 1.425824761 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.116657628 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.145627522 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.1196421 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.138128805 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.145867639 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.118737952 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.127769065 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.100959894 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.129966101 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.112119994 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.128499452 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.120937028 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.146106801 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.122120154 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.113861869 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.120546647 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.098030186 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.14550918 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.112220481 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.139630642 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100886523 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.138877351 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.10922699 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.142793487 seconds)
  done (took 3.985971709 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.180079478 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.141802666 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.151636654 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.175097279 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.127810911 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.126755607 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.126608523 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13550015 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.130622389 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.101050642 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.126788428 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.156170032 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.133311339 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.128829386 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.101333862 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.132398671 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.107686157 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.132124506 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.103445345 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.143042465 seconds)
  done (took 3.653336765 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.10842421 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.127085828 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.097585118 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.126799712 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.108465459 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.129173295 seconds)
  done (took 1.691414821 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.098079398 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.09560988 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.123463282 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.095684638 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.127355793 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.097210679 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.120961343 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.097162864 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095628014 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.123576964 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.096074135 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.122524654 seconds)
  done (took 2.28010103 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.509192905 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.125436613 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.128377797 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.102272034 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.132320677 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.100663682 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.14237992 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.100559047 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.183501233 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.129487868 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116040285 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.182223512 seconds)
  done (took 2.943679154 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221045822 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105981165 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28763183 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.389558801 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169158628 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17719257 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.287353055 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177859353 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199043641 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14764426 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21718435 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167852623 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138782775 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21736237 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123664942 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.195837183 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186980033 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212228878 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160490153 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251599555 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176369079 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178080302 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201638943 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135286166 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148879285 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170359795 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.129392766 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111684186 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185235382 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1800026 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212441526 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158450145 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121846411 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237868702 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230394831 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18987188 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.34249452 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117194458 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.204827969 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.203361085 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291211804 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151059059 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207765562 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167109874 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142162073 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193054453 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168190542 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.192995218 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.142080308 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12576588 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222513243 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187311893 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19417934 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11997111 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.339027415 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163080142 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.129835158 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19122783 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228855943 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211530526 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179712795 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.105503797 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.224043689 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203159344 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192080846 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.1553093 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.179261069 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107922296 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189074559 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242731231 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191368161 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179829234 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.197318728 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145385266 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174617593 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191175291 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164943836 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190031024 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171007136 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.103765762 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161220966 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147386626 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110282519 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196589722 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13234981 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224835672 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145386397 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.300840732 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219272065 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169753117 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17242204 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176499968 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180069901 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158103596 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101232208 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15881558 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.182920712 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168054881 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141674673 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140482503 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156752234 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.137180262 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164195617 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.106201547 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170168631 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.145127507 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179503402 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175295103 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.11117583 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176395135 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1613033 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.16891811 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183141613 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206374096 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14438093 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115781545 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21405928 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168039745 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.146915356 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197794512 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207578882 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.183531085 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148327791 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179007832 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207663927 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153626909 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208444262 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152648719 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144541068 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.161270197 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141312698 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168313678 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.166348882 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139862336 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.162102827 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215342249 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.109017308 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149240069 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185926152 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137086834 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110504281 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15544289 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146931099 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.124946833 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.160869751 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.150698777 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167857894 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171070894 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164042843 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170439622 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126374006 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236097885 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115766534 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.172296784 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158108255 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.100033927 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.219808297 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205605048 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111387267 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199311553 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.179726081 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237997956 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174337152 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112269311 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192529019 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143437759 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.130477833 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176953749 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142247688 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174450844 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.232316469 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209630138 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18066298 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.164547879 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16101214 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179967803 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.195675544 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168813886 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.155569352 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1467264 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208285881 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.105132335 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.133687882 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108991566 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152236187 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14175376 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116195216 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191964762 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174894918 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228883543 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173826396 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12223147 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202833797 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.137947023 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177352709 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.182313965 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149484531 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.205267287 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202675845 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179102795 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154759749 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183115329 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.101484401 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137093555 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143158854 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177703257 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115850015 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145172066 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153921998 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203165071 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188929555 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161365383 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215211015 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17846801 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213207222 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.132777841 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.175433579 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191958582 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167877103 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.171275221 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143734841 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.172444457 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198740757 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15446082 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206113499 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174225813 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180047809 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211808089 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.168333662 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141509399 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131735817 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180944531 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152347595 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18271896 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158569868 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146302469 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136233559 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.147463994 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136679279 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192998467 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154459568 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190622982 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.177667424 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185268254 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137664426 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154156703 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14237902 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156976586 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.128935834 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183320125 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208679297 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156738999 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169897027 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196682566 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140260421 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.326132222 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213618848 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197886004 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149544439 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153674022 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143169066 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180927178 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175116156 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195034618 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156584989 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192736827 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171886498 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.154574746 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117158487 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161860012 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163059007 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.164268728 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.143642799 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.135173864 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.154235112 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19508957 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157576019 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170338714 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176542017 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.157321093 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.137223371 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152414989 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222853667 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171185335 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189624897 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.168597795 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.187254984 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20094541 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135783 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110106824 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.139266683 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195675782 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113460914 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172394633 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.222716082 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210957269 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17103438 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181465756 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147942194 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.106284393 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171583054 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161308505 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211263824 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153992141 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.147518079 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21344451 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.163605298 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113028852 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177909864 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297425224 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157301826 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195434393 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.133009882 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.290488648 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114617781 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143511969 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181550264 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184378174 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.143004603 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.167703179 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174773495 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157377167 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182373262 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147982746 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203082725 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224413687 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181901341 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189049287 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.155728148 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172463202 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176066873 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200081358 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157043403 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.156467375 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146059595 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237434407 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.208781571 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.11492239 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175771477 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175042023 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171971589 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186543356 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146399081 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200784078 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142986614 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178915343 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121190461 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137945346 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17039567 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.196118954 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144991036 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197184765 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169660095 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113259205 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138795312 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164043294 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170851137 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153991065 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.113542164 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189911562 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.139660448 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175138507 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193055142 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113420909 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167268212 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157080881 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113316833 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156087705 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157526898 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116863818 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.185483109 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206929982 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.143874695 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198003575 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184136613 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17768202 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17176376 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156529326 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.672297292 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.111047972 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203526158 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159841529 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201103673 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162485537 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179429167 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172835584 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131548831 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17935473 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161070232 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233437638 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177486944 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.169985543 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141997677 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127703915 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158889905 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.142920847 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16310092 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173085242 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122596502 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.148364777 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.168691218 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157238798 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.127827866 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150574234 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205375843 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160319266 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196161485 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197338446 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149183902 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17733311 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189211644 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111116715 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.172921595 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185641962 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155520652 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16235007 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.141555426 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.117823726 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193120852 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.136160012 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174058076 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17059576 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143114645 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175328691 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14618627 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172080928 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153882163 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170913179 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109835753 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.168020233 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170321268 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112332596 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.139769461 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166611274 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172328329 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.169088011 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108772949 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.184117658 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206735245 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.105305755 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146977062 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296189613 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174730028 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207569619 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.165251971 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146061536 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12689517 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168207023 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.164866782 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171790808 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.139550853 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115372793 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.142173361 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.192292036 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.175491833 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139598169 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195865648 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173132533 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201755734 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.148844603 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.274727326 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149088065 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137878519 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.142527661 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.1395178 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123440564 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146684666 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157476894 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203657658 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192610468 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.166352464 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.12681111 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140178794 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.136763559 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117439136 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183143753 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167624839 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170582987 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153727607 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.101148808 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156045367 seconds)
  done (took 82.896156179 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170632401 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153620151 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.158175507 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.210014012 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.179438476 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267479511 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.218439569 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239913493 seconds)
  done (took 2.673264146 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.111201555 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.146443555 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.152283511 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.135424796 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.135626918 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.360038389 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.119943103 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.135349907 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.196141214 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.147174614 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.133801211 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.63376891 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.102998227 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.137480949 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123775872 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133834948 seconds)
  done (took 3.971077606 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.411594902 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.550329431 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.118577672 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.244542109 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.253319923 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.165967412 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.766053295 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.174647431 seconds)
  done (took 12.756996549 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.135661317 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.152476773 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.151939857 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.179860639 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.164329897 seconds)
  done (took 1.866810834 seconds)
done (took 126.45086384 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.106035884 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.135685101 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.106208087 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.137388735 seconds)
  done (took 1.551228784 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.120182992 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090779533 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.123235151 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.090199361 seconds)
  done (took 1.500187212 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.450704096 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.121440317 seconds)
  done (took 1.684317682 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.131810883 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.148288702 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.12920965 seconds)
  done (took 1.492050467 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.115248428 seconds)
  done (took 1.196721887 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.118484903 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.114973978 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.153715153 seconds)
  done (took 1.467710134 seconds)
done (took 9.968490943 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120790232 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.444156989 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.395849909 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149547611 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.732180549 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.389442649 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.048740188 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165672955 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176363378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101118449 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.148952689 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.683546838 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.036360194 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.355631565 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.023254498 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.354485768 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.714673654 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102603619 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.136439049 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.10276457 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.028972035 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099967131 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130854611 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102061463 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.71202047 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.404577548 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.130517927 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.394514508 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101006794 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133442903 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.392197322 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128940723 seconds)
  done (took 17.215053319 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104315345 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.191230143 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.109140021 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132225839 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.104833047 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.132411834 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.11113226 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143700581 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191831542 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129750937 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.121157749 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.128604035 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106873435 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.130169124 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.12429977 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.128505405 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.104374728 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.131726639 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.108381048 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.131383136 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.121856367 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.129087916 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.103627131 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.131608381 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101051717 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.142826159 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.102069303 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.142585839 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101317442 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.135439956 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.106596848 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.132378852 seconds)
  done (took 5.096032859 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151144051 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.200849632 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138689974 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137463034 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181124951 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.13214997 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.217961812 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.138564897 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.194420537 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.131334638 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120522781 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.130243716 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.167705113 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102393561 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.153305028 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101585036 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.132585656 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.104491714 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.137804615 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.10384424 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.150431682 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100217134 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.132174093 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.10414189 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.13073213 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.115314213 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.131442691 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141549993 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.105068805 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134817459 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.108476118 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.130377059 seconds)
  done (took 5.448935089 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108823974 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.137502726 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.119401671 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.147445562 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.104161836 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.137312069 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.109582351 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.133123429 seconds)
  done (took 2.082534463 seconds)
done (took 30.928313931 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119932613 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.108639427 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.147735361 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.143274458 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.113045555 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.165824059 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100781745 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.112570172 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.144412836 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.110842703 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.147274168 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.100670273 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.132470841 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099662556 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.144933391 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.10674341 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.1470013 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.111338634 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.153325401 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.118665566 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.132659098 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.114199678 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.142510517 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.123350249 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.152567679 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.152923384 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.119029807 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.137131033 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.102746488 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.131861946 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.11913254 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.158565699 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.103712246 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.149530191 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.105930175 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.135940086 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.1030141 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.13349952 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.117711682 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.142951376 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.10746742 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.14294966 seconds)
  done (took 6.437913234 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.130795046 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.177914759 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.099444145 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.129957674 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.099744401 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.172811554 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.169594206 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.099804038 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.129497334 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.128831661 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.158854237 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.099069894 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.129760085 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.10003141 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.129056292 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.100189914 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.15641048 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.126953719 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.164317554 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.162662738 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.149459329 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.164786428 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.16888762 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.128020287 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.176919203 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.170106861 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.125239349 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.170720411 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.160668637 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.099266508 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.164569325 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.134469154 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.131187154 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.099231048 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.174985805 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.170108043 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.130501218 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.175467205 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.165141472 seconds)
  done (took 6.621699938 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.110559156 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.148714187 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.128875397 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.204965325 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.173234565 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.117663955 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.14552895 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.120508407 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.160780181 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.100786379 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.144479901 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.16410243 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.120219954 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.14335498 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.108347281 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.146260441 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.123054052 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.133760738 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.109903787 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.152384957 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.120624998 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.14612406 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.117229209 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.143398132 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.102165496 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.142032833 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.10864783 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.147336827 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.139549836 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.112629259 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.135541054 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.107837322 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.135154106 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.113571773 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.135947003 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.11182938 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.154583085 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.112039248 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.14686128 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.167587569 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.112853389 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.13781158 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.125503143 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.180611308 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.103954701 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.139456729 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.113634991 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.143984676 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.101795849 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.152419481 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117887744 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.133540271 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.148385765 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.103841397 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.130943718 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110628397 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.104006068 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.136033107 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.111552791 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.137163301 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.152183532 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.112041633 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140080721 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.105994286 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.139329882 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.102842395 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.131579128 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.108600372 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.158064402 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108236683 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165585599 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102973685 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.139929734 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.111868429 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.139389805 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111809867 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.133248312 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11127553 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.142341445 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.109117995 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.142597908 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.105269953 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.13763928 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.121728432 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.149971193 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.140849796 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.109614194 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.139408445 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.107094425 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.143949905 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.118222939 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.13509656 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.107405282 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.143866832 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.103669597 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.136456605 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.11000491 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.138411105 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.102251255 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153754277 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.108093417 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.134262304 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.151379514 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.104629458 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.106659789 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.144655328 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.11511802 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.134121843 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.108116188 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.14139347 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.101913767 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.139877946 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.106350943 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.13391031 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.115761916 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.146013088 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.137459291 seconds)
  done (took 16.217008373 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.256736659 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.235775012 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206640639 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.321833727 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.157416671 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.130095423 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.232612874 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.187967374 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.135523671 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.176183636 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.190687237 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.202360486 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.19060381 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.204733698 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.195245501 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.104370227 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.168156687 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.189555014 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.238049825 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.286822657 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.168437344 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.148617965 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.177684551 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.174274248 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.120971104 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.151442228 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.162516125 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126718033 seconds)
  done (took 6.350564977 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.120780535 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.174007286 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.141087355 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.133565424 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.161048024 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.103783316 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.140125315 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.103774378 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.148483372 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.150231888 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.105020518 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.141373632 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.110072082 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.143704907 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.103043855 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.14234692 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.113578292 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.143013116 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.106279235 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.137994035 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.12112559 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.151574734 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.139321394 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.109869112 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.151713842 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.109478209 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135771734 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.156208392 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.114611957 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.16400203 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.130333427 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.113614502 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.148950077 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.103272112 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.140716801 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.107282932 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.105439731 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.135941528 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.106823782 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.130689513 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.102532041 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.123616515 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.108891055 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.149575811 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.139999117 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105698246 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.140022731 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.108690969 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103328326 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.132048476 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.106348558 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.137647539 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.107206244 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.151767088 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.106378106 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.135081533 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.107330732 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.134610905 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.115347591 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.136979551 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.101125011 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.139429438 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.110859515 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.140144613 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.112854225 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.141200852 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.109085345 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.138270497 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.108079871 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.142546919 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.10666974 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.148195623 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.100810072 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.137693314 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.114342682 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.148228151 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.10708667 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.14151792 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.14110379 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.103782755 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.093764213 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.133819711 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.090948025 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.138975142 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.102843372 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.140295234 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.106533361 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.140720465 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.150852469 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.114997146 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.142501087 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.104780725 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.141427689 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.109206578 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.131182464 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.108856124 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.152242996 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.124324483 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.133516146 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.101428444 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.156855476 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.105069991 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.132574995 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.092632785 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.144183641 seconds)
  done (took 14.364795913 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132729946 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.174573198 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.104155127 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.154662273 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.169629847 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.133765296 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.15056802 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.112787692 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.13595224 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.126008879 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.142541569 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.11324398 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.142558523 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.119503813 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163472465 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.147616714 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.105428874 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.149547137 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.11004892 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.177859541 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.123656757 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.161851682 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.166846112 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.116040768 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.141012337 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.128319947 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.167774757 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.148124986 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.11802447 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.168418792 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.118048311 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.167235826 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170264237 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.110651014 seconds)
  done (took 5.897780489 seconds)
done (took 56.974442141 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.224387288 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.436643881 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.190942955 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.189533125 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.245014755 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.209917799 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.215698513 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.404474491 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.953378058 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.185261726 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.190411213 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.189219315 seconds)
done (took 27.751173551 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.268035855 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.785625984 seconds)
    (2/2) benchmarking "String"...
    done (took 1.514416731 seconds)
  done (took 4.412843626 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.189367617 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.191213918 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.442580084 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.191836364 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.212913467 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.212121226 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.190500931 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.206644977 seconds)
  done (took 15.764064317 seconds)
done (took 25.746897754 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.252104958 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.390825936 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.463285651 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.208590844 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.195679578 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.203405236 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.193235125 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.234995633 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.210370023 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.197320766 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.194238669 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.475091636 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.213590982 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.584177024 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.20712358 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.2051754 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.208852709 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.430665584 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.194880897 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.256113984 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.196709409 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.179165472 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.201894545 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.213362442 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.211756336 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.195003508 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.210319771 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.19336788 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.418886815 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.21887606 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.235523869 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.197998169 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.208640051 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.208596975 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.309056581 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.225508359 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.392430064 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.206878038 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.183519518 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.203139123 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.389618882 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.62384819 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.19819649 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.196701482 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.207453499 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.264996709 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.188078879 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.928273763 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.196000941 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.199234405 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.214954549 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.586443753 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.200774075 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.210349985 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.207737067 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.432984385 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.23039993 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.233169243 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.22721504 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.205672382 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.203390708 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.195911674 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.214865219 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.196594829 seconds)
  done (took 143.200438705 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.19641871 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.200849222 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.200064471 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.220624747 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.201093373 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.20162348 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.197331357 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.196492429 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.200299772 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.20740647 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.19873106 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.196110893 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.201623671 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.155370289 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.197047689 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.217644698 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.203537412 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.216784667 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.216012305 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.19689228 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.206730787 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.201712942 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.213345933 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.197816022 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.203575159 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.282340505 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.259142564 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.210415137 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.199903914 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.197590623 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.198115421 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.209428844 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.841999964 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.055022336 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.212914549 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.230662777 seconds)
  done (took 80.062367756 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.195857849 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.197661063 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197808822 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.231066442 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.197786657 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.198338885 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.77888692 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.781079164 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.938733809 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.419329247 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.202197796 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.646247142 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.483256551 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.20192818 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295867769 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.213939954 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.205909182 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.215752414 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.224054201 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.200575221 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200050614 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.799739768 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.218062074 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.26058265 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.377284723 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.216367994 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231874886 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.597174298 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199647132 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233500767 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.384913321 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.537047332 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.253454545 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199007457 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.200650315 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.62044361 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319287786 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.202109239 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.23393169 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.199154534 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.484027016 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200643061 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.200061876 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.203523741 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.887305212 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.198833819 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.78750678 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205290981 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.176451623 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.201827019 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200121383 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.792864759 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.987812369 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.223734509 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.201224295 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.203856046 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.201512853 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.20177244 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.235146702 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.898865965 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.325004588 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.202948097 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.206478053 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235567525 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.203271365 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.353017476 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.225890715 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.869170067 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.279306086 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.308753151 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.79569058 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205361261 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300300036 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323188599 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.202148002 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.20070895 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201704808 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.201021913 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.312511758 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.20197942 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.632543586 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.379952406 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.222300882 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.653736618 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.305374382 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.202276147 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.617432896 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.20756274 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.203982157 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.965391915 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301426502 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.203470732 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.203395862 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203959981 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.633131593 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.785357094 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.481757635 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.209262031 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.030493943 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.208834799 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.647456864 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.777561918 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.924723169 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.208366894 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318896889 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.383119747 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.223338272 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.20373055 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.656082149 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.207710336 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.262325366 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.209157505 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.204331846 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.605936186 seconds)
  done (took 367.968100495 seconds)
done (took 592.34369615 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.921728548 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.868218738 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.000659869 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.896566127 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.864972583 seconds)
  done (took 10.677804325 seconds)
done (took 11.800635822 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.399138956 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.398496744 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267173454 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.401299025 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238789657 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.418449456 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.380599384 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.226898489 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.311754568 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.291619979 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.314453638 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.260587864 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.243259868 seconds)
  done (took 18.280509495 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.465540733 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.208308092 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.288543162 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.471415643 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246621244 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.474555482 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.509814597 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.208177924 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.34856462 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.220380548 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.220592734 seconds)
  done (took 17.791430784 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.485210834 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.207631055 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274891604 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.451908622 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249242496 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.490640932 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.507144837 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.20860102 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.37074986 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221618703 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.220278847 seconds)
  done (took 17.817363658 seconds)
done (took 55.014260735 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.247765656 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.377617119 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.236717209 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.220517514 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.215530293 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.216463181 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.221454291 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.216934638 seconds)
  done (took 11.082874625 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.213530275 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.215226207 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.213320086 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.215573339 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.216283391 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.213217027 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.213911232 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.213676192 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.216322272 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.214913948 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.21387411 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.213858608 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.216083576 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.214438742 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.213107443 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.214771091 seconds)
  done (took 20.562110989 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.2169385 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.213750369 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.214175404 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.213935591 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.213237027 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.21430346 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.214956526 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.213421461 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.214540463 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.213578497 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.214902398 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.213920789 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.214768766 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.21566225 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.215729757 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.2152162 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.214805156 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.214037158 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.218861152 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.215171888 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.215236356 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.214747375 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.214452433 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.215573879 seconds)
  done (took 30.290448192 seconds)
done (took 63.062574047 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.223488945 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.220630488 seconds)
  done (took 5.576065551 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.277832933 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.281353635 seconds)
  done (took 3.692321087 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.219011932 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.218549266 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.218931438 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.217829722 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.218108062 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.216494452 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.220134709 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.220726698 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.219027452 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.220417021 seconds)
  done (took 13.321036375 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.219387055 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.220547939 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.217316755 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.219824017 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.220387416 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.216504723 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.21972172 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.219453174 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.219400103 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.217174107 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.219907099 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.215837713 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.218507352 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.21636441 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.218863611 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.216842403 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.218860053 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.216233133 seconds)
  done (took 23.065401947 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.233061223 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.242174321 seconds)
  done (took 3.609034026 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.359337304 seconds)
    (2/7) benchmarking "second"...
    done (took 1.260857924 seconds)
    (3/7) benchmarking "month"...
    done (took 1.335897142 seconds)
    (4/7) benchmarking "year"...
    done (took 1.324679634 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.259735313 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.241613177 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.260579269 seconds)
  done (took 10.17735737 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.222055886 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.410205173 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.518567518 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.797946906 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.220594231 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.224003984 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.087778628 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.224481434 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.22727246 seconds)
  done (took 14.066601123 seconds)
done (took 74.63734985 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.21269126 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.265901056 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.23103523 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.224814265 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.512645765 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.244487029 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.217867309 seconds)
done (took 16.041097122 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.213689745 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.219556252 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.224561251 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.218872557 seconds)
  done (took 10.011547001 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.228434191 seconds)
    (2/2) benchmarking "read"...
    done (took 1.570193962 seconds)
  done (took 4.933745213 seconds)
done (took 16.07711895 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22506781 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.222131227 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.223452681 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.221245315 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.221979275 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.219161617 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.220025899 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.222024877 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.222808003 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.222835157 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.222893612 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224899704 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.223331225 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221253494 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221410871 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223463838 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.221054612 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.220016076 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220686518 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220331209 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222047671 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.220840082 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.219128437 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.219816729 seconds)
  done (took 30.459213827 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.224163218 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.220769777 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.222920894 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.222833377 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.221317359 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.224664631 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.223661126 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.220276787 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.224283382 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.223904745 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220847306 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.221780691 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.223842009 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.221150944 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222789668 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.220736007 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.224606096 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2214441 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223001389 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.222036744 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.22515355 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221047699 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.222828334 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224484483 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.22238151 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221436541 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.224247833 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.221924341 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224501436 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.222586989 seconds)
  done (took 37.818776795 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.230637728 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.232463768 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.224583495 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.225101083 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.225438628 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.223789015 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.223967333 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.225724985 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.224803784 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.225262682 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.225933028 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.225437786 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.224859502 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.226463967 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.224281266 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.226002618 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.227916683 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.227005536 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.227052819 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.226272252 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.226729565 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.226003895 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.227002495 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.227771649 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.225710355 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.226825659 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.226616047 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.226376596 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.227026477 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.226641552 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.226684195 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.227553943 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.227117534 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.227102166 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.22719253 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.226010011 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.231633482 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.234117728 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.228067049 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.227657515 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.227889487 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.22800994 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.228212855 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.229583314 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.228349075 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.227759262 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.227453925 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.227783615 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.228008465 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.228963633 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.228559746 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.229258557 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.227632239 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.228901143 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.226764856 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.227665984 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.227944584 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.228346738 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.229364879 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.229007879 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.227810133 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.229040443 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.229088032 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.227634126 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.229742798 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.229931347 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.228966258 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.228198365 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.230081635 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.229365847 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.228265361 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.230560748 seconds)
  done (took 89.526387805 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.229535905 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.22669519 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.226796271 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.227577514 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227041378 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.22925938 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.227231714 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229617726 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227290004 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.229659618 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229658079 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.227905024 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22724325 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.230128504 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230161177 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.228752756 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.232204017 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227827898 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.23098069 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.23142876 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230919897 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.228223734 seconds)
  done (took 28.179520184 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230743989 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.231171895 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.226846585 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.233197678 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229499008 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.231334183 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.232506335 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.233474399 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232680849 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227607287 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228551366 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231428026 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.229725628 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229791582 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228245413 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230932503 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23226637 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.230519377 seconds)
  done (took 23.293224562 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.230147084 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.230115036 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.232127156 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.229696708 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.230187881 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233235035 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229309043 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.232600039 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.232270051 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.23085731 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.232924425 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233317378 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.232128882 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229300833 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232387467 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.230160595 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.232102388 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23060487 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233064878 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229533205 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.230417295 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232710436 seconds)
  done (took 28.2338249 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2330227 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.235039585 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.230576853 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.23109328 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.230135004 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.233098722 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.233433915 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.231359527 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.235877734 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.234793983 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.732336368 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.23505034 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.232530122 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.231340837 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.232066117 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230091314 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233667295 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.232838033 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234283388 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.230785308 seconds)
  done (took 26.299161468 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23501652 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234886738 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.235014057 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234506006 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235026348 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.233959519 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.23672694 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.235672693 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235321517 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.235684418 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.236013884 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.236601184 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234692273 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.235463961 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.236553573 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236482594 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234933005 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.236118335 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.238060464 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238111338 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.236312296 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.235766762 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.236067675 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.237605023 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236844553 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.236400803 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236675727 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.237761147 seconds)
  done (took 35.756033609 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236665308 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235474205 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.234544202 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.232539323 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.233920162 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.233838086 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.233548114 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.233940997 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.237273953 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.23321205 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.23665764 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.237522714 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236569876 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.23714397 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.23450073 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.236878331 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235617503 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.234591542 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235303303 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232840127 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.237658587 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237112585 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.235929265 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234137887 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233624281 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.236704839 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23368685 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234732559 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236877686 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233262997 seconds)
  done (took 38.206229678 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.276902559 seconds)
    (2/2) benchmarking "in"...
    done (took 1.283687053 seconds)
  done (took 3.709393533 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.235400029 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239437313 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.238054049 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.232337828 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.235689773 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.237767596 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.237270506 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2355745 seconds)
  done (took 11.041132776 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.237777867 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.238562863 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.238352479 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.237624116 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.236990912 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.237087046 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244335689 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.259069564 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.238299264 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.240955646 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.245617481 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.245041086 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.241251347 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238906484 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.239228234 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241292273 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.240241963 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.238887961 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.239200399 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.239915989 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237878898 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241528814 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241987838 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.236322099 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.241961769 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.251237832 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.244277713 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.240040915 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.240075802 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.241657904 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.240288133 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.236996661 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.237965428 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.238771107 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.239943727 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.239165225 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250012483 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264448389 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.246655111 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240093241 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242338775 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.237261709 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.242191387 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.242834617 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24249707 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.239307604 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.240971476 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.239724759 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.241071203 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.244248859 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.246957163 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241730147 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.23817511 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244620022 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.242902615 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24766498 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.260283741 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.246178398 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.252362168 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.252328178 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.255241496 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.265822609 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24341888 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.241047849 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252943232 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.266649275 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249395068 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.260673308 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.239643695 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.242000113 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.25027695 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255677453 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.26881511 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.241855902 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.24247709 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.243662874 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244039517 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243201094 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251056494 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.266979203 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.243269732 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.24457043 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254559292 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267924676 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.242577591 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.243066458 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.243788005 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.243784914 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.247206348 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255441737 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.264180761 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.245072914 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.244611998 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.244786219 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.246222675 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.244031308 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.244241346 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244675538 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.241744999 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.245104244 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241987991 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248501231 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.254710224 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244561266 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246308014 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.251683068 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.246663109 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245905226 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.251379273 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.246197899 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245081845 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.247499124 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.252016593 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.242915322 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249039077 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.254332282 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.245496205 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.247740078 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.245495122 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.249368352 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258958755 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.274368835 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.24708023 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.247175045 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.253497355 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.258021418 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245899643 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.248498549 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.247288214 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.245786241 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.245383064 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.248796988 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.2490931 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.249772805 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247689098 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248475234 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.246084477 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.247846558 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.246823713 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.250156778 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.248914196 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.248235135 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.249924471 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.249915162 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.247530991 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.249072962 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.255649786 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.248813677 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.249401478 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.250060591 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.245735848 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247589989 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.25108163 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.24911335 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.248405025 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248319321 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.250568655 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.248572247 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251654772 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.24979105 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249888259 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.250945223 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255207741 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.247704209 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.252409477 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.249381705 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.247400339 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.249776573 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.249891458 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.249476886 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.249837145 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.248733978 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.252597669 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.256233991 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.250513077 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.248351086 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.253111181 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250108234 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250828201 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249428426 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.255418429 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.260236715 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.250686673 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.25731445 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.251332977 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249625033 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.251897292 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.252070529 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.250928548 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252386119 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.255806484 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.260850637 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264431501 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.277985084 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.25391022 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.256412557 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.253709873 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.256014464 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.2561724 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.250955806 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.253578291 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251671026 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252286993 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25226922 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.255498141 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.251283729 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.251455718 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.253253779 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.253972451 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.252206982 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252998392 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.254163743 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252865185 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.249682693 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253413372 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250618565 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.255350497 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.249628907 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.252341975 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.252117722 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.253417151 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.25247138 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.258477781 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.251130695 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254894569 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254851323 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.25369527 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.253496976 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.255161006 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257271415 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.254873758 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260315839 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.274752977 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.25471738 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260469598 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.273371522 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.254966214 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.255811094 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.253912531 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.252779908 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.257865195 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.261733531 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.255557963 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.254879381 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.254541131 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255409253 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256052292 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.261270357 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.252833103 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.256817597 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.256201868 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.255659241 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.252783528 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.257579833 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.256959918 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.254816737 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257714923 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255819188 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.256994194 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255911408 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.255186191 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.255473519 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.255856052 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260130799 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.262700969 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.261159822 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.256812493 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.256634106 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.25719684 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.261493954 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.257186202 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.255610292 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.257426412 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2686967 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.281829632 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26414288 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.277217481 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.259374868 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264181819 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.278919353 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.262621735 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256740139 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259349266 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.257528345 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.257821139 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.255592366 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258914789 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.258505651 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260171945 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.259689644 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.263066692 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.258919598 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.257983177 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.257303921 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.25789193 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.259428091 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.258767999 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.258213905 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.260433826 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260440548 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.258279632 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.260225361 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265806449 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.28102906 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.258695874 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.260125619 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.257094872 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.258321643 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.259736466 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.257667804 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.264178183 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.266193402 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.262646344 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.267528792 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.26185067 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270368085 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.258458358 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.263016694 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.268321622 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.259138391 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.259450791 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.262744525 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.257971939 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26676382 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.279961168 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.262428928 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.262103369 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258090136 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.259353656 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.260027533 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.258754082 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260805723 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.25749215 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267111045 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.285854844 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.265474052 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264397495 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.259060758 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.26135661 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.262295134 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.26033127 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265260623 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.259745376 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.262002677 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.260629167 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.261016632 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.261232294 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.259911001 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.262003906 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.260446958 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.263184364 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268506083 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.286406947 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266017129 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.262898989 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.269187643 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262223801 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269217077 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.283409191 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.262816355 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.263070968 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.263202361 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.264425991 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.261298329 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.263978516 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.262989612 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.26488505 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.26758533 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.262931851 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.264729464 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.264217359 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.262471733 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.263269711 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274436383 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285186167 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.265113497 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26874756 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.261158709 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.26562541 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.267528104 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.26324141 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.263147634 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.268936157 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274221619 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.274336399 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.263849007 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.263174412 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264967313 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264033856 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.265574991 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.265544328 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.263567521 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.266320854 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.266360768 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.263616206 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268637888 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.264795019 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.265035626 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267248999 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.266752566 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.275437136 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.26468443 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.264883899 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263854767 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.265579762 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.265497457 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.264318837 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.264836459 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266997913 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267517711 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.267398521 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274292132 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.273214074 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.268847922 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.266547727 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.266204029 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.267191674 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.266554009 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264681198 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.279935082 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26627513 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.266876369 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.264332965 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.268476586 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.2660407 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.26671038 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.26566779 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266917683 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27246183 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.274024187 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266381638 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.264123758 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.267661738 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266215105 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.266549031 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.268242491 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.276334444 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270434159 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.27959832 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.275291744 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.272141733 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.268283672 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271354907 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.277287624 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.267032264 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.268329601 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.26785106 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.268543027 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.27001413 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.271198246 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26880471 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.275911662 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.269834782 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.267392466 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278775074 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.292855761 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.269515754 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.269907106 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.272293222 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.26917364 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.267113504 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.269019279 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.268747359 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274798804 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.292997798 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268827442 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269954231 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.268510946 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.27073812 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274221034 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27101332 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.272038497 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.266379584 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.269481521 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269484873 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270794667 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.268718545 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.269292183 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.269660834 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.273770685 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.278336251 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.267392398 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27111747 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.270611547 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.271708953 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269760815 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268776114 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.266324234 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.268191902 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.270222652 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271252308 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.272158383 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.273409464 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.270562815 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.272583621 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.273869684 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27149229 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27498626 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.282591301 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.279420025 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.266756934 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.270684323 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.270775388 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.273349398 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269431045 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.270784638 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27190024 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.272756869 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.271337513 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270350049 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.272823709 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.277502763 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288466699 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.297463818 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27360209 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.274268379 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277138275 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.274078223 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.270375427 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.274111546 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.275905861 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.276563895 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.279858414 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.272856068 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279514888 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.29424525 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.275050755 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.277397393 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.276542294 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.280802806 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.275180285 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272755163 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.272991638 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.280528213 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.288363991 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274867668 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284087256 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.305221689 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.295340367 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.275379314 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.272762741 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27393335 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.274468317 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.276572477 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.273795719 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.275109744 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275339029 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.273409157 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.275445141 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279496664 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.275129768 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.276224016 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.275290079 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.27553601 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.275270163 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.271869786 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.274946061 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.274865271 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.274719373 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.274490441 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.274162997 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.275204196 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286850623 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.30367772 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.276853526 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.275737718 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.274250952 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.279762967 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.278765751 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28593492 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.28394887 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.275099105 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.275862105 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.277493758 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276633345 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.273774847 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.276594744 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.275884572 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276754191 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.273468083 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.289263219 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.301772797 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.281302629 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.276355163 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275365974 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.277933561 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27606982 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276841654 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275998847 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.279078977 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.28114427 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280387324 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.278386478 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.276668962 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.281044761 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.285248844 seconds)
  done (took 752.722056312 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.27583711 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276560762 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275386788 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.275338512 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276426961 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276803318 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275664539 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275550531 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.27716337 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277136899 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.277691106 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275926953 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.27705667 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27549845 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277559684 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276223784 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276574722 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.277211758 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276156597 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276751983 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277524674 seconds)
  done (took 27.990548853 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.280917873 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.278314567 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.27753037 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279762537 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277173173 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.279736961 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.277017392 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278277033 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.279424283 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276952497 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.279694651 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281919209 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.277382254 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.276578225 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278524158 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27931741 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.278945002 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.277227974 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.279920763 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278222656 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.281074365 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.278475823 seconds)
  done (took 29.319498945 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.282247097 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.281933129 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.28202193 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.279739386 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.282827348 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.278600614 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.281507729 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.281597303 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.282159902 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.281979052 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.281101093 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.284693597 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.289195046 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.287688551 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.284587679 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.281737262 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.281338543 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.280223737 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.282204935 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.278598771 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.287060761 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.298728114 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.278989545 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.282174481 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.282395698 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.283274144 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.283862519 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.281818557 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.28523915 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.28712378 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.284633474 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.282836105 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.284473604 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.281910002 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.283949152 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.287470737 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.281780085 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.279198569 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.283958618 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.29397286 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.305216513 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.28190839 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.288378688 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.305294965 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.284458898 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.287603721 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.291078216 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.281571249 seconds)
  done (took 62.856141479 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.878069796 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.893838296 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.895353977 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.897554679 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.900419074 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.901183814 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.90242149 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.907701843 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.893388356 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.898400777 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.899149513 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.894012302 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.899146043 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.900658118 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.897769105 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.897879091 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.892587448 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.893851975 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.905678757 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.902057318 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.894496043 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.900894113 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.924216596 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.905949893 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.902310187 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.897028901 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.896373 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.902651836 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.897159584 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.897377482 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.904907445 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.908199409 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.905773906 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.900994669 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.896868855 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.896682711 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.901807451 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.894753348 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.897579075 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.907886067 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.8939922 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.901331934 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.899551996 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.908590009 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.911830244 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.899644834 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.899715798 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.896519993 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.898910151 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.898789904 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.903694915 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.899704584 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.897468974 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.895922498 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.900295071 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.901843634 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.908998976 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.909164564 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.901530877 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.899872959 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.898805606 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.898729164 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.901881739 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.902057824 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.902834192 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.900938908 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.911803648 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.907217601 seconds)
  done (took 130.42968986 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289112287 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.289163228 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288056972 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288715905 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288711836 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.288153941 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.289175704 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.288661264 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.289345945 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.288428371 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288172403 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.289550346 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.289679079 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.290224357 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.288598661 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.289248727 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.290703405 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289414168 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291138372 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289048388 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.289191589 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.291050398 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.290140646 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291213383 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.289540062 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288937904 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290326365 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.289620118 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289841218 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.288477249 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290622067 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.289821141 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.290994913 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.290956998 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.293992749 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.291979446 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29091085 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290636529 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.291814754 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.291319273 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.290901778 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290982559 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.291432191 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.291030498 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289671058 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.290794819 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.293756595 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.293150381 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292342529 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.290929053 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.291029079 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292299981 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292009439 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.291541445 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.291515186 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.293281059 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292713475 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.291868807 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292490295 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.29165377 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.292968649 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.293541914 seconds)
  done (took 81.213400929 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293107305 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.294136223 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.291516109 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.290453456 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.293761305 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.291817097 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.293891601 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.294182636 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.294428797 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.294092641 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294096037 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292280407 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292007913 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295370028 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.291770021 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292486 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291804552 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.292714244 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295247952 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.293422949 seconds)
  done (took 27.061778204 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.292683965 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.295167112 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.2917552 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291318613 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.294910943 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.292665307 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.295829657 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295387806 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292188315 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294736665 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295351036 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295618558 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293427679 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.292509565 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.296593754 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.294616074 seconds)
  done (took 21.904507852 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.29388884 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.296983742 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.296046549 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.296011934 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.29514913 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.293910513 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.297359826 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.293744464 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.293806401 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.296830083 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.296174176 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.296539729 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.295742221 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.295568891 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.29518558 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.297937313 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.294561205 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.294946199 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.297667386 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.29660285 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.296767421 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.298897132 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.298156433 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.299618649 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.2963876 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.296438775 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.29438279 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.297013486 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.296490739 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.298961135 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.295294611 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.296950652 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.295645229 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.295362429 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.297565633 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.295192863 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.298355841 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.297961468 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.299692606 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.299497737 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.300307458 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.298083915 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.298533321 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.299047238 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.29598919 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.297916266 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.295419688 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.298308589 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.295829168 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.298088288 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.301917131 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.299565261 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.300261564 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.300244221 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.30001271 seconds)
  done (took 72.54280213 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.300699374 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.300462712 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.297655928 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.300622852 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.300833561 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.297612394 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.301297566 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.300260831 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296353461 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.301522042 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.300631439 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.302066946 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.298684638 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.301319659 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298491635 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.301317344 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.297255506 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.298144973 seconds)
  done (took 24.599932709 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.299205632 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.299576722 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.301221549 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.2996442 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.299088269 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.30080822 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.298846821 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.301567278 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301627458 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.299073379 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299470279 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.301261088 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302237277 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.302798194 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.300981852 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299944701 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.302461093 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302895596 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.300046095 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.301259559 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.304207206 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.302928731 seconds)
  done (took 29.827375411 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.301438137 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.301419261 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.301050348 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.319007934 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.323572782 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.302193993 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.30199941 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.302994435 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.325070387 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.358733603 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.353219208 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.322430513 seconds)
  done (took 17.020676684 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301671035 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304316061 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301831775 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302665857 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304784492 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302128991 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300916725 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302276653 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304916314 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301874824 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302176954 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303585508 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303715795 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302873926 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304544996 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304647051 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303347216 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301996218 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303186297 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305366319 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302042333 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305518292 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30155075 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301776198 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302903754 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30120109 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306955664 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302979704 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302152684 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304861246 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306126362 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302406777 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305139817 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303220973 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305953579 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305505291 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303614972 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306323283 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305812312 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304569197 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.305727816 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304952772 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306799957 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305477396 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307022454 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304676258 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303533962 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304893446 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30560315 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307469607 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30760745 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3038031 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307001927 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307715298 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307459855 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307205451 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305426812 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303638244 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307346557 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307087825 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305046035 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30578417 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305122199 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305882866 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307306334 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306426732 seconds)
  done (took 87.308601782 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306097555 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303950843 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304175789 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306399273 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304519018 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30524011 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306338245 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305635827 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30612977 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306858392 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308014923 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304921527 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305689917 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306651699 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306873961 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306123874 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305854839 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307463919 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305538884 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309100985 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306734873 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30485746 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305723196 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306689405 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307661876 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308955671 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307593773 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305429141 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306233653 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30732977 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30582666 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305767038 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306683162 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307220685 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308552142 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308526937 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307389141 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307125051 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307164457 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310462186 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307875357 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310653727 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306569119 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307415264 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308707927 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308203327 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308288089 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307857265 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308792602 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30777547 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308560578 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308744882 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308896776 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309012496 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309726156 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309110787 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30802224 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310305748 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308741816 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310586435 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309905252 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30965308 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312718358 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309600874 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310134754 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308730276 seconds)
  done (took 87.513013699 seconds)
done (took 1805.966876303 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.478840564 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.431719268 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.3105729 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.326292823 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.310873655 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.308421199 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.324221862 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.309768615 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.311294931 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.311043574 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.312525787 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.499632034 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.30728339 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.311371072 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.312707923 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.407174959 seconds)
  done (took 26.789949212 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.342142491 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.318692812 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.442781752 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.340820061 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.34423486 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.518554713 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.377860585 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.317406068 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.505018305 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.364173444 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.31464676 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.341172944 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.317802827 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.313504383 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.336340811 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.51900133 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.588791633 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.312530076 seconds)
  done (took 29.131729984 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.824465866 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.326586394 seconds)
  done (took 5.368323027 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.338492247 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.317936733 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.319076454 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.315468838 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.308763583 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.307971918 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.316993703 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.31375134 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.314743792 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.456004063 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.324277774 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.331818627 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.339876677 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.319534494 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.315852699 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.360846218 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.480325095 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.316393278 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.31440854 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.324115826 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.317752417 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.442165778 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.36433259 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.316965658 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.456316907 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.321036489 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.320627853 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.326890186 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.516252617 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.31607771 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.319235015 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.318341645 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.320524911 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.262897863 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.827061156 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.323514699 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.34781381 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.329533524 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.316307703 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.505220208 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.320359635 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.325236425 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.321435644 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.803457276 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.468431425 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.450108213 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.331974337 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.32547055 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.320381659 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.392017554 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.320272851 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.320640529 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.366633396 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.189337683 seconds)
  done (took 84.792256045 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.357457077 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.315669299 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.494488099 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.337381472 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.311804813 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.312079337 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.312344388 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.631532081 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.316628882 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.314149946 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.614696529 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.91548811 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.341410825 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.356859048 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.237525204 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.369668614 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.31382674 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.330924872 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.315864911 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.31634071 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.885057361 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314986353 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.333498027 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.386442465 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.354645096 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.864301047 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.316085827 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.329639997 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.318786254 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.313578198 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.869395043 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.344027817 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.372949486 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.315897898 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.602220719 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.730002554 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.686854383 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.316020406 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.34714111 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.316516055 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.326855848 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.847387458 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.704858252 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.316851023 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.314520139 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.857661977 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.31766108 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.319395813 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.324433056 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.569442205 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.315950389 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.317667944 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.334304308 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.316541933 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.315342937 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.315718199 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.400393948 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.865232084 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.316322076 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.31677745 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.344382942 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.317506073 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.323144826 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.320402724 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.338238126 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.710719952 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.525342398 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.318955693 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.709384057 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.864267204 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.335420889 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.932867494 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.337729793 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.337753347 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.501276965 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.318912237 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.316611963 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.87807287 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.326521283 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.319014626 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.689706141 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.321823853 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.62236803 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.347810785 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.318229404 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.900208591 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.329003899 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.408579834 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.31883443 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.319394436 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.318821088 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.336009103 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.610996513 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.354687728 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.319014038 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.318444174 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.323986891 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.319770487 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.320464684 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.322022448 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.934821839 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.344519886 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.31866986 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.321241032 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318991775 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.339749688 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.319381226 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.319731341 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.593523852 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.328789993 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.327703844 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.319471992 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.319632803 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.320980828 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.3926581 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.325716882 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.662145201 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.320572998 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.331658399 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.325422099 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.320233916 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.354178303 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321634981 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.327266444 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.211282274 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.585192006 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.343455023 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.32239889 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.319999618 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.319991383 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.339515235 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.342615596 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.353025516 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.326979186 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.116697413 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.382030602 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.332525543 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.319804913 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.321938143 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.334308236 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.324983509 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.321956694 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.622510512 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.61058749 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.530115057 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.325633951 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.326850682 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.103276386 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.365734688 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.507214613 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.341813375 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.323109857 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.573991661 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.53684317 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.322091591 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.322003442 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.322514586 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.585339174 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.322191675 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.638482497 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.901231087 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.34145144 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.332115856 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.120996866 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.067588643 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.324105561 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.323263858 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.628414661 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.344043757 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.323681742 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.322799503 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.322184938 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.34277689 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.34740038 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.330211581 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.325005713 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.323305432 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.341255361 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.519377648 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.343840001 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.332480358 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.865754974 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.333163381 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324657407 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.344063245 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.326425566 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.324298867 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.384307735 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.327638917 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.365943741 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.324495342 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.328155121 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.887129869 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.324592398 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.324847581 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.519853049 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.052786271 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.344052257 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.323794485 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.343453314 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.217530072 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.893831498 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.345341978 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.668838235 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.333369632 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.369064621 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.325617212 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.370852369 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.895685908 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.326333787 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.345484243 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.018696995 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.345131476 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.735346473 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.327000677 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.326483879 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.968764099 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.343716164 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.328631916 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.328846557 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.349374564 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.628776412 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.328002587 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.362308379 seconds)
  done (took 496.691981493 seconds)
done (took 643.986424075 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.326431779 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.327702206 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.318879809 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.332042287 seconds)
  done (took 10.540906784 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.33712355 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.335637507 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.334222219 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.332963697 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.337123738 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.33361189 seconds)
  done (took 9.247907155 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.328634924 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.328749236 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.333773467 seconds)
  done (took 8.226224216 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.558770753 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.36213436 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.695555316 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.361005549 seconds)
  done (took 9.214292346 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.332424323 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.331852014 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.331466498 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.335404341 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.335891096 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.335904496 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.335472454 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.336193648 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.336821487 seconds)
  done (took 13.243237936 seconds)
done (took 51.70496443 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.989981691 seconds)
    (2/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.339396861 seconds)
    (3/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.657255857 seconds)
    (4/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.363856688 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.386754982 seconds)
    (6/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.32787201 seconds)
    (7/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.542687167 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.34228858 seconds)
    (9/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.328618384 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.342424043 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.390105558 seconds)
    (12/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.337215202 seconds)
    (13/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.325094646 seconds)
    (14/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.369039148 seconds)
    (15/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.342726311 seconds)
    (16/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.378147713 seconds)
    (17/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.411820071 seconds)
    (18/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.176591212 seconds)
    (19/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.335104196 seconds)
    (20/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.327676497 seconds)
    (21/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.411461501 seconds)
    (22/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.350430871 seconds)
    (23/286) benchmarking ("sort", Int64, true)...
    done (took 2.006589789 seconds)
    (24/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.384056076 seconds)
    (25/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.342562708 seconds)
    (26/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.516114028 seconds)
    (27/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.361885973 seconds)
    (28/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.328505478 seconds)
    (29/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.362649967 seconds)
    (30/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.461935424 seconds)
    (31/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.545943634 seconds)
    (32/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.691723828 seconds)
    (33/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.981519277 seconds)
    (34/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.388579556 seconds)
    (35/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.428485048 seconds)
    (36/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.355718566 seconds)
    (37/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.316611771 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.465408523 seconds)
    (39/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.358903746 seconds)
    (40/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.341880413 seconds)
    (41/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.491937838 seconds)
    (42/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.319585355 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.351339862 seconds)
    (44/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.34346046 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.355933231 seconds)
    (46/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.462127044 seconds)
    (47/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.549070432 seconds)
    (48/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.34219292 seconds)
    (49/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.092004214 seconds)
    (50/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.365992082 seconds)
    (51/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.339924644 seconds)
    (52/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.469366089 seconds)
    (53/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.989719831 seconds)
    (54/286) benchmarking ("sort", Float64, true)...
    done (took 2.126706464 seconds)
    (55/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.414398992 seconds)
    (56/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.103106121 seconds)
    (57/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.362734706 seconds)
    (58/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.344054087 seconds)
    (59/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.440213242 seconds)
    (60/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.346465692 seconds)
    (61/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.982606181 seconds)
    (62/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.994415652 seconds)
    (63/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.439025762 seconds)
    (64/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.381356216 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.50930044 seconds)
    (66/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.494316137 seconds)
    (67/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.352595945 seconds)
    (68/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.508613623 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.432464713 seconds)
    (70/286) benchmarking ("sort", Int64, false)...
    done (took 1.526961978 seconds)
    (71/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.36830472 seconds)
    (72/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.332546726 seconds)
    (73/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.050152321 seconds)
    (74/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.472031272 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.467613725 seconds)
    (76/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.470739603 seconds)
    (77/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.488751159 seconds)
    (78/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.383441834 seconds)
    (79/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.344818161 seconds)
    (80/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.331981162 seconds)
    (81/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.449916713 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.507931364 seconds)
    (83/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.552885973 seconds)
    (84/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.325590932 seconds)
    (85/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.243183466 seconds)
    (86/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.367069301 seconds)
    (87/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.423558595 seconds)
    (88/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.49795817 seconds)
    (89/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.347610767 seconds)
    (90/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.435524018 seconds)
    (91/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.33934467 seconds)
    (92/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.406628178 seconds)
    (93/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.499390623 seconds)
    (94/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.105193399 seconds)
    (95/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.420444693 seconds)
    (96/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.525509425 seconds)
    (97/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.378092823 seconds)
    (98/286) benchmarking ("sort", BigInt, false)...
    done (took 2.334177113 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.447525007 seconds)
    (100/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.425151989 seconds)
    (101/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.483205574 seconds)
    (102/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.344321245 seconds)
    (103/286) benchmarking ("sort", Int8, true)...
    done (took 1.848479231 seconds)
    (104/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.355436586 seconds)
    (105/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.361249284 seconds)
    (106/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.442419929 seconds)
    (107/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.344035054 seconds)
    (108/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.420085704 seconds)
    (109/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.362168569 seconds)
    (110/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.243231927 seconds)
    (111/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.442048244 seconds)
    (112/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.359335739 seconds)
    (113/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.572541807 seconds)
    (114/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.440435536 seconds)
    (115/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.357208597 seconds)
    (116/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.462245267 seconds)
    (117/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.456006509 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 1.373011332 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.391426791 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.342810964 seconds)
    (121/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.411939475 seconds)
    (122/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.367722441 seconds)
    (123/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.352399787 seconds)
    (124/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.326549497 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.385264657 seconds)
    (126/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.486611022 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.451577369 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.368446175 seconds)
    (129/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.411901807 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.474097329 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.409304599 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.349073111 seconds)
    (133/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.335721064 seconds)
    (134/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.337910681 seconds)
    (135/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.532007515 seconds)
    (136/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.322814114 seconds)
    (137/286) benchmarking ("sort", Float32, false)...
    done (took 1.520274588 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.457358355 seconds)
    (139/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.350684691 seconds)
    (140/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.336620611 seconds)
    (141/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.353772005 seconds)
    (142/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.359523284 seconds)
    (143/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.397003735 seconds)
    (144/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.109159047 seconds)
    (145/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.385736366 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.352671099 seconds)
    (147/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.475114811 seconds)
    (148/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.726361065 seconds)
    (149/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.361352281 seconds)
    (150/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.558059251 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.350409646 seconds)
    (152/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.457706862 seconds)
    (153/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.17453896 seconds)
    (154/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.353758848 seconds)
    (155/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.35834842 seconds)
    (156/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.221636026 seconds)
    (157/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.383100648 seconds)
    (158/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.354081239 seconds)
    (159/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.337278412 seconds)
    (160/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.504875689 seconds)
    (161/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.076539531 seconds)
    (162/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.61726346 seconds)
    (163/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.339401506 seconds)
    (164/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.393866215 seconds)
    (165/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.356606255 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.353044505 seconds)
    (167/286) benchmarking ("sort", Int8, false)...
    done (took 1.48289073 seconds)
    (168/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.355071174 seconds)
    (169/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.482318945 seconds)
    (170/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.408671166 seconds)
    (171/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.36100223 seconds)
    (172/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.403438062 seconds)
    (173/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.342881986 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.348505965 seconds)
    (175/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.3508525 seconds)
    (176/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.35554501 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.394817867 seconds)
    (178/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.058396173 seconds)
    (179/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.562638725 seconds)
    (180/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.415312534 seconds)
    (181/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.35351553 seconds)
    (182/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.539825826 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 1.708501947 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.354415503 seconds)
    (185/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.351390604 seconds)
    (186/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.356610348 seconds)
    (187/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.53376874 seconds)
    (188/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.445061996 seconds)
    (189/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.53327464 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.456723433 seconds)
    (191/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.365571211 seconds)
    (192/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.442929663 seconds)
    (193/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.443668057 seconds)
    (194/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.34951767 seconds)
    (195/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.704184603 seconds)
    (196/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.368615038 seconds)
    (197/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.37659085 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.366916992 seconds)
    (199/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.538291066 seconds)
    (200/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.470490977 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.416992791 seconds)
    (202/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.352790613 seconds)
    (203/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.420943444 seconds)
    (204/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.381975359 seconds)
    (205/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.561596795 seconds)
    (206/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.334674286 seconds)
    (207/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.120209738 seconds)
    (208/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.442679624 seconds)
    (209/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.409607809 seconds)
    (210/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.518457034 seconds)
    (211/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.071776302 seconds)
    (212/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.353091424 seconds)
    (213/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.420687231 seconds)
    (214/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.549566914 seconds)
    (215/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.393777649 seconds)
    (216/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.424307638 seconds)
    (217/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.455147662 seconds)
    (218/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.007043423 seconds)
    (219/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.35349416 seconds)
    (220/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.501420367 seconds)
    (221/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.479772431 seconds)
    (222/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.36450839 seconds)
    (223/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.358458079 seconds)
    (224/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.351423268 seconds)
    (225/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.355361626 seconds)
    (226/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.115504651 seconds)
    (227/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.405954381 seconds)
    (228/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.328190175 seconds)
    (229/286) benchmarking ("sort", BigInt, true)...
    done (took 2.359636202 seconds)
    (230/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.249328387 seconds)
    (231/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.4541055 seconds)
    (232/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.384781768 seconds)
    (233/286) benchmarking ("sort", Float32, true)...
    done (took 2.087348453 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.456824165 seconds)
    (235/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.565021531 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.357766096 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.405058401 seconds)
    (238/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.002078762 seconds)
    (239/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.394588599 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.45465128 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.381848658 seconds)
    (242/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.560724357 seconds)
    (243/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.998266676 seconds)
    (244/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.436339015 seconds)
    (245/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.375224578 seconds)
    (246/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.464802555 seconds)
    (247/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.352126503 seconds)
    (248/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.426718823 seconds)
    (249/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.351545636 seconds)
    (250/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.357961759 seconds)
    (251/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.417845423 seconds)
    (252/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.429153256 seconds)
    (253/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.501785029 seconds)
    (254/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.363770247 seconds)
    (255/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.379651761 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.394466662 seconds)
    (257/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.110650439 seconds)
    (258/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.431836625 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.364413192 seconds)
    (260/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.364782454 seconds)
    (261/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.358822421 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.367113227 seconds)
    (263/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.394635824 seconds)
    (264/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.364639878 seconds)
    (265/286) benchmarking ("sort", Float64, false)...
    done (took 1.555372815 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.533612371 seconds)
    (267/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.369727435 seconds)
    (268/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.387963517 seconds)
    (269/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.372570302 seconds)
    (270/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.385021982 seconds)
    (271/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.345035812 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.40858284 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.52154534 seconds)
    (274/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.367810964 seconds)
    (275/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.361944739 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.403149572 seconds)
    (277/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.444894246 seconds)
    (278/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.369383289 seconds)
    (279/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.372696338 seconds)
    (280/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.360306016 seconds)
    (281/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.110959022 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.373419853 seconds)
    (283/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.354872825 seconds)
    (284/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.34581394 seconds)
    (285/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.53059004 seconds)
    (286/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.331274977 seconds)
  done (took 475.112239818 seconds)
done (took 476.345191122 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.390352776 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.402691358 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.357996515 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.389662998 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.468059011 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.531989275 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.368392193 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.397101812 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.405220907 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.406616527 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.363286429 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.531792195 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.358910982 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.356552702 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.356609146 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.399713216 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.349609185 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.357761542 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.373304467 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.394796713 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.373983498 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.365525256 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.407369772 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.532884542 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.360613649 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.359802115 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.360981358 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.378007537 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.471196068 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.36094309 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.36262471 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.370639291 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.347956144 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.360340513 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.353400656 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.37764898 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.370843634 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.369344632 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.394619076 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.47106841 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.351833367 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.375402171 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.360007155 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.362650406 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.36029216 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.396763304 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.361545975 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.415131019 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402331072 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402653625 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.348419048 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.394327638 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.367341774 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.361394862 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.370242657 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.359912394 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.41722195 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.404020792 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.379938618 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.405007262 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.350335269 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.37132355 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.398951685 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.375936166 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.368456678 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.350192183 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.37832022 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.39903551 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.353954525 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.365163304 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.34955755 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.388989619 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.362585057 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.375613477 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.394393235 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.355296115 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.357131587 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.359821946 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.369909287 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.360646074 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.409099853 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.40472742 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.409498763 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.363252993 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.403008592 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.537547622 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.371597607 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.361291057 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.39584044 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.380491172 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.368569807 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.374274723 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.397029128 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.364254055 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.408760501 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.419987858 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.371442311 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.371340344 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.413426213 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.373256521 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.356927222 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.409533811 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.359109317 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.361037855 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.362375348 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.483459612 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.357582497 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.36283754 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.39589005 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.410013642 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.422356636 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.366439752 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.376210688 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.410755041 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.373355797 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.42357682 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.364687311 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.352038791 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.379101756 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.487817119 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.365384243 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.370718026 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.411942511 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.423960964 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.364848217 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.35268983 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.370960252 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.407744738 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.486829134 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.375170522 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.474945491 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.362419184 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.369486361 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.399270877 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.41060561 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.396680722 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.426047415 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.410511412 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.380648774 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.365846703 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.376712317 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.377329327 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.367601759 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.422887865 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.363740514 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.39824902 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.408494293 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.407471423 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.400749098 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.487341947 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.372021821 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.354090252 seconds)
done (took 228.326215618 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.427459565 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.364668398 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.471770005 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.365697687 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.467209597 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.466514725 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.362832127 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.362740434 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.363883557 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.741072329 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.364650561 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.364081093 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.365173919 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.365134765 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.445901634 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.3680319 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.363724801 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.712464837 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.367580965 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.437819262 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.367564116 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.364755387 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.370583751 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.758187298 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.366410231 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.362340452 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.436142535 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.366492081 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.710981039 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.361166107 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.364463655 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.717055285 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.455507452 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.383852051 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.377083852 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.372212638 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.470711009 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.387187491 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.446336256 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.447930086 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.474811834 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.405448051 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.361810356 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.36597628 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.369273428 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.365998285 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.366286887 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.394063669 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.366395309 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.365804843 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.705493295 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.376342528 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.367413466 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.365174811 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.367768451 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.395817672 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.367995026 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.369089858 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.458159856 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.368192684 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.433162594 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.749332963 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.7532157 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.368783703 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.366131951 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.364922229 seconds)
  done (took 106.712568129 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.435909919 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.445489614 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.49021504 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.388923877 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.420224193 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.49347042 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.388790433 seconds)
  done (took 11.32811632 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.37712666 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.371633492 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.41971467 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.419971272 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.368009685 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.582475673 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.372038408 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.383636924 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.368984904 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.447070752 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.371844643 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.37082682 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.37804303 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.368350125 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.420684761 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.382290269 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.487726613 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.372864171 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.371589045 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.526318419 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.368460586 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.37895605 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.443329643 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.383490499 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.372743848 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.37719364 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.317511238 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.371243372 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.37050023 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.370961374 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368869862 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.479587263 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.373343715 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.371181791 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370383069 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.533165371 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.372213749 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370455381 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.373531323 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.364444878 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.372252915 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.374127815 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.372887703 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.369819623 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.372257909 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.395411317 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.373620731 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.37273297 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.372789427 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.372539516 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.447153266 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.375596719 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.371576941 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.369504588 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.451102415 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.379747477 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.371976462 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.372202699 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.375461518 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.369752675 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.527841979 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.42133125 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.37533276 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.422350215 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.375556288 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.3752545 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.374274154 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.374829364 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.466034086 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.376397492 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.422448501 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.372355829 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.598074915 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.400429435 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.376098533 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.379360571 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.37737894 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.375651499 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.371412117 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.379422292 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.372048877 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.378195395 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.381235633 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.373939101 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.374131002 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.560218017 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.534638201 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.373918985 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.388514087 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.384500642 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.374900167 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.451666861 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.376248881 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.375489045 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.428808897 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.494052688 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.453389397 seconds)
  done (took 142.015202177 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.381995357 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.387422741 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.379335561 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.401371476 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.37927939 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.377403066 seconds)
  done (took 9.579480743 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.380651124 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.378613526 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.377223748 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.379472852 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.377898416 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.379617256 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.378321306 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379644292 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.382624984 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.377398284 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.378014071 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.379083805 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.379391607 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.376551251 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.378445003 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.37922885 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.376425466 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.375238097 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.378605897 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377771006 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.379923548 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.378107069 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.378772245 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.380856991 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.385422268 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.379436016 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.386051343 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.377802032 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.381287874 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.388232823 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.40162207 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.379008243 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.382064693 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.385859489 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.383187705 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.383131959 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382795275 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.380968762 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.37886444 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.38167126 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.380206995 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379596257 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.380032997 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.379743956 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.38218663 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.387243009 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.384235388 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.387524969 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.379841776 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.382102463 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.381052459 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.381729244 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.382620111 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.381818662 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.383706663 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.405580393 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.385705672 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.382800837 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.379150894 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.383517249 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.384032241 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.381312356 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.384948321 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.385167362 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.378812134 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.382025833 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.383659056 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.38602832 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.381119013 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.380771853 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.381672891 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.381153627 seconds)
  done (took 101.762397392 seconds)
done (took 372.656944944 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.395632998 seconds)
  done (took 3.672540162 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.612389697 seconds)
  done (took 3.892441463 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.694572485 seconds)
  done (took 25.984026449 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.494442923 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.410839769 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.383219356 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.378727767 seconds)
  done (took 10.947257598 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.742120799 seconds)
  done (took 4.023385743 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.37831633 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.383323385 seconds)
  done (took 6.045347258 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.841375468 seconds)
  done (took 4.121057579 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.832967387 seconds)
  done (took 4.122208996 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.404358912 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.394001918 seconds)
  done (took 6.089171348 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.363281673 seconds)
  done (took 3.6450219 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.176317888 seconds)
  done (took 17.457970083 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.382443027 seconds)
  done (took 3.667408398 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.418420903 seconds)
  done (took 3.699082068 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.429557554 seconds)
  done (took 6.709962207 seconds)
done (took 105.352761889 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.378705843 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.37902622 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.380348293 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.380149177 seconds)
  done (took 10.798299548 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.439360417 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.442756237 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.440795778 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.439495103 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.437945113 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.438421083 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.411658411 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.412228625 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.438633057 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.438344822 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.440081353 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.436910079 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.43931127 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.413471955 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.43906791 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.438578685 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.438920249 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.439543227 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.41238917 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.440163524 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.388085618 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.439736515 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.440816407 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.38801169 seconds)
  done (took 35.618216706 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.9060762 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.461559472 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.543544137 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.443464608 seconds)
  done (took 7.638955375 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.464552241 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.465042034 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.480318003 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.518520213 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.540332916 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.479422146 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.413746452 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.41046497 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.396532337 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.466010539 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.523434441 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.45872014 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.545205736 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.389597855 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.594570194 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.387546968 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.387439575 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.466477149 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.51893014 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.534830563 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.38923977 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.465993595 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.469969244 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.457901727 seconds)
  done (took 36.508090128 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.396362798 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.402591863 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.388456208 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.403860451 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.389324603 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.38867128 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.389126066 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.396285018 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.387787004 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.388088532 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.390226287 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.403775062 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.393738071 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.389129008 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.39913122 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.388602714 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.396955616 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.393115112 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.390722784 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.396044683 seconds)
  done (took 29.157520063 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.382506709 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.383450114 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.736951592 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.642165812 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.383826602 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.383609543 seconds)
  done (took 14.199728218 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.472084447 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.643215652 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.392140067 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.799734685 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.882485728 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.393312915 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.391376738 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.674855105 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.039890541 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.025397177 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.464496875 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.473419868 seconds)
  done (took 20.940354645 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.391827781 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.384146735 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.401031257 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.405790464 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.455831654 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.415387587 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.399796486 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.387010369 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.458760568 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.478560498 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.41456082 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.457491928 seconds)
  done (took 22.339401837 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481670359 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384513067 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.386204686 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481474702 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391750901 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.235344525 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.476137763 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.171317069 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.417663747 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662408961 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392737457 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489629767 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.647444792 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387613414 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394102313 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.376835915 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626955096 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940589203 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390438927 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388807334 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427771449 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401705472 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394182992 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642689393 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393982287 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388082542 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.651200511 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390199789 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.717494411 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.404765794 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399781991 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388652827 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664079713 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112914682 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514577291 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.636635951 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411940077 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393945165 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.391946198 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.396425698 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41481099 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396286298 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401279938 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390901826 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389064594 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399469956 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166373871 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.417660998 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.388007617 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390676182 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.690457592 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489451131 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.394691145 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390044974 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392087953 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394327898 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.394883899 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488850277 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973783715 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393341851 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40377808 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.396002088 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400383274 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392961817 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097004597 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.403129979 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.395829407 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395793561 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390973552 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390900484 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415220372 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390334902 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.416003962 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391781538 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191154234 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396436664 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399495404 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009021907 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395516452 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.399523633 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625591014 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392487834 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391341212 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.390187346 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390617075 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214640563 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406654746 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.377388365 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418118296 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.148273008 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.660083969 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416778794 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422743287 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.619088906 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.37713062 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394337729 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.392368534 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399225255 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415200892 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.163631359 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415333083 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.396345078 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654375159 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.605731086 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39990335 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.398444097 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919845846 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414344766 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.431598036 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403188556 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.64655094 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.066362816 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416941554 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393120202 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418423378 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394305518 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265630087 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401329755 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.504279297 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.415681513 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693576405 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.310629977 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402051893 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463699434 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40386422 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395836563 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395920218 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403007394 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395978379 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.632756932 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429432376 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.410364215 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.396888084 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397030661 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.392636313 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401568117 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.398544423 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.621494163 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395096487 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69850855 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396656583 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395993179 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396754698 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.623025071 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.406769908 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.733843475 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661799648 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405777962 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41001428 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413033036 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41459705 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501401559 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418520763 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.405290317 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.660275928 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.400687686 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.403605285 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397285183 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406477821 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402877019 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.403957618 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407801551 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068386613 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378282645 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405732304 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.400743782 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.413956569 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466182076 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405590427 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.648499912 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.418133426 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400159545 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.425727142 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.408927332 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625904407 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411221936 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.399436277 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481860717 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.94942808 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.094320226 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41974828 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.400442265 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.396897345 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.397616451 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400926539 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398988147 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401338349 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.644617504 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421425863 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407701539 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.062810898 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403546485 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401052102 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.410734637 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.413180048 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.40682256 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400874807 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.398800023 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404309485 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41669668 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.416661997 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54597928 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.414925586 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400605156 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.918980241 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407639686 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400295642 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400162911 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436284138 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400856226 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283748068 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667252935 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425002634 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.706962092 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404411691 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.423193178 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.401193944 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402437974 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421059897 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.42864677 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413716513 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.413648478 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403792521 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407497421 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983827594 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216585403 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009069536 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406534702 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.419282144 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408522922 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.181215379 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427700834 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404396722 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667948169 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.18550063 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425114981 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928878061 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.422933247 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.289325222 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710334668 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639642611 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412828382 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.412981696 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.713111987 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618671154 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438299773 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.416771579 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409566017 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.390530156 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01022194 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.441308979 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487511906 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171960177 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426971559 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40891526 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.438147286 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.423001153 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877249047 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.430702407 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405235229 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414493087 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413881702 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267594311 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412443286 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403860504 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089177926 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414107975 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.935970572 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429595125 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.651839875 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.421223359 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.411656587 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.402924284 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.402643048 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.66806645 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.711642832 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411838882 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411244026 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034201051 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.289532338 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.413921813 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407062907 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271408454 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413179145 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.764379012 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.415576523 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.427824243 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410842837 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.409840204 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408263286 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.40419525 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412326677 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379222545 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965131516 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.426683482 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427952845 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417753456 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414287032 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.667285179 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.421599034 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.066887577 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642583097 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415779034 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453592133 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.412552233 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414218864 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.396954461 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408592905 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408164544 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42619695 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.640021074 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.411016533 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.399634748 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.466179012 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628370595 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410363827 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.417766581 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.684002674 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.407975354 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.412374675 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221904922 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443867571 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416210101 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412505593 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426903571 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431980666 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480253553 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660918889 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.429003394 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.421497723 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877393011 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448757498 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414422565 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.424800047 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508358161 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421242517 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.424084239 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.188500769 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083637332 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228998375 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.085695005 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.724165092 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415094746 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420844405 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410413796 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575985426 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412665249 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685147402 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412785217 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.425079015 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440390328 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41973064 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417973569 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630390514 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688719175 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412335451 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411292207 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437508396 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.412744398 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.428337456 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.630638032 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977771456 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039036516 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415718485 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416569487 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.192241982 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708529826 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413255055 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413230342 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414440936 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.416472883 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.432645083 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.424242947 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427221374 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558826945 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.718887195 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165677254 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.452222697 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.44267763 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.187705852 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421749221 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.676815654 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429544837 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.660482367 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080886096 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.224903392 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691180315 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486177825 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660529948 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.415334166 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57677363 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.421429473 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415125112 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415671586 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415451296 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.411595939 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.426236525 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085539125 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.684554616 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.4202911 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.422928448 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446012571 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.42744824 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.641333877 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.2528249 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.647655234 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.427136854 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419692881 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417385118 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098296461 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.731590185 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417893968 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.420854415 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.687528097 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.423782871 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439793467 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.934171863 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.414046084 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043488641 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.394213617 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440197319 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424777904 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.250100346 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105267632 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.422016832 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98275398 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420676436 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421688405 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697734968 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.425247738 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.430102848 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700245905 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.421427926 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.426515859 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67460848 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.100015431 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.294238876 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.424757906 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45254704 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.424400487 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419638521 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440073623 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424556599 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419744566 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.900763721 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.449202832 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419264475 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430886347 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.429796355 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430640445 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.424872016 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420414276 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.42763657 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.436286009 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.415188015 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.432905556 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523381436 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033775731 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442465552 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.092129273 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.745929099 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.681049554 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.433798729 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.411087134 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.425048234 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420974671 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421684218 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421663149 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.423128123 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047749419 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.439816192 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.438095623 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.425773789 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.421343035 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634468469 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.42645653 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669746316 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440991587 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442287704 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.406863593 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422046653 seconds)
  done (took 997.645846891 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.428580368 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.469909119 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.452939303 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.5176043 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.464917469 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.570908442 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.461538626 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.47223233 seconds)
  done (took 21.158319442 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.428954189 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.434856138 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.424133428 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.435323468 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.428270942 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.95659646 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.459386361 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.436524767 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.442105825 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.427863147 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.424556439 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.426377097 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.43514378 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.442144754 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.426300766 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.434709419 seconds)
  done (took 33.792878419 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.638903557 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.685696919 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.86787644 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.504135107 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.476031329 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.431332568 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.802953899 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.445384261 seconds)
  done (took 28.17418454 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.435521533 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.436362361 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.435998715 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.438158502 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.436472033 seconds)
  done (took 8.50619976 seconds)
done (took 1267.756377519 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.429796715 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.432006891 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.429701345 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.432550785 seconds)
  done (took 7.046815282 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.413446431 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.412183794 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.410884809 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.425952319 seconds)
  done (took 9.985570937 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.246510535 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.150526083 seconds)
  done (took 5.72204926 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.92865523 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.930705624 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.927713573 seconds)
  done (took 7.112694368 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.734947859 seconds)
  done (took 3.060784003 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.349896652 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.326511177 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.120014343 seconds)
  done (took 8.122726543 seconds)
done (took 42.372251993 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.441819325 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.673085035 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.58051082 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.443224101 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.586224796 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.583872587 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.159138502 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.433884671 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.4299993 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.426085016 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.425494843 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.610438124 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.148182633 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.671325689 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.148736445 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.673886259 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.630571367 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.433306404 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.439774356 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.429518835 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.164746704 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.427846729 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.427270174 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.431575437 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.589372293 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.572291671 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.438533615 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.672299495 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.429478551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.466594527 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.572396968 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.431540114 seconds)
  done (took 84.316662652 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.428755185 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.430882642 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.428815767 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.457495275 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.428841806 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.42991473 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.452634202 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.429552678 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.4279728 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.429478234 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.441324079 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.42798472 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.429915303 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.430242857 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.452094496 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.428003162 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.459771554 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.429355673 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.429278708 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.44854885 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.42760696 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.436244789 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.431457311 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.444318445 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.429295383 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.42975332 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.449524131 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.448663107 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.430728069 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.429618935 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.450532855 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.448023913 seconds)
  done (took 79.303455874 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.430424494 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.462577184 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.444033226 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.437287458 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.439359014 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.4447161 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.433760108 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.429877607 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.43087621 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.431007735 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.441297257 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.44148583 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.432656238 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.431611034 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.433146082 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.431339919 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.430987156 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.452956526 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.43038494 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.450254782 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.432691302 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.431619821 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.4519327 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.431971987 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.431205252 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.453443055 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.43253137 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.459630448 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.432540953 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.433488318 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.457923499 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.440214565 seconds)
  done (took 79.378004441 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.71512553 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.439824593 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.441945969 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.433615647 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.437990448 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.43989568 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.434546036 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.718874469 seconds)
  done (took 15.393234112 seconds)
done (took 259.710333248 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.442536622 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.452266973 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.652617613 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.462656176 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.439219818 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.464315023 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.462989043 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.684931226 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.454779112 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.682842089 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.454525308 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.480227774 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.447177224 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.457685891 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.736589195 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.60114209 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.429975495 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.433415481 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.810768793 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.454469948 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.727496652 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.435533382 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.738802783 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.435283295 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.452297476 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.435614976 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.452859969 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.415344517 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.485707174 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.814274178 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.447218997 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.423749605 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.534388601 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.554611168 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.674059025 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.610643626 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.45064627 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.534180031 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.680359626 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.438503329 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.451520375 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.250051907 seconds)
  done (took 86.279757624 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.443039884 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.561895055 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.442485024 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.442786891 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.442893875 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.562566056 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.538336233 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.444398807 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.445020773 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.444132309 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.443153059 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.445360084 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.446025049 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.445013849 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.444640379 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.446907632 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.445945319 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.446503544 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.446853784 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.490164276 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.566888425 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.470344581 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.438461276 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.445681862 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.545431251 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.583436315 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.445419491 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.43717612 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.48710661 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.447226687 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.447079885 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.490142608 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.446697833 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.447030897 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.559736387 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.54635281 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.469481361 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.44404292 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.558546259 seconds)
  done (took 58.88099346 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.447891987 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.71536342 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.910963115 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.453935362 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.44664629 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.450870937 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.538676305 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.448907101 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.451943874 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.452494408 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.629031173 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.453096728 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.487224421 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.943499609 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.452310038 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.450977592 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.448445246 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.448650969 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.723042175 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.46003583 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.564823927 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.449778358 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.539274012 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.461321655 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.476351541 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.450492384 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.456982906 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.047926893 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.45397025 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.632130381 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.387954204 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.541056866 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.997409115 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.926426533 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.387885752 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.456707721 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.450341354 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.636382625 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.454098473 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.452842978 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.540294993 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.453112757 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.923972013 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.135174155 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.47241526 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.450743849 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.072042953 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.633414786 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.733730704 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.463081187 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.99118788 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.455921253 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.452712863 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.453226411 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.735285123 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.454487737 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.451963016 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.08910166 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.474685803 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.540743949 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.452071596 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.452959146 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.724867856 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.452927931 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.71946425 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.454372396 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.458885449 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.476682651 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.92682041 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.457820229 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.149606754 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.474958357 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.453953157 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.631543774 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.722640587 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.113231529 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.477694829 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.728403308 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.008017272 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.542125057 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.458199626 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.047083441 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.546965283 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.458147729 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.456428405 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.455667083 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.454794304 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.501364959 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.54287454 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.104992156 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.147959384 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.117316634 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.567078899 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.46361757 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.456104522 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.096012342 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.473710346 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.452139279 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.922813831 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.154532837 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.473316892 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.463420562 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.161661024 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.477377071 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.547170936 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.462342994 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.938470131 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.455598264 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.505530507 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.455404557 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.463046736 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.481796519 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.545210233 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.460378049 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.457148587 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.137689939 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.664587036 seconds)
  done (took 192.262715448 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.450982265 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.448088611 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.448023604 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.448280437 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.447706738 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.461391139 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.448947803 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.449164681 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.457294171 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.449666957 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.450613976 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.448435473 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.45361906 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.458139321 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.483045789 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.456650208 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.450219819 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.450262839 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.451742838 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.451997659 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.451307337 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.454100879 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.452299058 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.452053023 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.454146149 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.453236976 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.456614919 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.477577973 seconds)
  done (took 66.063455024 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.458768779 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.100140327 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.459042595 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.611234248 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.482187636 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.456115784 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.608781869 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.52222198 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.460851532 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.457497631 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.455746771 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.803563771 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.458540911 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.044643249 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.6813419 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.608401373 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.043793095 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.480499442 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.458498743 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.456559553 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.611763794 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.473337504 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.803007729 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.10399601 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.461415937 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.101679732 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.450801961 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.460447386 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.458006435 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.104880965 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.458012899 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.80517706 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.547593325 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.528751885 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.106100768 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.048957432 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.070274278 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.636891929 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.463687871 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.458220551 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.457762372 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.449246599 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.106215398 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.462423503 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.462334742 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.104528741 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.483536563 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.462772793 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.465676785 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.458677057 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.529890832 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.531619965 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.812154257 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.184472175 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.548217333 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.472295937 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.617359093 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.841368233 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.463703226 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.05019718 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.471305501 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.114062712 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.486444125 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.451056876 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.461823309 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.470184621 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.633007148 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.617295749 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.056875103 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.482929023 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.049187785 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.651173361 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.460133401 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.457325085 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.46250635 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.110201026 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.053515098 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.654155609 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.617201605 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.688412959 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.451436261 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.460802809 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.450317224 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.553319892 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.46178735 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.115973731 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.074123328 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.484309117 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.462534878 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.464787004 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.462746122 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.668425297 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.134071765 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.552000978 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.053644541 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.833153378 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.812675627 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.465535096 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.530588497 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.482757106 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.88177878 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.466750049 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.527933811 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.917875677 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.815858911 seconds)
  done (took 175.610583346 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.73158364 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.496215373 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.561167891 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.628990959 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.115408702 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.088322489 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.464707006 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.599235531 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.582673946 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.745256539 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.470874366 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.554516978 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.699224666 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.548449035 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.226514269 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.542008828 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.566685792 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.627388312 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.613843166 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.465325603 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.165200456 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.791046847 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.674256569 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.48188083 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.575809289 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.298789284 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.102107193 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.048236107 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.660687141 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.462941851 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.045830252 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.47960767 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.464874208 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.197261885 seconds)
  done (took 68.129784599 seconds)
done (took 648.554775479 seconds)
SAVING RESULT...
DONE!
