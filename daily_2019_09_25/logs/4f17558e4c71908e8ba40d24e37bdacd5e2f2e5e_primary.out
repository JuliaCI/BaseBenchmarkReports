cset: moving following pidspec: 14753
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.348771914 seconds)
loading group "string"... done (took 0.548730755 seconds)
loading group "linalg"... done (took 7.040108761 seconds)
loading group "parallel"... done (took 0.156709365 seconds)
loading group "find"... done (took 1.108490344 seconds)
loading group "tuple"... done (took 1.746486251 seconds)
loading group "dates"... done (took 1.248471285 seconds)
loading group "micro"... done (took 0.219691878 seconds)
loading group "io"... done (took 0.910063257 seconds)
loading group "scalar"... done (took 36.191513945 seconds)
loading group "sparse"... done (took 11.156825953 seconds)
loading group "broadcast"... done (took 0.908100875 seconds)
loading group "union"... done (took 11.813414759 seconds)
loading group "simd"... done (took 4.131517276 seconds)
loading group "random"... done (took 8.214710755 seconds)
loading group "problem"... done (took 1.898532261 seconds)
loading group "array"... done (took 19.938142324 seconds)
loading group "misc"... done (took 1.663297567 seconds)
loading group "sort"... done (took 3.270908221 seconds)
loading group "collection"... done (took 16.497366393 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.485919611 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122190771 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113853946 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118491312 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144301532 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114726338 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123390337 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083316256 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.830512279 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146492572 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117905137 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412542175 seconds)
done (took 5.157806865 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.171308124 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083560393 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081933948 seconds)
  done (took 1.324912782 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065853963 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120651208 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066055271 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066596087 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066198165 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065436702 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066119591 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066143256 seconds)
  done (took 1.678233079 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073037667 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06845613 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068422151 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067952402 seconds)
  done (took 1.443524201 seconds)
done (took 5.856586954 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.763209633 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202801178 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183899767 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.399126847 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129021587 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157375615 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.632150352 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324718947 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182415381 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080920319 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104334431 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317537893 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107183832 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.640403439 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073676255 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089840572 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136081751 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.429482938 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066959323 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081802648 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088261201 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127134292 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084951816 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074228039 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142274934 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067561964 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129956748 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079986876 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06572785 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207225096 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172235825 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.649586985 seconds)
  done (took 10.195004254 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095766026 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097456716 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068480949 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136223078 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095993909 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069355375 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070640486 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067150309 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086754852 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127429461 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08911467 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100937844 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065307099 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068767868 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084121673 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204565015 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079556713 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08066727 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071083356 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075230994 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116144106 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077885569 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077902981 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077242548 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128437536 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179514966 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095813082 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097150863 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066687474 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080303194 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114618461 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125287823 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065251194 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065919685 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124006261 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094582137 seconds)
  done (took 4.619998147 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.286221706 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140507606 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.08993825 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131660866 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064888693 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107070284 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065321864 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080751245 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.202707248 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.353519204 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.577824747 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111506839 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103302146 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067816246 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068496348 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06662455 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.349064538 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108763009 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104279845 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081142052 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070211714 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069378294 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.350051832 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067850089 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064283189 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068343793 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058456807 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123872045 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068293569 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.920390176 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124493039 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066314477 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100415562 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161092578 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087448316 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.274180584 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067543526 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064910798 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149237065 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069667323 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066043104 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083338672 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105189081 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112092439 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065403059 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06631769 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161096492 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064768446 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078807049 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.007891965 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152096261 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.110254692 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075308012 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064661125 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.246107356 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085292153 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069198005 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064771151 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.155433687 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133468277 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067239876 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066492215 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067992413 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068693059 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.355436654 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067850902 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.024949024 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069271003 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077201833 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069296586 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068987215 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072911303 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072303545 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084618536 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064096182 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065682791 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074689995 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065428741 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065519351 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066878842 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083569225 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.357491848 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065947277 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063623718 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067244543 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064110377 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085582221 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096052573 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06605071 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064930189 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099801907 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063496758 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.175163847 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065777728 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105373442 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066721073 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084070142 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068693026 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115043253 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067095256 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.086414689 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06529823 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096153533 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069481296 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098976634 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081596755 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067643269 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.398218293 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064830616 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064420226 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068500193 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065144056 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067758435 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066273842 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079431172 seconds)
  done (took 21.210749466 seconds)
done (took 38.476223039 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.269020955 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074483567 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075078686 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074960629 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075089792 seconds)
  done (took 1.824613515 seconds)
done (took 3.062628879 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119458095 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098065719 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06402131 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095077194 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06376876 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099512914 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098980224 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080420962 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099073667 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063659266 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095764988 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063725985 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063912215 seconds)
  done (took 2.361483602 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082068483 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083001808 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069128576 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081663809 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063253996 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081878823 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080799973 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087913968 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080680149 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071705834 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063451381 seconds)
  done (took 2.075941709 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081023491 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08330999 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069064781 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081004651 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062885398 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08077315 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080682423 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084907584 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080924777 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073485332 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063596478 seconds)
  done (took 2.065327872 seconds)
done (took 7.727851327 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077157038 seconds)
  done (took 1.294579407 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.592812552 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.136432047 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081309412 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111914404 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183404207 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119545549 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.28026127 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08759324 seconds)
  done (took 8.990910013 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.088710699 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067482978 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069056105 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.083118207 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071433363 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069352968 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070462468 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071661933 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07111532 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071047244 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072025294 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068971899 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06822774 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070569774 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067776223 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.0685885 seconds)
  done (took 2.437551145 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091771702 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091597285 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072516983 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073887343 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072341918 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072217127 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074083653 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073320444 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070768435 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07161588 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074286011 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073567398 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070979205 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064933719 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073244763 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075260245 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070673768 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073517528 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074889968 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074431788 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074225843 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064034535 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071044073 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073177583 seconds)
  done (took 3.096716172 seconds)
done (took 17.04531322 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111994619 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071021236 seconds)
  done (took 1.409741487 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080599026 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082935656 seconds)
  done (took 1.398056415 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081546761 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066139399 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089363326 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077459793 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065730203 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065636476 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086713042 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066509967 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066028525 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066055628 seconds)
  done (took 1.965747579 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067993485 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077150796 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069824277 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08034586 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072936192 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063788206 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072645638 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067215255 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077037031 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062550866 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070467285 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081752562 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070952746 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083166341 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071737567 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067880223 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070145091 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066903311 seconds)
  done (took 2.532175343 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065599894 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065876727 seconds)
  done (took 1.372339374 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066321754 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063457822 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065595039 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066618889 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063121814 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062238498 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063046033 seconds)
  done (took 1.687222394 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.384655074 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110281023 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.292380088 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070293688 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081110717 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248412796 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064841903 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069893238 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.06947781 seconds)
  done (took 2.671092597 seconds)
done (took 14.277490643 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077990532 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085139539 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093486425 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.363722327 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091129207 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065328094 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113489007 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18748165 seconds)
done (took 2.327690763 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213022893 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.610708953 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.383545214 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.19586939 seconds)
  done (took 2.431904938 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322025811 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086258448 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.057960768 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065707616 seconds)
  done (took 1.7829964 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066330252 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067678792 seconds)
  done (took 1.380461739 seconds)
done (took 7.056929927 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065661363 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065637165 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084842529 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062739698 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065272285 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062792788 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063104882 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.069792036 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065395219 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065804382 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068112855 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065491426 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.06570494 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065696579 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06293068 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06292971 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06297322 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067798075 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063244589 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062857857 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062696545 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065206089 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063011876 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062904292 seconds)
  done (took 2.853662739 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082905005 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066357195 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07074857 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071156002 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069562788 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070627691 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070324878 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065640935 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07042176 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067976116 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068971931 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069450499 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067445303 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06965827 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067714263 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06957628 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071264362 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065789372 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067461145 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069910105 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070389202 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06583981 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069525955 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070723415 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069426799 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069239318 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068935312 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065711905 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070713661 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069272284 seconds)
  done (took 3.338115055 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068965833 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063373728 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063508994 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07090854 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063564467 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065019072 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062836149 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063582497 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063733117 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062865011 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064551963 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063096241 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063555559 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064100398 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063835627 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067104268 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078409431 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063738237 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062957689 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063644019 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066567768 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063265144 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063473927 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063012066 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062776842 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062893711 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064055433 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063067792 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063683454 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.174969484 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066085597 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066486788 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062792686 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069832535 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066100881 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062796197 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06689129 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062781273 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063427561 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062721958 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062664996 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062963558 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062826456 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069619022 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06290646 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064794611 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063329897 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064317234 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063226639 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065545697 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062474335 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062864165 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064632096 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06394622 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066775509 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06229625 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06364952 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062957507 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063929757 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062528442 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062367139 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062679084 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065537631 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063792668 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077960809 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069617078 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062581056 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064572336 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064265023 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065441072 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06463061 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076064625 seconds)
  done (took 6.037537395 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090006239 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086366795 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064780864 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064897856 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061664823 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063717483 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067186106 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063578849 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065097885 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069164588 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063572615 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064822351 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065323947 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075848991 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063779898 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064660844 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069445142 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061331611 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063307942 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067264881 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063574638 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066919666 seconds)
  done (took 2.758209301 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15322149 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069374544 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104513638 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073029767 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067055207 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072481789 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069529163 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069432506 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06969741 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067636495 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067820855 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069855247 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067332861 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067771796 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067720555 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067866994 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06941817 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067988252 seconds)
  done (took 2.628148816 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076576999 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065244641 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085553458 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065492546 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065536512 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067600958 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070296628 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073567357 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067939142 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065587891 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073721622 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067834316 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068074341 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065666424 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067800772 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065404999 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067440917 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065190077 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073512866 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070171787 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069823461 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073691954 seconds)
  done (took 2.797850278 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07921434 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067695461 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081960801 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067769209 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061404038 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064064882 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069630652 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065623265 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069474543 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066854005 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066057279 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063876314 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069605313 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065418713 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068627647 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065299911 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067113941 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065300164 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066689052 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061422724 seconds)
  done (took 2.62058004 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086045008 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06740254 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06760176 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075286632 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067102489 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066779024 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074365504 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066771312 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066705225 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086639263 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066970383 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066632271 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074410106 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071543835 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066300572 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074318852 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074240386 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074196856 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066529315 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066609721 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086136211 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066482905 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074181412 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0662956 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066659704 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066444591 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067106323 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071564503 seconds)
  done (took 3.261073722 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065998648 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064906105 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063281923 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062839836 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063527238 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062936314 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063124712 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063150285 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065075382 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06320681 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065490932 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065672642 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066010177 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065219421 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065275599 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065185028 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06537008 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063448362 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06285163 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063478979 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065217607 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065259837 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065212047 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063118135 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062591594 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065534911 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063094077 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063040829 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064841092 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063097247 seconds)
  done (took 3.200148315 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074912242 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072514407 seconds)
  done (took 1.421146445 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062900274 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079030662 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063066585 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06938247 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068471301 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065632789 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073052351 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069642713 seconds)
  done (took 1.821163344 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081041926 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076606174 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067837663 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080818577 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075914666 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082320683 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132026005 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066658651 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072196936 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06387654 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.07900882 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064749666 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071435287 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066162631 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071557661 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071802527 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063329559 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071691403 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067897649 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064167793 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067251238 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073934189 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068519959 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061498127 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066722776 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087757804 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076259417 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065188165 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068259253 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072990147 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071165105 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059853927 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065747639 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066330007 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063659511 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074767882 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080570402 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068283458 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073883547 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066208456 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075992686 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060746097 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07037409 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072308832 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075318656 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065713212 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066461045 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060802115 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063688886 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067845709 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061005057 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065722765 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060630805 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074959032 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069003702 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076238004 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064334119 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067283493 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068317985 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068954527 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072153509 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067600078 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068232974 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065649254 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072556036 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070097477 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074782901 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061299965 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060057841 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063904156 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07549285 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088477961 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07295951 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06663512 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066812741 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063969317 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068841953 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067101544 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071583485 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071720963 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065859574 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071036451 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073035351 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066224248 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068365532 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073918849 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064062235 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068582529 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063580404 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081892994 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064687759 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063399261 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06380424 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076005256 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069079047 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.0654602 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064019177 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072801874 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059820552 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066211657 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066791178 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06675815 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076104553 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07081624 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07100407 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074369512 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072430547 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065185785 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067859147 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062012747 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06627185 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063857711 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072028499 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059488794 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067373812 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065636306 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065010371 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200060437 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064215397 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066535561 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073357418 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072825794 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064778801 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062858937 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069216479 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066522602 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068945051 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073677212 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064663337 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061645058 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061635633 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069195832 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066459546 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069442268 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071168169 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069172373 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060553032 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064406672 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071458863 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075568002 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06621091 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067138846 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072311792 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067501978 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065337109 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072498611 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068914848 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065562496 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072300277 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066869282 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061971194 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069774052 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068754508 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065022198 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069750963 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070043583 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068706083 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066806044 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064584672 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07323749 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066742532 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06498295 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06634053 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064555976 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075520662 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067784054 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061245252 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063564551 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075401095 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064216084 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065647303 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065572086 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068371915 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066034069 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063543336 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065590505 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067950691 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076497595 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069940305 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066552122 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070947353 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077061702 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066158559 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068034544 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065251898 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066163727 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066763297 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074322244 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070719502 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070593719 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068337159 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061985463 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070969335 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072922237 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064672136 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063943023 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065024005 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069747346 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071337581 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069986536 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.0665199 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064251645 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066778676 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069386966 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068715889 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065467954 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065164156 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073078995 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064192767 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072949009 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066979315 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075945588 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069602922 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061468476 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069631375 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064474264 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072390589 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061650415 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06416816 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065334166 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066982099 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065058655 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068408943 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060986345 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072885703 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074029986 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066451952 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065388853 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06594623 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071868692 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066523211 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068657877 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06842336 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071067829 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075538757 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064854558 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068282932 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075150237 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064972271 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.190053485 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07257755 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065952366 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066259094 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066049525 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063900493 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069478872 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075381196 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072936166 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060973745 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068922937 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06519203 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066488044 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061448184 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071302985 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070120914 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067486016 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074263705 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067453136 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066941904 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070878671 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066393619 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067472495 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067556782 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069303611 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067070116 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068128912 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065711951 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069715586 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065660095 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063736971 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068346532 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067021567 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067083674 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071492583 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065554204 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066284781 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068608401 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067480123 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06726663 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066599358 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065527244 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069480948 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067022677 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066104376 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068629413 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061672437 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073333438 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065637995 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073284393 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.0669088 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063026147 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073527603 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068668221 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072845956 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067551921 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067229633 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067395057 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06552972 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068604537 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073541169 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064843515 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076626007 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074148527 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066676968 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069349078 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067375901 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067832625 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065139679 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066999204 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067682599 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066773836 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065940138 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070965059 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067823071 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066479508 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0672996 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066324881 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06652403 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066776315 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060542642 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065184502 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065339369 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065654769 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075175615 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065992345 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065231096 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06469164 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066892956 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064776519 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062809605 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074045313 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075441381 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066625414 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072834725 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06536753 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067823248 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076395817 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06041001 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064394495 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063706349 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063831053 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073026817 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066485356 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075055846 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066240147 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065520593 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063575683 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066453089 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065004941 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060261253 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06398567 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069393502 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064573957 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064727346 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065385831 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067103827 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065406336 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073855748 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063780731 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065757927 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06473504 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062274788 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063915093 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06411888 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.201353805 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067433594 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065137511 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064036595 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066059104 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067643564 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067848384 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066117399 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067622695 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075033823 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066033837 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069486313 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070098917 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061175092 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068974828 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06626714 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066657144 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06627227 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070286068 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070143592 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067924367 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075391458 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066779471 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067680557 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066787629 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064732354 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066238112 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065765474 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066979993 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065867249 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066898662 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073809388 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063820952 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069100519 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066363138 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066644876 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072771146 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067121768 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069318491 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073106736 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066713765 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068499455 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074273385 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070200802 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069796619 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067269997 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06849238 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072330475 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06523522 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072505226 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066976765 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067239579 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067779129 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064073059 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065972822 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066450536 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065534811 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072162453 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067360678 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065645675 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065352595 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064511319 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067301532 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069296692 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073717905 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068736065 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06927327 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061287778 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063638516 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066924348 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063665164 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067859015 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068952213 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071835408 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067950873 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066351292 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064491621 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.0745672 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071788236 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069564784 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063632477 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069316998 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066968038 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068345916 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066814828 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066263944 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067004459 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.06982172 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067477008 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065362853 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073047533 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069150913 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066951354 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067378232 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066790597 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066352002 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061114331 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066931528 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067806627 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07105747 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068088549 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066275332 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076231614 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064144345 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066456049 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069232265 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065517049 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070523263 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061435637 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067745903 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067078102 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066743731 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061224884 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064728928 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063732555 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067732893 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064728761 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06057314 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074904321 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073647761 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067317328 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063489445 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063430838 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060204013 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060215655 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.197193651 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067273833 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068464018 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076814825 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065108309 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06488607 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061674833 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065880592 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068986715 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069078781 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064206596 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061355046 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065435189 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069171502 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071292964 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064663241 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065994558 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069196047 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068790134 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064784128 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069914616 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063976296 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070970424 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079808091 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067112288 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067496092 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072410103 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07361268 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067565243 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061202801 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067928192 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069405379 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067318926 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06727393 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067295063 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080983458 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068794961 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065110979 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064751144 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068431391 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065608449 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073738893 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067189915 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067627545 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070735099 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069209434 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075698521 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069584401 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074102251 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068727891 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069126832 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064685856 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067188076 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06438218 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065104351 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067570184 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066538003 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072012148 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074016072 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065517192 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076843985 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075362941 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068269364 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062805694 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065156505 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065966131 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06160863 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066585157 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064322435 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064066251 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064421025 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064756666 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066918844 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070796533 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066856665 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066306878 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065859092 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060207818 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068111609 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068341192 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066493413 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062547406 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066087293 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066279584 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070042016 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0695741 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063449208 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067708047 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067803102 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066652837 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061028554 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072226469 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064662814 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067615145 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065472237 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065797057 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066872557 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069183493 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070156225 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066585118 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068116911 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069844324 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068290403 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063176447 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063549739 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071201252 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063861804 seconds)
  done (took 42.359648519 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098986002 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062934606 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062497788 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061261515 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07273104 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062422103 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061613959 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062598626 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062442263 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064780441 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061246978 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061241573 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070049087 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076988196 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073262321 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065869917 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061112376 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062245242 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061417435 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062338573 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070255945 seconds)
  done (took 2.76271176 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073957244 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069449969 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071755926 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074894417 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06658389 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069961935 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071611173 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069681513 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075364499 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066930483 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075128702 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070144458 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066520955 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066530659 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066383107 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070117809 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075111102 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066727243 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070011544 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080398122 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070009194 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072005432 seconds)
  done (took 2.900273584 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065822295 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066276134 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06725907 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060702893 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065234389 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061226643 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068602881 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063338604 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068568015 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064256055 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064158489 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064420849 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066970719 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060999731 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06547093 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063288312 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107703871 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068816359 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065082549 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066354608 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060848188 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067267326 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060791316 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061407925 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064052781 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068461704 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066339152 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06297573 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064893491 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064226709 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065374251 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063263252 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066736905 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065413311 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064370018 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064262605 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065172924 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064865568 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060521577 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063493731 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065490402 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061017582 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065512049 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06649874 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063793817 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063249135 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066344823 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065033335 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060529197 seconds)
  done (took 4.550613835 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078734434 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107592599 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066759756 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087337391 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079339803 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07451851 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068485288 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088174242 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063130308 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063822552 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080863656 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079129363 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065349477 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069549085 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068452713 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065148627 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066698761 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064173304 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069037257 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064607357 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068943486 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071784505 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079162876 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07825645 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068907238 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064556506 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064419613 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068940681 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077781322 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069576357 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069617279 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070794449 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079462042 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070557379 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064353268 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067302862 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080570664 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065212374 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067812022 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062600982 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067113801 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069166075 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071534039 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080776472 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065612456 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069994384 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064753207 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062148787 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077556322 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067321367 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07260683 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079203057 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068600879 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065093186 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069704747 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079777591 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06526843 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063154655 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067519198 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.0768978 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063055122 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068687764 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078320861 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067414908 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071947524 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079180752 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070012742 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068623651 seconds)
  done (took 6.33438899 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074509438 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.07100477 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079163514 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079861139 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071543815 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071562013 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071225559 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071474966 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071218518 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07595412 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071712279 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092126146 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066863686 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074299359 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071480644 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071759756 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071825451 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071741107 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071520484 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071745232 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071956513 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078929286 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071805748 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078928446 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098102969 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067125769 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071727041 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071584453 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079464867 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071642723 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079151412 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071729233 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071736906 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079413652 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079212919 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071587322 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064619391 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071367378 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071437216 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071576095 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067537554 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078818285 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071292226 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066518806 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071573661 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070869945 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079366552 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078317853 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074337375 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076095724 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071675903 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079556566 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071017287 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071161964 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079062659 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104099919 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079008097 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079206114 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071166855 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079386612 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079157814 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085341836 seconds)
  done (took 6.017048466 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08254208 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074329251 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075544426 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061537429 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063412169 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069054386 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063682704 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063482443 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073637445 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073580521 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076187373 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069138017 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072174717 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076409945 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069425855 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071904971 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069175071 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069000087 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073760331 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068833532 seconds)
  done (took 2.785710473 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073039557 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082405337 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066350514 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071151003 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068174818 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07139813 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067728835 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06816284 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066803511 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06814149 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075274231 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075656431 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066328891 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071229787 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.0752765 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070846795 seconds)
  done (took 2.499175982 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074448306 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.0717836 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078957051 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065721434 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063424759 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062568077 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065356256 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061368092 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06198065 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077145605 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065401795 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067781746 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065119422 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064162696 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062020556 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06803698 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061945614 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062742477 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.0650459 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077457633 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075732477 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063841201 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066102835 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06525992 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065971273 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070266414 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065078272 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063204863 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062914341 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065934002 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065736497 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068889306 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062758717 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063098909 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064282393 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062720741 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065290643 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065263475 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068175137 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065251473 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063354878 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06504132 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065026108 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066181209 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062082045 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065315292 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061514599 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06697854 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063225616 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065255182 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065623085 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067248209 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065592362 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071426825 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067861629 seconds)
  done (took 5.001959156 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078388607 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068353103 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06184167 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063480625 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06826403 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067396135 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069043996 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066690526 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067165456 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063580002 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066815363 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067890878 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066977619 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068826185 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06686034 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068960467 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061405915 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067004186 seconds)
  done (took 2.581874266 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07025966 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065226264 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072095584 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065310598 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065226484 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067340401 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062034342 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064188465 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063795514 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065345222 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065254985 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067202872 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063787404 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067645992 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065389181 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065524466 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067900305 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064189647 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065617171 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061596615 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06744656 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06349172 seconds)
  done (took 2.812905068 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071180537 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091155863 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137044274 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.08253228 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080282853 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077741421 seconds)
  done (took 1.908921238 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089892057 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077805867 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066245916 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08726163 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073010618 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066801426 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066814272 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067162005 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075558505 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075613263 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067287492 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075436843 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075557033 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074913454 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072891506 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072472551 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067321856 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067078628 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065800511 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083983487 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067486176 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075805598 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067743825 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06679241 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067044414 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074713524 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075638369 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076075071 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066999479 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075581257 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072927784 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067169909 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075546265 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075873443 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068781652 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075914604 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067640918 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083941628 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072976431 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07551286 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068779003 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073222622 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075953525 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072098695 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075727444 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067640733 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071926887 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067134622 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067432528 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086187695 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072792235 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074598468 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072934835 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076335879 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075246139 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085734879 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075767685 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074527568 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072568016 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078097119 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074789671 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072547299 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07451153 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075565518 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072777642 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074869939 seconds)
  done (took 6.221249378 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081359665 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085775274 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067827078 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076025484 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075038157 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067257607 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067505194 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067467879 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067383948 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06750796 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107631391 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067649572 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075144481 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075384377 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067504656 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067230331 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067366303 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074974528 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066929584 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085820222 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067296639 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074748955 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074752464 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074931652 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07639135 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073059373 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067614272 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067066402 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067389886 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067381884 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071941033 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067363433 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075091763 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066815002 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075207569 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067806449 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067198532 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072019879 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067139962 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072610616 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074738156 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083257449 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067104699 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067094049 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075342213 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067194323 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06675976 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06677877 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067136523 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066946727 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075499257 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075514377 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075731278 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074374465 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067472539 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067156665 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067140718 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067076263 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067027539 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072677454 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074747167 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067208236 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085301762 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067193752 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066869907 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075326486 seconds)
  done (took 6.128523039 seconds)
done (took 128.847845488 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184445147 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166039352 seconds)
  done (took 1.717720012 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069072738 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097281633 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076125485 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127779766 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06610826 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100391339 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09952563 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077805576 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065898767 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065751036 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065703191 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068621306 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13134502 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066275986 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066151523 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069076181 seconds)
  done (took 2.690326846 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096114737 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157445436 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099239326 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064236664 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095907324 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072490878 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064177264 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074690126 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071012127 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064899575 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072907615 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070270651 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064924786 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070131879 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070871126 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07264586 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065053098 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072406121 seconds)
  done (took 2.798975179 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101030025 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091876008 seconds)
  done (took 1.574574269 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155030732 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105377336 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149444849 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344343151 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166495345 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229285373 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126622746 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126887162 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116060655 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123333007 seconds)
  done (took 3.020724844 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098527668 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150625043 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255507613 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114653209 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072364264 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094411617 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115587415 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078119458 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080535288 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08001498 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080219023 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075842335 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098494824 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072920941 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072755766 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075902739 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101531605 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071800344 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073490838 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076157735 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098490225 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065581407 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073432775 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071896816 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077300815 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07705646 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065023611 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065413858 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076754277 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074544491 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076755841 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093106537 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077297156 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106631362 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070599929 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107454764 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076398707 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.0734739 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073968391 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073445247 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078563483 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078440123 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072324986 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075677322 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066569519 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075823573 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065312473 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065049404 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077756516 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066638623 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077704646 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076473686 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106488618 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066426595 seconds)
  done (took 5.972032174 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10050872 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104116172 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071301497 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110796294 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099558872 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071121531 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100571829 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093008969 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102245754 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070055496 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068153333 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07610655 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081997601 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082902778 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111874151 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104581165 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073172349 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071023631 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103742177 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102312153 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06848723 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094945317 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089567397 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101725115 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067260337 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070403715 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067887565 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.0701613 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076936875 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078322421 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069680445 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081020565 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084831185 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078147875 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066827991 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067880023 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068017079 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079302218 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079818224 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078753066 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07803473 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067346948 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067545694 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069068316 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069548308 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067181006 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078617418 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080568892 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078772669 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069318957 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069736567 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067806327 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068982202 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0798806 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077753831 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080467934 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079748776 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068037148 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068075517 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071286379 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080456218 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078701759 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078587555 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069605356 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078940298 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068026755 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079827248 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08410426 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068065843 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069669418 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068212824 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069272684 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069156744 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077747618 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078147059 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069914895 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069584258 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068301613 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079499972 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078555552 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068071687 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076860347 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067101392 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068758132 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070037871 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069774529 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077768304 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079886809 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070407635 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068364796 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069596357 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068768224 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067439666 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077165144 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080514883 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078937513 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078394259 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068633146 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077302651 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077370785 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068156032 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077842548 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067242537 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068913777 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.199114474 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079209107 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07835027 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079233111 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069929159 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068489649 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078930107 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081097884 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068746142 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079591174 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080419115 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080078189 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067853401 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081346977 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068635145 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080524399 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070055745 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079910147 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069187392 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07934177 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068395445 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06864054 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06851537 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079120678 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069542456 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068882583 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069273444 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070254721 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080081945 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083685153 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070319993 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082053883 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078320537 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069991488 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078010999 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068593469 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079496452 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069850488 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069224127 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067375399 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082527353 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068571318 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068629484 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070184165 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080943359 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068119253 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079934938 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078213865 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068302731 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081214736 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080318096 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077895568 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080196219 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069665408 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068375275 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068053281 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070171899 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077333492 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079776087 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070135364 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068547609 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078254732 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080072898 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067569967 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078340132 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078314149 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07831173 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068544898 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069682811 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080548662 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081116899 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078604049 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078204329 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078503427 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068448048 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077967313 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078849504 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068223033 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085156451 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068324727 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083126133 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07905277 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077581376 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078855301 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080450416 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079964817 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08002961 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082790466 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067477613 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068019945 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079673342 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068164234 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069661546 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078571851 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069854911 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069589516 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083120615 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068261614 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077962993 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066517102 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076863158 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066193509 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068217074 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081498787 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066748437 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.201408747 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079834856 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070199357 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077794134 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081109104 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078963485 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068113934 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069727841 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080246863 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07910648 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068457437 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068035133 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070760434 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079049104 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078700155 seconds)
  done (took 18.650064516 seconds)
done (took 37.814711769 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207152468 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150835678 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179332241 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118165437 seconds)
  done (took 2.136664969 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121091948 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10019028 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094492506 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064685171 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101632291 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064435116 seconds)
  done (took 1.961560955 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313639967 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210984747 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182073611 seconds)
  done (took 2.123556763 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197485935 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187005146 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393608561 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252246078 seconds)
  done (took 2.55545017 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142817165 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08848984 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066813716 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083254687 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134281722 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161122518 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101188653 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125849542 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077836303 seconds)
  done (took 2.452732658 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147048305 seconds)
done (took 12.793517576 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.121607026 seconds)
    (2/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.200430414 seconds)
    (3/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.168987556 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.163549297 seconds)
    (5/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.179832569 seconds)
    (6/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.157116514 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.129109158 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.100641651 seconds)
    (9/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072030273 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077120423 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.0730505 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097728527 seconds)
    (13/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.109433824 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106712052 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.196293495 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094751078 seconds)
    (17/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.150979059 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070569798 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.101317575 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065229487 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172336642 seconds)
    (22/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070183576 seconds)
    (23/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.086997923 seconds)
    (24/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.156212823 seconds)
    (25/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073502776 seconds)
    (26/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076073541 seconds)
    (27/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077992864 seconds)
    (28/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.144329212 seconds)
    (29/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074580633 seconds)
    (30/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.180553525 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145985931 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.097098468 seconds)
    (33/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.154428162 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077460885 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070828981 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072098034 seconds)
    (37/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185585378 seconds)
    (38/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073600863 seconds)
    (39/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073753241 seconds)
    (40/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07339106 seconds)
    (41/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068316381 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071122433 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090442785 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.109019162 seconds)
    (45/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.105390808 seconds)
    (46/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071703667 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085438637 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06469354 seconds)
    (49/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.097394567 seconds)
    (50/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.19223594 seconds)
    (51/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051623951 seconds)
    (52/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.157765723 seconds)
    (53/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.159487151 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091195048 seconds)
    (55/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068720525 seconds)
    (56/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075187829 seconds)
    (57/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.108685355 seconds)
    (58/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.150196569 seconds)
    (59/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074613831 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071840011 seconds)
    (61/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.202948877 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090883098 seconds)
    (63/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074279569 seconds)
    (64/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090120123 seconds)
    (65/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078181272 seconds)
    (66/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.141463524 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092622589 seconds)
    (68/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075939253 seconds)
    (69/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066510891 seconds)
    (70/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.149667418 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.22932765 seconds)
    (72/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.062607953 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065157636 seconds)
    (74/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075407307 seconds)
    (75/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.149341897 seconds)
    (76/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066664803 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064461607 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092356566 seconds)
    (79/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076464422 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.094073053 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135890691 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.1404109 seconds)
    (83/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.157636384 seconds)
    (84/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.137102518 seconds)
    (85/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.321502886 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051929679 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149631442 seconds)
    (88/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05188968 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.111456854 seconds)
    (90/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.186826536 seconds)
    (91/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.0660904 seconds)
    (92/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08182391 seconds)
    (93/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073403129 seconds)
    (94/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050846077 seconds)
    (95/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.19569807 seconds)
    (96/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06692359 seconds)
    (97/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052446146 seconds)
    (98/309) benchmarking ("sort", Int64, false)...
    done (took 0.065949698 seconds)
    (99/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051216675 seconds)
    (100/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.190688721 seconds)
    (101/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.142246848 seconds)
    (102/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.063692123 seconds)
    (103/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071994214 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.099876818 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.314631908 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.184609158 seconds)
    (107/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.149613498 seconds)
    (108/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052713709 seconds)
    (109/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069788998 seconds)
    (110/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075489614 seconds)
    (111/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.0664202 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090405139 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051427769 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076290094 seconds)
    (115/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.139927071 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07256476 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051092231 seconds)
    (118/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074927304 seconds)
    (119/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.138278501 seconds)
    (120/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077854215 seconds)
    (121/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051798013 seconds)
    (122/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071897207 seconds)
    (123/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07046265 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071852858 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138768682 seconds)
    (126/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.107771569 seconds)
    (127/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074818858 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064671804 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111819645 seconds)
    (130/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066586797 seconds)
    (131/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071956406 seconds)
    (132/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051095607 seconds)
    (133/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063601258 seconds)
    (134/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.1469655 seconds)
    (135/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.149638392 seconds)
    (136/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.147833818 seconds)
    (137/309) benchmarking ("sort", Int8, false)...
    done (took 0.137973019 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 0.132407008 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072941417 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071692792 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.118388415 seconds)
    (142/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075308629 seconds)
    (143/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052187304 seconds)
    (144/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051258439 seconds)
    (145/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065902305 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070460615 seconds)
    (147/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051486319 seconds)
    (148/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067011364 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071664409 seconds)
    (150/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067562776 seconds)
    (151/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069289173 seconds)
    (152/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071123502 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.091650528 seconds)
    (154/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.180076013 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071321399 seconds)
    (156/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078065343 seconds)
    (157/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.098068955 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.153700494 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.107369199 seconds)
    (160/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062608973 seconds)
    (161/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.149271396 seconds)
    (162/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.097293607 seconds)
    (163/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052022049 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065073415 seconds)
    (165/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050860112 seconds)
    (166/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.108709756 seconds)
    (167/309) benchmarking ("sort", Float32, false)...
    done (took 0.126833769 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064987796 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053293433 seconds)
    (170/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071645761 seconds)
    (171/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065610782 seconds)
    (172/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051246543 seconds)
    (173/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072551953 seconds)
    (174/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178320422 seconds)
    (175/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095103356 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087208571 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066035245 seconds)
    (178/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080762115 seconds)
    (179/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06364002 seconds)
    (180/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.085954974 seconds)
    (181/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072859507 seconds)
    (182/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065992525 seconds)
    (183/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060364181 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.162041784 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177584196 seconds)
    (186/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.146888109 seconds)
    (187/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.182352897 seconds)
    (188/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050926694 seconds)
    (189/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.05025155 seconds)
    (190/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051613014 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064278285 seconds)
    (192/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061202183 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.32454282 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139395063 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.112753506 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088559976 seconds)
    (197/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069718043 seconds)
    (198/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.15099355 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071996406 seconds)
    (200/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051336813 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089232131 seconds)
    (202/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051780489 seconds)
    (203/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065493617 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074212449 seconds)
    (205/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.072106139 seconds)
    (206/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051314219 seconds)
    (207/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06387775 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065389129 seconds)
    (209/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051229412 seconds)
    (210/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.05071492 seconds)
    (211/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071559335 seconds)
    (212/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064779243 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063544132 seconds)
    (214/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067199346 seconds)
    (215/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066226018 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.08929969 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111910316 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125579762 seconds)
    (219/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054988531 seconds)
    (220/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051409263 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064920153 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073989684 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071740425 seconds)
    (224/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054329226 seconds)
    (225/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066885539 seconds)
    (226/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070758839 seconds)
    (227/309) benchmarking ("sort", Float64, false)...
    done (took 0.125873929 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089442493 seconds)
    (229/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067192007 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066049602 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065812029 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129028543 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066460081 seconds)
    (234/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052289101 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070229453 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065672683 seconds)
    (237/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067653314 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088633795 seconds)
    (239/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068074038 seconds)
    (240/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065426873 seconds)
    (241/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071619461 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063857269 seconds)
    (243/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076481479 seconds)
    (244/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050946885 seconds)
    (245/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051175506 seconds)
    (246/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062485979 seconds)
    (247/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072601529 seconds)
    (248/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105003896 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13539082 seconds)
    (250/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053865394 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087382513 seconds)
    (252/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051430025 seconds)
    (253/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080151617 seconds)
    (254/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053273837 seconds)
    (255/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.158161356 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168297431 seconds)
    (257/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051094 seconds)
    (258/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052387913 seconds)
    (259/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072833902 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08582356 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177643686 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051200176 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064296037 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084907916 seconds)
    (265/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071721002 seconds)
    (266/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052067938 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052525991 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071222768 seconds)
    (269/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062974144 seconds)
    (270/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052416816 seconds)
    (271/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079149307 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072818172 seconds)
    (273/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060619277 seconds)
    (274/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051783497 seconds)
    (275/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052444936 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067277357 seconds)
    (277/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060248136 seconds)
    (278/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080363545 seconds)
    (279/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072590417 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065969162 seconds)
    (281/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07126673 seconds)
    (282/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050746923 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072025123 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063742059 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064623316 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.106890199 seconds)
    (287/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084462594 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063319737 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071876765 seconds)
    (290/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051255651 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064984973 seconds)
    (292/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070141993 seconds)
    (293/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051291768 seconds)
    (294/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061510687 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070600914 seconds)
    (296/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174191051 seconds)
    (297/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087608186 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065092676 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052362264 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064941798 seconds)
    (301/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085424437 seconds)
    (302/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067847785 seconds)
    (303/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.18375424 seconds)
    (304/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071209878 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140968675 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070351626 seconds)
    (307/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.061964641 seconds)
    (308/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051521969 seconds)
    (309/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052336855 seconds)
  done (took 30.426122963 seconds)
done (took 31.856904979 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084694854 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091244309 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074464251 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09205849 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079212943 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075725672 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071689506 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077437777 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.07904866 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080342432 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077202948 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054269322 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073459193 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073154315 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074087585 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090347384 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077499094 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072120259 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072617423 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064351562 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071852243 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065436774 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067119302 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054552939 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076851859 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070980609 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071638553 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073546672 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065270605 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06507149 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068435784 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072655271 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065123513 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077572764 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071271502 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072770938 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073632841 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.0757222 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066866359 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065444167 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073338297 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065445837 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072219246 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072734398 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070884412 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070156671 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07255534 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077002236 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090631816 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067603074 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073634344 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075093443 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076071926 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071872653 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068505039 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07205837 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070099224 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090522123 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072434104 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067192487 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073735831 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073588291 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070408083 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072231865 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072449605 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074242871 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074826365 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071242647 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074052665 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070145964 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064830543 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072046184 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068208749 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064954228 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074706078 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076298985 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06378836 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070371391 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071491936 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070881859 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064545865 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066818833 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066804383 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070671046 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066885354 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053994158 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068057187 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070690085 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063819537 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072253163 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070813429 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071213291 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066300031 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074450485 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064285021 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.06975304 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064864865 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06456716 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066340589 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068459389 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064526366 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067375444 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073486064 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066120605 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070697387 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078172456 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064472929 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070627077 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063939043 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064131037 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078751852 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074058892 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06527043 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067322261 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064467967 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072218864 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064418829 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065098754 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064693454 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065055243 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07095524 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064622504 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066355663 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071210862 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075742156 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063618858 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067053308 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065630353 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06354251 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.0691486 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064347711 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063891841 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.20191111 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062187926 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068288913 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065818488 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073172862 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068228828 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072677823 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066956219 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073751919 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.06893932 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071597954 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070059937 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063588572 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058585465 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067856684 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06763775 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067405886 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065792824 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066628046 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065665489 seconds)
done (took 12.382197811 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066345109 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142950216 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098854918 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094725667 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085564165 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066029932 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075449343 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101488948 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066949587 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101785477 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086658545 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084483319 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11191527 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06455599 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065513698 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069197838 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066792921 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081316456 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099939627 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086196121 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115235647 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065186162 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093386554 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089386574 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086526018 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091436449 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066209434 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069631598 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069159693 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099763954 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086194589 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069218327 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066017978 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100021855 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091682317 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082698431 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066058798 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081719108 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066361815 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065813551 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066881799 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097758338 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079162725 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079958364 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069525727 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068593264 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066508132 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082842508 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089104112 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078006761 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085931158 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102053928 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068523175 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065203347 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063920754 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084903479 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064693835 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068083397 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065715147 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067638235 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065509538 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068725397 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080141643 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080943706 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069333421 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079583845 seconds)
  done (took 6.788271116 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083185742 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.08967242 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082176203 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082483446 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065271528 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065946334 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066122249 seconds)
  done (took 2.057025294 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066814106 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087042382 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087953715 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088662474 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084225581 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086839565 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074927687 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066408159 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079789329 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067774118 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086849091 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101252163 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066860855 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072536425 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090130534 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066309863 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089860645 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066005568 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06887719 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089327992 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068038814 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081762826 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069519258 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066434398 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080525523 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066356144 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112757634 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070077162 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067503034 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068643918 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064269813 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106443157 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079569276 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075113541 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065895828 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080088396 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080553111 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064364324 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082153907 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071306358 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079553166 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066156422 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06647689 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063937477 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069853984 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076333956 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06692796 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066610473 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068443277 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085385799 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066586461 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079476349 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069137741 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068742287 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067328944 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069899614 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076010614 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066671854 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085640101 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067863182 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082791057 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082319484 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080060023 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082218308 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068290152 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079963679 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.07974072 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068679137 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067577858 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069605397 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081943473 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064383677 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067632854 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076631771 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06767909 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088469548 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088616313 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067240042 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075043097 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066976844 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066384346 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065860966 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088885742 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068514534 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065702971 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070399647 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069399027 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064872025 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06523839 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069759076 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064373361 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067479141 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068666918 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068962272 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068876354 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082330056 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068817601 seconds)
  done (took 8.739083658 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069011914 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06766373 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06829468 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067686067 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06689433 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067114631 seconds)
  done (took 1.951248898 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092389749 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068634095 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079689755 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072860171 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104338234 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086380802 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086547723 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078235204 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083303362 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07799316 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086197679 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087736511 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091894906 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072498008 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085806153 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071679895 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086689658 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075330214 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077649555 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072894996 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086525524 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072645312 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072714174 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081145761 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074936573 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071824769 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066862731 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078544256 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078369384 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07856879 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071869316 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075208465 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069766954 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077916772 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086844222 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07020496 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071640847 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077292179 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071971054 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075293459 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08800903 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072619299 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074116174 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076571508 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077964652 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069802855 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076912218 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075668723 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085363897 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076606586 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07679265 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071000263 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074731533 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076655512 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069864374 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077466982 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076782427 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085749368 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07207647 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069975681 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06832879 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074903631 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077271107 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074390665 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078192383 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076534051 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069801002 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071986666 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072218023 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071251312 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076463513 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069123221 seconds)
  done (took 7.077293309 seconds)
done (took 28.12505076 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542980599 seconds)
  done (took 2.056113164 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.594970504 seconds)
  done (took 2.132038565 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.61370474 seconds)
  done (took 8.148489305 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.402695992 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.484671677 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.692501515 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13150699 seconds)
  done (took 3.290381081 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.677591739 seconds)
  done (took 2.223202897 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.210284113 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197466208 seconds)
  done (took 1.965169841 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377459633 seconds)
  done (took 1.912317467 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.107704146 seconds)
  done (took 2.644203504 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261216741 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164135638 seconds)
  done (took 1.969740495 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.46010166 seconds)
  done (took 2.002577697 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.856663767 seconds)
  done (took 6.400689697 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.205496656 seconds)
  done (took 1.791124665 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.24063662 seconds)
  done (took 1.784359333 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.699468981 seconds)
  done (took 3.2460231 seconds)
done (took 43.107540819 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079559477 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080911644 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080787399 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078182785 seconds)
  done (took 1.848808635 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076901405 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072721562 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07592402 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072050566 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075834383 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071886261 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074006389 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07616616 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071650337 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072358411 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072332045 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07240513 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074548857 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073944298 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070341023 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074166932 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075450926 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071764752 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075244096 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071653574 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070478217 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074017596 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074444398 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071236701 seconds)
  done (took 3.305274993 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077438889 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072987157 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074114681 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072335222 seconds)
  done (took 1.846845491 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077402867 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091449057 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089156153 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077852182 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091843041 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08605021 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068949519 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068226676 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072833152 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076628928 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067734438 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09511416 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087070101 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076512045 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078516935 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065451559 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067668764 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086476713 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076761514 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077089289 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069431799 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076406459 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067632352 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087744893 seconds)
  done (took 3.426189976 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077618167 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10193817 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077134054 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087282259 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.08982615 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06465771 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074070109 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088273804 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122364175 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064825696 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.06936764 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064909205 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071829409 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065041044 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075193642 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103840447 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107301138 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067572154 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095208247 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064956542 seconds)
  done (took 3.189161117 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072223963 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069282692 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06562114 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068216902 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077034386 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072071824 seconds)
  done (took 1.980632329 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067507193 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066926027 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066942716 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066745524 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071502752 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066615251 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06614384 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066440084 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066507366 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066554562 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066096531 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065153002 seconds)
  done (took 2.355372457 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.419852849 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068344475 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068280925 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065421925 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07009751 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065702947 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.07921339 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06743514 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089735447 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066441406 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066057131 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067924436 seconds)
  done (took 2.748571871 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206343328 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075570551 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235642457 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136365238 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110865659 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114735316 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103933531 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112265617 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142643712 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101803736 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16719413 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164925982 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106545584 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136715664 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088733602 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097442931 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154669223 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161872379 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102943625 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165403268 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143887282 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12441418 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145930749 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10078744 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105175433 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121466547 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070699829 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079362465 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169522097 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131264635 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145302788 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110425252 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093389833 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175496219 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170380431 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14282088 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133869481 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083942904 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101836249 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131633869 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19705802 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086989366 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161221063 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246008045 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081270045 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133160797 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120620455 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119599762 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105712386 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089712073 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144207278 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182667153 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137471335 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086708209 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111767869 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114191188 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115550328 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102265226 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180529961 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16076485 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128021363 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070756501 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099495201 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153138701 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131166435 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108353371 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125020516 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092465853 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131233942 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15336856 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117913555 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142856534 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.12780221 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088081102 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118515973 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138909373 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127615494 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169365344 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123391509 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071929471 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124179609 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102745491 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08163519 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141655625 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07466651 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174660206 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098272554 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105374662 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112375694 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108271894 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108190345 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159814391 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14225831 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245076842 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066020683 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104498867 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118687881 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147448872 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087459375 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108360385 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115606261 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077429829 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138554648 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074285731 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122170921 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074524822 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124281427 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131581141 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074373571 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120772438 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099691975 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098946817 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132913825 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158994912 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088934556 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081436009 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166762578 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121510056 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104626672 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143363436 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154904955 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099166867 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102322999 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147494243 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178426118 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088782506 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161783086 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106834663 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083442631 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086964393 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123389744 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111978296 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121535568 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0816792 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117778079 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168120341 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074773248 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094790378 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133384272 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078726911 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080562898 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103286123 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099380204 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094179828 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099561394 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103483102 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13717635 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122095123 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103841365 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270746275 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097632172 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170288203 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088824316 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100222713 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103400788 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069145352 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136886782 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156372859 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079535598 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162371598 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124535587 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104153822 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11857387 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082545251 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139058635 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078309727 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069811471 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143790919 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110666627 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109462585 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149700252 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104289436 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126228981 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118898766 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134386366 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132033955 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128025508 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104446548 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087274563 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1110075 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12466341 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07269246 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09094859 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079759039 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103342539 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094936302 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082871954 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141733355 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123991797 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099265785 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111819921 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095812507 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146380245 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076307411 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12934762 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118771923 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09353983 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151328722 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151505193 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130298363 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098625076 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143366947 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069636336 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073384895 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088410974 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.267683582 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082615682 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082875805 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116729492 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146103252 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129942817 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136766466 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110429363 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120173286 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154110591 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069425112 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114747005 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147219481 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121251369 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10393787 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089491651 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098853564 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141333928 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10729899 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180914303 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113335967 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12635305 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151875391 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098344024 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07912716 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107353473 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134904336 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104330916 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143774919 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099349598 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088021262 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109401182 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073377948 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09918373 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126550667 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119586429 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135293563 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114230702 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13224347 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07645415 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116654757 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120227016 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122204249 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063936146 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120187646 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159895733 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093182045 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118191436 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151988211 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078193581 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123353163 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321427595 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144941401 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083771732 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108105878 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118006151 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128168142 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119346694 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139097298 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107949357 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134129129 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108939541 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085566783 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086293601 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097377579 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103119893 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093705822 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108316643 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113565836 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093945079 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130669515 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102385373 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108734373 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116793394 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095667442 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088663054 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096305611 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173371005 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119362396 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169974251 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097749683 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143257043 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162705468 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073909738 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078447903 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077616591 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139194116 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083569693 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130324667 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097062594 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105347809 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123331169 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141163419 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094958896 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068146929 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108148197 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13339333 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112048901 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09806998 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104297123 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162162507 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099441753 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078921488 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112956117 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10381764 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101655044 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169786045 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.205246877 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098167974 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078299405 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08029747 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127619111 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151732894 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079969974 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102080955 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11889895 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109270343 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126709992 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100933904 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098866948 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114191818 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149520027 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128137161 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088982465 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111524593 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128490085 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156507408 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104463382 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094640283 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171547573 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151691245 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159664286 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088170229 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114296973 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129946832 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107548562 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138446662 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083013434 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16339424 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080885283 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135333118 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103392704 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089919807 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129252043 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098198174 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0873562 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147716693 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11682613 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081938842 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077302662 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118286602 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119755324 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106107409 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075459152 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13789257 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072001869 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131690903 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167489081 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080409197 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103100378 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241690621 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07953064 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107604408 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102165405 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08966442 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097963544 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172128297 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087438378 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149414161 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140618299 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112550196 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137564396 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098814222 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635180574 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07723199 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151370438 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115841146 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171009413 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096283405 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116685575 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108815351 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123542921 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143331857 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10439766 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175905672 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131792746 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115367644 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079549736 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10215186 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101496306 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088189914 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103733475 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113722378 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115510638 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093211773 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115283795 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123467925 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081398549 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094993035 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155097974 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116487715 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144244309 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139949937 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084291063 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117266457 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138733736 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079278292 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.12128143 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151147167 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105777554 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096635115 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079136828 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.247249856 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170951959 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072422771 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162455213 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119544479 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10851599 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112655982 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114654388 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130313595 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107241153 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120505523 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093965761 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109694806 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111717378 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08103521 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076917495 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1034343 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112057975 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097111664 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098725105 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096505588 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149976468 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070868261 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095274686 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102525483 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14537831 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174842688 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087408615 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081693758 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118295987 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112486451 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112253818 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119703613 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078904613 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081737589 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081389335 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076386443 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108514358 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111867744 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103978234 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110900532 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163128839 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081837844 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224507385 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095052928 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104024072 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069176349 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078158124 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09521579 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096619791 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107915374 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10019134 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170214583 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093650771 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088811177 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091368817 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072251536 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08189746 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126255857 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257521459 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119762692 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097865648 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062375182 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108974115 seconds)
  done (took 58.610106688 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109387381 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082565179 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096045977 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14918037 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121911295 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211565967 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157236037 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199253875 seconds)
  done (took 2.79301836 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068627174 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094230563 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099700598 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081632303 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066191079 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068094677 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225023373 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080025135 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.0660201 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.08748522 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078243886 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068147333 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.421881798 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065628116 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067096642 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061902537 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068652931 seconds)
  done (took 3.426035911 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.363708525 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.358391309 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371277316 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072289901 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.823517703 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088239966 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.083455955 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096287273 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070670555 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.267050382 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.707896372 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.092523266 seconds)
  done (took 14.065164209 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075458951 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069230987 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.08353746 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083481332 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071934128 seconds)
  done (took 2.051213102 seconds)
done (took 103.224645534 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079154444 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.390790757 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053660587 seconds)
  done (took 2.140514558 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082666873 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084233352 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084209807 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082929357 seconds)
  done (took 2.010226792 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073897037 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075517186 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084128989 seconds)
  done (took 1.903198197 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223443765 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138473583 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085915422 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081869468 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077372484 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077835939 seconds)
  done (took 1.913001029 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071506607 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075691008 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071504994 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075613034 seconds)
  done (took 1.964837559 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076052744 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051872388 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055373715 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055875521 seconds)
  done (took 1.911751167 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086050946 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078054286 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077743027 seconds)
  done (took 1.915359254 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107388309 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084663688 seconds)
  done (took 1.864983243 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081294292 seconds)
  done (took 1.755460816 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097749121 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112086595 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127960601 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109187307 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13596156 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108078277 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085182154 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086382006 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076544123 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08677768 seconds)
  done (took 2.699496589 seconds)
done (took 22.272715067 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078255326 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.381019038 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36018339 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09092437 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668057534 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356073031 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.995511564 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091908298 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112818731 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067411943 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083671199 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649638214 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.020099673 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.318012178 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.007961569 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319798201 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649067379 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068208397 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067700147 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067866706 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.980511896 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067343678 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067270757 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067935652 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647799243 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371127447 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067930817 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322187289 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067507975 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069551636 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355141542 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067391881 seconds)
  done (took 16.266889477 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069985418 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117240407 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073591655 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083861132 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.0700416 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069673727 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071316434 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068474011 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119366115 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067658833 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08438026 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067279446 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07178925 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068352973 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08711033 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067906682 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068133229 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068312149 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068081381 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068132095 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086115492 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067394998 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067727349 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067987298 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067635981 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079018758 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067565051 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067794135 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068456436 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069504519 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070374392 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068393563 seconds)
  done (took 4.061253629 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113789664 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12519285 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07385884 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102750566 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110951073 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070039421 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142471053 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09238804 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127058677 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067622755 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084390535 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06805531 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100223546 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068769965 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087554431 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068619488 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068974006 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06810316 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068499714 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068168941 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086489144 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067728496 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068030234 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06853127 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068187186 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080849448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068467154 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06836026 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068085308 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07004194 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071410832 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068763307 seconds)
  done (took 4.317149791 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072106984 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074494974 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081815612 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083003456 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069422289 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071359429 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072567914 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069503257 seconds)
  done (took 2.283775212 seconds)
done (took 28.60809115 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078019917 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068702955 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07221174 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080699113 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072663632 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077744732 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066957304 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074687975 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071488119 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072651505 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074679776 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067398351 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070881386 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06760398 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073565261 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067362014 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078916782 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071388588 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078610332 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079261015 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069282862 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072648133 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073736769 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078413064 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078423183 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078696031 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076630434 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072279722 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068640446 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070048395 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076166553 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083559433 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068095408 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078851384 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06742932 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06744633 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071057385 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067753917 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079039011 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076063923 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069480809 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076042726 seconds)
  done (took 4.756546728 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087110552 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090772288 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084230841 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.060976756 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066425417 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064214516 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088212232 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058895749 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059774598 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087370401 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055446109 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058677778 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061998098 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053638553 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059061116 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056523748 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061494822 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055129578 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058915029 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059056523 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057818783 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053981714 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059904828 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064920674 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056061168 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061549783 seconds)
  done (took 3.377688118 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073738114 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08440553 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088204395 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126144671 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103281688 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076702149 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077188338 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.0922305 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085043402 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06665023 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070940849 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093575522 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087371031 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073543439 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067171142 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083847869 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081796165 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068677699 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073300671 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090179113 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083797402 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083244009 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092458661 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080242824 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066414798 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069188904 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070647933 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080498756 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071787942 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07582697 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071000385 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070702501 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068978046 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078246765 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071089879 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068833608 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090496047 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076491606 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078006746 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067819935 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070160406 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067961304 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088745144 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12211032 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066902109 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073425459 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074992746 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076783198 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06756286 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08563824 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078357267 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066882068 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070141391 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066156923 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.078043644 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079815618 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068975735 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06944564 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076158443 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07054218 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08501772 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071296974 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082414052 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066961848 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074535378 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066345907 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068048472 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066521962 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092140379 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068975709 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107660609 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068377653 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067895495 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07573865 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074879898 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073276666 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067531718 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081719684 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077321908 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070258482 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075630445 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070358556 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069906078 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086892914 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069432904 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068610433 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067938686 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073396551 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069809272 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068358561 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079669434 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066974826 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070342808 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083539835 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066546851 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068357046 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073084751 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072128212 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066604723 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078298942 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071908938 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068330293 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076328918 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067245025 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070411083 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07725927 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073666821 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066401692 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072152362 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073358055 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06859672 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069194845 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070103068 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069128539 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07577788 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073859493 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071557064 seconds)
  done (took 10.563914815 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159841294 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152955875 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069316412 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146837426 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075694478 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07913713 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146213306 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093731678 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067636022 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067955649 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068503312 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109054746 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105069774 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11470215 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078830858 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06752653 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082699559 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113183478 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147855623 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.1418343 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082789212 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076419005 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069761885 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068704144 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070311033 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078281358 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085587957 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076182671 seconds)
  done (took 4.42825873 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080862842 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096197603 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073522745 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088790409 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090401842 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067125835 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069441715 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06917066 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.07986679 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078495693 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067350243 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073480231 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074580855 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071364024 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068473926 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074230123 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074553298 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06903582 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070575941 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072885781 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076931338 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080338461 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071311325 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066781001 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073959399 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067384953 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064374867 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083816558 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067854213 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089737776 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06547228 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074197801 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08100183 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068245469 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067887539 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067474595 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067109917 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067035272 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06923323 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065926422 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065807408 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057602854 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066956519 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079178598 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073189789 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056308082 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07181927 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072583543 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072599507 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065683816 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070399476 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069892567 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070891574 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074507303 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072359401 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072279921 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068364019 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065619085 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074905089 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067236578 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064459753 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066103561 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071829104 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065852439 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075096424 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071731655 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065691417 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06721283 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069210315 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073126176 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066904669 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069869411 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065021212 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068979591 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07134609 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069212548 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06839819 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065407343 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066884598 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067641877 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055181259 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067110002 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053289843 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070182602 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065791558 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065600957 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067150288 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071569967 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079353011 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068828861 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072978225 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068083392 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066324958 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070091261 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059995541 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069768 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082136366 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082353972 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067537239 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065396958 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08138279 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071756098 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066081841 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05629403 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074579999 seconds)
  done (took 9.142562698 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094150917 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087584031 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069267744 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083081894 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.089936596 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08628614 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074420485 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076436853 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069394591 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081958451 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.0733013 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076156235 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068208049 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076643692 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092832532 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076175856 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069285959 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076519166 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071819707 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100172184 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082895631 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081389726 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074484519 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067718835 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075434084 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079588664 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089187506 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079287265 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078070582 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075099932 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080066079 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088286253 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.07395648 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071474721 seconds)
  done (took 4.426154965 seconds)
done (took 38.380764711 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.771444671 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.026947011 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.773989343 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.153588234 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.856925424 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.933918086 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.831194774 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.765328177 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.874788406 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.808852246 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.996777995 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.806572807 seconds)
done (took 65.304426987 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.830993476 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.905843867 seconds)
    (2/2) benchmarking "String"...
    done (took 2.041891283 seconds)
  done (took 5.65368224 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.059224594 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.367701957 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.011767087 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.764339683 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.770489418 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.074130711 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.571724043 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.292409976 seconds)
  done (took 30.560431755 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.014555163 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.972038841 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.471517238 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.507400166 seconds)
  done (took 15.726931366 seconds)
done (took 63.623862695 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.790935318 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.816207569 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.785437297 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.750675786 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.824417173 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.783008768 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.019440285 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.790507124 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.765163891 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.755814545 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.767271081 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.19931225 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.769604523 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.133011414 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.766638558 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.770741475 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.796947223 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.207788899 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.922982586 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.773064212 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.784456838 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.830605974 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.770487094 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.778943594 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.80882511 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.768760829 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.209524892 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.770559171 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.575124996 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.770420792 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.813651454 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.090074457 seconds)
  done (took 203.868788191 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.767208618 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.800962701 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.873893057 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.81347572 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.3495951 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.963651269 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.905833645 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.385846344 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.770888977 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.79048579 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.003002118 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.765865666 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.070253678 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.726829214 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.774098796 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.861629811 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.943686727 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.007922991 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.767039275 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.021327811 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.773454632 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.765201512 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.714269012 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.934189708 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.776852714 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.837093805 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.776532969 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.772491084 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.947501795 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.902623634 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.775465156 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.767333117 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.964561837 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.628638854 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.755324494 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.766654762 seconds)
  done (took 169.93236742 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.906362068 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.756781699 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.756520084 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.756574986 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.761984789 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.756625852 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.878338812 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.882319169 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.207643477 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.164427179 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.809129461 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.578809703 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.756519635 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.823670659 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.768514575 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.757865422 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.772903731 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.784783156 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.757541002 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.758019326 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.884704213 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.769761089 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.87910001 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.763704919 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.75804694 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.763731477 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.126356341 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.75790498 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.762431939 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.000423457 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.7588332 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.758625874 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.650872014 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.390404654 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.847517692 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.759648079 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.763187465 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.75754266 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.977258942 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.759459078 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.757973458 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.761673486 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.934142663 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.758107944 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.884453699 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.75654912 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.246803043 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.757538297 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.757137704 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.625883034 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.404747581 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.745867404 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.745523696 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.745905561 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.748155868 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.745304959 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.744030685 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.749678786 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.548891604 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.814945008 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.745285628 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.747385172 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.749260816 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.744092672 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.961328536 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.745986956 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.078228621 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.804867867 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.9621837 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.866508297 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.748461115 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.809854866 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.838190556 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.743842232 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.743473043 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.744737048 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.744784702 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.7424978 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.824667461 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.743558206 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.865050434 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.750201102 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.743419535 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.74185162 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.792797846 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.812851252 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.744469441 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.639408887 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.741877608 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.742654918 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.047946574 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.742829926 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.809541114 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.742113107 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.743463601 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.741934544 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.862236672 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.864171677 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.520829538 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.743266617 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.585859622 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.749000471 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.872751158 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.740734116 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.925496988 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.739333206 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.822093802 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.743556141 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.741183104 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.740804759 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.770369278 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.739879928 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.797854425 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.738604821 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.109666102 seconds)
  done (took 399.621630908 seconds)
done (took 777.095888323 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.425595361 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.380411754 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.491227383 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.406273229 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.385931879 seconds)
  done (took 13.77101166 seconds)
done (took 15.452942863 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.830564997 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.830796587 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.764669768 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.828074476 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.759478295 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.828119895 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.811451218 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.76532972 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.795822776 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.764636267 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.797716955 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.764333398 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.754921638 seconds)
  done (took 24.978368858 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.967771812 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.977442515 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.810526597 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.980858342 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.787180147 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.967028446 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.913232122 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.891897348 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.890228557 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.754798345 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.75118249 seconds)
  done (took 22.375202578 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.972789809 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.978691492 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.816881803 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.975629381 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.787077179 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.976114711 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.90011637 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.891611992 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.891326497 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.753602893 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.752610765 seconds)
  done (took 22.378289063 seconds)
done (took 71.413222636 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.749815635 seconds)
  done (took 3.431009071 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.770275059 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.905451634 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.753021458 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.751299411 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.748718276 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.749027218 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.752047842 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.747863327 seconds)
  done (took 15.860220126 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.746201036 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.743720367 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.74415778 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.746997891 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.745232186 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.744062397 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.747362025 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.747004127 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.745714211 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.746799163 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.746490906 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.746821499 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.742643339 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.746024152 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.743434777 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.744171221 seconds)
  done (took 29.610289699 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.747452371 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.743930717 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.743597276 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.744769526 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.743313382 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.744726332 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.748710181 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.743249077 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.744532361 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.744216065 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.745300699 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.742731484 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.74606555 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.744233935 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.744179259 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.74588878 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.744430206 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.745104314 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.747618906 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.74307698 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.744307428 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.744320429 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.743986213 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.744814707 seconds)
  done (took 43.560209745 seconds)
done (took 94.141976309 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.443323929 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.418658192 seconds)
  done (took 8.544011499 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.752279524 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.751039403 seconds)
  done (took 5.231359457 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.749703378 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.749829716 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.74975396 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.750865418 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.750192351 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.750226451 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.750452445 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.751500071 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.749902219 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.750794908 seconds)
  done (took 19.189017334 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.751471203 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.751225398 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.74729564 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.75145641 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.750142601 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.748093861 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.751382932 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.75242093 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.750027104 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.748811743 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.751398336 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.748008144 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.751883008 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.749186044 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.751235645 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.749056346 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.747681005 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.748530501 seconds)
  done (took 33.18603117 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.750099156 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.750836248 seconds)
  done (took 5.188448164 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.748750599 seconds)
    (2/7) benchmarking "second"...
    done (took 1.74848197 seconds)
    (3/7) benchmarking "month"...
    done (took 1.749636787 seconds)
    (4/7) benchmarking "year"...
    done (took 1.748940198 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.748506075 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.748638847 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.748119764 seconds)
  done (took 13.926270581 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.752964417 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.906288752 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.977375159 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.416111235 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.752233572 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.756144708 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.697107445 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.755092098 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.755756471 seconds)
  done (took 19.456080468 seconds)
done (took 106.402703426 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.600598919 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.746709729 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.093990897 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.810227774 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.801378002 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.044224365 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.765981517 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.969544587 seconds)
done (took 42.518387295 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.846902572 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.303827421 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.331674756 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.957590375 seconds)
  done (took 12.278731118 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.729832438 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.268126737 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.791551483 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.351825977 seconds)
  done (took 19.841036667 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.11495847 seconds)
    (2/2) benchmarking "read"...
    done (took 2.111198586 seconds)
  done (took 5.916257604 seconds)
done (took 46.570984257 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.752671262 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.750740565 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.750401627 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.747590459 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.75051697 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.747577392 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.749456161 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.749540135 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.751642209 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.75082992 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.750388389 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.751785877 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.750917272 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751001108 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.748413128 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.748643354 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749045447 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751525388 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.748451882 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749432816 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.747859512 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.752197513 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.749172964 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.750315085 seconds)
  done (took 43.687521359 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.75210446 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.749894176 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.752202633 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.753488863 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.749544595 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.752277794 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.751804235 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.749829275 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.752801488 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.75419025 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749696193 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.748769145 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.753093815 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.74990803 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.752730279 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.752039086 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.752587415 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.751189622 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752110193 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.751015986 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.754119264 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751179834 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.750708619 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753114121 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.750646473 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.750144871 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.754647572 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.751769395 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.752441341 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.750496883 seconds)
  done (took 54.239132807 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.757587013 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.760206377 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.754164259 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.754103375 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.754647051 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.752850512 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.753205361 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.75457417 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.753477721 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.754147555 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.753757109 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.75377925 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.755166226 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.753306768 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.753283913 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.753858979 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.753791813 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.754099496 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.754621453 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.754196741 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.753822219 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.754616316 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.75382735 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.754728415 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.754817675 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.753700785 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.755463394 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.754253141 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.755030213 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.754373199 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.755320206 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.754146518 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.754910338 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.755951685 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.756552456 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.756229401 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.760632252 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.761353116 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.75512422 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.755588884 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.755347252 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.756420482 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.755969249 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.756050963 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.755383161 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.755532884 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.755111083 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.756252776 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.755664343 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.755596193 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.755112244 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.756277776 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.758260579 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.756144001 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.75668035 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.756259578 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.756427292 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.756539951 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.756868144 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.756237576 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.75649478 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.756859876 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.755464304 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.756259967 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.75793067 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.75684407 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.756055592 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.75615228 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.75753755 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.758523224 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.756859754 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.757342291 seconds)
  done (took 128.095679302 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.756250667 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.754784202 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.754263636 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.75459623 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.754795755 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.758187799 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.754427651 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757939904 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755174548 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.757390154 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75732746 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.755029102 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755872158 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.758364931 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.757653298 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.755423312 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.758714409 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.755137415 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.757313447 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.759199628 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.758039699 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.75640097 seconds)
  done (took 40.335459254 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.759235432 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.759424637 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.756919366 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.75844263 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.756558161 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.758421062 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.759400243 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.758392845 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760071638 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.755505316 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.756356728 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759385684 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.756528719 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758097271 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.756812352 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.756785787 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.759046036 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.756840654 seconds)
  done (took 33.336468502 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.757766827 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.756663051 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.75910135 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.756458182 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.756398972 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.759119745 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.758473473 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.759580364 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.759770725 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.75746893 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.758697483 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759916957 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.759664601 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.756625224 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7603936 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.757559623 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.760113906 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759008594 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761228786 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.757274566 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.757313212 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.760719552 seconds)
  done (took 40.383589553 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760383574 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.760025217 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.758461294 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.75716898 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.757812096 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.761541598 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.760854343 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.758091008 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.760252006 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.760771151 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758013996 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.762426492 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.757308816 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.7585903 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.758706608 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758934286 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.761238085 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.761269849 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761653217 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.758473009 seconds)
  done (took 36.888332083 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.763317233 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.762621691 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.764267751 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.763177065 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.762377948 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.763545048 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.763342697 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.763964419 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.762234324 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.763754192 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.763329448 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.763069521 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.763847311 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.764245457 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.763269597 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.763242101 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.763768449 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.763534461 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.763339359 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.764997868 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.763798492 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.763071329 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.763824978 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.763511229 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.764635034 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.763741395 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.76318971 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.764740497 seconds)
  done (took 51.07841941 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.763245881 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.763790016 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.760385857 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.76014958 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.760532064 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.759003723 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.759862241 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.761128064 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.763066999 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.760559771 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.762402281 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.763430726 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.764906233 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.763165255 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.763901811 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.763829848 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.763085729 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.761427931 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.762455555 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761029119 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.763046814 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763677398 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.763427786 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.760611792 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761905053 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.763993311 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.761110424 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.761824756 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.765006414 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.762296769 seconds)
  done (took 54.566929707 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.782745665 seconds)
    (2/2) benchmarking "in"...
    done (took 1.782567287 seconds)
  done (took 5.264715937 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.761114636 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766150158 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.764699195 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.763108913 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.761659577 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.763822293 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.764323035 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.762228466 seconds)
  done (took 15.807000652 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.764742003 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.764613252 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.765578532 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.765484428 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.76580195 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.766110642 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.772176589 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.764311805 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.766846589 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.768233737 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.7710626 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.772553974 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.769321762 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.765975486 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.767172324 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.768261681 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.765085436 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.766746657 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.766469748 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.766467357 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.768425305 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.768085727 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.768192501 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.763942172 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.766674172 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.781229556 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.773674359 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.766520429 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.766387513 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.771394731 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.766286888 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.763684745 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.768607018 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.767035308 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.765737285 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.766554935 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.776354918 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.768387612 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.77519347 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.768588006 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.766382396 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.764111817 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.770726413 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.773728444 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.76938099 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.768620008 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.768495601 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.765081952 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.767845216 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.771173304 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.7704566 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.766749412 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.763778953 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.775579361 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.769962445 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.774386871 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.768780603 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.770744237 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.775135767 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.780529105 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.78471977 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.773881777 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.769650255 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.768812814 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.776054648 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.790217781 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.776958108 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.76407285 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.764855173 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.768130413 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.778508972 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.783648452 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.775409821 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.768246847 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.76986527 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.76797151 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.769370863 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.768863603 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.777349127 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.772878625 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.770006843 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.769993891 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.777673778 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.787998072 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.768649096 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.769969571 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.770684317 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.770104668 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.77074198 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.779504551 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.770067659 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.768866399 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.769174685 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.769268716 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.774022407 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.771842224 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.769345905 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.772390601 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.766885603 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.770902796 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.771380849 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.772309673 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.778158325 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.771549232 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.771072774 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.780365759 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.768430798 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.770104276 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.781154047 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.769882627 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.771090189 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.771373338 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.777776135 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.767494678 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.773358097 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.778188919 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.772863704 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.771418099 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.77206851 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.770487436 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.780067623 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.794577043 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.771462392 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.771313284 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.775599172 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.780853477 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.77188457 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.775212814 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.771519851 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.768775127 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.768105436 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.77206092 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.771113058 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.773938256 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.772477364 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.773612201 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.769054814 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.770518483 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.771968734 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.775239804 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.774531581 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.773565482 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.773930023 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.77450276 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.773514512 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.77426569 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.780871928 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.772536282 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.774327384 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.775018392 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.770029249 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.772182313 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.775841725 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.773831363 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.774182154 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.773691362 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.772752399 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.774424281 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.773471429 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.773381242 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.772503922 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.776103928 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.777591059 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.774796053 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.778211226 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.773476679 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.769300922 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.773114621 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.772861989 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.773911437 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.772943844 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.772301318 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.776397924 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.7817441 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.77347932 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.774828512 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.778464508 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.774965275 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.77565114 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.775511196 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.776457045 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.782562628 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.775482473 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.784175178 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.775736332 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.775166269 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.773691201 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.777137559 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.775673858 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.774590089 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.777772574 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.781042307 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.788422025 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.782802403 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.77531849 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.77817873 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.775295801 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.778709722 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.78061803 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.775345878 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.774838389 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.7772746 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.775058912 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.777062763 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.778394408 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.77704457 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.777339864 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.775509101 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.775941648 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.776662524 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.776081424 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.777069063 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.778016367 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.772821776 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.775542916 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.777554006 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.775969421 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.772918753 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.776004372 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.775724793 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.775847572 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.777090553 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.787376344 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.773776722 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.777002042 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.777810596 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.776717734 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.775578671 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.776323871 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.779592796 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.776937402 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.784274872 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.777561681 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.778577022 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.783997376 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.777970936 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.776175388 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.780856977 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.776702349 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.774889902 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.780438441 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.782718815 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.776693347 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.778524605 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.778196482 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.778331944 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.777414557 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.786809806 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.774145908 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.777729728 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.776687735 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.781211951 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.775147279 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.779116544 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.779619693 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.779048337 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.780005797 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.777746047 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.777681461 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.781062925 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.779966325 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.777645616 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.778879588 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.780901189 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.784609937 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.78450583 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.778641338 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.782507302 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.780597873 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.781371924 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.778949389 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.77936318 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.779122356 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.79333337 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.788145265 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.786927275 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.782660094 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.779146668 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.785560324 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.779180057 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.78466621 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.778825095 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.779348479 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.779837796 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.77881712 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.776778301 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.781497178 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.780023398 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.780966466 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.77985585 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.782741605 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.779884657 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.779712804 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.779929065 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.78057552 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.780056923 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.782879343 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.779486777 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.784739938 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.78276214 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.781916499 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.780862737 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788109587 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.782409561 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.783410162 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.779961501 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.780823651 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.782478107 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.783006437 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.781564227 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.783749532 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.787459804 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.783064915 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.791766579 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.780978096 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.792620935 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.782506704 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.785077468 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.788562216 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.780067605 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.78086968 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.782495457 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.783113481 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.788637879 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.784176483 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.783300492 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.785898446 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.782981867 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.782639652 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.781686007 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.783335531 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.782100101 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.78270072 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.793494818 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.782387268 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.78543127 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.785561097 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.779104198 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.783875783 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.782107669 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.781379511 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.789399576 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.782583283 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.78382835 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.782120317 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.78423568 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.780968413 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.785121122 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.782031484 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.779338462 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.782565277 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.791363108 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.783791628 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.786957952 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.782473278 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.79633726 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.783821389 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.790971473 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.785723008 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.784948852 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.784367424 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.782846644 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.787314517 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.783808249 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.787654905 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.785614444 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.784856156 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.785800801 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.784486079 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.788009475 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.78491047 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.785731873 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.78547153 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.793700613 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.804720472 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.785668097 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788306449 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.781298107 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.786041581 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.787920369 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.786171025 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.783604926 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.786108322 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.794459765 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.790424609 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.785566657 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.786445678 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.785545789 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.785197013 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.783659407 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.784703483 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.786071158 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.785853464 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.787960164 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.785615321 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.790914571 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.78557953 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.786138702 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.788468416 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.785289781 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.796845424 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.785767393 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.786691556 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.786162608 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.785504456 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.787078094 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.78786065 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.786425677 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.787330422 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.784857957 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.786685612 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.791938887 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.79087668 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.788980987 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.786351827 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.786621653 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.787522897 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.787312083 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.787754591 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.787552088 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.787491847 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.787754332 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.787910233 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.788584941 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.784556407 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.787724092 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.78807628 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.787154444 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.789527712 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.79273404 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.787800967 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.784273174 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.78729357 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.787445979 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.786528109 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.789163519 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.801413754 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.790556526 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.796690373 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.794565482 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.791568049 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.788878522 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.791785276 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.795212678 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.787888658 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.78998529 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.789203522 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.792112974 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.78924365 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.793144812 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.788691959 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.797487254 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.788264799 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.789893924 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.798119824 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.791927798 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.789282257 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.789332671 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.79223072 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.789647831 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.786172459 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.788227038 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.788451084 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.796907061 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.792993783 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.790367319 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.791458472 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.78707433 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.790113167 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.792469867 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.789170054 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.789948947 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.786302874 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.788893714 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.790241298 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.789191598 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.785413483 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.790513847 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.790174931 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.792036442 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.795031922 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.786948424 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.792448986 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.790018104 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.791166783 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.790871683 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.78918222 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.78853689 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.786047774 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.7902491 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.791216562 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.791207074 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.79522838 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.790254413 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.791284754 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.7911875 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.791649897 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.793659009 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.800644161 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.796159696 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.787920755 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.789512059 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.79232512 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.796656715 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.792421576 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.792191125 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.791995823 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.793112785 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.790226608 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.792457861 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.790523168 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.79410136 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.806330885 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.790912908 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.792471209 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.79229113 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.797142063 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.790993283 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.788533217 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.792584786 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.799296851 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.794721257 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.79921452 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.792183839 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.798521766 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.793959643 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.793495765 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.793866203 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.793676125 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.798837078 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.794793218 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.793461439 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.792508648 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.796018096 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.808965429 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.791447238 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.802062908 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.81926446 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.792976356 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.794139429 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.793198602 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.792429573 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.795191603 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.795446599 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.793038222 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.792809825 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.792809396 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.793714342 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.794279613 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.798950176 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.795086755 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.792464774 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.79197166 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.794014454 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.796213385 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.790125335 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.794082605 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.793338106 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.794935275 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.795803689 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.794356122 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.794229758 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.807438776 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.803417149 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.793480967 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.796083745 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.790992156 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.798393118 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.796282767 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.80242336 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.799582978 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.795274453 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.795326308 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.796511106 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.795155818 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.790550974 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.795073339 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.794560569 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.793791134 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.791549214 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.81012146 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.802273713 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.801816886 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.795989617 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.795776524 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.795535108 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.797777708 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.796342141 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.794859011 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.79814485 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.796377896 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.799721584 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.79566186 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.794361109 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.797362106 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.801105194 seconds)
  done (took 1064.062305975 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.792592493 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.793093241 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.792306535 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.792438172 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.792388837 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.792884117 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.792874451 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.793338187 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.793202749 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.79310909 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.79256311 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.793040383 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.793647305 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.793831222 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794128756 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.793637947 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.793459532 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.793646806 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.79406257 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794515178 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.79316631 seconds)
  done (took 39.387877981 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.795981086 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.793912014 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.793251886 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.796702834 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794426351 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.796330812 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.793008252 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796074147 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.796726238 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794350697 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.796746557 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79705909 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.794052184 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.794262614 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794700047 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.797358404 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.796672541 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.794279826 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.797503088 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.794295229 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.795937251 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.794495527 seconds)
  done (took 41.23008169 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.799016959 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.798763975 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.797110774 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.795509568 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.797495208 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.795309933 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.79961618 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.797831161 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.797100468 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.800017793 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.797089431 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.799240845 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.804601244 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.802389183 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.802099241 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.798239597 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.942422545 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.80087555 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.800628986 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.800561461 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.795757542 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.805864466 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.795689281 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.796583103 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.797577669 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.800206077 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.797986527 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.798230704 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.800966146 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.800048216 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.803446297 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.799313869 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.799540408 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.801151636 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.799792708 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.800302421 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.802817982 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.801033361 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.796930672 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.799635516 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.809987968 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.817319842 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.800798703 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.808425558 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.799699041 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.800509034 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.802327272 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.807730939 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.796786832 seconds)
  done (took 90.095579373 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.799361141 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.800937699 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.797633237 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.798919648 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.799765521 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.8006541 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.799557224 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.799747391 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.796947206 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.797272636 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.799975108 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.797417433 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.797301593 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.80071161 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.801280894 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.797843148 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.799217264 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.7987522 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.798232636 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.799554045 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.798803415 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.801182542 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.801199336 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.799584303 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.800764957 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.798806909 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.79965947 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.801651367 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.799837653 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.798251692 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.802184833 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.80123735 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.802045847 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.800660046 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.799594259 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.802477668 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.801194043 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.799018309 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.80225381 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.799577019 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.802357506 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.802103196 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.801968658 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.801793056 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.799880518 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.799498326 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.79918648 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.799356074 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.79962975 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.802044157 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.802603256 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.801252627 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.802588401 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.799855319 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.801861725 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.802297178 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.799527448 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.800126642 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.801760465 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.799798 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.798934885 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.803599163 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.800859871 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.803387104 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.802835218 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.801503282 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.799997062 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.803325516 seconds)
  done (took 124.161773229 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.804556024 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.804837477 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.804643013 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804379338 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.805363644 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.805133756 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.804376432 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.804522306 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.805881105 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.805006497 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.805149181 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.804580682 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.805998302 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.805121592 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.805749587 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.8073749 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.806403873 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.806963169 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.806295447 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.806069489 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.805445725 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.807383609 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.806342676 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.806425429 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.806701706 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.806076246 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.806552517 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.805911439 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.806319512 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.806157001 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.806554789 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.806156739 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.806541178 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.806401812 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.807256312 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.807358792 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.806311274 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808417906 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.807344182 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.806889011 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.806718207 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.806753897 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.806379125 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.807046537 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.807214601 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.806673876 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.807700089 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.80825647 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.806803725 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.808321491 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.808381741 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.808475793 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.80791554 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.807509916 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.807800296 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.806834996 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807831682 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.808013267 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.806790398 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.808196763 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.807656349 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.807736462 seconds)
  done (took 113.746265553 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.806712736 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.80691647 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.805263359 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.804522937 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.806911171 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.804552725 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.807664962 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.807326425 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.806938631 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.808082308 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809667078 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.80683106 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805487462 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808327294 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.804766097 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804485143 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.804315712 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.804435184 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.808844675 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.805508281 seconds)
  done (took 37.869042452 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.805145466 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.808412402 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.804793551 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.805313983 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.807159167 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.805761496 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.807502091 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8077838 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804976282 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807708831 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.807565756 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.807860284 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805599065 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.806690562 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.808936401 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.806517038 seconds)
  done (took 30.650197594 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.806634288 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.807923237 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.810395636 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.809074048 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.805861133 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.806085451 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.80903399 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.806141248 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.807258151 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.809124414 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.808687485 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.809650635 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.808531704 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.810574951 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.807321875 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.809983918 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.805847608 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.806962487 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.809519732 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.811597499 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.807880958 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.807674624 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.810491594 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.80986727 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.807874605 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.809546119 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.80711839 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.808236891 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.807987593 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.80973649 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.80805099 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.808478639 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.808849092 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.808185565 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.811680232 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.808124023 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.811851605 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.810739701 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.81084324 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.810530884 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.8102896 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.808166174 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.810876089 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.811164726 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.808983844 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.811340034 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.80864337 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.810449965 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.808127627 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.808746988 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.810655595 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.812274048 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.812036413 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.811457577 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.810866821 seconds)
  done (took 101.248454513 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.810977703 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.811277659 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.809515059 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.81058193 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.811115723 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.808165506 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.810634758 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.810366179 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.808892574 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.811466138 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.809780734 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.811441254 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.808967686 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.813529456 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.809950838 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.811753805 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.80864872 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.809631669 seconds)
  done (took 34.332135014 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.810565187 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.809934497 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.812521412 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.809920605 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.810110012 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.812606585 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.809711046 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.811345789 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.81262758 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.810913107 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810072902 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.813910649 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812740952 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.812409166 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.811019596 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810632175 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.81299423 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.812711091 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.809756129 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.809676258 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.814290228 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.813818913 seconds)
  done (took 41.601477801 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.812583558 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.812424736 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.830172894 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.853550721 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.843207299 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.812357501 seconds)
  done (took 12.711687257 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812509224 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.812836476 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.811071699 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814938372 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812521412 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81053024 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810538495 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811336369 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814161484 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812462369 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811056476 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814264883 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813943578 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811197595 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813750794 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813985277 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811655173 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811550061 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812383699 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814475624 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811798257 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814925714 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812150969 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81208092 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81281618 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813371463 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815530758 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813043588 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81260493 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815711231 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814644459 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81216299 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8149062 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812470311 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816349403 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815596846 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812796976 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815775879 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815466766 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813560743 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.816539465 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816484467 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816671277 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812819826 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816780783 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812985686 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81347918 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81480603 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813784097 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816814311 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815949833 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813159123 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816816882 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81591639 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816564136 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816746353 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814448243 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81307681 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816718346 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814635259 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813310638 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816430649 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814746282 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815380393 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81715588 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814626456 seconds)
  done (took 121.475947386 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81337056 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.814122203 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81491977 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8156805 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815117659 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814812913 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814709035 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81618123 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814925207 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815120519 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81757734 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814890056 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815303896 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816575555 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814913231 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815621683 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815045302 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816327448 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815619422 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818994144 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815362489 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814741738 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815784245 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816184341 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817458805 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818484741 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816504829 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815710902 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815900795 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817353807 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815172639 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815692038 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815389984 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.815866782 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816027423 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816685708 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815980905 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81706072 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815907974 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817875025 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816098678 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818345088 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815763378 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816133245 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817526239 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816224103 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816505967 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816623325 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816443915 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816925434 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817610337 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817727183 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817089413 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816528101 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816837036 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816910921 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81753738 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817706328 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816959354 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820148118 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817166299 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817033149 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821019263 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817452356 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818800281 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818332392 seconds)
  done (took 121.639724947 seconds)
done (took 2479.580944268 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.896484086 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.813535248 seconds)
  done (took 15.463742998 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.979835554 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.935615879 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.818232482 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.827509684 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.819154989 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.838926653 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.818908056 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.820176567 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.819287623 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.818249382 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.818833044 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.004922524 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.83382301 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.819819114 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.819502502 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.912369512 seconds)
  done (took 51.461772758 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.821872035 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.823583732 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.833624117 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.823140753 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.820061243 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.83233283 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.854245638 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.827050674 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.854377292 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.833478645 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.888904086 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.827489779 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.823336428 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.870989455 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.836189393 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.83485052 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.9088907 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.892654524 seconds)
  done (took 34.959225535 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.897210576 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.826573542 seconds)
  done (took 10.482177345 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.815600837 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.822703024 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.823722576 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.833368803 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.845894333 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.835884867 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.854105422 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.8552065 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.833927027 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.853453762 seconds)
  done (took 70.132323353 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.828732903 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.822222765 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.822144205 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.82255482 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.815451746 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.817665002 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.821737336 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.822076751 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.497800901 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.856877774 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.828253543 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.827815636 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.823139842 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.822979388 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.821019773 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.842817698 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.9612046 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.821153316 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.82042356 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.826469861 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.823286646 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.875299132 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.83482213 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.821622641 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.852855852 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.494389483 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.830504374 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.828333913 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.939585524 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.819641681 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.822727982 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.823543934 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.827271366 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.206530757 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.10435161 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.821543956 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.831546261 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.830539895 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.820551022 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.956790706 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.824874701 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.829534778 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.816923473 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.08402438 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.905554402 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.865332684 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.187489718 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.826615977 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.827620776 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.854514486 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.825905327 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.825197944 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.836263433 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.333066654 seconds)
  done (took 130.089528867 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.818446126 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.108618591 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.972057656 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.819135536 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091830435 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.024469187 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.757969495 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.868909745 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.820831933 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.022929407 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.034136602 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.929977136 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.819704985 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.8186713 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.824088173 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.818148459 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.979603775 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.885599647 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.82162132 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.818938834 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846480947 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.027009821 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.941010184 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.821695269 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.841606257 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.031006955 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.942069409 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.927062341 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.265856504 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.819001971 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.885194746 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.822327644 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.821538539 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.819247228 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.974099683 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.918913095 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.909454161 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.821621864 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.819510038 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.818583222 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.480909935 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.015466869 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.916782168 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.961904041 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.969283839 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.024497071 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.470020706 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.821426808 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.463049318 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.984244566 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.033111191 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.026823149 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.944242712 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.820401699 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.979121937 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.819567326 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.821268166 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.056750295 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.96488149 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.922403192 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.819404147 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.820698817 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.821408174 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.063364838 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.825143002 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.919505936 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.821792441 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.823670704 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.919255378 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.924895585 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.962946409 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.035139054 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.857417501 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.545321579 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.036406837 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.036564032 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.887690024 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056070721 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.826692902 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.822427584 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.909534368 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.573629466 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.021813661 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.070384591 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.045598222 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.857712265 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.419820302 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.822167883 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.015711428 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.006713461 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.015711565 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.96960057 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.971894769 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.141505068 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.820369582 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.821995841 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.058169216 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.960713702 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.826121858 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.182053723 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.057543562 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.439903535 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.84624706 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.1203033 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.955644932 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.141504287 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.4506648 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.825709365 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.991618141 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.861679962 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.822540709 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.824648081 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.014527441 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.63763879 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.822823571 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.564208744 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.889008006 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.825063374 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.025228421 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.826483323 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.033386268 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.826001753 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.06043978 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.27291395 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.858988727 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.995011378 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.968762764 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.620325378 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.071920137 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.067715324 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.942888101 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.095678099 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.548168922 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.827841003 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.098147756 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.825933315 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.824928674 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.991589407 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.823507983 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.972827322 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.827366635 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.051858603 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.849695056 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.980376601 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.828271021 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.056214292 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.861118696 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.875456624 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.828045775 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.95175266 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.825723176 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.71374884 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.976627334 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.824295403 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.824664815 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.239971093 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.825277208 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.972923745 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.056431319 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.850610195 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.894406419 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.3515954 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.823934858 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.914572246 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.853599607 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.438935235 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.826572424 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.038115863 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.800985845 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.269456856 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.827387424 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.065700542 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.060467806 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.828773074 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.824386526 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.564230873 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.529860289 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.826084146 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.986151657 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.277763925 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.474571095 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030284349 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.828631419 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.955693454 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.827526448 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.902491562 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.170698473 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.827641605 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.826569776 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.827504412 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.829397652 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.828633165 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.036087788 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.858835488 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.324695019 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.96387615 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.043537293 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.138186816 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.047737601 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.873594 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.827769675 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.074483323 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.832156699 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.894311816 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.831247876 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.851983279 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.061278744 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.835643617 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.06335844 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.081569094 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.733193236 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.878708502 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.831891578 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.827699963 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.826067906 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.974412316 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920656522 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.831157121 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.829910006 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.941303664 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.948739245 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.022100778 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.426525523 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.945645331 seconds)
  done (took 888.532809913 seconds)
done (took 1202.874857786 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.832600214 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.829989539 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.820186635 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.830726891 seconds)
  done (took 29.083093335 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.835324108 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.834483409 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.835540919 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.833602814 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.838177866 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.832663662 seconds)
  done (took 12.777497662 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.857848009 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.826585235 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.830583303 seconds)
  done (took 21.281583871 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.901839248 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.233613774 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.936882156 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.272893822 seconds)
  done (took 10.112297557 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.837810671 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.837376141 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.836784859 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.837601327 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.839123785 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.838140479 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.837028401 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.840267877 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.841413695 seconds)
  done (took 18.312934326 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.005005973 seconds)
done (took 97.339522774 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.485024681 seconds)
    (2/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.048287003 seconds)
    (3/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.834893302 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.217566379 seconds)
    (5/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.047529982 seconds)
    (6/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.02226063 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.81932431 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 4.242044848 seconds)
    (9/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.856959236 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.869807036 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.853919111 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.878232237 seconds)
    (13/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.856046111 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.815601995 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.201912547 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.074038695 seconds)
    (17/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.970342226 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.048447778 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.187685631 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.047692409 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.832225718 seconds)
    (22/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.848903363 seconds)
    (23/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.939412123 seconds)
    (24/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.81346769 seconds)
    (25/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 3.46694081 seconds)
    (26/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.924807039 seconds)
    (27/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.829207298 seconds)
    (28/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.096124014 seconds)
    (29/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.858746834 seconds)
    (30/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.998508554 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.935044916 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.483669707 seconds)
    (33/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.4067143 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.833171632 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.030217269 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.862055935 seconds)
    (37/309) benchmarking ("sort", BigInt, false)...
    done (took 6.831494935 seconds)
    (38/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.916793044 seconds)
    (39/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.957561908 seconds)
    (40/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.262121978 seconds)
    (41/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.981895604 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.96018669 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.609677175 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.833135017 seconds)
    (45/309) benchmarking ("map", identity, Int8, true)...
    done (took 3.315428217 seconds)
    (46/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.916886683 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.709829762 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.210932289 seconds)
    (49/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.161145614 seconds)
    (50/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.177727506 seconds)
    (51/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.256090045 seconds)
    (52/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.064448915 seconds)
    (53/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.81998629 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.091783838 seconds)
    (55/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.902597349 seconds)
    (56/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.839279729 seconds)
    (57/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.341822116 seconds)
    (58/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.886174011 seconds)
    (59/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.918862026 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.940299264 seconds)
    (61/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.20290013 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.109395356 seconds)
    (63/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.866751807 seconds)
    (64/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.932005765 seconds)
    (65/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.511813492 seconds)
    (66/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.835959399 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.512904409 seconds)
    (68/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.869845484 seconds)
    (69/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.91748036 seconds)
    (70/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.92088067 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.821522966 seconds)
    (72/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.980009223 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.158013332 seconds)
    (74/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.844353443 seconds)
    (75/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.048565193 seconds)
    (76/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.896366741 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.121850607 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.884769814 seconds)
    (79/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.916957423 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.165064741 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.833184291 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.833006021 seconds)
    (83/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.925062697 seconds)
    (84/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.999818016 seconds)
    (85/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.123474519 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.021918755 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.856632099 seconds)
    (88/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.984943272 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.82161795 seconds)
    (90/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.830016246 seconds)
    (91/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.932405886 seconds)
    (92/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.834500793 seconds)
    (93/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.93101625 seconds)
    (94/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.524775558 seconds)
    (95/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.818530105 seconds)
    (96/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 9.529290963 seconds)
    (97/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.985553406 seconds)
    (98/309) benchmarking ("sort", Int64, false)...
    done (took 5.577569676 seconds)
    (99/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.146299538 seconds)
    (100/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.026273424 seconds)
    (101/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.966753041 seconds)
    (102/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.818873574 seconds)
    (103/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.853144265 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.830791737 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.16297577 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.125695554 seconds)
    (107/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.991419663 seconds)
    (108/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.413648914 seconds)
    (109/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.916942109 seconds)
    (110/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.835108898 seconds)
    (111/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.906413815 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.474936029 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.909163329 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.139102825 seconds)
    (115/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.824826235 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.116047154 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.13137836 seconds)
    (118/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.938103853 seconds)
    (119/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.215639568 seconds)
    (120/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.507201739 seconds)
    (121/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.825136608 seconds)
    (122/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.911838507 seconds)
    (123/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.954977591 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.08999675 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.837654187 seconds)
    (126/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.122791341 seconds)
    (127/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.935892813 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.421266947 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.910724667 seconds)
    (130/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.193602433 seconds)
    (131/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.868298038 seconds)
    (132/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.996046536 seconds)
    (133/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.949027149 seconds)
    (134/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.217986618 seconds)
    (135/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.122701014 seconds)
    (136/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.824569622 seconds)
    (137/309) benchmarking ("sort", Int8, false)...
    done (took 4.801340958 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 2.282614938 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.85846234 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.103856221 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.859565539 seconds)
    (142/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.838020242 seconds)
    (143/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.830315659 seconds)
    (144/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.990966281 seconds)
    (145/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.840221825 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.11236579 seconds)
    (147/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.965834025 seconds)
    (148/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.940603362 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.089928367 seconds)
    (150/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.898271129 seconds)
    (151/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.338411991 seconds)
    (152/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.246189712 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.845812786 seconds)
    (154/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.722384692 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.966453461 seconds)
    (156/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.992935699 seconds)
    (157/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.9773996 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.436076105 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.915263716 seconds)
    (160/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.17026002 seconds)
    (161/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.551083125 seconds)
    (162/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.182041327 seconds)
    (163/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.252916952 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.220481285 seconds)
    (165/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.839843799 seconds)
    (166/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.039610827 seconds)
    (167/309) benchmarking ("sort", Float32, false)...
    done (took 5.605697054 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.080888531 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.824917882 seconds)
    (170/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 3.188716819 seconds)
    (171/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.835938977 seconds)
    (172/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.909751459 seconds)
    (173/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.870585049 seconds)
    (174/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.836650708 seconds)
    (175/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.791988335 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.743667415 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.841271736 seconds)
    (178/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.246993002 seconds)
    (179/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.784184916 seconds)
    (180/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.922002538 seconds)
    (181/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.858635129 seconds)
    (182/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.383914541 seconds)
    (183/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.438409064 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.703500351 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.838141124 seconds)
    (186/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.02918907 seconds)
    (187/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.441955744 seconds)
    (188/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.271097211 seconds)
    (189/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.942780285 seconds)
    (190/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.237051961 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.078461795 seconds)
    (192/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.151813443 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.803306069 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.840928459 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.9422923 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.087540512 seconds)
    (197/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.946271924 seconds)
    (198/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.942125133 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.866317658 seconds)
    (200/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.098397774 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.984597737 seconds)
    (202/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.202410599 seconds)
    (203/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.842271995 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.893236227 seconds)
    (205/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.034117882 seconds)
    (206/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.933745735 seconds)
    (207/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.958198743 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.487231382 seconds)
    (209/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.2117652 seconds)
    (210/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.138646177 seconds)
    (211/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.107856661 seconds)
    (212/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.004347592 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.901929624 seconds)
    (214/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.922140153 seconds)
    (215/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.840745004 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.892015115 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.911712514 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.933883404 seconds)
    (219/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.823954399 seconds)
    (220/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 3.071952247 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.110728124 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.555218136 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.047796876 seconds)
    (224/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.94409836 seconds)
    (225/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.979574072 seconds)
    (226/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.864501866 seconds)
    (227/309) benchmarking ("sort", Float64, false)...
    done (took 5.635333188 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.759670624 seconds)
    (229/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.957535781 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.225260484 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.16508578 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.951514049 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.852970348 seconds)
    (234/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.128809199 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.863747683 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.134528999 seconds)
    (237/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.908209213 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.07736702 seconds)
    (239/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.968127391 seconds)
    (240/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.238899315 seconds)
    (241/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.865688669 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.880417981 seconds)
    (243/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.840568238 seconds)
    (244/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 4.559174483 seconds)
    (245/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.14645524 seconds)
    (246/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.139767702 seconds)
    (247/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.866468426 seconds)
    (248/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.007580472 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.766467269 seconds)
    (250/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.930100781 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.826504863 seconds)
    (252/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.140330898 seconds)
    (253/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.40896761 seconds)
    (254/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.838117944 seconds)
    (255/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.046737187 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.842613835 seconds)
    (257/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.220091301 seconds)
    (258/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.354619916 seconds)
    (259/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.851215843 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.736883512 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.8463643 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.720128287 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.93707845 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.828039932 seconds)
    (265/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.876480934 seconds)
    (266/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.266374117 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.730638073 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.868255931 seconds)
    (269/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.825954074 seconds)
    (270/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.503117315 seconds)
    (271/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.350224004 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.227569665 seconds)
    (273/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.341007239 seconds)
    (274/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.976529404 seconds)
    (275/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.36300692 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.846059294 seconds)
    (277/309) benchmarking ("map", abs, Bool, true)...
    done (took 3.226431421 seconds)
    (278/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.660255566 seconds)
    (279/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.862000679 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.843764297 seconds)
    (281/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.872115956 seconds)
    (282/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.039515852 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.933929898 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.924931417 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.190957075 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.109630449 seconds)
    (287/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.964683182 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.957123707 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.000312431 seconds)
    (290/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.033060721 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.145208563 seconds)
    (292/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.986326684 seconds)
    (293/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.14711244 seconds)
    (294/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.126833643 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.885060204 seconds)
    (296/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.844702391 seconds)
    (297/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.841389059 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 4.474003714 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.105473492 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.940762973 seconds)
    (301/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.863902657 seconds)
    (302/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.781563291 seconds)
    (303/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.949850072 seconds)
    (304/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 3.333867606 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.851759484 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.8708952 seconds)
    (307/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.380790404 seconds)
    (308/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.972483946 seconds)
    (309/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.438362643 seconds)
  done (took 1013.850569014 seconds)
done (took 1015.635910788 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.893480064 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.870410387 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.854645649 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.87621877 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.966720712 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.88326173 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.865944238 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.856834696 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.903788753 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.902526792 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.854418904 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.883409631 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.856345133 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.855481039 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.854798125 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.868996047 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.158072211 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.877346502 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.87394595 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.865171912 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.870643875 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.853679687 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.904002069 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.883106802 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.859755991 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.857250867 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.859063583 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.874449741 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.96788332 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.858867354 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.85962785 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.86589094 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.157623274 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.87314035 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.850003273 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.875660665 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.866296233 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.86400675 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.858556958 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.887377333 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.289424947 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.859593132 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.854326098 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.852943627 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.856644087 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.858909978 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.859314573 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.863809234 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.871482952 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.868853226 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.286695384 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.872935937 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.854942912 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.852970233 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.864405206 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.853331707 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.853674968 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.862139001 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.866317762 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.862894548 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.137796028 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.870807411 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.84695178 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.860191957 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.851659772 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.309396677 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.846483218 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.844803006 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.272212352 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.851417481 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.307254886 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.856057905 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.840181919 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.852652905 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.870527198 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.140399149 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.85510053 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.833705952 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.8428069 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.833781182 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.843659611 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.848003272 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.839483537 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.833983189 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.847142797 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.860721634 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.842634674 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.836620582 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.838173877 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.848538737 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.836567945 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.841621977 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.832273861 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.826508141 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.837310528 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.830914885 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.831140574 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.831919613 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.833904193 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.833030771 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.2503406 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.846219644 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.821074262 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.823071383 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.818170588 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.832436796 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.24488069 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.825160377 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.841592727 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.864492825 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.817872721 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.106089432 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.839987848 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.833755749 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.828469232 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.818337668 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.811911848 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.108198125 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.265681802 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.839387767 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.817797428 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.815345998 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.833069383 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.81801637 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.813958739 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.11472631 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.835840283 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.830600612 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.936312357 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.826169742 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.846471083 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.810170958 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.816051868 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.839519101 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.827096011 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.844038239 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.814438111 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.827051936 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.827540135 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.807375514 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.821530392 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.822109908 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.810510211 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.814901111 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.804880857 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.842427027 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.823549872 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.822601 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.830919579 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.930650471 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.806474724 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.101272316 seconds)
done (took 288.759215725 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.873345321 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.799097319 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.900791298 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.80386033 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.88724325 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.886924347 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.801410936 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.799376537 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.799473528 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.207736484 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.799922969 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.802273587 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.799289826 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.798817994 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.885114468 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.800631968 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.797725506 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.142226344 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.801796987 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.872904242 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.793596614 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.797229831 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.800751656 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.180386638 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.799000254 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.794485628 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.870321535 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.799608904 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.145366313 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.798236873 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.793938438 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.146271588 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.888629315 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.817942989 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.81024653 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.807565159 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.884730271 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.803666378 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.88204813 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.88205042 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.904544178 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.842145667 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.802722484 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.794348799 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.804161467 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.803157301 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.797726563 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.828647776 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.803029361 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.7990311 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.141684691 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.810842463 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.810276982 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.79939996 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.799065429 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.823663761 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.798970195 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.803656997 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.890411025 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.803244694 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.863542727 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.182084684 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.206293176 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.801937131 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.79985192 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.800719734 seconds)
  done (took 179.809986909 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.868721253 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.875966526 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.870319414 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.804628082 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.853080813 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.874748259 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.805513468 seconds)
  done (took 14.688254674 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.809525432 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.802181 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.860279909 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.852477559 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.802589927 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.953093623 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.802819579 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.814486776 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.800363217 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.85641006 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.805006826 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.803929774 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.810009032 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.796104627 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.852512238 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.815286733 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.918968732 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.804364214 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.804475943 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.96023514 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.810712877 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.811334607 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.857359074 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.814992979 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.805904643 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.809297828 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.387879994 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.805403472 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.801159031 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.80354238 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.800169261 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.84646437 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.804385021 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.799278606 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.80159777 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.921706041 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.804646387 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.801188214 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.804040545 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.805405447 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.803119217 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.804944799 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.803890217 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.800734622 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.80415396 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.827702157 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.804132487 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.803938815 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.804473562 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.804030102 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.85542603 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.80485501 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.801920639 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.802179701 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.861072089 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.812131964 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.806995896 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.802635364 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.22385484 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.801502902 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.960959355 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.852079905 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.804777537 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.853175631 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.803976935 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.805102423 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.80264905 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.803688031 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.858852115 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.803870287 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.851963856 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.801567766 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.962824235 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.827522696 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.804950727 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.806060925 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.80672525 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.80537106 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.805172247 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.810876367 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.80172655 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.805764974 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.810679237 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.801242202 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.801417896 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.918223336 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.912753757 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.801449359 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.81809562 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.811238851 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.801424696 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.857715823 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.803881609 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.801691659 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.863954547 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.920351235 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.861044105 seconds)
  done (took 199.819122524 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.809841231 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.812139538 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.806044505 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.820646328 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.805152071 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.805345582 seconds)
  done (took 12.597462443 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.807190451 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.80599682 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.805225047 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.805255053 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.806887759 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.806459138 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.807291307 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.807073971 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.810016085 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.805291183 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.806679934 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.807083946 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.807714149 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.807255374 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.807562422 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.806038409 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.807991762 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.803666826 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.806495363 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.808152374 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.960949584 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.807097328 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.807288545 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.80753642 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.810696498 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.806058843 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.815122633 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.806458047 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.806506335 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.814821789 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.809914559 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.808035264 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.807079942 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.813387446 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.811942573 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.807463403 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.810406024 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.808656077 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.805266026 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.808862599 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.80881185 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.808393727 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.807336271 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.807566939 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.808863082 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.811680259 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.811143512 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.815035023 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.809440661 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.80818884 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.808779093 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.807011654 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.808612444 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.808716563 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.812102944 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.81256835 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.812094313 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.809410768 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.809794229 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.809350305 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.808184036 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.809778915 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.810682269 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.813114816 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.806807708 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.809960675 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.809906816 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.813706467 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.809312901 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.808323193 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.809961721 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.806376563 seconds)
  done (took 133.120808732 seconds)
done (took 541.784599011 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.067406526 seconds)
  done (took 8.809708162 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.923692115 seconds)
  done (took 8.826370496 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.266844106 seconds)
  done (took 10.068471531 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.878317714 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.892901136 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.875352691 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.867050433 seconds)
  done (took 29.32350934 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.969869723 seconds)
  done (took 8.771347798 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.87838294 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.864892134 seconds)
  done (took 15.580069712 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.898066231 seconds)
  done (took 8.700477898 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.904156408 seconds)
  done (took 8.706311378 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.877198994 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.873935383 seconds)
  done (took 15.565417705 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.85309511 seconds)
  done (took 8.653856939 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.566687641 seconds)
  done (took 11.378811776 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.868656484 seconds)
  done (took 8.683326111 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.938208005 seconds)
  done (took 8.740106833 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.912688239 seconds)
  done (took 9.714993224 seconds)
done (took 163.26443722 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.867656155 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.868876581 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.867866159 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.867577953 seconds)
  done (took 29.27124795 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.907567075 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.907296129 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.909378522 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.916966208 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.909547687 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.907241469 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.899037011 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.90055972 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.917073373 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.907691166 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.909218643 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.909272206 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.90760628 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.900197051 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.908827993 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.907779878 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.918385176 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.908016531 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.899993097 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.910410931 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.873464801 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.918755238 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.911065163 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.876383194 seconds)
  done (took 47.543832831 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.069831897 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.944822338 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.027686512 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.926759721 seconds)
  done (took 9.768619196 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.925144985 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.927291371 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.93915426 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.975549479 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.021833433 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.936168905 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.901420926 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.894880346 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.881238345 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.927963151 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.003390259 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.944594825 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.01226932 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.8751182 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.060561109 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.875360019 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.874852635 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.927354516 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.979768202 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.99224572 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.876154468 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.926801263 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.93045382 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.945800379 seconds)
  done (took 48.358233809 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.873572954 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.882801938 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.879635568 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.874230733 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.87390259 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.87484525 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.881681134 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.875992231 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.896358035 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.875322522 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.874089199 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.875854669 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.874466463 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.875105701 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.874934543 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.886702462 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.88846084 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.875218173 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.878866333 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.882190491 seconds)
  done (took 39.37791886 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.86915892 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.813232944 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.220965478 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.125835309 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.869854363 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.870416768 seconds)
  done (took 32.573409366 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.886678741 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.938383761 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.881622637 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.930642463 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.010892883 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.883526123 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.877137871 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.942309228 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.981838025 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.943539036 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.894758186 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.901405993 seconds)
  done (took 24.876934604 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.872038552 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.872913645 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.872237438 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.887894422 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.887400811 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.886227457 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.885404936 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.871069959 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.888211266 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.89477089 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.885764022 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.890065436 seconds)
  done (took 44.401624597 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959283521 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.91719808 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.915049429 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.556994365 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.250843453 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.084917664 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.555527836 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.220913346 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.875381072 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144921077 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.996697724 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975406017 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.12958912 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.235061176 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.900816894 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.338822654 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.173681785 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080261612 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90372927 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.579906867 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939692114 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.922958314 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.643104355 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.931783253 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.085040446 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.007867094 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.134575595 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.874611619 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00985886 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912644759 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884281427 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.873111664 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147292354 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263949732 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980697909 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884210824 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.486982909 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.599139042 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.865562859 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.686130438 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.649495882 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.008159913 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884929578 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875926676 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.808817303 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.89424538 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246381231 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.878307318 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.586857426 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.874169999 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888260264 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968046099 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.876845899 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.693680072 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788209261 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.872427547 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.870686691 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879535366 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.440779625 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.002113205 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.948929425 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.841808011 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.966024109 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.65258776 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263744484 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.02746222 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.880345081 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.887002663 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81178164 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.664893105 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932400618 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210549136 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.900441435 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.526103477 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191591006 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.043703925 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.818489113 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14558424 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.278677579 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.843643208 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106199371 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878177843 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814485662 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.824135401 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.812869981 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144344852 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916463278 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.661151659 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921063973 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.224471384 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.888219131 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897757542 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903461162 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.101084822 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.76367206 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877986996 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.774627456 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.02453793 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901839334 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.218365406 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815181873 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.88072436 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134893919 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.09159054 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.826706984 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.370487554 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042975714 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.312663141 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.92643514 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.91420793 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.920639683 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.151181877 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937037306 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.027959794 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933397382 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.880826651 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177331351 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.336544583 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.010442424 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.035699437 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.002795507 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.203385243 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909332067 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962671005 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.889942691 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.880394448 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.697805703 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.431586628 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.880831973 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.884537483 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.827902313 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.920709607 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.882462545 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829115694 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.503137233 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.020807657 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.89495551 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.102967667 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.318695322 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186085919 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82190627 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.230277399 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.973031235 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.10541653 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.52953415 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.965813853 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143199738 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.840462677 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.854103234 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923949944 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901799355 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979576555 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904980492 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.90608114 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.169813756 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.888333611 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.886925105 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.715149731 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.918456193 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884098182 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.887461956 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.631856414 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158571551 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.910485096 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.889545989 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.774174751 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.896947118 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948762684 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.889555329 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.89299421 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.420298454 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.593246438 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.889532062 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.468701014 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107545635 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894629481 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.69264734 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999606307 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.971839295 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.159434392 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942517035 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.819250107 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.594854983 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.578337933 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885037906 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.820403408 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.885627765 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893715514 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.896298285 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.079430916 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.159602086 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931686233 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.61078788 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.927239044 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897292276 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.890889557 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885964613 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.393516168 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.040453753 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.946173738 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.927732757 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030844974 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.899388174 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.820549492 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.890528753 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892340657 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.887960773 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.887250047 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920238916 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.601058553 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25952702 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148039719 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.495093089 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899186766 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.662126961 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.946541687 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.889510758 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.650050195 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.077775314 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.966314153 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899014417 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.897113807 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.680087641 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.593853868 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.458302102 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196340529 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.189176936 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320002266 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 4.96551136 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.912922766 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.228228545 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820617593 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.445528827 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.946867305 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.235157609 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831308696 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976584806 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.536217572 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.237576147 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901606826 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115393061 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276832917 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.707738085 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037850091 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101170318 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924139272 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.91164609 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.844067435 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.4117319 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034680649 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.634507272 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102461768 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23425864 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.649718168 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.020167551 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.887797934 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.587025663 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977357036 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.599809872 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.063362512 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.956483637 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.911907338 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372632728 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.895412979 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.112718022 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232312992 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.925154952 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.009688364 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825750227 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.899780652 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.900385413 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.892857871 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.882859987 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.77513511 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.144144009 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902565189 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826027741 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.880470125 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16981258 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.807969687 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.895227536 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889892997 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189639878 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.308586398 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061122885 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.868062289 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.402006174 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899616935 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.826683544 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824493649 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.585541256 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.896209736 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.867856488 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098779789 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.995316169 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.805863426 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.840184486 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.136529998 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.147589109 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.905269343 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.168163789 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167141387 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.589415739 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917200796 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.992246786 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.650207579 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.009361793 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.892137447 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.126077796 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.64395671 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.117916262 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.95832399 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.845873564 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.892922601 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.106217168 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.893521905 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.878593243 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133397168 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.617824624 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.010655206 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208727374 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96699257 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.88706783 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.944268983 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.985344715 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901837658 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974756847 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904234576 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.90188416 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.903672708 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940163053 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.899231958 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.024899898 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.907620299 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991637744 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.054256579 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.414889318 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.901185392 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17078692 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25926104 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.218237132 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954141534 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.894863378 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90330736 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830087774 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04411071 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.121847671 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167406765 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.027094828 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.012353289 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918781945 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.650342993 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.98611724 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133062729 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170849197 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.790273498 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.275917965 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.932426526 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.89669815 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905016722 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.106818954 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106196467 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200944915 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.03660763 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.854648964 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.260706195 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170613036 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.895532243 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.897256861 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.487138172 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.029870578 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.59713192 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.939660737 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.877626526 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176763112 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905930543 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279627071 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.918960426 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.0531707 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.670301898 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.714769129 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.187319418 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.890833418 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.961298982 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.183783852 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.28305229 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211174405 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964407027 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909569458 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.012304722 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04409194 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.779419332 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.896895618 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.900383397 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.947040416 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.607808034 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.909128137 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17404005 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208540505 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.896035514 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.785722028 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922886683 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.908010452 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.120360078 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165959986 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.151639713 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90816724 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.903804097 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.713549533 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.173522022 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957338427 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833201915 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.903289759 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008253263 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.147223351 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917790293 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.351182947 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.610955211 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168871969 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.901434904 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920373915 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.930537688 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.257379611 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223838945 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.431096271 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105114838 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.491607923 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.349698262 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196378591 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.905967174 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.938771704 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199142764 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.903638181 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.856879958 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933799457 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.171622363 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209601627 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.010680367 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.620029088 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.869803843 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.243798904 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.458012156 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83904581 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.911100508 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.96144386 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.901339298 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.029448516 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912996735 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.817570276 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.936226475 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.676804779 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.180271432 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.906289435 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.89035187 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.684984809 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.068467916 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929100825 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044207834 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903196431 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.577355124 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.250375993 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157889366 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.864643322 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.905821066 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.90573812 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902385405 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.888908819 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.098865666 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.098385334 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185842861 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.894858945 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.935796387 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.905624617 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.119012417 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114187966 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.870422547 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04740631 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.860283603 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939611884 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.811657943 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.404900484 seconds)
  done (took 1681.655322255 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.933303679 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.956112802 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.977476072 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.927989997 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.939750964 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.971497491 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.963954637 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.918776283 seconds)
  done (took 57.428108613 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.903382821 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.122952771 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.912942118 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.904033645 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.911919846 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.903480886 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.066624198 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.910751226 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.911454167 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.911650108 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.90388275 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.90057724 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.206863666 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.922008584 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.901113987 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.888641528 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.908017617 seconds)
  done (took 74.933614315 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.900300478 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.092496676 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.928391512 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.911660721 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.893827769 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.916872138 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.676904126 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.912750308 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.900026243 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.003913932 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.533637737 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.896324627 seconds)
  done (took 87.404808217 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.903648307 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.901266041 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.901179121 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.90099946 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.901747748 seconds)
  done (took 11.342478602 seconds)
done (took 2190.76158579 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.148705007 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.113049794 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.117395995 seconds)
  done (took 6.061857464 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.038371298 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.087566254 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.205394579 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.211703414 seconds)
  done (took 10.37226509 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.175482923 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.264258299 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.092654666 seconds)
  done (took 8.359160835 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.283509314 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.893844669 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.995655232 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.886621552 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.885623762 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.886015496 seconds)
  done (took 22.483449672 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.888827724 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.890260104 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.888050618 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.890637726 seconds)
  done (took 9.37869622 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.86942161 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.612462577 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.868522359 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.884865616 seconds)
  done (took 21.056867817 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.633574791 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.644477315 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.628184141 seconds)
  done (took 9.727241129 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.532309045 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.83635769 seconds)
  done (took 9.188133843 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.170622567 seconds)
  done (took 4.014346798 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.039831969 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.175615269 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.375630152 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.414043518 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.478542068 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.756085119 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.208349253 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.141083653 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.30752068 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.345981282 seconds)
  done (took 25.086607245 seconds)
done (took 140.880844921 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.281192196 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.146133916 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.109296556 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.238989122 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.136251223 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.109049739 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.121384889 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.222589852 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.74828287 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.748415584 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.242141565 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.131138314 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.277596771 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.140732837 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.279418608 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.142994565 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.128322777 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.292281927 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.942480627 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.174369148 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.123537171 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.878327903 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.086369737 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.898047046 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.131008592 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.059516263 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.459387743 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.146768407 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.097859361 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.465928705 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.061980864 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.324576709 seconds)
  done (took 174.192360698 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.660755047 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.907954545 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.907718566 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.909430786 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.359339691 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.910844283 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.909738332 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.909047316 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.135636667 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.143330361 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.912371142 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.371428243 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.918543435 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.909872034 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.921655926 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.909834784 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.302331535 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.767244756 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.937891045 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.939353411 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.945917068 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.323036172 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.93485398 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.365350192 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.322359413 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.932553736 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.901743071 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.928980179 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.909985392 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.912479291 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.917793862 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.892801607 seconds)
  done (took 209.780944267 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.894246995 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.89056054 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.888829045 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.892598818 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.897109069 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.894826467 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.88516593 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.879010594 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.437176682 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.419467635 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.883373981 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.88646864 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.879528211 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.871665669 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.874503282 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.869213107 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.887726206 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.877163839 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.874790771 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.876981939 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.343315047 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.701656596 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.873608508 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.66793993 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.873914235 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.878660751 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.873524422 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.887341661 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.877927953 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.881223043 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.88221167 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.87545149 seconds)
  done (took 221.229294175 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.094219238 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.879375438 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.880299328 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.835234484 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.879998319 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.880033612 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.873753353 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.0766102 seconds)
  done (took 19.224395241 seconds)
done (took 626.278415491 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.419735228 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.193354979 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.059761962 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.903044568 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.129964316 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.941298952 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.901763576 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.967514758 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.635857042 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.973350187 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.560557194 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.921027605 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.641195226 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.926233849 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.031628213 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.955937985 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.469210307 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.558108074 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.084200154 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.953429833 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.072425316 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.912616607 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.978310353 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.656863535 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.650443856 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.915827045 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.079853138 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.47865435 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.912369877 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.068410333 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.638072545 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.280279051 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.913875914 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.899236808 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.952211272 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.936700086 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.239852563 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.913364934 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.02304201 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.669020231 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.95196111 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.514860013 seconds)
  done (took 103.696818807 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.872177763 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.870462332 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.869099266 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.870151228 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.871629408 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.869680881 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.8697465 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.870124359 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.870472937 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.869962949 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.869475464 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.871375753 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.870198365 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.871631234 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.869890667 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.870067082 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.871202235 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.872778943 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.870357468 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.870301591 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.870508511 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.870021019 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.871073911 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.869676451 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.871047325 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.871435876 seconds)
  done (took 50.45776272 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.883374738 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.029297513 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.111464742 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.902692751 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.884184922 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.886193403 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.902621436 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.889198236 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.886077133 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.886279713 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.97394097 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.891376371 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.904379201 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.110223711 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.901266352 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.884153929 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.885297028 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.885332329 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.036087791 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.901763741 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.905510949 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.889706945 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.904453293 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.898638139 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.885966861 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.885252088 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.888316885 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.318591454 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.893832791 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.976047754 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.952167763 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.907772183 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.274247491 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.120657547 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.944015884 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.893766583 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.886032935 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.981059091 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.890924947 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.886316045 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.90261167 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.890790549 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.109649175 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.379759133 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.901229751 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.886950691 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.328989975 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.987932892 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.927929073 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.898262557 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.113559464 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.903338308 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.888228344 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.887709494 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.93232698 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.897468222 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.886263535 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.189199121 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.899165826 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.905121045 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.890902652 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.887959848 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.041619657 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.894821685 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.030332559 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.896641624 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.89437581 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.887823634 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.111107283 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.903005209 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.385113428 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.900877218 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.888241521 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.977365456 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.037053078 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.357394403 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.900464885 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.046474131 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.292869335 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.912214947 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.894967249 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.309212267 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.916596872 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.895074509 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.889119904 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.890035342 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.888339293 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.932132923 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.904108311 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.323359187 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.390008979 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.203019713 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.916452698 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.905091511 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.888977685 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.193141996 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.896165069 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.887388461 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.103380844 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.399292536 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.900833171 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.892865715 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.366125184 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.89954685 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.905069046 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.895564555 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.110656386 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.89782348 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.925721475 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.88347128 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.892347166 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.882675969 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.900600592 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.888233345 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.880463649 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.356182915 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.987438463 seconds)
  done (took 233.581398977 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.873037684 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.87217648 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.870455311 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.86948991 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.865520928 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.872388678 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.864568466 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.863779105 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.867402795 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.862053209 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.860126344 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.8619808 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.861410002 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.866929133 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.910538306 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.866625907 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.471403258 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.861331525 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.858451402 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.867625397 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.508366393 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.863723716 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.858807108 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.86004768 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.859586932 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.86080075 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.860587694 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.89674841 seconds)
  done (took 167.349197003 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.865032616 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.982318949 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.883449993 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.893563518 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.873637605 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.863723725 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.888502018 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.882082618 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.869956714 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.86370708 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.863328674 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.927251018 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.87652963 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.965514184 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.898592215 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.897216036 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.970415945 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.874676097 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.864256504 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.864902764 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.894537871 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.861445554 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.927093591 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.99215238 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.88459352 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.985039379 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.872027334 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.868377481 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.866380345 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.984155319 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.881587085 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.927766202 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.894429972 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.884868084 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.98842539 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.98223171 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.973227181 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.898887637 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.870299241 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.865361027 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.864885451 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.855199829 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.984165147 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.886763185 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.868095093 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.974368412 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.886836167 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.867628691 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.87628852 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.864899622 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.880831576 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.886050046 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.933923878 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.000864656 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.902274154 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.89232729 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.892711378 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.145406395 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.877858766 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.967139638 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.863029546 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.984800861 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.889598722 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.855653227 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.867951322 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.872508665 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.898412033 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.899047451 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.97241984 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.877447149 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.96898331 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.905835018 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.874793527 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.866936116 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.870229598 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.984247026 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.987589821 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.905811538 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.905006067 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.899702672 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.864218119 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.868095076 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.857331084 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.886289917 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.87270303 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.984308873 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.987793504 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.87880889 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.870497857 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.869995283 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.869830563 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.894709403 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.991461115 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.906072491 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.966116794 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.939080173 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.942721647 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.883905839 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.882126822 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.873447483 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.932886251 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.8843044 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.88136244 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.194320306 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.940332366 seconds)
  done (took 202.353550344 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.964382541 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.334097323 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.927850795 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.925437002 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.145611552 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.30187651 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.678631492 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.917991673 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.918331069 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.945191274 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.091935272 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.979887494 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.932368458 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.905825404 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.334317556 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.908418799 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.918840679 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.939527788 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.922525426 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.478353767 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.231945844 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.04526249 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.914603312 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.04972567 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.901540194 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.188992381 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.245712409 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.29903255 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.952751706 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.260453156 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.2599428 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.606679668 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.124528762 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.160516244 seconds)
  done (took 74.520855391 seconds)
done (took 833.768733684 seconds)
SAVING RESULT...
DONE!
