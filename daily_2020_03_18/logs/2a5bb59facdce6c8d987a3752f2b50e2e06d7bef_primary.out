cset: moving following pidspec: 24409
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.293995097 seconds)
loading group "string"... done (took 0.636366812 seconds)
loading group "linalg"... done (took 7.571273319 seconds)
loading group "parallel"... done (took 0.157994252 seconds)
loading group "find"... done (took 1.213249295 seconds)
loading group "tuple"... done (took 1.810015831 seconds)
loading group "dates"... done (took 1.268447684 seconds)
loading group "micro"... done (took 0.222211556 seconds)
loading group "io"... done (took 0.910115414 seconds)
loading group "scalar"... done (took 38.56047129 seconds)
loading group "sparse"... done (took 12.355779563 seconds)
loading group "broadcast"... done (took 0.993025444 seconds)
loading group "union"... done (took 12.935098784 seconds)
loading group "simd"... done (took 5.035755227 seconds)
loading group "random"... done (took 9.176024568 seconds)
loading group "problem"... done (took 1.85993328 seconds)
loading group "array"... done (took 22.019205716 seconds)
loading group "misc"... done (took 1.821897843 seconds)
loading group "sort"... done (took 3.27540905 seconds)
loading group "collection"... done (took 17.638154451 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.525894025 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123670568 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133037406 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11917771 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146737987 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118314578 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125209366 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087241776 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.834978676 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154316338 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115478831 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.395987091 seconds)
done (took 5.341826402 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.179316032 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08552536 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08600873 seconds)
  done (took 1.305627666 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.070149172 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128316473 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069696122 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070677339 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070434189 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069277424 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069653806 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069247116 seconds)
  done (took 1.683069305 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076384623 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071876881 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068849468 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071048195 seconds)
  done (took 1.423502419 seconds)
done (took 5.812532607 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.744317514 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211004676 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187002802 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.383728645 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130126758 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.172768722 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.644291458 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.331597539 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187524936 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.077068417 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107870291 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.337596698 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.120480627 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.643503628 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077029526 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091544932 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142926148 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.423300251 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070109692 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085613915 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092153365 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131655721 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087230559 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07623338 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149084876 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070377637 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133123529 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083201127 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069137336 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214707481 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17575724 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.67411757 seconds)
  done (took 10.292690396 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103485658 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099800357 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071459648 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.127772452 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099466384 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07174169 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077217977 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070064737 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091878871 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130959955 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.093029905 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106625349 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06879438 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071570968 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085558691 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209673114 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08318733 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083388481 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072487863 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081154446 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110156051 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080387929 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082354445 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08305587 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.13102814 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182848172 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102378021 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.10253165 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072194758 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086624352 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11924609 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129015284 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068379682 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.071388935 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12756736 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096862906 seconds)
  done (took 4.728146644 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.953884745 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.141487307 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089970818 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131158506 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068401241 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10772922 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068386814 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082355529 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.20439413 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.347867937 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.574206426 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.130036821 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112061255 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104472745 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069785889 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071259097 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.092705642 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069178011 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.426299622 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.098469888 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106314455 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081508472 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072063955 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071168386 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.069492223 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071332455 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068519099 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072594062 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.117859075 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080651138 seconds)
    (30/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068374341 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.310152549 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122009094 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070094759 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.902560176 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.163973948 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.205940895 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105373046 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168312942 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.068885061 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091237675 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138366548 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072034179 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069507183 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.159031832 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068393882 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075606361 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068923203 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08691187 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106932157 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119788678 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068864492 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069198644 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165773648 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06773137 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081283732 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.137060449 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.157808863 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068637781 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.259330036 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092181493 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072672326 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06817023 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.169431819 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.125545972 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072590557 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072250063 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073535194 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073537942 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380130049 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068561761 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.134354422 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073766869 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081487915 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072151645 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072390352 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075505739 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075476582 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09000689 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068608251 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066948799 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068018436 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068382897 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068918203 seconds)
    (84/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075208843 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083881548 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.480360647 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.0700901 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070604648 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06866822 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092558479 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09784021 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.0696729 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068095959 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101908305 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070538319 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070116643 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06879336 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084773015 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072520912 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11564536 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069633816 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.101194982 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101621842 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07241308 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103120266 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081312678 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070126459 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.406105317 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072648461 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070802537 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068377597 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070959628 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069564015 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080552806 seconds)
  done (took 21.904463651 seconds)
done (took 39.013436466 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.24406421 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075630555 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07831269 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078278331 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078428356 seconds)
  done (took 1.783313157 seconds)
done (took 3.005513414 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119856802 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098657908 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067197715 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100292031 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068036965 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1025636 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102732595 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081256917 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101472524 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06912796 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099603352 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069536451 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069322261 seconds)
  done (took 2.378633769 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087268175 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089406991 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07394198 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087972442 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068653216 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087907886 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086314945 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096413662 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086310561 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076789924 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068173651 seconds)
  done (took 2.11921127 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084326597 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086696269 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072121551 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08498383 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066956347 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084373685 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084508427 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087176968 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085266645 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077916921 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068925817 seconds)
  done (took 2.08459585 seconds)
done (took 7.787396109 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081435186 seconds)
  done (took 1.274160837 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.524381706 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.641378992 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082471609 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.106966545 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184391512 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11401503 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.24681229 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086486688 seconds)
  done (took 8.349059288 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090018348 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071302577 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.084745523 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074655742 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074076824 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075108048 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073703612 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075215469 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.076123828 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072755207 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074475406 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.0758611 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07563541 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073749977 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.0729293 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073216632 seconds)
  done (took 2.485595075 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092859357 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092264451 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07529918 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079278172 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07672707 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075608435 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078215545 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077164748 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074711924 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.077238654 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.079480369 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077356049 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075786001 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068809658 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078644326 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080286256 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074856494 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076473444 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076376601 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077110132 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076947191 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066408828 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073164233 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075686589 seconds)
  done (took 3.156385564 seconds)
done (took 16.467090222 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.106489948 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069951314 seconds)
  done (took 1.377096453 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081848738 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083532642 seconds)
  done (took 1.373323603 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083295835 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067985005 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089901006 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07971002 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06800042 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069056213 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088288711 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068060716 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068112528 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068124848 seconds)
  done (took 1.958174117 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070056572 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077628339 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072248993 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084031037 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07653973 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067445717 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07582787 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071266501 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078027578 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065673431 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073364093 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084172423 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073182863 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08602515 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073648785 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070116485 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072642954 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069622566 seconds)
  done (took 2.553057361 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068318597 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068851422 seconds)
  done (took 1.351272218 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068600727 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065798532 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06816877 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069126163 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066726867 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066413154 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066578458 seconds)
  done (took 1.68138728 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.35689029 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117761557 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.305025037 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076375081 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085403211 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.252953232 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069111741 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07349815 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.073616613 seconds)
  done (took 2.666002456 seconds)
done (took 14.180802342 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082728991 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088078235 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096423125 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.368556961 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093273308 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06937473 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115345999 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.176373379 seconds)
done (took 2.319617829 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.230404686 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.654480518 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.409539332 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.202890942 seconds)
  done (took 2.482139243 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33002455 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091172184 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.063547062 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.072229695 seconds)
  done (took 1.787240178 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070804552 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072130525 seconds)
  done (took 1.373302919 seconds)
done (took 7.099830674 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071472014 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087137112 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.070010305 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070333536 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.068368523 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.070999961 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.068007647 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068286113 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070255333 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070475609 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.070297963 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.070745978 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.07041271 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070651885 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068260251 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067596894 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.068190038 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.185291027 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06799751 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068184458 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067832586 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070299864 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.068112084 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067876029 seconds)
  done (took 3.050463503 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087460352 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070419129 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.076150145 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075757086 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073467204 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07532071 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075588798 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.070508599 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075178925 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072539438 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073134802 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073577289 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.072494707 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07381367 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072530984 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073097788 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074992239 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069809905 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071994838 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073508469 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075477141 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070381837 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073760348 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07582026 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07351328 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072834735 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072302981 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070651399 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075588023 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073091175 seconds)
  done (took 3.4534253 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074684391 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067540894 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068151826 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074505886 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067248642 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068738214 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067502191 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.068707685 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068622195 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067366352 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068822321 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06729479 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06764307 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.068215506 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068060251 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071464329 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082660034 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068068189 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.067877097 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067933669 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.071140368 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.070005259 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067718249 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067283033 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068118832 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067232965 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.068302748 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067894688 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068838841 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067482416 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071006195 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.071291686 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.068016526 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07430498 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.071952665 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067763188 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072128832 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067407285 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068202911 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.068479535 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066923368 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.068056829 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067641736 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074628997 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068358297 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068757469 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067569125 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068966613 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068647521 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070463145 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.067649011 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06781387 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069205856 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.0687825 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071943735 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067930425 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068571513 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066180439 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068261579 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067987656 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067768629 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06720447 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.07024781 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06811723 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082843282 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074904813 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067920084 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069824299 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068368769 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.071334462 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069389981 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081946792 seconds)
  done (took 6.249297171 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091312476 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087878265 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068138868 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070086063 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066020472 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068188932 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074116293 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068696732 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070498122 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085775819 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069014815 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069830231 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070024459 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07260061 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068720532 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07013948 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077044818 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066123596 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068649935 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072300579 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068946935 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073658948 seconds)
  done (took 2.851099663 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149044804 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072449166 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106100612 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078210199 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072093834 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079585362 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074228838 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074616084 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073798285 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072150591 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072181555 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07418904 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073924641 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071739078 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072461324 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071966564 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074178571 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071693353 seconds)
  done (took 2.678857636 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080065497 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068959143 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089016812 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0699047 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.070541884 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072366918 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074196749 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078239271 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072702086 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070512013 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077863483 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072724426 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.072413666 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070469166 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072575309 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070394933 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072648375 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070542568 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078267523 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074452225 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07475849 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077891897 seconds)
  done (took 2.87521098 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083344942 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070745765 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083077653 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072210605 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065764852 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06910966 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.07374033 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070005464 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074151251 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072997665 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070079393 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068413093 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072819048 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069765818 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072142078 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070382267 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071986004 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069825776 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07218573 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066289985 seconds)
  done (took 2.687043932 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08856586 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072313654 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072593868 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079106876 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072717061 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072283156 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078506642 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072172891 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071545443 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092368042 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072372468 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072302531 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078030907 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078729723 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072326562 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078649463 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078411391 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0785928 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071759319 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072096697 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.091740404 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072879818 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078673535 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071063801 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070542794 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070222662 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071321816 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075920776 seconds)
  done (took 3.376264538 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070471739 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069682683 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.068030535 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.068203933 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067748703 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068230355 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067826408 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.068284344 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070527311 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068376962 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070640686 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070651521 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070673568 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.070309926 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07035736 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.070440318 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070437634 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067850558 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067787983 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068228394 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.070733108 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070222926 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.070325591 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067884888 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066986171 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069627385 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068021176 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06815057 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07026556 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06728644 seconds)
  done (took 3.329334176 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077799369 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07521462 seconds)
  done (took 1.405326311 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067878692 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083842785 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067727608 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074447359 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073802034 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071447203 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076770438 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073982825 seconds)
  done (took 1.836029108 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085274979 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080301342 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071124606 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081124514 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079974029 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085999434 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13752772 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070894466 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077315378 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068876935 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082886963 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070062405 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077663477 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071459934 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076778765 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077056663 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068365456 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075607555 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07200432 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068482809 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071003392 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078739224 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072208149 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064326822 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069976686 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090931083 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078520103 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068026108 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071250783 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075690074 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074490318 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063185883 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068371421 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.069278807 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067047732 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077166042 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08188627 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07170544 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07689508 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069012795 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076794366 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063936318 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073552151 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075212099 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07866381 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068238675 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068948175 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064426354 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067442737 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070784406 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06399208 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068997645 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064550706 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075416562 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072553651 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079501856 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067761954 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070001764 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071305297 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071253626 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074710463 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070430761 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071868234 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067730286 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078650744 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073980357 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076565692 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063947938 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063155012 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066947252 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077811496 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089910913 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074514965 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069012201 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068973553 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066531302 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071898106 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069147508 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073262532 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074274011 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067867079 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072378653 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075110927 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068739121 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070652666 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074392761 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066794701 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070211334 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066889549 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084173621 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067098829 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.069687413 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066949081 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078070112 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071770056 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067469 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066497594 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074232333 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061598076 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067166037 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067595361 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068371554 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076642313 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070750089 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071313293 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076079893 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074061777 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067737075 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069782071 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064642392 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067458788 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066764855 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073906314 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062071548 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070378494 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068577575 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067235559 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075654051 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065851274 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067397411 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074298077 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072852545 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065747781 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064253667 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070290591 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066658031 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068915759 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074830726 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065853013 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06310112 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062277112 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070784756 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066560842 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070499187 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07076863 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070057525 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062070222 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065341921 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070834257 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075537087 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06787459 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068497534 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072557131 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069027397 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067069755 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073671315 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068794995 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06693229 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071766574 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067550841 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061154158 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068399317 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068759644 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064975593 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070636197 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068444776 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.06950235 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066812092 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064773446 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070524361 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067344363 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066552735 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067196558 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06587297 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075873623 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068383972 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062214731 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063804543 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071962254 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06492536 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065538435 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066558886 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06853829 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066819389 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064634573 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066092912 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068815504 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072745843 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069240234 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066577181 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071459269 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077550865 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065720139 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06952835 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065733468 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067632671 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066089188 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075059488 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071628692 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069553548 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068786731 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063937586 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071093207 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073882206 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066775946 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065562357 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065919466 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069263257 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072062018 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06966144 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066906438 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065447355 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067810239 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068891033 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069272072 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065417215 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067197898 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070521184 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06511369 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070289199 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066774594 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076946652 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068854683 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06203771 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067687211 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064633592 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072807798 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061605954 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065170196 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066771912 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067314589 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064994493 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.302164952 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064678034 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078149212 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078308352 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.072102482 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.071395476 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071171667 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079713104 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.073018004 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075160268 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.075521453 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.078053316 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082170533 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071317196 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.075209335 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.084792372 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070545601 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065518924 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077024373 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.070717042 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069815885 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069892208 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068681607 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073999959 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077743585 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076701471 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06461072 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072826714 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069156905 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070554326 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065384241 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075138159 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073501839 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07159542 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077244668 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070700101 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.07076964 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073867963 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069424699 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071230975 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.07125108 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072752925 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070674807 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072937714 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070685236 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073845489 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069896067 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068437479 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072202573 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069787414 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070245469 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07493657 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.07008338 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070847891 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07219443 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070652273 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071344076 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070360144 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069616734 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072223476 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070774156 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070670565 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072266395 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065721512 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076796087 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069197937 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076588622 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069951249 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068491199 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076942759 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074530641 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075893455 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070892043 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.072156457 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073370923 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070634547 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07420632 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078717632 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.069699219 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081675705 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078654643 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07235895 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073509604 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069407533 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070790925 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068797304 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070324486 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069723292 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069554848 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067826647 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073287119 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070572868 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069090856 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070648957 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069026374 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069293228 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069294078 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063477985 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067932938 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068448471 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068069155 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077427123 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069049025 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068626173 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067303813 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068674276 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069278213 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067855374 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075806645 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075890892 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06931484 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076175948 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067512095 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070948977 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081415765 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.202707095 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06933974 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06792875 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068894469 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077319103 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069412761 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078995247 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069557698 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069225734 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067206276 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069495079 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068341825 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064548959 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067634193 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07244407 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06868751 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068833428 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069188373 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071299053 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069844068 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077864809 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06809534 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071043744 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068676849 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066803518 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068844811 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068617595 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071891647 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06914011 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067003042 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066864606 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068261154 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070311325 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071144012 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068922697 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072245683 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078485128 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071642574 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073772844 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073830399 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06578647 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074407561 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070878394 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070015612 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070221317 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074860312 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077024083 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071924993 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080781989 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070337724 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072423018 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070486186 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.069389062 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070385521 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070549268 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.07018242 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070376395 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.07157214 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078457757 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069296116 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07484038 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071569636 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.07212865 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077451546 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.07108381 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073323388 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074259439 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069438818 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072683513 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078273876 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07316719 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07266443 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069620891 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070696384 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076253223 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070494064 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077016866 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071043252 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071423448 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073638691 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06976644 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070455491 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.071066309 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069843122 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076907909 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070824169 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070276246 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070262029 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068608477 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072190641 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072233551 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078149108 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072739081 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073977083 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065270545 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067282006 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071275014 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068610105 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07261432 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072976632 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076028529 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072951428 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071566567 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069336509 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079066679 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076783319 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074156567 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.069137657 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074031242 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070365808 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07250294 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071666909 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071144039 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071265006 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07446919 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072035966 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069711756 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.217506545 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.076985952 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072968087 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.073532033 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.073109796 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072143406 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06645395 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071253082 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074033161 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076407514 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073857992 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071149956 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082537335 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.069956069 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072726888 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074065754 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069948203 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076094473 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066042312 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073270469 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071509444 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071327572 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065693378 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.070810439 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069284479 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073447699 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.071475583 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066213903 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082446387 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078379174 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072783235 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068193705 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067317972 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064492171 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064273907 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069270565 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070455243 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071476852 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080994403 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070125501 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070505723 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066141031 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070653322 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073899853 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074401741 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068680123 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066525335 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.07062322 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074944978 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076568352 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070296118 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070309829 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074113294 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073135595 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068791462 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073103483 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067758461 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074380073 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083913645 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071305564 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07159444 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076911138 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078369682 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070722294 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066260093 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071317787 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.075094949 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.072016558 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071658969 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071935837 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086372523 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074165037 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070369841 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06982671 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073900685 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.073145963 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079446129 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071532054 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.07139328 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075335944 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072568763 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077889255 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073948906 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07866256 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074653193 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074598473 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069921919 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072672405 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068714617 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069909096 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071302133 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070792115 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074487774 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076465823 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069864482 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080183181 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077579961 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071528987 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067737114 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.07000604 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069974918 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065785836 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070999125 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068866952 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068548186 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068903701 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069409776 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071944569 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075098754 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071536336 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070562984 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070101378 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064557428 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073423792 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07294404 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.208980639 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.069521241 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.071751784 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.072335864 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.076226953 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07439424 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.070063674 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073500441 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.073157261 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072129832 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066088795 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077469601 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069977993 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073413979 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070500036 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071113162 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071659762 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075034067 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075030611 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071977379 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073966001 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075166973 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0713144 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06689407 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067633035 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076694858 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06935911 seconds)
  done (took 44.477517366 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103948065 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068288562 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066445282 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067267342 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077311175 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067726813 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067180476 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068717873 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067550241 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069475143 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066615802 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06678562 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075173762 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081730325 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077293005 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071083183 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066991332 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067921953 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06657415 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068710258 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075478045 seconds)
  done (took 2.892742404 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07790624 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081751989 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078860005 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086499053 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0755124 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07524399 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078905406 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074776001 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082273608 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07684945 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082623873 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074810709 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.077008285 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077299622 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076865591 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075103655 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083232024 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075704491 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.075006037 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080070558 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075299301 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079372552 seconds)
  done (took 3.085310055 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070953173 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068732297 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071900879 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064714005 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.070382521 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.066564552 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073351357 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06953882 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073324195 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070000913 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.070044471 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070451363 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073494803 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066768875 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071306871 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.069107275 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110673325 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.074039726 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070677317 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071567955 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066691932 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073262532 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066794905 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.067010973 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.071106915 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073789181 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.072445958 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068733293 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070543361 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070147734 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070635411 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068642442 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072787656 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071485308 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.071199647 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070256162 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.070608438 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.073398571 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.067186194 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.069236933 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071288528 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.067912803 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.07085699 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.073778535 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068916926 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068634826 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.07305126 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070643462 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.066180459 seconds)
  done (took 4.852212769 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082621519 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112834438 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072574067 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092678475 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084390626 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.077311165 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074565856 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093821227 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.0679067 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06888532 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085796937 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082566617 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069659427 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073825018 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.077225762 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068140663 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068701333 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067466956 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072221042 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069693146 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073253287 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.077391492 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.084292805 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082049658 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073788107 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069157427 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070233158 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074220911 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081855698 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074081566 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074854881 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075165439 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084882077 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072539973 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069917798 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072244011 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08543124 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070601647 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072960986 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068573412 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072544946 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074194382 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077313629 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085932611 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069760497 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075817762 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070112793 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06762182 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081811855 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.07269294 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077775746 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.083509766 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073566338 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070527374 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074400459 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084658129 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069513842 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067618387 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072361204 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.082133101 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068084413 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074534858 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082833371 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.072321012 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07610659 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080825664 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072668988 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071169362 seconds)
  done (took 6.683818626 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08026149 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.099189995 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086488301 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086684872 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080481406 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.081129278 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079949204 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07987287 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080072575 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084743554 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079921364 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.1195297 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.075791861 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.083107763 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089177463 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08068246 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.081021865 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079907598 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079783811 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080167318 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.08083901 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.0866885 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079997197 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087047465 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083431842 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.076010898 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08003298 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080110574 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086833298 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079976023 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084038195 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.080035195 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080148924 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084746823 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080609648 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.077499692 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068393865 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077715552 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077987626 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.077065471 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073072828 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084036935 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.077683896 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.073786667 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078180178 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077542971 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084342566 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080904306 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08001089 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082097596 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079827837 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0864172 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079804979 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080927172 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086790902 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08982279 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086365835 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086590078 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080571732 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086867413 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087215683 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08967844 seconds)
  done (took 6.508763333 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087057756 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077696032 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.086653921 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06621019 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071405677 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077694675 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069299091 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.069118899 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078289167 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.078408009 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081567247 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076182664 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079193012 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080239177 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076539344 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078931884 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076628033 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076769312 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078325308 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076658129 seconds)
  done (took 2.946930383 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079283534 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087377767 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071499157 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075671895 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073995343 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07464266 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073094942 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074447696 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071762603 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074754016 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.081285315 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080372705 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072003112 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076624111 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.080691154 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076498035 seconds)
  done (took 2.614246848 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087246538 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.090750886 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08060977 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068355649 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068757208 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065046272 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067899186 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064162603 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065199674 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081246025 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069354705 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080514186 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068511695 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067005077 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065180417 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073536732 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064991596 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066059213 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069495073 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080308077 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073841525 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067648214 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073128282 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06930859 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071777426 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07420583 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068988832 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070304834 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067742694 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.07051216 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073131518 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074109321 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066761738 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067381776 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068339316 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065609555 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068161542 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069073006 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074824041 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070687523 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068648198 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072752546 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070753852 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071475278 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.067447303 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070570576 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.067356055 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073319883 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067939277 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072660763 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070195667 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072716409 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069890146 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074724245 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071038593 seconds)
  done (took 5.302089998 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084826848 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074310227 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066682217 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069299956 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073536502 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072036859 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075286869 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070200813 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071999269 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068681209 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071644259 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073497103 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071819302 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07288239 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070734104 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074387261 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065219678 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071454137 seconds)
  done (took 2.718453659 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075529917 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070482406 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077423071 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070747201 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.071641818 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072751405 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067197808 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06889189 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068952431 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070304342 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070444869 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072473185 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069388037 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073103974 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070688124 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070493317 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073557676 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069109738 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070546855 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066404244 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072708675 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069118106 seconds)
  done (took 2.972710288 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096768261 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.086578965 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140660016 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082960905 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089245131 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075572068 seconds)
  done (took 1.984794666 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095331728 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103764435 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070675438 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073435517 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080315018 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07304256 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072393592 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073248941 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080907613 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080014997 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074184034 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085134755 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081514215 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081440808 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079368404 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078967295 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074018475 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074160058 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071693476 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086720289 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074395889 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082200591 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073275177 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072007117 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072305203 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07869341 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07915989 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077689443 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07247244 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079550662 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077248564 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072643653 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079915099 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077450456 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071534194 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079588466 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07233455 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08427122 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077771207 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079603209 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071522417 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077646319 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079978114 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076238317 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080074401 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072482332 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076603911 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072862999 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072888673 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08601847 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07838699 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080589752 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079407386 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081714444 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079489425 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085736818 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077571145 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079230674 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077216794 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077855565 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079028797 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077268922 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079177357 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077702218 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077145221 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079163808 seconds)
  done (took 6.567525117 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106726711 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070437109 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073008956 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079962094 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079997356 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072531727 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072849162 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072984152 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072309598 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069682119 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108697665 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072787972 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079133172 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079155956 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072541981 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072530793 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072626649 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078988374 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07008173 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086075701 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073157113 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079063323 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079117205 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078976256 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077453345 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077780121 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072730315 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073298428 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072646683 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072533846 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07638719 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072790425 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079779205 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069375893 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079213198 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073268121 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072310673 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076792933 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072357702 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07771302 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078930982 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084090237 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072113292 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072173515 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077774 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072686997 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072778549 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06915582 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072567521 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069205572 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077595193 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077461339 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077475537 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079121004 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072337586 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072396901 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072858434 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072625351 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072560345 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077860712 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078794241 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072342114 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085978862 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072818317 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073043473 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079041408 seconds)
  done (took 6.455883511 seconds)
done (took 135.083486367 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.196658377 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.172683524 seconds)
  done (took 1.763425769 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07273422 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100222176 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078018171 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131079235 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069719302 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102698048 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102556726 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079186923 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068892479 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069227694 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068729091 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071399969 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133874435 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06867927 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069176526 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07145443 seconds)
  done (took 2.772739253 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101457294 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157783982 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102539131 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06804347 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099832425 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075361823 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068360481 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079268152 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073613658 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068868368 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074512621 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072328885 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068330158 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072772886 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073812012 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07432426 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068232864 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073982346 seconds)
  done (took 2.89098785 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.09940251 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092821921 seconds)
  done (took 1.616492225 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161103112 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137484623 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205125231 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.330777171 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.15583772 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148438651 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.148813435 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.142174375 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118340358 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.1375643 seconds)
  done (took 3.103318967 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101555275 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.148549072 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.267519019 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116064238 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074770316 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092845508 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118092242 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080740315 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082162983 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081066718 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081425133 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078392636 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100052867 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075500441 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076174205 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077796399 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103420625 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075567843 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076802224 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077353434 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10091971 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06933051 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074919161 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075760182 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078766498 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078240396 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068924558 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068679814 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07750334 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076501551 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078287128 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09265358 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079109303 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10380694 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073649714 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105068382 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07877138 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075263573 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077456272 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074935148 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079289215 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079609417 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075506001 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077799871 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069205501 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078372901 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069448246 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069386356 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079572962 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070348119 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07951981 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078372864 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103784756 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070150901 seconds)
  done (took 6.119591837 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111219128 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107648185 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072756928 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112810171 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105543775 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071652839 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106511364 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099808013 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108928714 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072513258 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070619475 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072167844 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081761161 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083247469 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117063792 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108905777 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074520362 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07195432 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109041063 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.109075554 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071170647 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102230781 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098564756 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108088993 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069877571 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072057716 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070950056 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071915308 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077981684 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079233096 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071443719 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080455473 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085308385 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078848284 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069900311 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071095209 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070567762 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080005197 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08035859 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080326968 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078777779 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070585241 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070471582 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072127941 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071098469 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069944759 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079611795 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08029802 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079347084 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071168978 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072925151 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071549704 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072331594 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080318113 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078042646 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081349789 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080832515 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071315775 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070626116 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073972701 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08128403 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08033375 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079898093 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071901996 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080474868 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073306309 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081785932 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084568942 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070862935 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072497227 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071491874 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070943254 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071662291 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078300975 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078430975 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072260143 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069884243 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070163481 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079607653 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07823807 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070449785 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077409682 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069329079 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.0705406 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07135549 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071523543 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077777115 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079525993 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072140912 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07115498 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070289194 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070953097 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069645024 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077397612 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079500437 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079040623 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078432501 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071500751 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079264513 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.216011385 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073252504 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081290281 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071934363 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074260661 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073026572 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079770647 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078847267 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080780123 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071320574 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071440771 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079251289 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081835461 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071570615 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078512887 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081609035 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079736578 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069803873 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082634246 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071557703 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081519407 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071737393 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080972992 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071588523 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080504291 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071149541 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070246105 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071737139 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080529127 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072340395 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071600213 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072039706 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072329118 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07927413 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084191071 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0728688 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079456691 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079043826 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071985029 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080116238 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070425243 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080137872 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071144965 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072240958 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070482324 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082347974 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071020414 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070387323 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070717557 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080607454 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0705154 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081248957 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078611767 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070088195 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082611838 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080870529 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078253458 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080958611 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073065916 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07079901 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07062642 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070965073 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078591192 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079735706 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072335887 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071038245 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078353263 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080099204 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069741867 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078671103 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079170005 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079238849 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070808346 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070697605 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081159283 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080950512 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078853539 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078903127 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079680339 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07127383 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07794509 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078657017 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070348363 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083976412 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071371615 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082219463 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079020034 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077563014 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07886649 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079865465 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08036956 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080393928 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082969389 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069577408 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070636213 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078914984 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070022361 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070089457 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077651896 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07158677 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071229743 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.224031324 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072863577 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082181629 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071222968 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080901489 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070863776 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072291738 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08524729 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071523498 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07271768 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079860761 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074149207 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078441953 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081436234 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079548052 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070863362 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072233204 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080822847 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080454113 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071753727 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071471835 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071850193 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078804642 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078496944 seconds)
  done (took 19.116184384 seconds)
done (took 38.818196991 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.191965546 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.143620904 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.156131433 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111557318 seconds)
  done (took 2.111712676 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.113983793 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098338969 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090278182 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067713866 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097185281 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067645723 seconds)
  done (took 1.993281778 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.269384826 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.185465215 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168951933 seconds)
  done (took 2.078548071 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.195874677 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.179848276 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.422832478 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.256818161 seconds)
  done (took 2.61711879 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.13816387 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086737449 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070527259 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08566778 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.126320333 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.15377073 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096760371 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.120727571 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.08067729 seconds)
  done (took 2.467179465 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.141563859 seconds)
done (took 12.865217904 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094997086 seconds)
    (2/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.241279789 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071898922 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.143184721 seconds)
    (5/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.106507892 seconds)
    (6/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.081000781 seconds)
    (7/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.092117478 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079854903 seconds)
    (9/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.084700005 seconds)
    (10/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.202236958 seconds)
    (11/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.173128375 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.235349815 seconds)
    (13/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077018773 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.125256135 seconds)
    (15/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076189732 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.092512132 seconds)
    (17/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.0764156 seconds)
    (18/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.187253029 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.098329574 seconds)
    (20/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.22268 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.187144413 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06899717 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.210208625 seconds)
    (24/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.075212649 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.205562747 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.11900666 seconds)
    (27/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.091763469 seconds)
    (28/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.115064537 seconds)
    (29/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179012682 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.113124656 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.079669074 seconds)
    (32/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.19731676 seconds)
    (33/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084740306 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07605082 seconds)
    (35/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.178957699 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.362385761 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067013573 seconds)
    (38/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.152936672 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.134477425 seconds)
    (40/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082178745 seconds)
    (41/309) benchmarking ("sort", Bool, false)...
    done (took 0.144256207 seconds)
    (42/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.157886869 seconds)
    (43/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.119911998 seconds)
    (44/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.192797652 seconds)
    (45/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079370216 seconds)
    (46/309) benchmarking ("sort", Int64, false)...
    done (took 0.069528186 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088844655 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07532788 seconds)
    (49/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078272867 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.094308936 seconds)
    (51/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092402182 seconds)
    (52/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.068213968 seconds)
    (53/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07640753 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068605 seconds)
    (55/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082691775 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074798496 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067066367 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.084776163 seconds)
    (59/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.077695207 seconds)
    (60/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07542831 seconds)
    (61/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053960146 seconds)
    (62/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.160089956 seconds)
    (63/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076125144 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166910833 seconds)
    (65/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089396894 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090651987 seconds)
    (67/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077934144 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.1223086 seconds)
    (69/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.201720934 seconds)
    (70/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.07418938 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067424208 seconds)
    (72/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.057334154 seconds)
    (73/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075846738 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08961745 seconds)
    (75/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076320993 seconds)
    (76/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074386438 seconds)
    (77/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071216209 seconds)
    (78/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054845177 seconds)
    (79/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075769412 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053645826 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087808748 seconds)
    (82/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.174519238 seconds)
    (83/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.168150622 seconds)
    (84/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.227341707 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.09577778 seconds)
    (86/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.109009354 seconds)
    (87/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.056016066 seconds)
    (88/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.144359976 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.126811724 seconds)
    (90/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.076700788 seconds)
    (91/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.1691466 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094465226 seconds)
    (93/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.060483741 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.077071148 seconds)
    (95/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076524252 seconds)
    (96/309) benchmarking ("sort", Float64, false)...
    done (took 0.132773266 seconds)
    (97/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077448779 seconds)
    (98/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.078897342 seconds)
    (99/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.072448932 seconds)
    (100/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.156843649 seconds)
    (101/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080391431 seconds)
    (102/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067887897 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147253335 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.085618883 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.130610406 seconds)
    (106/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076764078 seconds)
    (107/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082264969 seconds)
    (108/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075515158 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092320571 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070293101 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069557639 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.132748666 seconds)
    (113/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07948825 seconds)
    (114/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.111604284 seconds)
    (115/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068819153 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136745383 seconds)
    (117/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070914899 seconds)
    (118/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.074291738 seconds)
    (119/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077731707 seconds)
    (120/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06850198 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.079418738 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094963033 seconds)
    (123/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.056224471 seconds)
    (124/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.113223374 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075010887 seconds)
    (126/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.06996866 seconds)
    (127/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068241003 seconds)
    (128/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071646545 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099842936 seconds)
    (130/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.14406632 seconds)
    (131/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075447964 seconds)
    (132/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07978111 seconds)
    (133/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109249975 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135835393 seconds)
    (135/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07956864 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074716191 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088659677 seconds)
    (138/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.079278556 seconds)
    (139/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.153451665 seconds)
    (140/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054276436 seconds)
    (141/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094997817 seconds)
    (142/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067473837 seconds)
    (143/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.151798194 seconds)
    (144/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054920544 seconds)
    (145/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.156576321 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088039683 seconds)
    (147/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076329625 seconds)
    (148/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055199083 seconds)
    (149/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055614226 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088361782 seconds)
    (151/309) benchmarking ("sort", Int8, false)...
    done (took 0.14527696 seconds)
    (152/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075264794 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094352444 seconds)
    (154/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074274061 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.104119319 seconds)
    (156/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077252665 seconds)
    (157/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.200574462 seconds)
    (158/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.067071914 seconds)
    (159/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076430733 seconds)
    (160/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.055255675 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092741539 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.091031732 seconds)
    (163/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075528559 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068330645 seconds)
    (165/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071375604 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075628786 seconds)
    (167/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053630929 seconds)
    (168/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.177821324 seconds)
    (169/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.155764553 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068335126 seconds)
    (171/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.150943196 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142086594 seconds)
    (173/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078039466 seconds)
    (174/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055460314 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.154756254 seconds)
    (176/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053999676 seconds)
    (177/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079588838 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068045482 seconds)
    (179/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.07877879 seconds)
    (180/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068974471 seconds)
    (181/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076787648 seconds)
    (182/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09059238 seconds)
    (183/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091435513 seconds)
    (184/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118638697 seconds)
    (185/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.110388563 seconds)
    (186/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054746186 seconds)
    (187/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097229681 seconds)
    (188/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.065890065 seconds)
    (189/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079583889 seconds)
    (190/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.229813533 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.07383255 seconds)
    (192/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079208487 seconds)
    (193/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.056785657 seconds)
    (194/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.163784831 seconds)
    (195/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074309405 seconds)
    (196/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.09263904 seconds)
    (197/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.174328479 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054522913 seconds)
    (199/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076059316 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146459247 seconds)
    (201/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074670777 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.075705464 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069815007 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087425974 seconds)
    (205/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05568755 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07518636 seconds)
    (207/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.05493223 seconds)
    (208/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08958375 seconds)
    (209/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054947549 seconds)
    (210/309) benchmarking ("sort", Float32, false)...
    done (took 0.12927039 seconds)
    (211/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.055160774 seconds)
    (212/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070997617 seconds)
    (213/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.190437104 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075644882 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076603505 seconds)
    (216/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.160573661 seconds)
    (217/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188072053 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138154014 seconds)
    (219/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.066103032 seconds)
    (220/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.140992648 seconds)
    (221/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070453125 seconds)
    (222/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075843241 seconds)
    (223/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055296405 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092690382 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.098971599 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.055374372 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091119601 seconds)
    (228/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068880975 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070252779 seconds)
    (230/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100157739 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.201012549 seconds)
    (232/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054207879 seconds)
    (233/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068662303 seconds)
    (234/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067459759 seconds)
    (235/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.074343997 seconds)
    (236/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.057864053 seconds)
    (237/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070635418 seconds)
    (238/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056542592 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.179049266 seconds)
    (240/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057070883 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088184329 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08929742 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068569406 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06859934 seconds)
    (245/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.109709943 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067172828 seconds)
    (247/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078396608 seconds)
    (248/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069387342 seconds)
    (249/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067299525 seconds)
    (250/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08007691 seconds)
    (251/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076183843 seconds)
    (252/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054970964 seconds)
    (253/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.054339489 seconds)
    (254/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.192039034 seconds)
    (255/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055846124 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.117240637 seconds)
    (257/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067887842 seconds)
    (258/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054445273 seconds)
    (259/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07525923 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.105305831 seconds)
    (261/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.059756457 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070668691 seconds)
    (263/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.05724367 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078714771 seconds)
    (265/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076964082 seconds)
    (266/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.152132652 seconds)
    (267/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.05520557 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068274932 seconds)
    (269/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.066994879 seconds)
    (270/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055620314 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056862838 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068685976 seconds)
    (273/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.056056865 seconds)
    (274/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067676677 seconds)
    (275/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.055118522 seconds)
    (276/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.054607547 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.15833032 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074316691 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.107735906 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174716768 seconds)
    (281/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070211727 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067463645 seconds)
    (283/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055237832 seconds)
    (284/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053958731 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067045175 seconds)
    (286/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05373356 seconds)
    (287/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068102611 seconds)
    (288/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055327516 seconds)
    (289/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055519965 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074745349 seconds)
    (291/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053947845 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067504977 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.16764185 seconds)
    (294/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173269854 seconds)
    (295/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071726875 seconds)
    (296/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054882582 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087263379 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07338968 seconds)
    (299/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053435591 seconds)
    (300/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054473197 seconds)
    (301/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054242461 seconds)
    (302/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054313919 seconds)
    (303/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053985086 seconds)
    (304/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.053397587 seconds)
    (305/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054095578 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067102118 seconds)
    (307/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.23505749 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.094965158 seconds)
    (309/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.057086445 seconds)
  done (took 31.575985879 seconds)
done (took 33.05046424 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086510813 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094632978 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078959953 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094885217 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083845113 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077853179 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076346202 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080877433 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082771437 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083940484 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080986362 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058384385 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077577294 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077617048 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077371303 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091924719 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081115346 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076186776 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075773362 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067537387 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076102968 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068788891 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070081913 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05758126 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080990255 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074417196 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076619372 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076658899 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069220553 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068651107 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072171036 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076506895 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068582119 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082641521 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076406113 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075840768 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077831276 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079363785 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070336645 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06847911 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076781155 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068479326 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075525516 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07657362 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075000504 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074126998 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075781534 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07992328 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09208644 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070542833 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077980046 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078937302 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079592683 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075925084 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072717941 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076055714 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073086584 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091931903 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076342802 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07054996 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077150415 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076793921 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073648345 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07582476 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076734799 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077764138 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079653622 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074254494 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078069803 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074682057 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068262254 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076412482 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072353083 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06800368 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078214826 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082514506 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.0672045 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074352169 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075544163 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076413023 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068059249 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070326716 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070512224 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075102687 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070204873 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.058357843 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072414151 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075177706 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067036614 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076496683 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075273737 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075780787 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070214897 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079331034 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067441849 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073039 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068543633 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06828461 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069269392 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072214479 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067913138 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069775881 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07820288 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069470729 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073979431 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080659482 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068038368 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075185007 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066900195 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067413273 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081004989 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077140592 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067748619 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070042362 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067194674 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074832553 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067082273 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06741856 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067353287 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068842968 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074537913 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067727124 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070079881 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.217233129 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082920365 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06918272 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073199632 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072112074 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069183724 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074702912 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068533398 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068474753 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070423172 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064840583 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07099672 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069312988 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075797137 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0701354 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076390162 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070030434 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076155998 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073297072 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074481154 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073933528 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067077205 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062026497 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070866191 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070855637 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069707876 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068668425 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069412605 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067999519 seconds)
done (took 12.933858888 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070461501 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.131670676 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.095338308 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094892236 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086153577 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068818001 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076774346 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.09601299 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070156783 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098353263 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088478211 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086106963 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110146808 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067826791 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068804898 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072616056 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069892138 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08186781 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097436699 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087691812 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.111899032 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068174238 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09226977 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088927187 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087530752 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092460372 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069610572 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072622056 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072590437 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101038134 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08897943 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073593809 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069485144 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.09675941 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092505202 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08318594 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069360962 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083836543 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069947332 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068522834 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070964418 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096654821 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080978674 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081266042 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072544739 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078402096 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069796402 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083572485 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089585969 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079483611 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085684844 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.099186915 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07136905 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083954062 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067828283 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085507721 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.077650846 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070859876 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069844982 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.076372431 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068920196 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07249804 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081354813 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080992774 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072777243 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084299546 seconds)
  done (took 6.945331758 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086953936 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093080514 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084506855 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087847333 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06829259 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069793647 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069554566 seconds)
  done (took 2.128830311 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071028759 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088405465 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090491061 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090088904 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083124435 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089995549 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077908755 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069089171 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089017879 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070857794 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088828683 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098439482 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072754163 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076067555 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090237781 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069345859 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090668613 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069428918 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072380589 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090584739 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071480085 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.098351553 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07243095 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069465471 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082605342 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069845535 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112846566 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073361589 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071067829 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072473282 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067454556 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106473228 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082722285 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076946605 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06971792 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084106216 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083538793 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068408764 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084719183 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077836153 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082312303 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070145108 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070331539 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067890064 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07400522 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079032805 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070769224 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070235484 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072291604 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087604486 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070571987 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081713187 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071735883 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074289318 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071330996 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075936031 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07887437 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070174012 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087582703 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070767666 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084443861 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083901786 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082661653 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083878432 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071366003 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081465254 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082590881 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071645508 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071530977 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072884903 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083425272 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068292785 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070848618 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078989686 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.0716589 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090535451 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090776702 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070861529 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.0819154 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069495835 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069600816 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069114412 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089715381 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074136255 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069993694 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073312056 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073267104 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068120537 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068642248 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073247162 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067922004 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071243801 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07226974 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072370003 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072313202 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083716147 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071964092 seconds)
  done (took 9.089447803 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073180386 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070757828 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072078699 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070862794 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070521266 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070474011 seconds)
  done (took 2.027233969 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091988797 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070725461 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081694828 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.074773944 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102643631 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.088392883 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088321886 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078811488 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084456928 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079919693 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087709638 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088741949 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092611222 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074036524 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087517276 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073979386 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088249827 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076196157 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079644977 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074751656 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087141854 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07441506 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075350107 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082804308 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077369989 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073561935 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080451078 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08019816 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079821869 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079209696 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074235029 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077246713 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073049355 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07890124 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088090941 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073037593 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073477116 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.079442903 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07456862 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079938867 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088668577 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074475647 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076072443 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.079510766 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078908494 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072707633 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078975097 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080612482 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087948459 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.079027529 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.079273771 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073435843 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077754905 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078762374 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072939682 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07912991 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078852838 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088158897 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074101678 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073204079 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071011825 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077720088 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078437217 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.078318451 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079209102 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078539824 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073430223 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074019466 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074709209 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073745776 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078964316 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070750986 seconds)
  done (took 7.273229162 seconds)
done (took 29.018196158 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.534380098 seconds)
  done (took 2.079885574 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.593624128 seconds)
  done (took 2.172080137 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.494839272 seconds)
  done (took 8.073547285 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.36389037 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.465070387 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.698242489 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135630747 seconds)
  done (took 3.267910576 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.713644155 seconds)
  done (took 2.300622478 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23020557 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222530081 seconds)
  done (took 2.046745543 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377866628 seconds)
  done (took 1.955430868 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.088214805 seconds)
  done (took 2.669053905 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.231220246 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175141577 seconds)
  done (took 1.990125832 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.45246377 seconds)
  done (took 2.03232178 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.800625485 seconds)
  done (took 6.38503538 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.217533025 seconds)
  done (took 1.835372658 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237597755 seconds)
  done (took 1.812143793 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.750533093 seconds)
  done (took 3.330545538 seconds)
done (took 43.540867843 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086517781 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086846354 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086733792 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084329341 seconds)
  done (took 1.902294001 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080852326 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074941853 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078273536 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075340117 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078446364 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074489252 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076171889 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077673201 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074573236 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074989308 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075543301 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07504744 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077061853 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076243024 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074432579 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07705364 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.078222706 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074590283 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077557924 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074680252 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073440603 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077445449 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077713511 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074117484 seconds)
  done (took 3.409535185 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080949702 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075819275 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077110252 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074619724 seconds)
  done (took 1.90538527 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081203542 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090642206 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090178567 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080447033 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091943932 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087914509 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072043541 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071208826 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073249584 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079583551 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070431301 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095101127 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088759242 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080204284 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082090077 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068601721 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070200787 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087678318 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081410959 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.08066833 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073030022 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081197613 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07076825 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090147523 seconds)
  done (took 3.529217506 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089007269 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101837519 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082610019 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091326629 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093424762 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067908197 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.08800951 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093866341 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124451091 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068266072 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073795881 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067867652 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07647415 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068412987 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082868986 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110148623 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111532205 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071250284 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099129093 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068745458 seconds)
  done (took 3.332401364 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075405268 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071995769 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072497228 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068345477 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078892637 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075267015 seconds)
  done (took 2.046168373 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072095774 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070026247 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.07011999 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068974656 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073824943 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070023302 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068191635 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070600775 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.07066192 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06927541 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06947182 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068529456 seconds)
  done (took 2.438128941 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.185661269 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071250997 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071306472 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068028936 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073489423 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068512411 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083104765 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070473018 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092905779 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069387685 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069363383 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071117464 seconds)
  done (took 2.5932062 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197339642 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079192377 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221409345 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147516677 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108038615 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111727229 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110734205 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110449923 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.134287992 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098617509 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157989812 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159275324 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10501952 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133104679 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08994523 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099750143 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147841359 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158503855 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104593716 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158151081 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138864096 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123887066 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14201076 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100240663 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104239407 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117584373 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073222729 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080823765 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161306038 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128638961 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139096854 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114705724 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091327778 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166856823 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160076754 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134494792 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143011424 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084806388 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.1015543 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129360495 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186170042 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088582769 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30306363 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112182344 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082460252 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13001591 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115791469 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117634257 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103783557 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090040339 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141118019 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174552676 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.130283127 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086681063 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120368337 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11162006 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110098672 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111023626 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16755917 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153615319 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125324822 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073458589 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109843874 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145408964 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128841935 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105237059 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120238245 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094154288 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129080887 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148389932 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119329628 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136921806 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.113386222 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088619916 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116891965 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133087293 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123406948 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154064558 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121291759 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07467136 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118874998 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098160995 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081289549 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14232542 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076002513 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165668894 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098830551 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104683828 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119942096 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10536869 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105800716 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149422385 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287012613 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104046191 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068533384 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105242384 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117168224 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141048913 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088154805 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106235376 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114825954 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079067727 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131347851 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076962259 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12122181 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077987649 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120920323 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1268407 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079235415 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119809179 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102476594 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099974379 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127126436 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152019955 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089115162 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082045356 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159927523 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119383647 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101701949 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137234903 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15013303 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099663393 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098245537 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141871125 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163930417 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089417886 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155795735 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104152843 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083805317 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087287593 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120262989 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109262012 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120468664 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082391018 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.114657918 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156632217 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07625521 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095324376 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129684072 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079677366 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081322162 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103621448 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102498059 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095624088 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.096596742 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100619334 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131440099 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271414009 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107801264 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122575353 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098547775 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160600435 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088311392 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102248406 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102581525 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071839611 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.129099183 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149152103 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080477363 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154171374 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119137632 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113935782 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116906375 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084371032 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133792155 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080451881 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072002921 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138192611 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108456975 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107523529 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.144605242 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11349042 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.120004583 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115755663 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12738576 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126704824 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125796281 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105682065 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088568848 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109930372 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124369574 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075046513 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090168423 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081371988 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104565251 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09511051 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084535542 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135545674 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119740388 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110397589 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109157759 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095898005 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139190628 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077322062 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122250567 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116100621 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095295235 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144489424 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146849103 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127400226 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097917346 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284865957 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073288648 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07634146 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088798658 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118463228 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084228049 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083760367 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112366852 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140766763 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124507943 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132351763 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119901557 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117003501 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147266296 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072257576 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118261639 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138982034 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11895371 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103472938 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091371483 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099386977 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136667321 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104479714 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169960174 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111100626 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120880964 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148008989 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101270818 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080944454 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100723565 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1286819 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102145536 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136981561 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098260292 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089082279 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108449738 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079616169 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097564867 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123813961 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115697793 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130181926 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111596147 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128102198 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079293946 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111284412 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118036828 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117688116 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065669493 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114608728 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151111184 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094876985 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113763899 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299199962 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08035203 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133295595 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166403086 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13917933 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085403385 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10531519 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118287901 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122280644 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116907949 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134210324 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104959629 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132504631 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108354634 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086230594 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087892639 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095954788 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102217984 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093479002 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.102327805 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110063 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095770471 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127202732 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103556758 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109043566 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115332365 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099285171 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091692964 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097155955 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166196759 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116079703 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164949347 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099005823 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.136553015 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154846204 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076481222 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080380295 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079554305 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133554148 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085967768 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127419267 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108885808 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114681751 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119943186 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133401328 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094604032 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070422062 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106611014 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129234747 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120237588 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097353177 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100967545 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152786054 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.249623236 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08077802 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110571097 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114288694 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103985426 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162102558 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064431082 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105070963 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078800881 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081599505 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122816094 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144516945 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081827533 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100306191 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11759744 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111203883 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123106151 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099157111 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110312112 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122795618 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142335712 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124128122 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090470899 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108663357 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123872201 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148596629 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101932826 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096773475 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16661848 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145969996 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15153802 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086682088 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112056935 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111737087 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107533341 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134019935 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084533928 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154077537 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083409815 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132132914 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1020969 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087831896 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123835533 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.109081664 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088155565 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138906819 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113538171 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083493191 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078459871 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113345145 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115363542 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102734394 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075959393 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288836152 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077497043 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130576272 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154912398 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082763004 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10437448 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095908283 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082466416 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103720061 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101964886 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087603377 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099847564 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164102388 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087445228 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141582113 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131077608 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109653014 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129838065 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101046164 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638756357 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079066483 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14525599 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113019789 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162309745 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099079364 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115303133 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107815703 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118069986 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138409805 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102043484 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176548116 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127842329 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113601597 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08003097 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101486615 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103128586 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087555476 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105359966 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112296781 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113651181 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093101896 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112956016 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120046436 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082882118 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09540505 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147034976 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111915284 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137298915 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132473997 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084693153 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114480188 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287471458 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082291953 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118029296 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144427609 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104211081 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099604719 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083395989 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098916711 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153168486 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074850968 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150974609 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120653409 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10879811 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111454436 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.108891677 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127446856 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103901384 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118687551 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091316679 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.10627357 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110728383 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082041488 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078597954 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103835857 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108087597 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097741274 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096030349 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099690598 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145152473 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074501908 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098599499 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113401193 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137901018 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164210748 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087462763 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083663233 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116720045 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113214964 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11027869 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118604933 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080333624 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083151818 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081172238 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082158015 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106313582 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111586684 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114136873 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107069165 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153020889 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083585658 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222906061 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094842256 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101754998 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070360345 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07832992 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094277582 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250304194 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107000172 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111372309 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153666252 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096236609 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091334341 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091782167 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077391753 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085153187 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123102173 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108364002 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115186619 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100906318 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064861459 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10651625 seconds)
  done (took 57.879125658 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111834406 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083848016 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.099045609 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144655728 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122171579 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199769227 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156463759 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189026865 seconds)
  done (took 2.806628776 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071674566 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095324193 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104275305 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084616246 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068887187 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071831241 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.218329657 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083577114 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069279909 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094432669 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079982136 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071902577 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.414942301 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071005592 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070802561 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065091868 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070243859 seconds)
  done (took 3.502854487 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.378589583 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.616817505 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.331420436 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078381385 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.993036163 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092111775 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.225771607 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136000595 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080385542 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.543123324 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.406170805 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133833899 seconds)
  done (took 18.717532725 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084689859 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077841087 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090356019 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090820086 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080337066 seconds)
  done (took 2.123228257 seconds)
done (took 107.795186248 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08399264 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.588221446 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056490949 seconds)
  done (took 2.36788588 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090540625 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086670418 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086565986 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08444839 seconds)
  done (took 2.056488322 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077402682 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078224439 seconds)
  done (took 1.855772477 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222497972 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166331411 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09675872 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084933662 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08118836 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081727265 seconds)
  done (took 1.95343383 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075350898 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077323834 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074822763 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077686397 seconds)
  done (took 2.00419661 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079054403 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055188624 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05725708 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060414412 seconds)
  done (took 1.951211061 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089373191 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082996615 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080668506 seconds)
  done (took 1.955282387 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10084476 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088411536 seconds)
  done (took 1.887494951 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084227555 seconds)
  done (took 1.784739155 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094398441 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099693511 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.126852264 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110058867 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134889257 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.106411077 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085222865 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085942792 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077650584 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086911377 seconds)
  done (took 2.708160451 seconds)
done (took 22.793961652 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081670789 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.364257761 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361801556 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091373684 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671458945 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359237532 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.970117342 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094711107 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.138791435 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069856516 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086332031 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651359737 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.960124422 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325576382 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.94823312 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324426226 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650906544 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071299389 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070610766 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07103304 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.956621297 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069864799 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070340233 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071120253 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652251801 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373096489 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071007443 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324235225 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07069605 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072782525 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357540699 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071315541 seconds)
  done (took 16.203835476 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.090247758 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119677068 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074670842 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086301189 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07292343 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072278542 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074042526 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071218912 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120755669 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070352739 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086711601 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070442934 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073862733 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07167303 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089645524 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070833456 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071494285 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071525949 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073134725 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070736781 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088708612 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070591566 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071317648 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072090915 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071199275 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083025758 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071364212 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071418692 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071273211 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073386077 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073474703 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071610643 seconds)
  done (took 4.208560805 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116148527 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12509427 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075513071 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106489717 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112585859 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072595428 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141499761 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095559668 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128377881 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070567357 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087303614 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071262194 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102827995 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071830425 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090409033 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071391316 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071529451 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072420168 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071119418 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071692912 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089840986 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070780464 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07130641 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071722428 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071397242 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084221047 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070919795 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071353477 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071259622 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073035537 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074598392 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071151979 seconds)
  done (took 4.436911812 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074708528 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077752045 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084266793 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086142501 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071604775 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074131884 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075574761 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07191815 seconds)
  done (took 2.336859858 seconds)
done (took 28.898343913 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080736461 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070980223 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075584528 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090187618 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075985607 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079895764 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068795851 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077867228 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074566928 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075430072 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076463175 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069943247 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073221964 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069302055 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07643613 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070711339 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081205639 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074247852 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081182261 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081127952 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072785345 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075731895 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077262121 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080978132 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080774572 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081049636 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079410828 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.0759662 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071154969 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073008194 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079246381 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085784673 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070671022 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080867244 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070152479 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070849018 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074606883 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070565412 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081034494 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078628243 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071883219 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079175354 seconds)
  done (took 4.891184653 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089859519 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09213138 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08562641 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063771498 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068453643 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067238046 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089674322 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.061870117 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062821922 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089041191 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058927058 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061593267 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065042574 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056868079 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062164418 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059975075 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.0642505 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058702927 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062339337 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061772864 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089649706 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056876916 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079649777 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065393032 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058851409 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064737017 seconds)
  done (took 3.522311882 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077291045 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08498302 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090819609 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142640515 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112411296 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079358108 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081343766 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094271415 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095215619 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069494531 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073589207 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094271976 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089443973 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076098448 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070345809 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087210898 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086879281 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072064169 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07556901 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093068736 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08739827 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086830009 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093012394 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085304107 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069270794 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071982483 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073644168 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083729715 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072682236 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078914261 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072853651 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073580841 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07206536 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081195952 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.0727119 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071821916 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.095204814 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079539993 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080423139 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070674097 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07727489 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071005933 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093131064 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124645207 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069619162 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075327672 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074383101 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079537633 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070251783 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095027354 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081140381 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069710362 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073262778 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069699681 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069456096 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072600206 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071573537 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071991831 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078013319 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075116535 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093364191 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074470442 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085734301 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069803979 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07806612 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069267168 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070916996 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068987938 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094633392 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071603147 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109785835 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07083045 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.07090858 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078005491 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077653341 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077872074 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070477939 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085578134 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080262935 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073149035 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078659487 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07401276 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072698311 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097497744 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072413032 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071461948 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070945127 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075244662 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072475619 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071144047 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082182541 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070233194 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07260138 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086490496 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070127767 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071504419 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075322371 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073948263 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069205642 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079765282 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074000217 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07074301 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078532702 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069714919 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072174799 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080927021 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07575476 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069529213 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074197949 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075165797 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070484005 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071938422 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072644934 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071733852 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078498469 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076037629 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073956725 seconds)
  done (took 10.945623459 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160894707 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.149952766 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074385448 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143381398 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078127052 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08052221 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144502232 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094126411 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070521285 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071287822 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071063647 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109629959 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105590689 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115417303 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080386445 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070419771 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092371315 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114200855 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146361396 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142274193 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092512149 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078287202 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072604838 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072465501 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072498299 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079970466 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087226893 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078821133 seconds)
  done (took 4.519505239 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081395023 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103917266 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07762018 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092076608 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09223322 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07032535 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072338187 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072484729 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086214648 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07990008 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070666702 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075509527 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077308365 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073363587 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.0714098 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077009354 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076882923 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072115637 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073359262 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075011925 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079884912 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093192353 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074168798 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072278107 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074906927 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069625181 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065822857 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085447299 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071168661 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.093664621 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068758068 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07555148 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083830124 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071556688 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070418663 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070595556 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070194934 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069891091 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072233891 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068889916 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06945633 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060609035 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070291076 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080362769 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084023181 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059545094 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074412302 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075140519 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076189778 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068192704 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07320466 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07271558 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073088624 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076941447 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07428887 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075587831 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071539373 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076307248 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078237778 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070207923 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067699465 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069044401 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074681033 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067355988 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085281485 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075136164 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069065146 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069960066 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071825066 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083097323 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070853829 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074775489 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068455573 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072136889 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074812398 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071911076 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071577769 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068682029 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070387318 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070862288 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05823276 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070576309 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057163676 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072740741 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068359904 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068392555 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069819685 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074899041 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080902576 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071677051 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075786812 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071592639 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069265636 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072440829 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063189313 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073134882 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080012451 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083944197 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070280447 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068411344 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081474961 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074963399 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069650178 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059029482 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074419115 seconds)
  done (took 9.516839284 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091526246 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07230662 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084639702 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090480454 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08711146 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076623214 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080448505 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071652164 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085170932 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075956403 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078680944 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070256396 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080503218 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078986947 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071648373 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08015088 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07439978 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085326937 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084904273 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070461298 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078320208 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081831162 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090882238 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082405737 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081452025 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082470681 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091528462 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079181851 seconds)
  done (took 4.023465838 seconds)
done (took 39.132625493 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.810777139 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.968091785 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.795126907 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.124143451 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.988661076 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.815799614 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.996174429 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.777021662 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.062263528 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.816347217 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.113543522 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.891913743 seconds)
done (took 66.013465434 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.80242607 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.930751529 seconds)
    (2/2) benchmarking "String"...
    done (took 2.019988576 seconds)
  done (took 5.659354821 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.991373859 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.359149168 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.019650338 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.775870264 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.783011516 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.090677963 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.58101033 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.290005924 seconds)
  done (took 30.603955088 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.915623369 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.001876447 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.452164705 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.486697943 seconds)
  done (took 15.612554951 seconds)
done (took 63.471134726 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.768529022 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.780776097 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.82091752 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.757987012 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.837041368 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.793274795 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.282983461 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.919620284 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.772445545 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.764970675 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.777922242 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.192435358 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.785722955 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.775487996 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.770443861 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.771203714 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.800285999 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.330797345 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.922774255 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.778914199 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.778772015 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.808817187 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.757972859 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.767831777 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.798247932 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.761254327 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.139140119 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.765956196 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.59833946 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.759061437 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.81188968 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.759811491 seconds)
  done (took 203.612966076 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.762760668 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.554782368 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.71167135 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.806794708 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.105022935 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.957960327 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.85086718 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.203844422 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.762665797 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.772191526 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.972178811 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.753771133 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.003326973 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.704326705 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.787895389 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.845999087 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.926878993 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.012764295 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.803449738 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.921620017 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.769646556 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.739211727 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.685503476 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.967319578 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.782799878 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.862955095 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.759309356 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.761729676 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.948647666 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.890627013 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.765649823 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.76319345 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.962596795 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.626846088 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.772269614 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.779461726 seconds)
  done (took 168.746897438 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.952200109 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.757915709 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.758037204 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.757609798 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.762578178 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.758480732 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.88698365 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.881431195 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.374033756 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.321408987 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.80826128 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.757285265 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.547688222 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.752073371 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.824234103 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.772747564 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.753584849 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.758260047 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.77165569 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.782479246 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.758879699 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.758146993 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.882202751 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.767266299 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.756336724 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.761702168 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.758758722 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.761474911 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.128494132 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.754094813 seconds)
    (30/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.756753896 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.748171991 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.760366036 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.763149323 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.000390284 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.755058277 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.758051654 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.623411662 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.464105941 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.761033637 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.83962566 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.756535514 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.765428202 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.757176607 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.975201267 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.754013625 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.757968514 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.75989944 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.760068762 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.915378176 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.756621423 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.881709165 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.759834373 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.240342541 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.753604842 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.76127912 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.447479894 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.349905608 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.755763747 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.761414404 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.757295386 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.761747058 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.764082662 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.420846845 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.828736329 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.757468134 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.760789708 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.766651857 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.760348213 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.979035632 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.759145669 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.413936949 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.816417038 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.884577116 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.88056863 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.759339273 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.827364645 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.854029157 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.756967033 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.761779089 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.760237122 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.757840299 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.844268293 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.755528274 seconds)
    (84/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.759551531 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.884298062 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.765554669 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.761778925 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.813224481 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.831681066 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.758074056 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.626432459 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.760372132 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.758679872 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.060960107 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.829419546 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.759992186 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.760022384 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.888111438 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.883422745 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.480024998 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.759731498 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.50364748 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.896259901 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.758990917 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.901898833 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.75629388 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.84459888 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.762615459 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.762746485 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.793797424 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.761410786 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.817887838 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.761238245 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.132268235 seconds)
  done (took 400.460209191 seconds)
done (took 776.532324406 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.361482878 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.328540003 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.423016791 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.348038625 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.325131371 seconds)
  done (took 13.473883473 seconds)
done (took 15.166326361 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.846956027 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.850517127 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.78060135 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.852462295 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.77907767 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.852319594 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.832258397 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.781892696 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.822247439 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.786307465 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.819543253 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.784716533 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.775627296 seconds)
  done (took 25.252713631 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.000474258 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.011943049 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.833169352 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.003376841 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.808155315 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.002277451 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.932621975 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.919630436 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.918045081 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.782996028 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.77393139 seconds)
  done (took 22.67560377 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.009852285 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.011878934 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.845110446 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.008116796 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.81393089 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.006983874 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.935308014 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.923144946 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.921424669 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.778541492 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.774827656 seconds)
  done (took 22.717783089 seconds)
done (took 72.337510616 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.772708572 seconds)
  done (took 3.461477761 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.802364092 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.962759253 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.776189609 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.776763784 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.773012098 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.771017216 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.775909398 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.77050793 seconds)
  done (took 16.09965426 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.766996236 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.766793775 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.770361744 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.769919333 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.77244923 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.772090106 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.772707049 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.771290216 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.770660288 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.769563883 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.769572106 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.772980917 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.769823343 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.769829965 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.768284047 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.768068267 seconds)
  done (took 30.011241528 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.771891198 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.76802247 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.769882891 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.768376123 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.768613663 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.768877792 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.773592624 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.76901578 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.76630881 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.766276183 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.767893264 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.768624062 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.768285806 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.768678887 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.77045255 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.770087556 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.769734735 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.773389422 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.773742943 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.769777404 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.770033716 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.769059386 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.767391098 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.770422197 seconds)
  done (took 44.162919706 seconds)
done (took 95.424353705 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.547828554 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.400286171 seconds)
  done (took 9.639242801 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.77526781 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.77274306 seconds)
  done (took 5.304548964 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.774364523 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.771665584 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.772159446 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.772232363 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.771960296 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.776157529 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.774012504 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.772245681 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.771774761 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.77477105 seconds)
  done (took 19.424692321 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.775658369 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.77604746 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.77151165 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.772532511 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.771350971 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.768249585 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.771113577 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.773063074 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.774191768 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.770393468 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.772807701 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.771756463 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.772449815 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.770561473 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.774564908 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.770598196 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.771636653 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.771628576 seconds)
  done (took 33.594854141 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.772129954 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.773193526 seconds)
  done (took 5.237545823 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.771902701 seconds)
    (2/7) benchmarking "second"...
    done (took 1.772980547 seconds)
    (3/7) benchmarking "month"...
    done (took 1.771457595 seconds)
    (4/7) benchmarking "year"...
    done (took 1.77139851 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.770884666 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.770725297 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.776103175 seconds)
  done (took 14.099261086 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.773295595 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.923892024 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.986229382 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.455681156 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.776123726 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.777374158 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.749651219 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.777540936 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.781962045 seconds)
  done (took 19.696267949 seconds)
done (took 108.689681328 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.604136421 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.765108207 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.993233191 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.851164911 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.785484358 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.113370793 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.806013367 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.059999588 seconds)
done (took 42.674791944 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.846077822 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.539621993 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.81742097 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.800746154 seconds)
  done (took 15.854276335 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.762917364 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.308453046 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.817125203 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.425582377 seconds)
  done (took 20.081086274 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.149205257 seconds)
    (2/2) benchmarking "read"...
    done (took 2.124566986 seconds)
  done (took 5.980593881 seconds)
done (took 50.460450433 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.780000746 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.778631097 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.780936156 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.779505131 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.777149769 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.780364964 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.779735958 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.78424978 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.780588732 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.782499647 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.781969895 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.78189174 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.782229602 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780949978 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781134672 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777068988 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.779331773 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780753416 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.779990422 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780520938 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.779548034 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.783105089 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.781125846 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.780399078 seconds)
  done (took 44.432692404 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.783745736 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.781750784 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.783940912 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.781530645 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.780616314 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.778832381 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.78076798 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.782617635 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.784194336 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.784466587 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.781366111 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.781135187 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.78156444 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.781307063 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782768216 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.778580475 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.78576698 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77896136 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78067823 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.779670724 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.782585375 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781780029 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.780905417 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.781590829 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.781001378 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.780266514 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.78372533 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.78386222 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.782984686 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.780325072 seconds)
  done (took 55.158262148 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.785544379 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.789707032 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.78376943 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.784408713 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.782612775 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.785318073 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.782365076 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.788021125 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.78293786 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.784178805 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.782919925 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.783681152 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.783268908 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.786078057 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.783483688 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.784764079 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.785632641 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.784641503 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.787910461 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.783452593 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.784547967 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.783199908 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.783011763 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.783046028 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.785833338 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.782450171 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.781393812 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.78300512 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.785128036 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.784475915 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.786058455 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.78554973 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.783862406 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.785423569 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.785245455 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.788506333 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.788891554 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.791372565 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.782840315 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.784065954 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.783743519 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.789327002 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.783860406 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.785072556 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.786497169 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.786841503 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.788370426 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.784896321 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.786512411 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.784506957 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.784330239 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.782981662 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.787840069 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.783503811 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.784866245 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.786967489 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.786986649 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.787143958 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.786874261 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.786631923 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.785084149 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.787589351 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.786056761 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.79085667 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.785679364 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.782232673 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.785514965 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.786067037 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.787645293 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.788076323 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.78684727 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.786096819 seconds)
  done (took 130.250621846 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.788191688 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.785399631 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.781476789 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.780728681 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780561189 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.784021772 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.781110513 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786274976 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784254229 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.785566288 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784161644 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.783956526 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782794719 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.7904829 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.784701595 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.780554585 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.782988827 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.780769794 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.786190788 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.785038392 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.783769691 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.782615985 seconds)
  done (took 40.951240797 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.786018198 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.78965609 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.783030462 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.786466029 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.783197191 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.783351169 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.787730188 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.784200008 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785200554 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.782091506 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782826165 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787088434 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.784308317 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782829344 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.78344398 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.784097297 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.78649278 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.785087225 seconds)
  done (took 33.832083568 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.781785489 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.784016543 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.786461244 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.783926386 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.785811449 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.788070828 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783048732 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.786706289 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.786216152 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.785516939 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.789036277 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787822294 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.786561732 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784221292 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786987949 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.784270572 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.787616241 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783895129 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.788870821 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.785792128 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.784736666 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.790688038 seconds)
  done (took 40.999248051 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788956851 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.787981269 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.786702623 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.784745016 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.784060902 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.785965953 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.786626044 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.784706636 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.787419103 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.789960885 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785688802 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.786537327 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.786658586 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.786652456 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.785313397 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785803513 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.787172801 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.786666985 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.78686886 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.784521633 seconds)
  done (took 37.437075471 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.790199381 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.789388459 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.791355521 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.791403819 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.791020795 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.791539187 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.792047538 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.790962717 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.79140915 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.790699061 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.789595524 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.788817308 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.790700157 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.792135843 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.791063641 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.79115003 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.793764859 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.7909425 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.792944012 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.791276229 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.792816178 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.789455297 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.790387604 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.79087192 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.790135233 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.791308446 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.791495108 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.791051482 seconds)
  done (took 51.857594441 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.790495842 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.792363458 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.788137504 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.787847096 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.789878661 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.787368018 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.786507003 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.787915685 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.789575983 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.786739442 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.791845868 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.791376971 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.790290551 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.791234165 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.790400619 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.791213635 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791048893 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.78735006 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.787685271 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786732084 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.78894978 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792297759 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.790759351 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.788332777 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788900281 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.789866135 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.789648869 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.787836262 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.792720558 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.787739263 seconds)
  done (took 55.393879548 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.808495902 seconds)
    (2/2) benchmarking "in"...
    done (took 1.809929307 seconds)
  done (took 5.328213484 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.786823673 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.791454232 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.792832568 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.79023285 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.791847582 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.7930884 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.793020364 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790490648 seconds)
  done (took 16.039041943 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.797497813 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.791628622 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.791601329 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.792504293 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.792538832 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.792646915 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.801895219 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.793369749 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.793120961 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.797519178 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.799755227 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.80143038 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.796359001 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.794590689 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.794786519 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.794238919 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.794686045 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.796890472 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.794538436 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.795142515 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.798107093 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.798520783 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.796369347 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.794000419 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.797917333 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.808516438 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.799052646 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.795921313 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.797063811 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.80081021 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.794275525 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.791571812 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.796475547 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.798177534 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.795555508 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.798902931 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.804743434 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.79778329 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.80311108 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.797915344 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.796179067 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.792264087 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.796184335 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.795628339 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.79775844 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.798281699 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.799337742 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.797527698 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.79950596 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.800967836 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.802030972 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.798058917 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.795104599 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.80084088 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.797013379 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.805338547 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.798139378 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.799691882 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.806502609 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.810578449 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.81266092 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.808202812 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.803068868 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.799389294 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.808460734 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.823622052 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.805569732 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.794949295 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.795831563 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.796822386 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.804066832 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.811591419 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.809496702 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.796411703 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.801108796 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.7996727 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.800520774 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.799188097 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.807854159 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.802256348 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.800030993 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.799135924 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.808660504 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.823445489 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.801317862 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.800360123 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.799989886 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.802245467 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.800713555 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.813213776 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.802198896 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.800105937 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.798442964 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.801529887 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.799088943 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.800282499 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.798619681 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.801571925 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.797636092 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.800740052 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.803547983 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.804768282 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.81000511 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.80280258 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.800359421 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.807356362 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.800733719 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.797114072 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.805967442 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.798723993 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.803416661 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.803401613 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.80806375 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.798566367 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.805326978 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.810711862 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.803417511 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.801720439 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.801816202 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.80146741 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.810720268 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.827137504 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.801415853 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.803731472 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.809402866 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.816037879 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.803624551 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.805827612 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.803030637 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.800128824 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.799428249 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.805155841 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.800511753 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.8019721 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.803696109 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.804117574 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.803657604 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.803198375 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.804057062 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.80608559 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.804423231 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.804121259 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.80481214 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.805659464 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.802688386 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.804508985 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.807902963 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.802258875 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.802341626 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.806577481 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.801099972 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.804422214 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.805720372 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.805978237 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.806760183 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.804880761 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.803807664 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.802282786 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.802964835 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.801287188 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.801590447 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.805457584 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.808800447 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.804573973 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.809101574 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.80444266 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.801665939 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.805341332 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.805331267 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.803638868 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.803867607 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.802622022 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.809355562 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.813515923 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.804142039 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.807946698 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.809600452 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.806955292 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.808783543 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.807010123 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.808993688 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.815513325 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.804275382 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.81134292 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.804550139 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.803866238 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.804802044 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.807624176 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.805203457 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.804893849 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.807885808 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.814351374 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.818974021 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.81515997 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.806836172 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.809175932 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.807701784 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.809872053 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.806606295 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.805351303 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.806353814 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.806839476 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.805467707 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.80691924 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.807450954 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.807840531 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.805660441 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.806539529 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.804957041 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.806783973 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.805515713 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.807683067 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.806889657 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.805216644 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.806966184 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.805942939 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.807362009 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.804575413 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.807118784 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.807976324 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.806528792 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.807336229 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.814569918 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.801698233 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.805649029 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.807667997 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.809092286 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.806228375 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.809565696 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.809046898 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.807896664 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.814252893 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.808810901 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.811145301 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.814218451 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.808142875 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.807282837 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.809156853 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.808056758 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.805973084 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.811566583 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.817401899 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.810625712 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.810263553 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.809931503 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.807254198 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.808694049 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.816599502 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.80319985 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.806349937 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.807383293 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.810069493 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.806959212 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.810817947 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.809436303 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.811149416 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.811492934 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.80920958 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.808530002 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.809360123 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.809308414 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.811179503 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.809448576 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.810676085 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.817411896 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.814612915 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.812729036 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.813086677 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.810834731 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.812923066 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.810545656 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.809134523 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.81351011 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.820344911 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.817827407 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.814679641 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.810119323 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.810449912 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.815617113 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.81235208 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.813550226 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.812430054 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.810886931 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.811815284 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.813200357 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.807049572 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.811372929 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.810187444 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.811271294 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.812341303 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.814427431 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.811106996 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.810974075 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.8114295 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.813019836 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.811229366 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.812040503 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.812371069 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.811981341 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.811694299 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.810120536 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.809882699 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.816914288 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.810689847 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.812203714 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.812038879 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.810280367 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.811512539 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.8143646 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.811669942 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.814418484 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.820512435 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.814467887 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.821347714 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.810552255 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.819928449 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.813501885 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.815426378 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.822706527 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.809188838 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.812543926 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.815090199 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.815386408 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.819278529 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.815182033 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.813111747 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.81466114 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.815162447 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.813336908 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.810281161 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.815031953 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.813872703 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.814143579 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.823333257 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.81611559 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.815371417 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.815300642 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.81132464 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.815345272 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.812371249 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.811443321 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.814955878 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.813060106 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.814344567 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.814799221 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.814916016 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.815988916 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.81522036 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.814675383 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.811111373 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.81593593 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.821095914 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.815884186 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.820306798 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.814567296 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.821747942 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.815100708 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.823375155 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.81787693 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.816781356 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.81600191 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.815837243 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.817701449 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.814492409 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.813826511 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.812652024 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.818407482 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.817000634 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.817238969 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.81880735 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.816721622 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.818047168 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.814151703 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.826410957 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.839436125 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.817262661 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.820234818 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.812854687 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.815958659 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.820185511 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.814667432 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.812706048 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.82024045 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.829322256 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.82542475 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.815827517 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.8164987 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.81777305 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.818660509 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.813502037 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.816416127 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.816335211 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.814116239 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.813725582 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.817225899 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.820480296 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.817335188 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.819156927 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.820171602 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.82020321 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.828548809 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.818435661 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.817965564 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.817598428 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.816448598 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.815588933 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.816399268 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.818155362 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.818113506 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.817829441 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.819674555 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.824699237 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.825852835 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.820149322 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.819047103 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.817479978 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.818164447 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.818301073 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.817284544 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.817616183 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.817479143 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.820493004 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.818327743 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.820635459 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.816459891 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.817830152 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.820658368 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.818857382 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.822045097 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.825205809 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.815936667 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.814198346 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.81746923 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.819180334 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.818299188 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.821027975 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.826146663 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.823100944 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.83113036 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.828721047 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.823790777 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.818111507 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.821157468 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.826508477 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.818340103 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.819629948 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.821038498 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.821113176 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.818722674 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.824276872 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.819862603 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.829353187 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.82144162 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.820186392 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.827267516 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.820523687 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.820185382 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.820675896 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.823172246 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.820915462 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.818662464 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.821135621 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.821021211 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.826944229 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.823961854 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.821645127 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.820700254 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.819104183 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.821093114 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.824716421 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.821643658 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.822583628 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.818367616 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.821163083 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.823670956 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.821327442 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.819669791 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.819514086 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.821871324 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.823860024 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.827961909 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.818302298 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.82298738 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.819663155 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.821764968 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.823614996 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.822064599 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.821730528 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.820353482 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.82373943 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.824254531 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.82187334 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.824032039 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.819195048 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.823157629 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.820976546 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.822174454 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.825262421 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.832656367 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.829907104 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.818382452 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.8217665 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.823192954 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.825690992 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.823004632 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.822022757 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.823439883 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.821905156 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.821525667 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.822423909 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.821982354 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.827713627 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.841320968 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.824554105 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.825443599 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.825091271 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.827958836 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.82206558 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.819751405 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.822673415 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.823807422 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.824926591 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.832328137 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.822859707 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.831880426 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.826396515 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.824779935 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.828625686 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.827348611 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.833299831 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.826391015 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.824891315 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.824291765 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.827343449 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.837965703 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.825589404 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.8350024 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.856375105 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.826241512 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.827707708 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.826629645 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.826360545 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.825521441 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.826070827 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.824776378 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.821919499 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.82184471 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.826882705 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.825490538 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.831038264 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.82770411 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.824397394 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.825833891 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.825544356 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.827051499 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.822225053 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.824010755 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.823535118 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.825435724 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.822835493 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.826504899 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.824433537 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.838334413 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.840048289 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.827053992 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.826731636 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.823437739 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.829381478 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.828430341 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.836959224 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.832064307 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.826566728 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.827382043 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.82848567 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.829502171 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.823892067 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.826688061 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.829361463 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.826743508 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.823340063 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.840667728 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.836744557 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.831490574 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.825008992 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.825826463 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.827695709 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.828502148 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.829500572 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.828479997 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.828470104 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.829143845 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.831452823 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.82823342 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.827086466 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.830101431 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.83426291 seconds)
  done (took 1082.461850922 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.823216819 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823984126 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.826799873 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.824275978 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.825461589 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.826252111 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.824205611 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.826024478 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.824133683 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.824470953 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.826086503 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824625911 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.82387398 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.82462897 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.82466474 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.826758068 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.825022543 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.827301909 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.827067524 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.82601395 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.826314768 seconds)
  done (took 40.075544515 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.828159521 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.825233997 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.825091395 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.829287377 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.824748882 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.827219683 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.828714483 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830775535 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.830312479 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828399241 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.830491919 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828463668 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.828064869 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.825531205 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82464944 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.828624225 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.827499793 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.826370039 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.830135266 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.827760745 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.830527091 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.827625406 seconds)
  done (took 41.961665202 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.831155254 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.830615142 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.829202677 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.826450113 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.827196833 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.825845872 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.830126998 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.82866669 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.829925757 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.832854718 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.829898319 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.832046243 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.838990885 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.837333165 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.834465572 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.829821636 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.97373247 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.830326507 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.829860516 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.829280548 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.828446928 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.837300541 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.826598995 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.82909981 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.831577284 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.833896586 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.830727683 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.833101123 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.831654934 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.831807081 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.834981728 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.830558651 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.830984852 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.834357089 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.833143468 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.833691508 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.835253748 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.833548026 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.829152821 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.830781369 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.841912422 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.85403915 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.83414857 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.837436262 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.832110646 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.830837286 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.836080657 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.844508884 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.829845556 seconds)
  done (took 91.688628719 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.83315781 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.83473687 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.83067305 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.832202216 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.830675441 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.829969344 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.831868227 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.830456857 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.830402498 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.829881087 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.832844813 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.831029551 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.831236958 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.834136799 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.834790246 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.830341876 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.830291386 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.829434321 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.828062402 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.830044287 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.827970979 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.832415763 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.835258609 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.830761486 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.834705786 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.832415007 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.830552895 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.835477824 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.82980329 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.829372114 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.83523674 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.832871554 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.834230546 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.828949078 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.832032017 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.834084803 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.835576082 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.831466258 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.834916103 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.833368222 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.835368525 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.834659738 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.832571969 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.834501719 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.830810496 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.830461434 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.829449058 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.830959413 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.833684021 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.835481247 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.835942591 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.834574491 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.834073365 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.83405679 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.83593171 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.834964611 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.83211013 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.831439681 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.835620458 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.830703964 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.834237016 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.836499245 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.834186659 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.836438008 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.83528771 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.834610569 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.834099095 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.8352557 seconds)
  done (took 126.375950952 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.83367376 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.835018976 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.836147069 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.837940984 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.838762199 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.838943633 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.838923287 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.837575488 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.839562745 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.838768154 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.839680566 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.836673354 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.837621115 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.835901567 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.836099144 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.834746465 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.837398523 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.83825585 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.838230544 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.837549994 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.838688168 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.839481741 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.838246517 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.840078059 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.838702686 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.838844879 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.839059673 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.838843609 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.838619264 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.83840899 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.839773833 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.839393278 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.841156634 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.838390911 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.840321185 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.840936649 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.837687825 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.839556372 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.836915455 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.838531985 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.836399483 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.838848846 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.840536246 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.84132968 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.840687282 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.841218645 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.840621276 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.840280545 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.837881561 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.841360199 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.839834346 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.838116051 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.838247733 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.838609203 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.839611858 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.839025785 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.842782582 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.842854569 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.840819583 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.842037429 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.840541148 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.840201197 seconds)
  done (took 115.76550639 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.837733539 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.839522174 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.837618947 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.838167398 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.841102345 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.838935464 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.840491507 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.84203607 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.840770488 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.840616197 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842530367 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.836468511 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839085116 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839476726 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.835808927 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838902042 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.836977124 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.838315061 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.840963605 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.840289062 seconds)
  done (took 38.540780995 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.842301023 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.843741727 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.838950358 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.837403056 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.840028167 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.837253756 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.837428403 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839980319 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83799786 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842201525 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.842153496 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.841385626 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838504739 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.840446597 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.842431503 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.837823003 seconds)
  done (took 31.197581462 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.836786479 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.838953338 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.839318404 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.842822299 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.84158113 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.839625942 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.841044843 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.839822562 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.83946407 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.8428676 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.841990782 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.84148514 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.839546158 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.841337979 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.837881484 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.840677838 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.839411888 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.842033471 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.844284931 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.843990371 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.840461661 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.839277613 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.845892949 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.844255441 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.839693187 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.838636998 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.83812394 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.837796506 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.838109362 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.842066476 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.839096506 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.841441374 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.840025022 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.840100748 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.846231384 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.842903342 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.844132568 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.843285044 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.842300894 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.841082623 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.841321787 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.839754042 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.845586592 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.844453016 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.843472662 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.843948203 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.841928481 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.842808351 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.841513368 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.839965999 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.845327635 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.843882207 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.841171789 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.842994173 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.844939327 seconds)
  done (took 103.03879529 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.843031622 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.844501052 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.843432706 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.843432923 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.843956195 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.844106193 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.843604621 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.841965405 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.841464159 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.844222553 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.842636631 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.845476301 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.842593024 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.846287007 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.842585642 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.846694925 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.844608414 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.842829284 seconds)
  done (took 34.948871612 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.842961476 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.842386686 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.845351237 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.843380047 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.841254679 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.847282499 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.84341867 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.846275122 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.846932778 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.844507801 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844479714 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.8468448 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848697789 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.846491065 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.842059771 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.841721555 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.844712765 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.845129968 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.843546225 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.846360346 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.848387316 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.847713543 seconds)
  done (took 42.350691709 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.845248966 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.84813951 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.864002091 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.869095772 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.867798402 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.882167349 seconds)
  done (took 12.940708166 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844933953 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848360491 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.845500902 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846875105 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848499528 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846887114 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845544465 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844514414 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846549261 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844782131 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84517112 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847306651 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847080009 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845220844 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848801141 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84871369 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844147221 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846123996 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845392853 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848088402 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845084858 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847899547 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845608577 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843741212 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845525662 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84587238 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848377658 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848282384 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846561042 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849284008 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848242822 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84598207 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850393131 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845656878 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850186439 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848315585 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843858689 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848284473 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8495658 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848757032 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.850427277 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850734307 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850357035 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849428057 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850936083 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844912171 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847854981 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844842219 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845362294 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848095078 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847492318 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849156441 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8508155 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850286613 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850750217 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850636937 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847254576 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848529798 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851058488 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846990831 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846914784 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848887299 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846362292 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847291098 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850763284 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849091092 seconds)
  done (took 123.702967117 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84906971 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.849173225 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849059504 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851319617 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847367235 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84873937 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847477932 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849299901 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846905196 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847598172 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852270817 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850297583 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850590687 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849612969 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849474987 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847741685 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849077486 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848030191 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848382198 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850673877 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847228348 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849942872 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850074472 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851170013 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849921742 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852922802 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852220251 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849849955 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851328581 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848884397 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850363872 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84921743 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848232306 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.84936096 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849264122 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850954333 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851407833 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850488791 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852154411 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855275356 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852483972 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851062439 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848680183 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848342482 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848574272 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84974957 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848585105 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850227945 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849450551 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851704785 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85146732 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850265539 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851155195 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851067695 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850983058 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848973475 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849934703 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848783389 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851094854 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851042302 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853242712 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850775216 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854433332 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849713592 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851116957 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853038533 seconds)
  done (took 123.876437464 seconds)
done (took 2522.311425541 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.87234722 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.850824246 seconds)
  done (took 15.49100888 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.016187737 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.971839058 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.85342899 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.904014172 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.848005445 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.848596671 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.869640885 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.848573993 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.851851286 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.851927395 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.853609639 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.038603532 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.905845414 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.849834008 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.85433284 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.947435382 seconds)
  done (took 52.087640252 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.856174248 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.857920577 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.868050597 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.859018243 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.855533165 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.867204005 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.892130369 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.860853685 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.895732182 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.867917558 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.929927417 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.8641673 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.85602629 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.905514533 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.866207231 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.872236677 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.951679219 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.930708618 seconds)
  done (took 35.626198313 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.934017233 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.859636291 seconds)
  done (took 10.572338277 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.883546765 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.850043389 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.872705546 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.857211842 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.852333997 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.877946616 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.890459531 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.86425763 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.877266906 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.869471791 seconds)
  done (took 70.471207084 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.864399712 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.856069409 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.857895146 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.851404405 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.847066511 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.847461469 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.854611262 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.85229499 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.506118244 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.886988357 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.859221685 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.862844367 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.856435156 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.857353778 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.853735288 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.880622675 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.967135247 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.85354225 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.85251924 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.86229117 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.856026732 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.920698895 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.868836089 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.859231016 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.887364959 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.512322858 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.860794061 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.863385225 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.95858372 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.852671985 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.85492584 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.85555524 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.856653753 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.268152041 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.119822462 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.855821938 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.867726941 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.863682554 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.853472216 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.993455646 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.856114808 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.860533242 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.601586049 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.103050444 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.958903211 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.899040896 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.165563776 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.869978743 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.855765052 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.885674696 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.857842888 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.855849759 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.868863429 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.352588122 seconds)
  done (took 131.527595583 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.853655785 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.203568736 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.022927517 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.8521002 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.138470165 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.059241778 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.850022194 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.904774241 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.854206814 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.084907795 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.108249076 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.963506029 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.851068593 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.85523055 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.847296824 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.848976069 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.013364364 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.926378645 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.852005963 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.850142809 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.885494355 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.100095213 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.975811868 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.854860157 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.882558075 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.071501236 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.972927826 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.95857654 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.800325735 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.852113848 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.920099265 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.851989886 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.854030078 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.850360204 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.014438909 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.947521052 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.939065614 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.851533025 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.853224161 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.854811715 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.524540557 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056185346 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.947282893 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.993716052 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.052627427 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.058756168 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.639920269 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.854341724 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.600877344 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.018895164 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.085326867 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.090679887 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.972107841 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.85386023 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.384911228 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.853846404 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.852051211 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.105731831 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.995853163 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.952569158 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.85169552 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.856632415 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.850530545 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.105696665 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.853192996 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.948897791 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.851930171 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.853998049 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.954311919 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.955923491 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.991149704 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.064598892 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.882212983 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.78965584 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.395373698 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.10620121 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.919028674 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.104934229 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.85435515 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.853749289 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.93629405 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.696338356 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.114747441 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.10430735 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.108831365 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.892486875 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.578606621 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.853094275 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.085402629 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.077251289 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.116269583 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.067553344 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.094293951 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.175614343 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.853516103 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.852586201 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.084586795 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.992470115 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.854792819 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.201802308 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.088407416 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.404809768 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.878246406 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.165876041 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987472821 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.854667311 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.498992364 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.85515326 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.090356114 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.902838944 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.859258098 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.855071247 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.076507233 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.848771077 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.855609313 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.510262021 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.919926927 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.852997664 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.091620983 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.854700193 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.128069226 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.855941351 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.096766923 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.855320274 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.891180581 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.090217193 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.066283473 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.856365399 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.102707305 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.102189677 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.973298518 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.078334193 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.56872088 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.861408986 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.148146926 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.854955142 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.858833584 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.033209558 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.861355204 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.005883525 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.856805031 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.155392145 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.881479005 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.097243539 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.85718441 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.124277001 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.889974344 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911663963 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.8573743 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.991476521 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.861610759 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.794346233 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.018389342 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.859222399 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.85668753 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.665421627 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.857742938 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.008431693 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.093826317 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.881790964 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.936021639 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.528959559 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.860776563 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.941830445 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.881157645 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.250285731 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.85870054 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.115009185 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.861186354 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.856640748 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.856824283 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.105784018 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.046768854 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.863960597 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.855573202 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.773725706 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.861542943 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.86164306 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.044511288 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.312686431 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.861587968 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.066587353 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.859937699 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988777424 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.860328158 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.93527161 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.204155228 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.859502722 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.858200044 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.859205004 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.860071943 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.861070289 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.124792435 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.884097937 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.391827056 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.001250036 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.141351165 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.173613243 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.116462648 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.904903562 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.861417941 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.114514253 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.860876198 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.925670806 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.860956466 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.885304064 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.092063659 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.858705633 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.073194205 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.142009249 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.721460488 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.909971531 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.861503252 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.859489293 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.857506109 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.007569133 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.94576411 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.858058342 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.85681276 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.973631722 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.979015627 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.064495231 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.85942264 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.913726939 seconds)
  done (took 900.785226498 seconds)
done (took 1218.331877108 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.853408835 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.849284548 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.839148025 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.850623182 seconds)
  done (took 29.16579957 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.858718247 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.859363922 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.85878986 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.855671402 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.85830391 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.853785562 seconds)
  done (took 12.918653272 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.310587494 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.845113635 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.847931838 seconds)
  done (took 21.774286476 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.920390711 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.230156037 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.949685597 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.270567746 seconds)
  done (took 10.143074919 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.852353955 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.851303121 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.852480542 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.852898082 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.854814735 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.85221743 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.85029909 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.851474495 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.851989886 seconds)
  done (took 18.442386208 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.07099469 seconds)
done (took 98.288735006 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.935269948 seconds)
    (2/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.158142422 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.138129085 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.955747569 seconds)
    (5/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.677217994 seconds)
    (6/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.865098272 seconds)
    (7/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 3.250461962 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.904390624 seconds)
    (9/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.872572944 seconds)
    (10/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.997303856 seconds)
    (11/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.956601207 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.849702898 seconds)
    (13/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.611587375 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.852277236 seconds)
    (15/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.123912091 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.185422698 seconds)
    (17/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.892543089 seconds)
    (18/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.036701908 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.127988426 seconds)
    (20/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.288505678 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.039484882 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.187403744 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.2270503 seconds)
    (24/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.961148366 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.226676668 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.765354823 seconds)
    (27/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.379671645 seconds)
    (28/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.854811508 seconds)
    (29/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 8.206652665 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.889245524 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.816177829 seconds)
    (32/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.260373984 seconds)
    (33/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.679796506 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.040622362 seconds)
    (35/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.965238428 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.86403387 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.973728436 seconds)
    (38/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.955496111 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.958803591 seconds)
    (40/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.444806827 seconds)
    (41/309) benchmarking ("sort", Bool, false)...
    done (took 2.102288299 seconds)
    (42/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.996325161 seconds)
    (43/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.320099061 seconds)
    (44/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.769652438 seconds)
    (45/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.870508357 seconds)
    (46/309) benchmarking ("sort", Int64, false)...
    done (took 5.563614908 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.202341756 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.12197181 seconds)
    (49/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.8693572 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.960740871 seconds)
    (51/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.963753164 seconds)
    (52/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.025469819 seconds)
    (53/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.88579253 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.262441234 seconds)
    (55/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.375515993 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.144693997 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.960455156 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.008271723 seconds)
    (59/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.973987632 seconds)
    (60/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.965564169 seconds)
    (61/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.48132985 seconds)
    (62/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.287027998 seconds)
    (63/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.893409457 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.867114446 seconds)
    (65/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.885581343 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.569630221 seconds)
    (67/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.903461609 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.940078849 seconds)
    (69/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.152517767 seconds)
    (70/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.026536591 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.055462787 seconds)
    (72/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.979495359 seconds)
    (73/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.078758607 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.797986709 seconds)
    (75/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.892890427 seconds)
    (76/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.245958168 seconds)
    (77/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.925652612 seconds)
    (78/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.228484153 seconds)
    (79/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.875285658 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.152199336 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.265328222 seconds)
    (82/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.164092081 seconds)
    (83/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.038760607 seconds)
    (84/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.891965949 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.882031363 seconds)
    (86/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.865528182 seconds)
    (87/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.970479364 seconds)
    (88/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.130773569 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.880296603 seconds)
    (90/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.359867899 seconds)
    (91/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.958440731 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.66300052 seconds)
    (93/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.945700889 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.107537746 seconds)
    (95/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.881690196 seconds)
    (96/309) benchmarking ("sort", Float64, false)...
    done (took 5.642584535 seconds)
    (97/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.003299984 seconds)
    (98/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.86022446 seconds)
    (99/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 3.229143617 seconds)
    (100/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.423347135 seconds)
    (101/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.866874614 seconds)
    (102/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.995642361 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.864480812 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.080730226 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.996263262 seconds)
    (106/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.890566785 seconds)
    (107/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.001054648 seconds)
    (108/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.104181607 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.685367905 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.944494312 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.936154827 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.254159711 seconds)
    (113/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.019821138 seconds)
    (114/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.059042048 seconds)
    (115/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.869470935 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.33060454 seconds)
    (117/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.044149596 seconds)
    (118/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.275912546 seconds)
    (119/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.903511299 seconds)
    (120/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.247121775 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.225735616 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.873799957 seconds)
    (123/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.251645424 seconds)
    (124/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.100378421 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.123146947 seconds)
    (126/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.950015407 seconds)
    (127/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.080255182 seconds)
    (128/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.931429581 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.937514437 seconds)
    (130/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.954231692 seconds)
    (131/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.892412442 seconds)
    (132/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.571233292 seconds)
    (133/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.307513799 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.86660215 seconds)
    (135/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.872989402 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.120665801 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.018382894 seconds)
    (138/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.890156954 seconds)
    (139/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.096764015 seconds)
    (140/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.22670213 seconds)
    (141/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.909374528 seconds)
    (142/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.851727223 seconds)
    (143/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.037350015 seconds)
    (144/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.163905512 seconds)
    (145/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.940810505 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.792223908 seconds)
    (147/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.89676425 seconds)
    (148/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.860824863 seconds)
    (149/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.158927063 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.822963468 seconds)
    (151/309) benchmarking ("sort", Int8, false)...
    done (took 4.751256475 seconds)
    (152/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.883815464 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.989314489 seconds)
    (154/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.88828898 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.938399374 seconds)
    (156/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.883650692 seconds)
    (157/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.852959777 seconds)
    (158/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.980327657 seconds)
    (159/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.891155569 seconds)
    (160/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.958195351 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.520510331 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.502432906 seconds)
    (163/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.893209558 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.220062336 seconds)
    (165/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.939037599 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.86756762 seconds)
    (167/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.771727222 seconds)
    (168/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.031077092 seconds)
    (169/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.108238301 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.871019396 seconds)
    (171/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.920136252 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.960067215 seconds)
    (173/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.919147859 seconds)
    (174/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.125019938 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.191133767 seconds)
    (176/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.963703195 seconds)
    (177/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.006562852 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.183750484 seconds)
    (179/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.87037701 seconds)
    (180/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.111957064 seconds)
    (181/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.939886852 seconds)
    (182/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.900075107 seconds)
    (183/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.995799989 seconds)
    (184/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.87201215 seconds)
    (185/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.098319382 seconds)
    (186/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.857598341 seconds)
    (187/309) benchmarking ("map", identity, Int8, false)...
    done (took 3.119431536 seconds)
    (188/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.112572592 seconds)
    (189/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.769940603 seconds)
    (190/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.872861512 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.314315857 seconds)
    (192/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.882413998 seconds)
    (193/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.181409701 seconds)
    (194/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.007085044 seconds)
    (195/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.007980699 seconds)
    (196/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.868034381 seconds)
    (197/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.903424785 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.048018078 seconds)
    (199/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.894686484 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.867604986 seconds)
    (201/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.004032028 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.934115512 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.866794722 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.904876044 seconds)
    (205/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.312746514 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.116878095 seconds)
    (207/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.073703773 seconds)
    (208/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.886526826 seconds)
    (209/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.183877292 seconds)
    (210/309) benchmarking ("sort", Float32, false)...
    done (took 5.623412162 seconds)
    (211/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.22320707 seconds)
    (212/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.00880317 seconds)
    (213/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.291078041 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.078678719 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.624011513 seconds)
    (216/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.293410474 seconds)
    (217/309) benchmarking ("sort", BigInt, false)...
    done (took 6.877597446 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.720514838 seconds)
    (219/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.995760729 seconds)
    (220/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.19658322 seconds)
    (221/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.880525293 seconds)
    (222/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.894421081 seconds)
    (223/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.853131573 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.603290076 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.860013715 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.146351128 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.991630227 seconds)
    (228/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.873014074 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.966277411 seconds)
    (230/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.040673725 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.85949026 seconds)
    (232/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.71173644 seconds)
    (233/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.876249132 seconds)
    (234/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.055566444 seconds)
    (235/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.38546918 seconds)
    (236/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.861670012 seconds)
    (237/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.297308603 seconds)
    (238/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.038107851 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.262130665 seconds)
    (240/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.854867149 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.116255896 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.809484792 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.279165142 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.159456022 seconds)
    (245/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.988577974 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.973941465 seconds)
    (247/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.946582457 seconds)
    (248/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.01558561 seconds)
    (249/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.942550147 seconds)
    (250/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.550450847 seconds)
    (251/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.89157705 seconds)
    (252/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.931009969 seconds)
    (253/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.054720953 seconds)
    (254/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.850989992 seconds)
    (255/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.395022598 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.888843819 seconds)
    (257/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.193187958 seconds)
    (258/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.418886543 seconds)
    (259/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.959863543 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.934159209 seconds)
    (261/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.998313449 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.667193468 seconds)
    (263/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.025983405 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.201628142 seconds)
    (265/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.874898409 seconds)
    (266/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.895067978 seconds)
    (267/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.923763812 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.118943829 seconds)
    (269/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.105082659 seconds)
    (270/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.129350046 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.839599587 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.610255046 seconds)
    (273/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.250558119 seconds)
    (274/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.950828612 seconds)
    (275/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.838918197 seconds)
    (276/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.021999755 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.052185427 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.102255249 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.836469385 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 8.045906146 seconds)
    (281/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.907840362 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.236643136 seconds)
    (283/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.79747005 seconds)
    (284/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.946313112 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.177761356 seconds)
    (286/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.947987734 seconds)
    (287/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.845991934 seconds)
    (288/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.706153832 seconds)
    (289/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.035624861 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.727972464 seconds)
    (291/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.005313381 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.1564383 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.838847746 seconds)
    (294/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.845490434 seconds)
    (295/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.918407801 seconds)
    (296/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.114084091 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.89060445 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.888955693 seconds)
    (299/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.969249625 seconds)
    (300/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.935487655 seconds)
    (301/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.948671497 seconds)
    (302/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.417505929 seconds)
    (303/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.142265995 seconds)
    (304/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.018849598 seconds)
    (305/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.745027411 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.048236575 seconds)
    (307/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.913942714 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.164805396 seconds)
    (309/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.317867919 seconds)
  done (took 1004.454663603 seconds)
done (took 1006.298685631 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.864787168 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.856201816 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.83951116 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.861907033 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.951677 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.867412334 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.849010081 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.842562636 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.889324803 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.890441609 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.837520464 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.865201947 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.842342126 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.841334414 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.84091657 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.854358398 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.151005393 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.869669197 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.856557956 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.850673365 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.858113755 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.837957342 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.891857891 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.865322944 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.844417206 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.842239952 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.844531823 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.860953561 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.95277753 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.844489984 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.844065285 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.852515818 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.151330896 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.870944905 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.837620117 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.861168459 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.854156323 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.854132243 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.84562693 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.874032845 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.232796388 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.877229596 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.844173124 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.84216798 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.843166521 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.845916482 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.843500231 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.849556418 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.855915153 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.856075485 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.230277165 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.896730305 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.844584132 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.844034118 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.852684481 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.842870596 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.846373528 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.857311513 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.863226531 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.858161162 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.134248379 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.876266934 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.846724656 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.861256229 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.85311712 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.263762922 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.876130646 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.848292058 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.234959981 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.885236775 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.267607025 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.891290291 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.845708929 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.857505857 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.87742962 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.153982836 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.867521928 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.844221617 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.851426549 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.840232856 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.852586033 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.856445961 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.849847562 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.844682678 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.858711827 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.871789169 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.855776754 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.846309051 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.853882653 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.864688887 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.851460719 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.854749974 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.846417276 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.840507037 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.854771528 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.848740036 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.847550369 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.847515189 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.851636376 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.856152453 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.234328825 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.899110706 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.843284175 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.840848321 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.844372905 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.859086858 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.235013464 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.88387121 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.867420378 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.89337588 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.84736445 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.140270943 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.877198902 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.86268019 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.854491587 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.848947981 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.841344873 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.137761656 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.260540468 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.898265186 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.848339628 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.84426877 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.862956883 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.849821457 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.844340272 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.157065936 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.875060556 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.859857511 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.967097351 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.857318977 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.87897258 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.844193221 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.850987563 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.876416623 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.864056323 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.879010946 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.852640727 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.86259485 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.864125737 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.843736932 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.857687146 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.856877846 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.850228001 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.852372893 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.843053149 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.878760262 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.861272871 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.861973923 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.869583341 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.970108788 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.84560229 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.141926681 seconds)
done (took 289.874855603 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.919342849 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.838072996 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.944619446 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.845625649 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.927074473 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.930516091 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.842446755 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.84294499 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.843140068 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.215314466 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.842333901 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.852011602 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.844063888 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.844278078 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.929653866 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.846708482 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.8446929 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.17825271 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.847068695 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.917349157 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.838917131 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.843530971 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.846767135 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.266135598 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.840870094 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.846279358 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.917570473 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.846769007 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.176694851 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.835623879 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.837635172 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.174362645 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.932725786 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.863900456 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.846742634 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.843802725 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.918041664 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.841666249 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.921732207 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.914575203 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.935232062 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.864897435 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.830371315 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.828218587 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.830281716 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.832107247 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.827787593 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.858232429 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.833213916 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.823121197 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.161298017 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.836802541 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.835153886 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.823112763 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.825346796 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.849523158 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.825130891 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.82924975 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.915908824 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.826908809 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.886913695 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.243993801 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.197082041 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.828365889 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.821043627 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.824018491 seconds)
  done (took 182.204021875 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.892418769 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.902172744 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.891400851 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.828656351 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.873054386 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.890024074 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.828013183 seconds)
  done (took 14.847376128 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.829696288 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.821002948 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.873231351 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.872716746 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.821725424 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.97242438 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.818223444 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.828725895 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.816324398 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.87014373 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.820277823 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.823195923 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.8241096 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.816171408 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.867538171 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.824533402 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.929661974 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.812804073 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.813893266 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.964123341 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.808658701 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.819350395 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.865863312 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.822607206 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.818102114 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.81548946 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.395532575 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.809069129 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.807198876 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.808744293 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.805933825 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.847721316 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.808610872 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.80603654 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.804890933 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.921931798 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.808349492 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.805018749 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.807271445 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.799743135 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.808100158 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.807509854 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.809210782 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.805771062 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.808315305 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.83078009 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.809795396 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.808620321 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.807897562 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.808321105 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.858513791 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.808227739 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.805365382 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.807031701 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.863794334 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.816380051 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.810887744 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.807468412 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.809391665 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.806508036 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.95906832 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.858345045 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.809290443 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.859983066 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.809350637 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.811790586 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.809077117 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.809816278 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.906015047 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.810457347 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.861416552 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.807407848 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.967858663 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.83400229 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.81109179 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.812912335 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.812931105 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.810919412 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.805979335 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.817191495 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.807466164 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.811362069 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.816019689 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.808019097 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.807397041 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.921821492 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.916848248 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.808444422 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.82360998 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.817806558 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.807492294 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.863778902 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.81126836 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.809220499 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.868005193 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.926681527 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.864525086 seconds)
  done (took 200.120716653 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.816257527 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.818398194 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.812390545 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.82795517 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.81125598 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.812621425 seconds)
  done (took 12.62604773 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.815828767 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.813106117 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.810537152 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.810436206 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.811629116 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.812945079 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.81242325 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.812024429 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.816680656 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.811805379 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.812559645 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.814806247 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.815138992 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.812535082 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.813859787 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.811137774 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.812025464 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.807754194 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.811257703 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.812302644 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.959358937 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.813521082 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.813956513 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.814998549 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.81897581 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.814629546 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.821358158 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.813686996 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.81267562 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.821907961 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.817716896 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.813906011 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.815595119 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.8204175 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.820195646 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.814584439 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.818388464 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.814621044 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.811308581 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.815700073 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.815052813 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.814435052 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.813533492 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.816889799 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.815375921 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.819636489 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.820073951 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.821903582 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.816868519 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.815318129 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.817175577 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.814871778 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.81708276 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.817763062 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.816669691 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.81846777 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.818227052 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.815523701 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.815836673 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.815791312 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.816618962 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.815576294 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.81724375 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.819928216 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.821791721 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.817411469 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.816743054 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.820331753 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.815665702 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.815623516 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.817307501 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.813161888 seconds)
  done (took 133.592516591 seconds)
done (took 545.166557806 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.995534053 seconds)
  done (took 8.726167999 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.886278547 seconds)
  done (took 8.938329381 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.665462698 seconds)
  done (took 10.424845235 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.866687139 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.868551008 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.845452667 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.848658235 seconds)
  done (took 29.214858491 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.870655364 seconds)
  done (took 8.63000868 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.864144935 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.836411799 seconds)
  done (took 15.491971616 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.913855692 seconds)
  done (took 8.674206897 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.348609314 seconds)
  done (took 9.134981384 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.851455618 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.870865198 seconds)
  done (took 15.500707744 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.824993205 seconds)
  done (took 8.585772572 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.295189681 seconds)
  done (took 11.145521667 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.850653999 seconds)
  done (took 8.711697914 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.893139203 seconds)
  done (took 8.655666559 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.975399121 seconds)
  done (took 8.735021896 seconds)
done (took 162.30238823 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.844478318 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.837905731 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.836559789 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.839021701 seconds)
  done (took 29.116907249 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.880545973 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.875709658 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.876230934 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.885506426 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.877533656 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.875882778 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.867509073 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.865127357 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.884630022 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.876942372 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.875672752 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.880295794 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.870736476 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.863555968 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.872562007 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.873373261 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.882278913 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.867856836 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.860588938 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.869912882 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.834682736 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.879183645 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.874317168 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.832949517 seconds)
  done (took 46.664624952 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.029321549 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.904656378 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.985936865 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.883051501 seconds)
  done (took 9.551143326 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.882948361 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.885504365 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.897596873 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.937357343 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.959724052 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.896039772 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.858555142 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.854358792 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.839980218 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.886155201 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.959790326 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.879243605 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.97653803 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.831914252 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.015807461 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.829833028 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.829592557 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.881906236 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.937821237 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.95553776 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.828499572 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.879895563 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.882217458 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.881264485 seconds)
  done (took 47.215839549 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.823463398 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.831718164 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.830205656 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.824917912 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.829422651 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.821555551 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.827502165 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.823378448 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.843121706 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.829530753 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.818239056 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.817837154 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.817254081 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.817893352 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.817708846 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.833339251 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.826440873 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.815067961 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.820649423 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.819306091 seconds)
  done (took 38.230063379 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.80769225 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.658422671 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.156293787 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.061311093 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.806306463 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.801884613 seconds)
  done (took 31.027814364 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.823646509 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.813273127 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.811018928 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.870447887 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.952570288 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.815370275 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.812259991 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.823349859 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.858408939 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.87450407 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.832212153 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.83861222 seconds)
  done (took 23.852286479 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.808434111 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.81517326 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.806866736 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.829317033 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.821936937 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.817494165 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.817941659 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.806522812 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.823492393 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.830571524 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.819719691 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.823627935 seconds)
  done (took 43.551990647 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89403627 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.700561461 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.460891669 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.608565642 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.342617414 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.014062807 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.465076327 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.978266493 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.809136224 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079617926 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.399109777 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049329927 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.061553667 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808081243 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.875993562 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.262688789 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10292798 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039126449 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836047779 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.518998367 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939028226 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.480648643 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.544928863 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.947658905 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.037024362 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.95777661 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.0848815 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.778438746 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958178444 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862986311 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840579122 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.824306968 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104176984 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039892751 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952797087 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831979251 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.480454322 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.533587018 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.80508616 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.496790675 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.524676558 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.941842094 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823429669 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818032443 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.749925836 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.462115781 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990349046 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.81779905 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.518189012 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.816084207 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.827433391 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909089734 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.820698906 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.631792985 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775010136 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.091846619 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.814086772 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824774375 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.388413893 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.921651113 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.566439891 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.755323581 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.915054388 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.509362697 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.295897932 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.974435307 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.821203551 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.823000236 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.751951669 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.538095409 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939017415 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.966282991 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.836745675 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.471143046 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110651419 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.480287966 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.894818838 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111082762 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.734765838 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.755439068 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048166911 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.775978907 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.757869166 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.677377668 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.757270898 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101275826 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857082387 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.474855178 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861116395 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.992302643 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.826480294 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842718114 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82859118 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.044160912 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.703534347 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8229334 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.36331253 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.098958008 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841352823 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.99559554 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.75080813 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.823292012 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076479521 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.034822929 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.186623921 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.286864256 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982849423 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821402608 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.913473258 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.879501803 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.833214855 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.098498609 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887706285 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.903874547 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950159884 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.7832021 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130639613 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853199424 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.003612364 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.435357184 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085292575 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.149273724 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.079390635 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911658205 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.831296942 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.827183715 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.567613593 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.448401637 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.053764892 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.830690115 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.441990572 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.833268604 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.833542191 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.764365383 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.491531671 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.427530303 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.929575623 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.053573779 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.910004693 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106539124 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762875727 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.974522396 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.938546105 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.047891679 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.476430508 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.904448693 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090294641 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358573333 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.178886248 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984551012 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847818614 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94943844 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853519192 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.258849133 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.220431145 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.833835062 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.835089158 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.589041663 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.902206431 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842581201 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.841614779 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.632415581 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122347077 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.866241374 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.834191898 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.777642988 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.850526587 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918232773 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.842339767 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.845677386 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.364469551 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.586454315 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.847059295 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.519542597 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057036677 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846203974 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.571831999 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026606925 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.928354363 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.116263928 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909110874 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.775030389 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.543485056 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.54152454 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841836339 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.775408127 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.842688927 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850745842 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850022236 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.064258178 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.119607357 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895274907 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.557888829 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.953713897 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851911114 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.847956826 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846554494 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.346106728 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.955465953 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.445376698 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.973681212 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980681001 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.858668164 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.779798728 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.848236724 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.847777701 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.846578182 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.801175497 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898145586 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.548760829 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178049225 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.101855228 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.4943047 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859614468 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.806149778 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.969884299 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.863300301 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.383036122 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918518627 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.952250944 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976938317 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.913772363 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.640392339 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.668240163 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.472683839 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208172367 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.229202897 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350361465 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.39030486 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.242980845 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.07836883 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134027035 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.431579685 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.9618167 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083172605 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84660446 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996644324 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.556372913 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.260057683 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921518407 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13416049 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293199094 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.50235395 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062213952 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.117537369 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94187894 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.846166358 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.954788349 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.427211587 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065372782 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.507114473 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.132608623 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076218648 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.445769333 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.011364126 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.908999884 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.395320796 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992648286 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.61619549 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.268694626 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.571297327 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.517163677 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278514626 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.905579661 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.351252826 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263596199 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378176761 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.998198319 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841300482 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.919093648 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.916818022 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.909309567 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.889590097 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.817974422 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.180650149 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9186771 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142950906 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.309702254 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173182626 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.827675913 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.913814447 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910322211 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223704517 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.675788939 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162767837 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.363472271 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.502149613 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919420942 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.842301117 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843377294 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.611904015 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.913215662 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.885936322 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138465636 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.026334466 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.867749143 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395396105 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239524345 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.166150631 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.924724008 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.188393937 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190809498 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.6461959 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93550946 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.011107648 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.442711925 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.617970728 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.132554454 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.145814828 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711821847 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.136741082 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.597129237 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.88610662 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.910625486 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.122153805 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.132368027 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.517269324 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159296957 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.635610275 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.925433499 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281553337 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976192473 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.515855291 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.121677484 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.00449106 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922875478 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991955119 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9231038 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.922016309 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.91870442 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958169353 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.523140847 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.043201675 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.9259255 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003624088 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.999545192 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.493227426 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.924143284 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194395853 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26720597 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.24812212 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981439303 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.912901871 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916797296 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848617927 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048421532 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.360831285 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188816285 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.0454958 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.106146832 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935647422 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.445724215 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.301973635 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244015404 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18971563 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.809273907 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913209594 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.00636532 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.139813743 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923511777 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.124219957 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152695689 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254434981 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389397078 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.153770758 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.208341016 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187672075 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.285581779 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.918394091 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.508680621 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.926944552 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.463670026 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.960769165 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.532937062 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197798395 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927840217 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134379626 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.934894653 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.11419504 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.370174301 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.600937087 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.275457932 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.909072981 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.973409526 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.198153507 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.318687153 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233703142 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996325703 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928160019 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.637588392 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055399775 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.853603138 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.170072206 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.916929819 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127826182 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.631384104 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.925948786 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197576028 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235332804 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.91458103 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.88418788 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967518665 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.928662111 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.141028574 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.19417809 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.171170618 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926806807 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.919013716 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.731452669 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.199643382 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981143176 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852912384 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.91739896 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016482238 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.16572928 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93980901 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.435556984 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.621950167 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224605146 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.843789638 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941635067 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422356888 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380984445 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255004007 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.449945449 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152645481 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.481293426 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.868920491 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.310825727 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.923148074 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.417208959 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.313278063 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.923371821 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.523075569 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047616758 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.200232934 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.252129386 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.930219206 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752275867 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.962854593 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143657533 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.520472215 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860771966 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.922582072 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.983395937 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.918845395 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.047848396 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927259983 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.916270266 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901903018 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.772942015 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.415691469 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.921604659 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.909448261 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.44704426 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.570611992 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04396082 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079516065 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921135687 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.641007443 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.212808664 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.174558445 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.515939511 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.005423166 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.924565955 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921200053 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.847932461 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.118339547 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.117199845 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234548838 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.371889536 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.048039419 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.925461548 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.13661533 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131372331 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.517791776 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077402344 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412108069 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050892895 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.849912099 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.633106052 seconds)
  done (took 1683.862655959 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.945961754 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.934864366 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.93422674 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.974025416 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.946969425 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.944719387 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.994452348 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.019301771 seconds)
  done (took 57.535361918 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.927909004 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.105870172 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.931488065 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.924262222 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.944264491 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.928462533 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.116841557 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.936028788 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.943999337 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.940403656 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.933691446 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.939867309 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.191009431 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.950260569 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.926655373 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.319307879 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.945074377 seconds)
  done (took 75.75680394 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.930601924 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.312626165 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.950637437 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.95329509 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.900798219 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.934297283 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.993156287 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.975353064 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.932396616 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.104885038 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.261251676 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.941963712 seconds)
  done (took 91.037026373 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.945180387 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.935762284 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.934241835 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.935299886 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.933801498 seconds)
  done (took 11.537537616 seconds)
done (took 2190.718067993 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.171901143 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.116658658 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.150831328 seconds)
  done (took 6.114290592 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.074977513 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.121130577 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.240224971 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.245003107 seconds)
  done (took 10.525664399 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.221137977 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.298275837 seconds)
  done (took 6.358708671 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.258967638 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.959079525 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.34283949 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.92430014 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.926600896 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.928279317 seconds)
  done (took 22.627403568 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.926846693 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.933593879 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.928823981 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.931339474 seconds)
  done (took 9.563513994 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.912100187 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.64053032 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.914875185 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.923522321 seconds)
  done (took 21.231039685 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.676232077 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.052582331 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.676552725 seconds)
  done (took 9.246805048 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.482185846 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.14491801 seconds)
  done (took 9.469009279 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.086626928 seconds)
  done (took 3.927473527 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.957853196 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.199064211 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.491776886 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.504931761 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.538445658 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.785597177 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.24689165 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.161006637 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.373762727 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.388921577 seconds)
  done (took 25.492750126 seconds)
done (took 140.136568146 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.2839317 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.959823878 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.130932075 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.288425421 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.163971539 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.127354452 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.147091362 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.287173937 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.973146985 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.955493262 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.29028762 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.161010228 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.095549716 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.947054583 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.103582776 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.95273388 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.157822879 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.299690719 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.970247661 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.206933605 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.157834356 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.936762595 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.128202577 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.953056692 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.157293901 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.07700663 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.484101827 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.956086959 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.109723411 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.495722932 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.080704497 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.358125624 seconds)
  done (took 170.240764001 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.932521646 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.929183031 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.930113264 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.930209068 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.385580837 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.928374281 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.929751979 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.930882231 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.429168057 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.42715925 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.932214095 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.37701574 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.92933167 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.932305525 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.930086298 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.928771833 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.571049982 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.929517811 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.93226465 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.927314061 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.928573765 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.221303546 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.92998791 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.223617814 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.569754291 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.931046563 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.929347503 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.928167516 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.932892999 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.925655095 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.930688434 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.92767104 seconds)
  done (took 211.370866248 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.933503841 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.932518699 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.933552202 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.931762007 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.932715413 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.934572913 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.932981299 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.929881874 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.657569599 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.652526087 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.932016528 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.929000174 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.93712729 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.931056769 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.930552575 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.932568642 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.930649758 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.928828228 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.931429925 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.932840679 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.933861845 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.672813569 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.933924408 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.681307811 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.9322529 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.935545251 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.934050237 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.937817518 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.941637593 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.947349939 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.947298201 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.932337802 seconds)
  done (took 222.666161159 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.194335984 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.940349458 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.943512436 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.853652866 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.939155716 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.93760984 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.945919665 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.186018912 seconds)
  done (took 19.810022653 seconds)
done (took 625.941937777 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.416658488 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.260335412 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.119953777 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.961239336 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.205557153 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.994938696 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.961683545 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.027515888 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.587882926 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.030281185 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.632559136 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.985116122 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.719900085 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.98934032 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.078582824 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.018396731 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.501601871 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.588967811 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.13346666 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.025658436 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.130236923 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.900425967 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.042953226 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.616382815 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.73544698 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.963136638 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.019031075 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.513106441 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.972389326 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.117065093 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.695637895 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.269235372 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.975011062 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.957135704 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.013542471 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.990446529 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.215769033 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.9744935 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.084028245 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.715346901 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.029435561 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.501486603 seconds)
  done (took 105.517930016 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.930928457 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.928324678 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.927409065 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.928652864 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.928746378 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.933189482 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.928811688 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.92748542 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.931016642 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.930830765 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.9307373 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.929377825 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.924761661 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.929811827 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.925845615 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.927584549 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.930073061 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.931443022 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.929840488 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.931692724 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.932316768 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.9299443 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.943548812 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.92911866 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.928922727 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.928658639 seconds)
  done (took 52.039775173 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.941969464 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.096871071 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.186617774 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.968283553 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.944718909 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.947631588 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.962376138 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.947463144 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.944591197 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.946451826 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.051299878 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.94997488 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.965575188 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.184865725 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.961406967 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.944778967 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.944815767 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.946081606 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.103728837 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.961399851 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.96394789 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.948468423 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.961628784 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.959821724 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.945777659 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.945882212 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.951664946 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.439197631 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.955839564 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.049897372 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.992707615 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.970429851 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.350673206 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.195883007 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.000971205 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.954219405 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.945521609 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.056753797 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.955608014 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.945931409 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.966353903 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.952573866 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.185984339 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.444270351 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.961693092 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.945852119 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.449195214 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.065606075 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.98908809 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.955989279 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.185475943 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.965503296 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.950141483 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.946249899 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.984168492 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.947438744 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.946162714 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.298290919 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.957824548 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.964503911 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.952074439 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.950098464 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.108482831 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.958883122 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.098493571 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.955301949 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.952229066 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.946729796 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.184899652 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.962826363 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.449939028 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.968178747 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.954753121 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.059087629 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.109277712 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.484156316 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.968246552 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.110924265 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.374627595 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.97457984 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.957920966 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.434535824 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.983273321 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.963874959 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.958993563 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.956349698 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.956187532 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.995688213 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.969190644 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.384194174 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.460097558 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.321538766 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.983623454 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.970773913 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.95828885 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.304804703 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.958261828 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.950813712 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.18629949 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.46660271 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.967345248 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.956759699 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.438339483 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.972225055 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.972866596 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.962966499 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.195810647 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.971070917 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.001377174 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.953750281 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.964165862 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.954122459 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.97033326 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.959389347 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.955093607 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.438638438 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.080984908 seconds)
  done (took 241.669223669 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.950567904 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.951866775 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.952639549 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.972234228 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.949963629 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.95161557 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.94677893 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.951499959 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.956341587 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.947599033 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.948501393 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.950015021 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.951347278 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.957957488 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.969930744 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.960535028 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.557299353 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.952263807 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.949444154 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.96394144 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.610061018 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.955667853 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.949422442 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.946774708 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.951021036 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.949138586 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.959966644 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.964094611 seconds)
  done (took 169.843119361 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.953355433 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.071810614 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.975630203 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.981819166 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.962230158 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.952701125 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.979523657 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.970984595 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.962272488 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.953619654 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.949480616 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.01726302 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.961063838 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.052531793 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.982399335 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.982872657 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.058778372 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.960442236 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.955990302 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.95604542 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.984421854 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.949784307 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.017814781 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.081232521 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.975922203 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.068771857 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.960935822 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.956140985 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.955314153 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.073639676 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.971631126 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.014895652 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.987755636 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.973753111 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.074427456 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.073535448 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.057312865 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.980683336 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.958370426 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.952905756 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.954825191 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.944606765 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.074918248 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.975476983 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.959331535 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.062855816 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.974338055 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.956349267 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.963127998 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.950571802 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.968906027 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.975656909 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.02565412 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.089989812 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.988237158 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.979346856 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.98093145 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.23904923 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.965479806 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.05332786 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.945469846 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.072177255 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.980134977 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.945713741 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.956367108 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.964360584 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.987354217 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.989904515 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.060897281 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.963468161 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.05830971 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.990484511 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.963129115 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.955777608 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.96279289 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.07605997 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.077128875 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.990833119 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.995400365 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.988158157 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.956768606 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.956400858 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.945562121 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.973185113 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.95970216 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.070385728 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.076721677 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.964243488 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.962388626 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.960902873 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.961262462 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.985349525 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.087531691 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.999764311 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.049118138 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.024548374 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.032267962 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.97291181 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.972266926 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.962470232 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.021332407 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.977239358 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.969243286 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.288237333 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.027637676 seconds)
  done (took 211.739836273 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.41315162 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.009245115 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.015428575 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.275846192 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.315332722 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.031321704 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.006468488 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.010133937 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.031842144 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.194664115 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.081326467 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.02678594 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.99285415 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.979711042 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.008772622 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.029505551 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.019844468 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.339901881 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.118291453 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.155907286 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.989853039 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.306837071 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.280859807 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.399081836 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.043366275 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.329788034 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.679949554 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.152167855 seconds)
  done (took 64.111522066 seconds)
done (took 846.769763857 seconds)
SAVING RESULT...
DONE!
