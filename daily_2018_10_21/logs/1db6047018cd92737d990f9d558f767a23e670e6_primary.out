cset: moving following pidspec: 16662
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.229292743 seconds)
loading group "string"... done (took 0.461293495 seconds)
loading group "linalg"... done (took 7.536903349 seconds)
loading group "parallel"... done (took 0.169694536 seconds)
loading group "find"... done (took 1.167843921 seconds)
loading group "tuple"... done (took 2.082745887 seconds)
loading group "dates"... done (took 1.321184048 seconds)
loading group "micro"... done (took 0.246592805 seconds)
loading group "io"... done (took 0.648772006 seconds)
loading group "scalar"... done (took 40.640126398 seconds)
loading group "sparse"... done (took 12.467553513 seconds)
loading group "broadcast"... done (took 1.112860008 seconds)
loading group "union"... done (took 13.623293801 seconds)
loading group "simd"... done (took 4.768260321 seconds)
loading group "random"... done (took 9.644031994 seconds)
loading group "problem"... done (took 1.965997488 seconds)
loading group "array"... done (took 22.463353699 seconds)
loading group "misc"... done (took 1.417631764 seconds)
loading group "sort"... done (took 3.579599537 seconds)
loading group "collection"... done (took 19.385071897 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.513401241 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137114751 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132036998 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.14775743 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202815919 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.141964548 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158808564 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113438872 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.950190469 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181726919 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15450047 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.514093104 seconds)
done (took 5.097549135 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.223932672 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093520934 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103206333 seconds)
  done (took 0.869175014 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077909984 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144859807 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09481938 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078403521 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093940448 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077686407 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094148324 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078137916 seconds)
  done (took 1.340158784 seconds)
done (took 3.198369046 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.733131164 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.277715226 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202652108 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.459975973 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19465493 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214523365 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679464037 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.355034419 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.25331669 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100006442 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143007346 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387950009 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13767685 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679503872 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089979362 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122907408 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176582698 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.458582778 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082531651 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.1101394 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116059375 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141481567 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.12917922 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090201199 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18477736 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081210887 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192814148 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.106785739 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080609012 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288023841 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20132404 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685123349 seconds)
  done (took 10.871838503 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111030814 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132423717 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096752259 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137214046 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133553105 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098515449 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083925916 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096556135 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120739873 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175482005 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.12843519 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.120951889 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094884208 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081595331 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11438013 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24225075 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119712359 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103005772 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100329335 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103581664 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121212468 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111967686 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107804304 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092533431 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166297719 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.21987199 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111177335 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124569554 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095574143 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111107205 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142894025 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141831999 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095733718 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079998781 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173511827 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124153732 seconds)
  done (took 5.107288288 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186399038 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119854751 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167445233 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162282518 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138756451 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158288458 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112416818 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244909181 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.110966318 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.153765027 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.075932896 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178424005 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143776494 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.07821151 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113597861 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095610169 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081946536 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095333126 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.671878573 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161794635 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115661644 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114345872 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103378202 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083287852 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364323263 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10334805 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096162242 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082135912 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081647084 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159417858 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086265648 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.137773844 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120912969 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100518248 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132371363 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194060196 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125333542 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116321047 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097241782 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078225836 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.193584378 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088772051 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095835467 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102155646 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134664153 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13286633 seconds)
    (47/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.092561363 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.082030959 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.218643842 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080227506 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094743453 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096689556 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.949905804 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179371971 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088616239 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094896239 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.320697299 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097688995 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097140239 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077059691 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.26646196 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.182556329 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097302375 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079096312 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096361755 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080703046 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400647976 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081237534 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.691434501 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083079805 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.105265185 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082788513 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098090365 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103191028 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086129976 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114107258 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078612795 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098841016 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078945763 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095986465 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080764126 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107826537 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10154005 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08041303 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164000778 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078826048 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114117004 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12557659 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082721285 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095340556 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128856389 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08297938 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097418075 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132729822 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080886728 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108955751 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099202122 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142234355 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080160516 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.176249963 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.07846892 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123638062 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098448802 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113660553 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111891268 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097619414 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084447336 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094806752 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077546735 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16423578 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079956796 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097193373 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081222996 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109939532 seconds)
  done (took 22.457719399 seconds)
done (took 39.115015906 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.325342954 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102593303 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102682796 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101876811 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100127525 seconds)
  done (took 1.482807105 seconds)
done (took 2.209275469 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.286986841 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171223276 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094225109 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166622309 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093147607 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.174713949 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159306118 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111227779 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218764644 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.07645846 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162133872 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093687827 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077142134 seconds)
  done (took 2.637942993 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093748833 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116296977 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081614307 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110207311 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076116173 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110921763 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091945438 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116787819 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10857169 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083710733 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093160729 seconds)
  done (took 1.808496529 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093538798 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112281046 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081210286 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109489019 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076270227 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109511929 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091514371 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11542242 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108743432 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084886937 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093586819 seconds)
  done (took 1.801047331 seconds)
done (took 6.964752536 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090494348 seconds)
  done (took 0.811159352 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.918639205 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.951400598 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112245692 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148494379 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.299860556 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.190645513 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.474685248 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12480259 seconds)
  done (took 11.152165382 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.144710936 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084151152 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101584559 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086414139 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102981666 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086292402 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10166203 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.10199324 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083004786 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101021165 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082071026 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097519648 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099271663 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085523569 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099612155 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083258783 seconds)
  done (took 2.328588482 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119122252 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118077384 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105762291 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108018722 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087092106 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103592425 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106167417 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089573655 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101202629 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102858782 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090728597 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105256959 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104040535 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07863299 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105446306 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107597166 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085584125 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104767839 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105659139 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090632493 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106468983 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095534435 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086794045 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105908468 seconds)
  done (took 3.246978817 seconds)
done (took 18.264363424 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159690147 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108848349 seconds)
  done (took 0.998175627 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093841459 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112522108 seconds)
  done (took 0.9394239 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096351671 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094551736 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120838521 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109427985 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079717222 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095670467 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119804634 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080046728 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095857184 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080480483 seconds)
  done (took 1.709859129 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081437281 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109496461 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101631134 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095009534 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.103942831 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094684003 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087211629 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098348484 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109660664 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077364693 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102034354 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113940838 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085867015 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116049847 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103539729 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083785034 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101174202 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098476183 seconds)
  done (took 2.49963018 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078825231 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096560739 seconds)
  done (took 0.912586048 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081142045 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094188204 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080865223 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096790434 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093976749 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076464394 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09456807 seconds)
  done (took 1.35473878 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.471060306 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135715896 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.252209014 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.083913895 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119790144 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.303445217 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097684732 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085111411 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102333645 seconds)
  done (took 2.444342188 seconds)
done (took 11.592911365 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.091942235 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.1172582 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111708591 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.465684238 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106584329 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097523278 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159538764 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.248190149 seconds)
done (took 2.141423703 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.149701536 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323490225 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113287695 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066843581 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094804551 seconds)
  done (took 1.341714425 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078590035 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10005326 seconds)
  done (took 0.922171772 seconds)
done (took 3.160445706 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080581626 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097055717 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.077157096 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.130504514 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079981918 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097870656 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077714093 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095059672 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097456532 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079474632 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096180845 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.08006683 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096318493 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077663964 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093905298 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076883957 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096187088 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077001322 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.094758789 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076859888 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094150783 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079881027 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094370809 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078047459 seconds)
  done (took 2.903983904 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099190808 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09728206 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102841208 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085149075 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100893588 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085637354 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101642923 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097140941 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085668208 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099186284 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100004904 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084667692 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098820968 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083852294 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09862241 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100401839 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085429977 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097195509 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082123775 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100139233 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102745788 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080528279 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100711803 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102478964 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084302052 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10129616 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08249254 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097545025 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102476304 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083950305 seconds)
  done (took 3.573680033 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084952994 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094155022 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077814037 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101455497 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076906708 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096567819 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077328523 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094761574 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079330394 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094370744 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079991832 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094799628 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077379735 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095717537 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079571491 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09801027 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107447046 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076902015 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09471087 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077704254 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097513332 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077280912 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094655441 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077147698 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094468171 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076579332 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094556142 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077143725 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095670456 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078121911 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098036042 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081317263 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094691965 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08394792 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097952167 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077254611 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098264477 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093680798 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078840065 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094117743 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077331084 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094599466 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077896637 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101433442 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077262591 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096845291 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077737932 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096636539 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079162742 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098136896 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077899603 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094665646 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079120018 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095230307 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098412919 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07779903 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09546364 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076773756 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095924984 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077550767 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093558291 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076529667 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097473359 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078084043 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109844934 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084998528 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094927682 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078780697 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095630247 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08063892 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095977028 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108595932 seconds)
  done (took 7.1134946 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082973238 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10565505 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07972333 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096850091 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076032048 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095561942 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098310238 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078336063 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097176003 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085598831 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095600095 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080075988 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096120207 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108087702 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079635199 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097449061 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085395673 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093755377 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078845051 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099101619 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078918872 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098137474 seconds)
  done (took 2.740846041 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.208639942 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10441629 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141163329 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106868723 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084837827 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105151322 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10202043 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086763814 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102482143 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08358767 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099458882 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1031722 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083265178 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100206327 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100060652 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083934912 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101156618 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085128351 seconds)
  done (took 2.639705366 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092650287 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09852391 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102213366 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097367406 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098394153 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083150728 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103860597 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10823399 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083465799 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097949401 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090104734 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099883194 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100535516 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081215417 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100539656 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080641664 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100427999 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082006231 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106709062 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104341047 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104032488 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090160467 seconds)
  done (took 2.866160206 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095862739 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099863013 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117197738 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083699484 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094525989 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079004935 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106149017 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081377552 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106829518 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099853433 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080726884 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096768844 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087288166 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097675392 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103191638 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080980439 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099891285 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081425197 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100365849 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078199294 seconds)
  done (took 2.632005725 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102595275 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099867433 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099814477 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091897965 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099894384 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081879519 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109271783 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100164243 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08183453 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124561431 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09946403 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082149243 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10848352 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105869267 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099413934 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092111739 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109203317 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109617946 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083280206 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098888388 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1258437 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082818714 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109419208 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.208669409 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082918208 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099570541 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099780413 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088624911 seconds)
  done (took 3.639236083 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081447986 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098417734 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077789013 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096037049 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07784076 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096724275 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078260128 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095453348 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080217347 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095407207 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080676199 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098820187 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080805337 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097745203 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080837626 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098749553 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083120665 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096245099 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078610752 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095408829 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080788205 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098297713 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081033757 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096247097 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078555466 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097960089 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078603659 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095373502 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080720018 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095753772 seconds)
  done (took 3.416717047 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091161959 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105544383 seconds)
  done (took 0.961916944 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078786575 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113872966 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078272388 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102309879 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086526424 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099131188 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107320021 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086121901 seconds)
  done (took 1.516105534 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096273808 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109785963 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082757602 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111791789 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109330682 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094659429 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160384701 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100235397 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087350863 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097235422 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112617822 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08001512 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105041907 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080623846 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104628279 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087617522 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097179041 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.08683451 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102568768 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098261896 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082964861 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110687495 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083722488 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095949275 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082946291 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109660137 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108527613 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083379073 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102660848 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108977876 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086888717 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093360733 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082322703 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099855085 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079766784 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107937295 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111390434 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084182137 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108014701 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083148934 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110092582 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094656814 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087035103 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104944053 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091909612 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100070781 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083006499 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094140606 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097190522 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082991133 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09440444 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081584343 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093534199 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089029589 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103763131 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112121347 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080798011 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100906286 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084352986 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10277415 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088960077 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101358056 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083349245 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098051371 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106285127 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085299024 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106659402 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077675346 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093182411 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080521478 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108214714 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122351485 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091463833 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100199962 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08274798 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096858829 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102334469 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083021112 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106828029 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09004501 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100426478 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106248439 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089327467 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099388781 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084703438 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107899643 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098121461 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083721438 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096992906 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096909459 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099298746 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079867517 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097029713 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108424257 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085499139 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099847774 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079710216 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106925844 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079113945 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101323355 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083596448 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100816771 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109264676 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087951388 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106550079 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107257937 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088672026 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100010078 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084792583 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09646229 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08359231 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102429312 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106422426 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075764912 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103310682 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083569746 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100586329 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089089921 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097883089 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082361031 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107147359 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106916746 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080994924 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096462422 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085198488 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099570236 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085838511 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106764333 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.09876148 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078054892 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094773639 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087302015 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100810474 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087013053 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105061293 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102806347 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076933977 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097725698 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086587155 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106933164 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099804839 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08187231 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104771582 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083199016 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099145207 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087198958 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102316934 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080887996 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.10434201 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101634197 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07738453 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103704202 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08549436 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098821042 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085862376 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103102033 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102345851 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082528652 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098946762 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087849936 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101291646 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081324148 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099756124 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099114264 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092057083 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102219679 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077678394 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096876974 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089768908 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097516351 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08208567 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099109412 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103006853 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083790256 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098292232 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081849594 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100734549 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113043102 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086494356 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101842386 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087994787 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.10951143 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082299308 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102105131 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099946342 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083883779 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100993572 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089453776 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105282788 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10570219 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084477966 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096430022 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088461965 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107464516 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082383028 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098279356 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08078524 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103874501 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107377496 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086180298 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100911331 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080738202 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100506283 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104251817 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085503371 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099927002 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08121973 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105734315 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081001054 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107375214 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101826842 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091598865 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104189419 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078164554 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104630682 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099201722 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088713655 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096703354 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080430671 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099437958 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083869475 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099023447 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085071029 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094998771 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089468282 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108933843 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100512712 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081949134 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101549063 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09060211 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.103073709 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085592529 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103580554 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105485948 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094928449 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099901157 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085533549 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109680911 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101203841 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077058376 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106192027 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081065191 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.10004317 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081569434 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098709296 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085151647 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109277134 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105142298 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.0771438 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103898288 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081059254 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099126143 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077762689 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107737555 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104170829 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084256285 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109759262 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0843401 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101547057 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104665889 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082188997 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101783304 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083623039 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103950547 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08435231 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102565133 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081757764 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.101948211 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099900373 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080367484 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102067966 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083043772 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101526868 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088954383 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103050669 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082517713 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.102901831 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101918276 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083804885 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101464346 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081989058 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104109754 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082987819 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100591636 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085040645 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095976615 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107849382 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082402655 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109239184 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083097623 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097486252 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088170987 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103991435 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106409898 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084245891 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102835662 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084462705 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100704282 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085821512 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109294918 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098971216 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091366824 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106553894 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083945665 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104196323 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083544864 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.1023541 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100478357 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084275948 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101464261 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082699982 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100988482 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087388119 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.10367305 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082840623 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103344795 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101852729 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08325891 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102097777 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077258896 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099794584 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082616445 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10172221 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090579828 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102729168 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103530031 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081465559 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102568701 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082750597 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098014957 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091863232 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110949518 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102593748 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091489485 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10048216 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084384727 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11090579 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095933721 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081243654 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099790218 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080721145 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108627281 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083949235 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110115575 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101724535 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082009174 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098480505 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083318176 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100034502 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077278282 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099165042 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085985664 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103219659 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081898267 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102127259 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103313756 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084130672 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109157107 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082473738 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103955027 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08419801 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098501865 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081436584 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100546705 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104224487 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08489102 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098678317 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079568602 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100910232 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085368746 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110508203 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082853843 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102618659 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089221398 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101529552 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104616063 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087509358 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095519231 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086008993 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100969528 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08332853 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099847252 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105322566 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086621855 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102924535 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090200367 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102204468 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084202425 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10180415 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100002189 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083343035 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102460582 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084245042 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101088981 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085071178 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110173725 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08030946 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103582503 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101110368 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083462115 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106611091 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084861396 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103067555 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110225906 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086468818 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103327348 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089276505 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106624131 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086419264 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103097906 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103243536 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089268697 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100543237 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090945422 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101728268 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084245485 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102569129 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081119344 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100987693 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101385721 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082337814 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106046571 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084010239 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100916834 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082308477 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100024834 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08398999 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105661679 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109267393 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085940565 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104929891 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078734472 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099461042 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084862998 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099433053 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084239345 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104645907 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108915336 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085717327 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102100678 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082174098 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.10894067 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108491827 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087502686 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100390914 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088262336 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102597053 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085903296 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102528294 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083152492 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10410762 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107195654 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084574575 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101117815 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09111239 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106217029 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085153219 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104079808 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.101704694 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.082990857 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097616728 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084640161 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103855202 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089616221 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104439991 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101527394 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092404402 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100994352 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083184767 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106085839 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08300866 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108431761 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097429839 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084529487 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103300203 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085254333 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097426722 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082699806 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099475428 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085815836 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101365339 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078542047 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111698488 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108480208 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086091574 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100662435 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081814547 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097813915 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078363252 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101117588 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085490604 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103951076 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111831576 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082868023 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101244916 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079398324 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10288072 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086716726 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106161781 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079940641 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098421514 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100882547 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085841371 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.10881578 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082510823 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101799874 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086606777 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104579913 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080931344 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106791616 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098627405 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087619026 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112268672 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084723579 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103202995 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107564342 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091936682 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102975469 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078874021 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103786844 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085251094 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102438308 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102564971 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084541927 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116393157 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086620079 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102008006 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081821361 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104208663 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101297576 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090829409 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104278117 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084809752 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.10731482 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085097001 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111301257 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104822085 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089714866 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104506944 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086338365 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101543414 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101858003 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081493475 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100777654 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084831287 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103060685 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088246808 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110235262 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102317348 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093121231 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110689949 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087971726 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100614977 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082393245 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101947576 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.07841126 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103923847 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100957083 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.081659699 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.09982513 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082421233 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103013624 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090168376 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104475999 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085310892 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103813568 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095872832 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085286957 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10577162 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085240151 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099439991 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084869933 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103927402 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08970389 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109428086 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103482667 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08517088 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103617897 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084398553 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098853016 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090543028 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102201561 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08647226 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101454932 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083832866 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104334312 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105793813 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090141704 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103901757 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086247461 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116819534 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105190381 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081755916 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100334458 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.08953374 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100579902 seconds)
  done (took 57.516788259 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147737107 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080840841 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098479989 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079312143 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112789954 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099795343 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078821068 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099211278 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081076246 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101556326 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079009695 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098512104 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108465393 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124486374 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093217252 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103692396 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09739861 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080824161 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097927428 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080527816 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109526234 seconds)
  done (took 2.868741817 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104947965 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116847166 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115260287 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118509513 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090513115 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115116893 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113928405 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115720746 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099190414 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110551139 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118259481 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114711436 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091322593 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110080624 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110376334 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092849997 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117259764 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108637813 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115429147 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095279694 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112831393 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113370475 seconds)
  done (took 3.216537162 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083622989 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102713468 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084862527 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097127244 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083204776 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.09808945 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087206851 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100772591 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086325135 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.10066175 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082021281 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102314497 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104133338 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07917098 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101624635 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081694029 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152360298 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10662506 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082974972 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104274817 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098520845 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086137058 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097921208 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079459826 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100972645 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088349633 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103942613 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081442536 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102212214 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081647203 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103266488 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081205574 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104360648 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102777245 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082434808 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101046949 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083249989 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103166669 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079114035 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100758443 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084166826 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098776236 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08361774 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104251813 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081417936 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100902917 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084674254 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103271436 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.09736124 seconds)
  done (took 5.439900871 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104317495 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159315193 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085309796 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142421734 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120530685 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112317335 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087173321 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142527063 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102114484 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082264807 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122082549 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120143182 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104045507 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089785844 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107610527 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103285175 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086003358 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102113662 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088499537 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103125754 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108169687 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090717375 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119900965 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117345201 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107455104 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083279287 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102927944 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108394958 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097148562 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.10925638 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108452212 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090325427 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119993854 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108384052 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083522634 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107133497 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121073117 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104390192 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087391412 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100993828 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086293885 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108951658 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109303276 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102419208 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104016288 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10783484 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08372896 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10131428 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117846011 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086895669 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111727918 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.11813254 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107663146 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085028994 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108817481 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.1194105 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084215126 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102232889 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087361338 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.115983483 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101242233 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088660955 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118532809 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105752619 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112086629 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100062169 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.1088341 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107040809 seconds)
  done (took 8.090912294 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092936252 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110773162 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120807049 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120812479 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091125248 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110200108 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109545953 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090822904 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.1107303 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116863497 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111069817 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132952791 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086245599 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114789953 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110660225 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09152652 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110513414 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111020447 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090635358 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112287669 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110585171 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120176436 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09166496 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119412025 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140489412 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105226097 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090742276 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110481402 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119614191 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11213983 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122950684 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091114112 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112222878 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121219576 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123852644 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091300521 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103413612 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111067008 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091760068 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111208821 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105110459 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1205184 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090879403 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105973396 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110754509 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090759248 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119800757 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124379779 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114166563 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096878236 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110786376 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119663884 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111146451 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091263455 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120410526 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146605414 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12018335 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12070338 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111688947 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119975453 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100675419 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128066632 seconds)
  done (took 7.655474551 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107223473 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115252649 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116891296 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100957691 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082413549 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109302322 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082353327 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102800018 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113652687 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09407626 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116639666 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109404474 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112664975 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096612484 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108684755 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112242382 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089681348 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109238513 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113843781 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108330326 seconds)
  done (took 2.933831244 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093974973 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123740383 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085626195 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112045567 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107922285 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090753991 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107280476 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107594524 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086043001 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106892939 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096653017 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117359216 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104482685 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091527456 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116544961 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11129564 seconds)
  done (took 2.489877044 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095450506 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118540596 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.11982126 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084714241 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103414084 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080482875 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105079447 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.1006268 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08136897 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120737675 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084800869 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108241916 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105002238 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083724008 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101367977 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088294402 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101477442 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08282851 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10563483 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.122011162 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096197213 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103453006 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105136987 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086473151 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104900669 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090134817 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105780279 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102805295 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084025427 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105001667 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084993412 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113895057 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10110406 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08376897 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103298671 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082473779 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105495235 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084479844 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108644989 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10474535 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.0840269 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104536976 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084894554 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107044123 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080664722 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105316728 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100583815 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090833929 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103331537 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085877967 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104906561 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107316936 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086941017 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116322903 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088217165 seconds)
  done (took 6.236324661 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09990413 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108889557 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080150492 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102943657 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08785694 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107234519 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108712019 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088408808 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106502424 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082545657 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106580974 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089652746 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107136721 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10836863 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087672252 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108218581 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080442727 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106500961 seconds)
  done (took 2.60849153 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090504805 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104500431 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092527517 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105736992 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084582643 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108111314 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079975081 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104474318 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103096208 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085409648 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104911725 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088414646 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103243083 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088087952 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105322314 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085714276 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108324397 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103928776 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085796391 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100647851 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088454103 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103876171 seconds)
  done (took 2.964717492 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118149402 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124916711 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092333683 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228038206 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103294998 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13255006 seconds)
  done (took 1.640044241 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109114912 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120837959 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105816519 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10712791 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115498685 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107525323 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087372006 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106931176 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117410943 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102368903 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108235865 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117401196 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117984249 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096726303 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114798489 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114649307 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107827796 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088631146 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105691874 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128806519 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087955187 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118216324 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106838295 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087168731 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108202348 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116559416 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117527071 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122023998 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087356558 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117739298 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113899867 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087986493 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118409059 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121732058 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108608529 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098396675 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107727141 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128576748 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114367434 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097792383 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108744231 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115151856 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097666882 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114701505 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117637615 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108109323 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092992381 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108104989 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10849024 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136100297 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094188048 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116591395 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115381412 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118905977 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118866923 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135288677 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102092115 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118347216 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116060592 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123602702 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116607362 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094521885 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11690176 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123692489 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115303112 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116827298 seconds)
  done (took 8.143782036 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102549035 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126529967 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108760539 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123128665 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097265374 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108588833 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109018966 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087701586 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10863186 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107076243 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152062476 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088572179 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117910811 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118098621 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108384774 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088233015 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108702043 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117655552 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087044915 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135766464 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10839112 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118072487 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117531183 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097197751 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122856822 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11482654 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108484199 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088688895 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10878914 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107431148 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093803266 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10865331 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117808051 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086915851 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118406244 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107765144 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08820131 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115198962 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10820704 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114544274 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098358267 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129134269 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108400889 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107855574 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122536165 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088270695 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108061747 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086464806 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109255386 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10759465 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123372198 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103088819 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123231756 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118119068 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108571025 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088186672 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108566817 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108419122 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088459878 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116154171 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117940848 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107872288 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135998679 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088249863 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108931355 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118337387 seconds)
  done (took 8.032055414 seconds)
done (took 154.584158218 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097785804 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135845851 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096329898 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168013083 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106267047 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119663665 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13804359 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097174418 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.10668061 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086166686 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.1064592 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087639431 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170665346 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085196927 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106806945 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10757384 seconds)
  done (took 2.664268895 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199400787 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.253993141 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102543 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106288765 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089144654 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110239719 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104279634 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.0909589 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.10974101 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086208662 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109183012 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086519492 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106339098 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086589473 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110388104 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087939496 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106503674 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088163187 seconds)
  done (took 2.888298284 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113484852 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146156958 seconds)
  done (took 1.116802934 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118951287 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181391759 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.304586062 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155128402 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.140193236 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.105025934 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156560625 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131001099 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197337978 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122072931 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122295196 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096926626 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140555559 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.114832568 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.09417386 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117947369 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141610107 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113602174 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095081348 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116350574 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136465007 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085348127 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11527102 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092996387 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181381118 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119707379 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106529276 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085262768 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116516386 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094443402 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113684946 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125122126 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118292798 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.154741563 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101829372 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177657142 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097125639 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112383503 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114848223 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090712693 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118665526 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119077343 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.1046281 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118597115 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107334921 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097901146 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105639219 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085046266 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114767487 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117962228 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094561892 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113565531 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155501409 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118387834 seconds)
  done (took 7.529226644 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794462744 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.163282277 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09071786 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.883612016 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138100592 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103402075 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.78157605 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133211938 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.237387281 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.760178741 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135039554 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121981192 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229754678 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238649105 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.96009309 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313733157 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.669460902 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101205209 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149048242 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153408841 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119613423 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137456012 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130409614 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429508776 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095161745 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11212309 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117152421 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100325252 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159648483 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125351063 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114825648 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179215233 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.271193651 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185995382 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115637246 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088951511 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112342132 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170217766 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26850276 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215442695 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181984392 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08796189 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111925934 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121741289 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.1115621 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109391333 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163348707 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.19600944 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173059611 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092965885 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121846782 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120084392 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120528387 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165274681 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121245705 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.296543678 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314124882 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112187162 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120840683 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105169602 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264717398 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123539044 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224864528 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118081496 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214741025 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110891962 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784464515 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.19247675 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089380632 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.11808664 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119669258 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094503787 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122192351 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168530327 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406728318 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124825231 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092904684 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112615061 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206421545 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125653433 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111186138 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163645575 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116238996 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098899814 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125596669 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12333943 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171081498 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.235005967 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124368352 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12130087 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093449505 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125797413 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116228754 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215481521 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220194958 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161585721 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211716542 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123294054 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186193212 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169789716 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097491282 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.19545917 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097343303 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128072659 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122859747 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217269838 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146426752 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123518236 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094995735 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118608536 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148953348 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12672693 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09712042 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191754375 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.460959836 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167762445 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109356115 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12734051 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099137927 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18240654 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096057437 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261654058 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122128744 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.17077795 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119927303 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087878086 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12088533 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165407569 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123474935 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120946382 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101216754 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120128052 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235890935 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219859166 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123206725 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222322885 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184599033 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120441163 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172426903 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121985877 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169059724 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121239878 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12131637 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095743661 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79948968 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124228668 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098550559 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117035356 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188035735 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111415217 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104088862 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125833213 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108680246 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.787353233 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12817566 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121372972 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102664559 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119661635 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120562541 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118012009 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094800226 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160762091 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233392822 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122255827 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11988217 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102661157 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183540946 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095589788 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126431601 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125427472 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125094139 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100811723 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115153106 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124734903 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.17275592 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163233797 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221914313 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.590387239 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090447008 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125563343 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228689683 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089525169 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289131949 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120147035 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228499745 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1665379 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121358832 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309141269 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168417618 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188590641 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127659413 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175334108 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087166636 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118332626 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164207346 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112463906 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117533833 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163932792 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126073778 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101447814 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.964024912 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112086007 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230311436 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109618819 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.17140049 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116790627 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1002955 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.297267754 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112313625 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106965766 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187889531 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093658053 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126421126 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.874412347 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103791702 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122624821 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118380771 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224478447 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165492093 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11904756 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098057705 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121598053 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164046411 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.212320783 seconds)
  done (took 44.352428002 seconds)
done (took 59.40420186 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279601034 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213774476 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.257956956 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167914459 seconds)
  done (took 1.872112699 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.16960264 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.1481059 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120477412 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107354389 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149782759 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08567843 seconds)
  done (took 1.659653263 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.35204403 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270363191 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238915014 seconds)
  done (took 1.745826402 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.288733041 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252332957 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354043495 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.417054344 seconds)
  done (took 2.316794745 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208457078 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131460717 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110633455 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10379347 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196310476 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249805761 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140397286 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201682327 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121879424 seconds)
  done (took 2.397840668 seconds)
done (took 10.875349456 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.289388817 seconds)
    (2/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.095163033 seconds)
    (3/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.250735105 seconds)
    (4/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.200802772 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.161141779 seconds)
    (6/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.196027197 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100763808 seconds)
    (8/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117464506 seconds)
    (9/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093238509 seconds)
    (10/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.207615101 seconds)
    (11/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.24553637 seconds)
    (12/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.192221811 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.122718469 seconds)
    (14/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.137929127 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.147609226 seconds)
    (16/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.207191598 seconds)
    (17/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.241973123 seconds)
    (18/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.205538929 seconds)
    (19/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.194106011 seconds)
    (20/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.205065663 seconds)
    (21/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.123691446 seconds)
    (22/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.100558821 seconds)
    (23/286) benchmarking ("sort", Int8, false)...
    done (took 0.211008665 seconds)
    (24/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.151695644 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.148371463 seconds)
    (26/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.232601853 seconds)
    (27/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.066147968 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.224369439 seconds)
    (29/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11350964 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118668088 seconds)
    (31/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.128749413 seconds)
    (32/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.176410679 seconds)
    (33/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.09745634 seconds)
    (34/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.118268698 seconds)
    (35/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.114743697 seconds)
    (36/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066099908 seconds)
    (37/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.175799184 seconds)
    (38/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066640305 seconds)
    (39/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.243794335 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.134653981 seconds)
    (41/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.101041354 seconds)
    (42/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.143344138 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093552 seconds)
    (44/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.213009084 seconds)
    (45/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.11509081 seconds)
    (46/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.205190411 seconds)
    (47/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.172909868 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.1176849 seconds)
    (49/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.11405244 seconds)
    (50/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.159331971 seconds)
    (51/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.13739028 seconds)
    (52/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.098232814 seconds)
    (53/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.090215012 seconds)
    (54/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094644578 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111159275 seconds)
    (56/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.16675066 seconds)
    (57/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.100404495 seconds)
    (58/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.133266752 seconds)
    (59/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087216188 seconds)
    (60/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.124895183 seconds)
    (61/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.221732147 seconds)
    (62/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.182968442 seconds)
    (63/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.144141669 seconds)
    (64/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.15424352 seconds)
    (65/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.171099972 seconds)
    (66/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094610525 seconds)
    (67/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.209668735 seconds)
    (68/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.122791142 seconds)
    (69/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.095111854 seconds)
    (70/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117094141 seconds)
    (71/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.086767317 seconds)
    (72/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11668988 seconds)
    (73/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.09448845 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108859634 seconds)
    (75/286) benchmarking ("sort", Float64, false)...
    done (took 0.170579616 seconds)
    (76/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.112403235 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 0.111385033 seconds)
    (78/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091148306 seconds)
    (79/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110654907 seconds)
    (80/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066871948 seconds)
    (81/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115889415 seconds)
    (82/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.139160397 seconds)
    (83/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.183212743 seconds)
    (84/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.100907306 seconds)
    (85/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.089139265 seconds)
    (86/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.16516963 seconds)
    (87/286) benchmarking ("sort", Float64, true)...
    done (took 0.232536905 seconds)
    (88/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123970307 seconds)
    (89/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.125134357 seconds)
    (90/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.120399656 seconds)
    (91/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.095489053 seconds)
    (92/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.107772383 seconds)
    (93/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.070207732 seconds)
    (94/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.174095936 seconds)
    (95/286) benchmarking ("sort", Float32, true)...
    done (took 0.232693903 seconds)
    (96/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.149135024 seconds)
    (97/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.172627696 seconds)
    (98/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.192497819 seconds)
    (99/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.110077518 seconds)
    (100/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.070652542 seconds)
    (101/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066130064 seconds)
    (102/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.12197398 seconds)
    (103/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.096745965 seconds)
    (104/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.145219323 seconds)
    (105/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.11946105 seconds)
    (106/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066763621 seconds)
    (107/286) benchmarking ("sort", Float32, false)...
    done (took 0.173680807 seconds)
    (108/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067612534 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.13353365 seconds)
    (110/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089313824 seconds)
    (111/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118496489 seconds)
    (112/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.06710233 seconds)
    (113/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.13046387 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086870985 seconds)
    (115/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.109766731 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.134515404 seconds)
    (117/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067192229 seconds)
    (118/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067212277 seconds)
    (119/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.091135653 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086986101 seconds)
    (121/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.174581869 seconds)
    (122/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066094164 seconds)
    (123/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.090341502 seconds)
    (124/286) benchmarking ("sort", Bool, false)...
    done (took 0.180816081 seconds)
    (125/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09694039 seconds)
    (126/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.190799039 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094046683 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.109595583 seconds)
    (129/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.170801094 seconds)
    (130/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.186435387 seconds)
    (131/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.08957087 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.11630863 seconds)
    (133/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.077217302 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116775226 seconds)
    (135/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087594162 seconds)
    (136/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.067167742 seconds)
    (137/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.20003226 seconds)
    (138/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.091466061 seconds)
    (139/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.151306483 seconds)
    (140/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.191048999 seconds)
    (141/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118527253 seconds)
    (142/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111494544 seconds)
    (143/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.106030835 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.098254299 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108866671 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094627558 seconds)
    (147/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.181924846 seconds)
    (148/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.15238279 seconds)
    (149/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.093648099 seconds)
    (150/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109369929 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096595486 seconds)
    (152/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.118487394 seconds)
    (153/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.096800203 seconds)
    (154/286) benchmarking ("sort", BigInt, true)...
    done (took 0.233149778 seconds)
    (155/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.120397941 seconds)
    (156/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.094861996 seconds)
    (157/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121734495 seconds)
    (158/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.143232004 seconds)
    (159/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115071932 seconds)
    (160/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.174242197 seconds)
    (161/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067398393 seconds)
    (162/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.139460298 seconds)
    (163/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.116882592 seconds)
    (164/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.115154852 seconds)
    (165/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.12267551 seconds)
    (166/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068986743 seconds)
    (167/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118499669 seconds)
    (168/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.088053095 seconds)
    (169/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110018638 seconds)
    (170/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.172049298 seconds)
    (171/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.089001079 seconds)
    (172/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.174347257 seconds)
    (173/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076572074 seconds)
    (174/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126162926 seconds)
    (175/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.164845195 seconds)
    (176/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.111243691 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093104412 seconds)
    (178/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090800135 seconds)
    (179/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066762678 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119569581 seconds)
    (181/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068654689 seconds)
    (182/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.186193725 seconds)
    (183/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067622523 seconds)
    (184/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.100338804 seconds)
    (185/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086394391 seconds)
    (186/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181461192 seconds)
    (187/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067243483 seconds)
    (188/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136438755 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 0.223777531 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085300431 seconds)
    (191/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123463417 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110996518 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086679081 seconds)
    (194/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.0670636 seconds)
    (195/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.099032592 seconds)
    (196/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068010479 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109158873 seconds)
    (198/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077989778 seconds)
    (199/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.067405382 seconds)
    (200/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.089530919 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09667225 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117193217 seconds)
    (203/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099108042 seconds)
    (204/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.09952726 seconds)
    (205/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093891364 seconds)
    (206/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.076149859 seconds)
    (207/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.091943114 seconds)
    (208/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.093733549 seconds)
    (209/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.090036051 seconds)
    (210/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086625173 seconds)
    (211/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220559724 seconds)
    (212/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.091223651 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09362449 seconds)
    (214/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.356556177 seconds)
    (215/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.182962595 seconds)
    (216/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066956589 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085576179 seconds)
    (218/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.110674243 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109636466 seconds)
    (220/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067550879 seconds)
    (221/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068162007 seconds)
    (222/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125170264 seconds)
    (223/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068619827 seconds)
    (224/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.116902085 seconds)
    (225/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.129948954 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109422237 seconds)
    (227/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066764279 seconds)
    (228/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.118134947 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087356123 seconds)
    (230/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.165919058 seconds)
    (231/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116730727 seconds)
    (232/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067252669 seconds)
    (233/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134329508 seconds)
    (234/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.086066334 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109724057 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086483643 seconds)
    (237/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.112412557 seconds)
    (238/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.10148877 seconds)
    (239/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.153664644 seconds)
    (240/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.0779587 seconds)
    (241/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.091431117 seconds)
    (242/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093727921 seconds)
    (243/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.110713264 seconds)
    (244/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086155633 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116929122 seconds)
    (246/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066744781 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118354535 seconds)
    (248/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.119124059 seconds)
    (249/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.090788553 seconds)
    (250/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.112676142 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.10903888 seconds)
    (252/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068051755 seconds)
    (253/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.11374224 seconds)
    (254/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067606247 seconds)
    (255/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066926139 seconds)
    (256/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122711853 seconds)
    (257/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067972115 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116868515 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.08573875 seconds)
    (260/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.126699592 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085510377 seconds)
    (262/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.111754668 seconds)
    (263/286) benchmarking ("sort", Int8, true)...
    done (took 0.222344578 seconds)
    (264/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135772333 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095986641 seconds)
    (266/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119685364 seconds)
    (267/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.092096961 seconds)
    (268/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.110004951 seconds)
    (269/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068273412 seconds)
    (270/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067416895 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115711554 seconds)
    (272/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.076197681 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109591455 seconds)
    (274/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088419133 seconds)
    (275/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.112124954 seconds)
    (276/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067857178 seconds)
    (277/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.090788615 seconds)
    (278/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086786378 seconds)
    (279/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067097004 seconds)
    (280/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116920008 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093247153 seconds)
    (282/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.16291616 seconds)
    (283/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.116614422 seconds)
    (284/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067476802 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.110141908 seconds)
    (286/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089732794 seconds)
  done (took 36.071374785 seconds)
done (took 36.961799783 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099652317 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14782628 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096837552 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135694182 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123475296 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091315196 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118895125 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097923175 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124194221 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124994092 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098285895 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092913099 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096537865 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119797388 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096377329 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137610785 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123506502 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093417997 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.11951702 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085592294 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118672586 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086425758 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.11179125 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069696659 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121627284 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093821018 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115681508 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.11993986 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086352025 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110148061 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092714625 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117239146 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086860387 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123979296 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093928526 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118526401 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097404023 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.12002025 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.1117022 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.085714027 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117850465 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085841207 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116552244 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094111502 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115583808 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092684212 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118202737 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099521671 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138434279 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115397353 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094826881 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121659981 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096045221 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117251601 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091125575 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118950024 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092235627 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138508866 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119251139 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09200906 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11842314 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094018505 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116278692 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094714293 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118399764 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120956129 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097489174 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116005044 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096349763 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116430499 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.0875824 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119537291 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089995735 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110468086 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095317902 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120551791 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109534152 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092645561 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117546846 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09160248 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109082075 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089921011 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111460962 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092545276 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113507922 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069764294 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114018086 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093355983 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110248053 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096079557 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116513794 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093504689 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112066606 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099243505 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110479984 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092320979 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111440655 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086895048 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112316814 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091047413 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110387556 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08970676 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121003287 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112619286 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093442342 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12285962 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086842032 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117055676 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08627831 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109767188 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101786403 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120814063 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08748783 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115676992 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085747562 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.11815818 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085947375 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.11028759 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110138945 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.0871913 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116347786 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087116596 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113595045 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094678231 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124278654 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087626798 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113829521 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090553375 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110697726 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.09323937 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111001204 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087236368 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112418549 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07797296 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113876405 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087631028 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118725987 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090584566 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120232784 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08893942 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120206075 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091684021 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117361272 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116408489 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.08618078 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075048081 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116064299 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0892438 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112683969 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087131381 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113297006 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086557838 seconds)
done (took 16.90415534 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087930131 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183002146 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150788399 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142086416 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107263006 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111524682 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121813884 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.11853974 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113070145 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143774546 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110364108 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132333824 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148206432 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086940008 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111775879 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091868757 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113123022 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102671082 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146464039 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132696532 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164698689 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.0865767 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147755958 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135346562 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121152275 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115252862 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111700848 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091613159 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114990916 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103433587 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132613471 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114841864 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087713928 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133478075 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104568276 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119332613 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088013533 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119165641 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087611293 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112218986 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141083435 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134079145 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092900865 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117559015 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091469675 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114543453 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089944009 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120900752 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098018186 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116310809 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126002184 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156181244 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091344244 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122139883 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086812098 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12297063 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121106187 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089621365 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111873909 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091009826 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111354501 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090881052 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126500112 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141608332 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091731122 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122159225 seconds)
  done (took 8.608622789 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104356933 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139700248 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105677445 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130774267 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111212593 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088647254 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113147511 seconds)
  done (took 1.741696691 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088264978 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134911668 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111104357 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136266055 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132563758 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112372563 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124316997 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088846074 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133431399 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089483884 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135188185 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150227027 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090128074 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120777194 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137768683 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08803285 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136829324 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088933764 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117148239 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112150093 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116834858 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134816192 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091677734 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113065664 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103033019 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113968159 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163618617 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094733651 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115799422 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092504701 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112503481 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151481372 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102990283 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125308884 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089119427 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12973404 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128648182 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087784736 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126171122 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094549139 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128301962 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089491792 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114748385 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087327056 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119054427 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099359655 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117802254 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.13188434 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092455942 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133423936 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090065217 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128721451 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088922348 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118263608 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090481764 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120052443 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098892235 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114687721 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133989416 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090060507 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131863426 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105402559 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128890774 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.1301272 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09151142 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128030316 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103342692 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11688673 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090948221 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118386834 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104680913 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112353406 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115764821 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099330165 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115597549 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113406308 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137693143 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09087355 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124434353 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114153951 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089454098 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114481797 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112498094 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118537552 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089828301 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117447442 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09214122 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112495274 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088749817 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117977992 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088455 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115272371 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092790096 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114397467 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091529147 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131442139 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114987864 seconds)
  done (took 11.833260382 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090262676 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114637391 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091954938 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114119692 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090952952 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.1145137 seconds)
  done (took 1.579117426 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11674241 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11766673 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103634853 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120987748 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15580946 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104044377 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129670498 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124061573 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108460057 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127394797 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.12987218 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105213693 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136522767 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121277406 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104010691 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120477434 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104454077 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125646137 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127418247 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09739491 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137084366 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121033326 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096690479 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130953694 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117700749 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09506836 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125982157 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104299444 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126945301 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.1234976 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096153909 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.11756009 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095749933 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123573151 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129227707 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095460653 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12100419 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119142214 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099540366 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117499641 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105407008 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121527993 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126862234 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093554094 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123545726 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121447921 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095377246 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125338139 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103829592 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120201742 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122173103 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096265822 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120866813 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.09404471 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122789496 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123314619 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094977865 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130027373 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121950266 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096561068 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118156237 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09424672 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124293997 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118177455 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104658337 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119245579 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121505561 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097504693 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122685368 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096465455 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118547394 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093080988 seconds)
  done (took 9.22989928 seconds)
done (took 33.942999839 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.687125507 seconds)
  done (took 1.649695395 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.817571193 seconds)
  done (took 1.781821663 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.793973872 seconds)
  done (took 17.790569279 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.491749355 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.576377929 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.99755504 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.18124351 seconds)
  done (took 3.213230236 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.938832756 seconds)
  done (took 1.919937286 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.282587295 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234581378 seconds)
  done (took 1.483257931 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.813911336 seconds)
  done (took 1.791802564 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.366221654 seconds)
  done (took 2.335394815 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.325331361 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184697175 seconds)
  done (took 1.488104603 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.547780564 seconds)
  done (took 1.52615819 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.897351668 seconds)
  done (took 10.879907924 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.266430367 seconds)
  done (took 1.254083456 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303092821 seconds)
  done (took 1.281973464 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.457734098 seconds)
  done (took 4.438959089 seconds)
done (took 53.810669512 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099028522 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127042162 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102530863 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124640888 seconds)
  done (took 1.426115731 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101222485 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121625734 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100671833 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121267768 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126127349 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096686463 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123803267 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101334795 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121402103 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097027313 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121571099 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120128576 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099027666 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123388432 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093918079 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124135156 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098928264 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121173683 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123979788 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096196177 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119029276 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098707717 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124523978 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094340785 seconds)
  done (took 3.652258415 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10011299 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118705171 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096404214 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118167168 seconds)
  done (took 1.421124326 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10050081 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131208688 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105655308 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125573127 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131973154 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106320062 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117604017 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092699991 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119794139 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099929982 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.11573777 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139103122 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106925554 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124464515 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101952042 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11326664 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091667298 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131862493 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124382326 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101012553 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118674487 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099889574 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115096819 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109453846 seconds)
  done (took 3.70859866 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171535323 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127507174 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138757027 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096299467 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160891162 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140604344 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088131887 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141527861 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088246345 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131499759 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118058098 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134363091 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130932936 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088339752 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114429878 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088326882 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129714842 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129035208 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09150839 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128489818 seconds)
  done (took 3.429605097 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09872489 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117544567 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088354543 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116423203 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099160217 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120950847 seconds)
  done (took 1.62977915 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090877701 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.11528716 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090075775 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114871423 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094078227 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114466484 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088454075 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114872932 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090306186 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114588623 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089424093 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113183397 seconds)
  done (took 2.219584085 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.504037105 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119718205 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120498586 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088669092 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122628544 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090496953 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128960798 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092131312 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141989484 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089265332 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11559887 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093795814 seconds)
  done (took 2.696254267 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238795888 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125816546 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283271669 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367734984 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156852735 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165936113 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279110485 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161673527 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197858475 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149497215 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230492797 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197760379 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152156942 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191069856 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137394083 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145707075 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190931421 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251450278 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152826778 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211741499 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206452347 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167121459 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180424865 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152744505 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111267392 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19311438 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095773357 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130088987 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233939358 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179863867 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189658841 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161200418 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147125042 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238512998 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248881012 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196463092 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28047865 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135148663 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.166705559 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142484029 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264419815 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139971705 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234618382 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156081134 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105601366 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222109921 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166306846 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176823764 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146670855 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139004673 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199061315 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24095299 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192928925 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139037528 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301166551 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148210048 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.158939326 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190365697 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25049753 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228412186 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188281083 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12104568 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188922627 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191895511 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211780578 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152036298 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183777434 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147133504 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183770734 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1901752 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166634066 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205360922 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179822839 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13889582 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170847776 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173421936 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174171799 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260710908 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186514531 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123054793 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170465602 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149453202 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131351977 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.16802474 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126905584 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215550458 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143668042 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.16351462 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208189122 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15936 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161370264 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221791394 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185631143 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149108805 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083992196 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154146157 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156273483 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177290856 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140628356 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159595223 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156934625 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131075242 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171168009 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097890262 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210923891 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091817303 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174368596 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210013614 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100834183 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162308723 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153234988 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15029147 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177904973 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199047654 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140478787 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135102303 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21029587 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179162274 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140825658 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178218316 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23046085 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117246814 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148696426 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22869861 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24542603 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112504846 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229483833 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153102825 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108453799 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133578258 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181384013 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156096412 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162297903 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133011865 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184327904 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232716244 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098440296 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138960485 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195934684 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134722917 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132440609 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154989491 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14738928 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111070705 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.1433258 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.14578864 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177130917 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17873981 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156368283 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165767439 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149848916 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248380238 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140517566 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151745146 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121839054 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121397173 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192415377 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227009484 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10459288 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233081191 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172854938 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224930684 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168880303 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106880253 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17706132 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131456664 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119967248 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193126571 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167349569 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163424388 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195618232 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222613033 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180018445 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.209579324 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16759729 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175950349 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165720371 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156615792 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111313087 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161017268 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159069649 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123803524 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.140413074 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107170978 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150324583 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142315827 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133345903 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197991646 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170645618 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217230237 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159481004 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149062644 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181529082 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102030718 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203446899 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179503462 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145209169 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199731807 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192760649 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213273856 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116507678 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22762223 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120090977 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098893134 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142633697 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170850728 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133337721 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108465287 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162600167 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207204192 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181890885 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171855192 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232211044 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176456564 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192078361 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094931515 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169116098 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183804504 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203084995 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.154398113 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138846564 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151346655 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178378031 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155490347 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2563669 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167766166 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176215831 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234819061 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.1240273 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13242332 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15064345 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1797976 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154215979 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176083374 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146935147 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140164259 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161627261 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10336532 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188321165 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187400946 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164771019 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188298754 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150690765 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213640745 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101477098 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161459503 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160787608 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165529126 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109069415 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17578121 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201496304 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147253935 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166983086 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216904303 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10474061 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308444104 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235088266 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194970105 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138901916 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155220604 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161059831 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164018681 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170392374 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179849816 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15872136 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189431667 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160390522 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13757823 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139234327 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122206875 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153400008 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13388998 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149104976 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177314154 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138873254 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189522351 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155342581 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160616957 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172086698 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150771383 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144450006 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122912759 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245347784 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18342327 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242115339 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.15013 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178958418 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205548516 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127093263 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131750551 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106211764 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177636397 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137296275 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190322825 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.213718611 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199342263 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208204832 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180512766 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139163652 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.094045544 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158605254 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170284797 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228816083 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148734806 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.12070868 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23183365 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109494892 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132821872 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167346364 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28659606 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144157072 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222108751 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080864555 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280141474 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125180454 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105046752 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164409105 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23470504 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137098799 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.152375711 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168414388 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163047064 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163244589 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149309593 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217165245 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21211761 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227768195 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186341201 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104253716 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156908038 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203423916 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192775076 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157424525 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138644701 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207934001 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195791422 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.222704217 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114116215 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195655039 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168351445 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158045949 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187004971 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135234466 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20837982 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135197442 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190940377 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153584508 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138369737 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177219334 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.215111455 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113883409 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214934471 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184460955 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134558015 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106386865 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192805341 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177810569 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154531594 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099848085 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209034342 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097654504 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219649843 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235345698 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134040327 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155416321 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146661102 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108666654 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154603796 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158422231 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139757474 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163327621 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202866639 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135469453 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191913801 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229915857 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17165657 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172282249 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146203264 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.69376947 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130321994 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196567409 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149247763 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207440679 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151830192 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172709598 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160030069 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168727178 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223193569 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16224952 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231662426 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192027599 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177946543 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132939772 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159638168 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155350076 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144473422 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153909421 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169192755 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162137319 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145175127 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178087394 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165242466 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133548382 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112971209 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226320576 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120411114 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213579749 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180657815 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111154895 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202720043 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187234038 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132830667 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180794562 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235775753 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113747984 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149102532 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134648991 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.150991001 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261652727 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097470829 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219433714 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186154389 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15960034 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169918072 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14733572 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193145034 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157181312 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212489003 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116134982 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158862527 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157437367 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139318802 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130429179 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156108802 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169825244 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.122160498 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188861284 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138931122 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194295501 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125798532 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144561174 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286597119 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177036812 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245609422 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107643204 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137181045 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164615411 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150939648 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178084725 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178339993 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13692094 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135069455 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136273438 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129688784 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112271275 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156340159 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191403908 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192209623 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208026439 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135705989 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278383295 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113020881 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156357189 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115082847 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.10514132 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150932402 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147182135 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155221869 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193011243 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261145076 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147272031 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132433587 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120803213 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126913354 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135670895 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163154838 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166364962 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180887219 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144214851 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081760292 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156119327 seconds)
  done (took 82.539187312 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175685747 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133149337 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146566502 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202154597 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175993385 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270536214 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211988417 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253532993 seconds)
  done (took 2.648197521 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093544122 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145966147 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157083922 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13344291 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09143829 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119340518 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.341609429 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133737787 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.11726399 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121695685 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173069011 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093583642 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.547644956 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091379565 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119810866 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108288486 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091988034 seconds)
  done (took 3.753481196 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.170748551 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.491590022 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.01197735 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194147933 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158870715 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.117928073 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.704900652 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094825907 seconds)
  done (took 12.030317645 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.11478211 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136783065 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122875919 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.15256702 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141170203 seconds)
  done (took 1.76519403 seconds)
done (took 123.894269617 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097165573 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127418707 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09740239 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129471541 seconds)
  done (took 1.52719213 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094413339 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071157124 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101235481 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074984882 seconds)
  done (took 1.427944263 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189265728 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.167287577 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.3819107 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072111912 seconds)
  done (took 1.568583466 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113602343 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131939162 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103800294 seconds)
  done (took 1.441896828 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106844829 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12891771 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103520196 seconds)
  done (took 1.42833736 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105707057 seconds)
  done (took 1.194609712 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107737232 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136791661 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109346121 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136956577 seconds)
  done (took 1.580424126 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098687335 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126604175 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108978285 seconds)
  done (took 1.421678481 seconds)
done (took 13.033970261 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103602984 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.417615205 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412532805 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110870546 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721310068 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380815588 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032075094 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145645643 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165473366 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093207122 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139177364 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672856606 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.024077495 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.372996999 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.984870853 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.372768571 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676656463 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120967619 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091719334 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122337035 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016432965 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092473747 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121537188 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092904825 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701368931 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.398691351 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122229791 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.372377453 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09321699 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125696235 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383048318 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122534194 seconds)
  done (took 16.880889115 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.09595255 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173416323 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098313184 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123496213 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123048466 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094142362 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123163835 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093043076 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179406657 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122704845 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111499167 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122110121 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125120703 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095170709 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140697365 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094397909 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125520883 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093061855 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121349542 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093401795 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140213369 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119329898 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094278761 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120754017 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093485846 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134848439 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094099457 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120849464 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119924075 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099157823 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126502879 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094340747 seconds)
  done (took 4.799126647 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140632443 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183115295 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129135501 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126643084 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167883813 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12390853 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198141636 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11849304 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182674472 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12255926 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139534914 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094232535 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156018425 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121921428 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115220845 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12118777 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097016704 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12147589 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092568892 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123125703 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139983346 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093282525 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121477942 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093206517 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123312068 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108401708 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124003999 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120586401 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093658029 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12662282 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099935322 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123891637 seconds)
  done (took 5.14300504 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096720008 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126049879 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109537977 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138133725 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09525009 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125134376 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097363216 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124085529 seconds)
  done (took 2.007635105 seconds)
done (took 29.921237466 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110622045 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126609758 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107174803 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.1341706 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103106478 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.13161714 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091177161 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133666524 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134120304 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102253981 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13709087 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092295894 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122013094 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092169398 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134545998 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097370699 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131985039 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102159314 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133299218 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131651416 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095273997 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133206465 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102979728 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132245513 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104087767 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134204033 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136213709 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099228335 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122415165 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09473839 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123750297 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103565734 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12278719 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104822993 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126244929 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097776747 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122968581 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093861954 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132230582 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13305261 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099967295 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133065833 seconds)
  done (took 5.984459231 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107429287 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139422176 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105005655 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081095478 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11686842 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081257218 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138065468 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079306426 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110066953 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108727805 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074752276 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106481296 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078875683 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101009626 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077456242 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075624737 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108392686 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075743964 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076392664 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105699278 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080410007 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072693991 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107831479 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078993372 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075429032 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109752182 seconds)
  done (took 3.572671765 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100504828 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133704204 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113423209 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183397474 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160858382 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100026674 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131675912 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139667449 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10906329 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120459699 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097107079 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148614442 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1093694 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129037339 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091822173 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136796582 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134993713 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093647701 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128252187 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112102496 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138609565 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102449246 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140676022 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132320926 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092082596 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12383376 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097596521 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135073423 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098098766 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131529627 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096556668 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124512848 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122849692 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104975749 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125830249 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094310521 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141640721 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102985266 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.13083963 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120874582 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100310745 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121632896 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113701302 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161494426 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091144524 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128651368 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122943882 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104048929 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120859743 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111110717 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130957453 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092453244 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125419334 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092078018 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121534322 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107239783 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124701223 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094748086 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.13258388 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127730736 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10658567 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125149863 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10952738 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121835817 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100753967 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120979116 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093235638 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12165398 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143722828 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094655261 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161604693 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093675255 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124055754 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102295763 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130048088 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127931241 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092895611 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137316033 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102101559 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125424605 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102764848 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126031904 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095037835 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140330233 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123488416 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095630326 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122232066 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100718822 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124050855 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094157991 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13643861 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09150538 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124792747 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11083116 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122763342 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122997518 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099563655 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12632008 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092893879 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135762168 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097956536 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123602277 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131845053 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093899306 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123862786 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103554418 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126487672 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091880707 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127908503 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098591959 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123644949 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09411772 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127222225 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094821377 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132038249 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128996591 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099385217 seconds)
  done (took 14.810551473 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228189776 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217767334 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.234903673 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.26303371 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135198158 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115147106 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.21142219 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155448462 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123935268 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159801561 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.170980155 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18247037 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.138676681 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.21134691 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.17107245 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093172545 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143060825 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.135144366 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.246042676 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.25803399 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143909129 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102183852 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164248484 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160520276 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137704161 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132201875 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110331471 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134771272 seconds)
  done (took 5.800514322 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109135691 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155409386 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097850404 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144623666 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148769178 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092939997 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127921326 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094575172 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136030487 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136383179 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09292318 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12946157 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100081023 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133155081 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123243853 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103312701 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.13206004 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094645708 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125815689 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097554774 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133547824 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101955918 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127302762 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121000468 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102923139 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12141651 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087484633 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142923577 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122077689 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11646601 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121066413 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102723743 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136673422 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094819958 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123200301 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095023069 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125466971 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095209899 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125568683 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091652373 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122328563 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077759301 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121539627 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136442682 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099530468 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080239182 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130519657 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128104998 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095623771 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120233733 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09728768 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12499526 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096744991 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130055374 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096301541 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124464967 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096336712 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116073535 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099930265 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125119681 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.0849889 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121688883 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098993945 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118060366 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101475465 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128292238 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091971501 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125203361 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09815399 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130058567 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094782316 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129754845 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.0913654 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125830006 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095717913 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128648578 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125121023 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093480644 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123063031 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095236279 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075518119 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123397229 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073698949 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126883536 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092062313 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122381265 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095103608 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.1304671 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138265732 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095846797 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132585159 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094551213 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123619602 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096611804 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114084745 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096691138 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139808902 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141070826 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094325542 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121864599 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10905327 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126467161 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093371215 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106591684 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10149793 seconds)
  done (took 12.978063232 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131017286 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154162948 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124598969 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112275411 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155989178 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157453178 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100633417 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130636591 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096651454 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141685508 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094107278 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131998714 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093931138 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13736647 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156944137 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103339369 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125557783 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107654395 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128743488 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168829588 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111303971 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142902291 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.10988183 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124176988 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128210229 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111232053 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160874001 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107629749 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136598368 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142019348 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10799255 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160431606 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143488359 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.09889817 seconds)
  done (took 5.478586794 seconds)
done (took 49.71839233 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.216662508 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.435276015 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.197354765 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.14051162 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.225193743 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.213631419 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.227413039 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.198005361 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.702999078 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.197620659 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.436976452 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.716626687 seconds)
done (took 60.034130485 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.249534084 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.358039291 seconds)
    (2/2) benchmarking "String"...
    done (took 1.512124198 seconds)
  done (took 3.993224186 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.790176844 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.129240418 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.455754724 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.197215393 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.197565996 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.489088246 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.888015688 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.575038314 seconds)
  done (took 28.054809125 seconds)
done (took 42.212880859 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.203611953 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.276665009 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.229511793 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.176568089 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.305072623 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.238941788 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.533749196 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.206364965 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.211674412 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.189139041 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.213257853 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.1932358 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.202559802 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.50430911 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.195816794 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.199563324 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.245542976 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.684659376 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.587924208 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.196199718 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.212585825 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.239276782 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.216188802 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.193371164 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.198774928 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.206025793 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.201605214 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.194651609 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.646304289 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.198542812 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.196936451 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.695903306 seconds)
  done (took 190.318609453 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.192150819 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.253623876 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.361078085 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.232307362 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.656523233 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.394108414 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.333735237 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.741245038 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.212998103 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.209540953 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.429608095 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.198239582 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.506017808 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.169088948 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.224509965 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.230991245 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.393244056 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.509591036 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.23353746 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.37915835 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.217986017 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.438746666 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.33437111 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.391325999 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.241320989 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.196733625 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.223880621 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.243480131 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.403168439 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.331193341 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.223010322 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.239165713 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.796923774 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.050646016 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.211220027 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.223852359 seconds)
  done (took 149.748597934 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.192546227 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.194483109 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193691584 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.224902929 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.194119398 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.743320992 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.748914237 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.703472316 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.390486267 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.195185676 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.192203836 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.422785665 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.419490602 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.192027743 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.193301105 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286018116 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.206020081 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.193279123 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.208758288 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.235264035 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.195543211 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.192809406 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.736594703 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.209117683 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.208973807 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.378513299 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.207144104 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.224250985 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.581126351 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.192850266 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224868312 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.518491067 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.240345886 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.193616 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.55468037 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.755015227 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305095169 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.195607113 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224235338 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.193629159 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.470763926 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.193698558 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.195732518 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.196940557 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.823762282 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.192514822 seconds)
    (47/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.193400259 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.733495883 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.122304455 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196180777 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.193866274 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.193597754 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.324133433 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.779403393 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.206976633 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.191274392 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.193851622 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.192375561 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.192560626 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.222614768 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.266909112 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.286392785 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.206763409 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.194956167 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.220690197 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.191962771 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.26024648 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.194467932 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.379174046 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.262285155 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.303443439 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.716746446 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195029767 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287804209 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.309908818 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.191172854 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.190618059 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.190852066 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.189796858 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.298956918 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.191229986 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.561948528 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.359718308 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.206774167 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.361730835 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.285189621 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.191927567 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.552649657 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.19420791 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.191788038 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.891425763 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.286331536 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.192446415 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.191750571 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.192638017 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.566040571 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.717252828 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.399564333 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.196099618 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.344435862 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.194222045 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.579169876 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.693800091 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.829622235 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.194432368 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300879325 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.357250355 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.207716399 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.194090316 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.339272003 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.191071204 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.250760743 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.191788196 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.58667919 seconds)
  done (took 362.523615493 seconds)
done (took 703.716623494 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.800184752 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.779761518 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.885770138 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.771575706 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.739537376 seconds)
  done (took 10.094217147 seconds)
done (took 11.212630314 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.365826127 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.365269905 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.248011228 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.367689342 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.223055799 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.382550027 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.347011213 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.214915541 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.286838181 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.266532608 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.287274252 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.242091977 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225467516 seconds)
  done (took 17.940525618 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.503231458 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.495153488 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257135545 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.502910054 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.234648247 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.503677379 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.390526789 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.400173125 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.404125512 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.225914691 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.207636399 seconds)
  done (took 16.244966718 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.512523745 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.50784112 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261687381 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.519135349 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.235769309 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.50597107 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394069565 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.414228407 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.400221354 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.225844887 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208838499 seconds)
  done (took 16.304740762 seconds)
done (took 51.609245432 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.202361689 seconds)
  done (took 2.321333908 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.23563297 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.396270646 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.220536055 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.210284495 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.203541929 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.20408264 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.212164245 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.20451533 seconds)
  done (took 11.007905989 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.203771329 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.200449917 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.200975505 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.204226678 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.203357868 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.204015729 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.204209045 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.203892149 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.201774604 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.203948755 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.200945555 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.202874683 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.202034004 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.205551218 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.202286391 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.201778195 seconds)
  done (took 20.36666163 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.203287067 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.201037294 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.201245253 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.202661681 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.202193464 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.202618352 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.202309752 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.201385323 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.202325012 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.201872739 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.20337125 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.201902341 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.204579542 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.202204341 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.203772253 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.202606622 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.203182149 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.20225915 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.207802087 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.20335879 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.202955258 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.202590645 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.203525068 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.203830764 seconds)
  done (took 29.992184712 seconds)
done (took 64.809286178 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.788197585 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.726392478 seconds)
  done (took 6.636804446 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.206104883 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.206015689 seconds)
  done (took 3.535438036 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.205591339 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.205802938 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.206863486 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.204961402 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.204720466 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.204946608 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.205358892 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.205578772 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.205673781 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.206454798 seconds)
  done (took 13.178446297 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.20572777 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.206209117 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.203999904 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.207054489 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.205857562 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.202813841 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.206305356 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.20530756 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.206496274 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.204219251 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.207107634 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.204070175 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.206598521 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.204150772 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.207180517 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.204606142 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.204903834 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.205226015 seconds)
  done (took 22.821964356 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.207912181 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.207482811 seconds)
  done (took 3.538618048 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.205542726 seconds)
    (2/7) benchmarking "second"...
    done (took 1.204909927 seconds)
    (3/7) benchmarking "month"...
    done (took 1.205549969 seconds)
    (4/7) benchmarking "year"...
    done (took 1.204889374 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.205491675 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.206126789 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.205888469 seconds)
  done (took 9.562774225 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.208535781 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.382958843 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.462059676 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.798170726 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.209989657 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.212131884 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.089595138 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.212591799 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.213678859 seconds)
  done (took 13.914380259 seconds)
done (took 74.312006085 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.189947286 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.217836185 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.429775182 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.204677646 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.216494583 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.501197877 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.213586453 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.335108912 seconds)
done (took 37.435594181 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.215829542 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.184548937 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.884341503 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.183017131 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.215060087 seconds)
  done (took 18.592794099 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.175386729 seconds)
    (2/2) benchmarking "read"...
    done (took 1.536276026 seconds)
  done (took 4.837592214 seconds)
done (took 30.773400556 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210846314 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.210615442 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.208070278 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.210035133 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.211189189 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.211256257 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.207158776 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.207429155 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.210328035 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.210475988 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.209861953 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.209660536 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209478107 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.20853934 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208403452 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208432897 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210644155 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.207829151 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.208122597 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209012459 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207833976 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210476375 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.207547186 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.208476876 seconds)
  done (took 30.148761146 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.2115881 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.209546771 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.21114102 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.210165787 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.208196041 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.212451494 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.211321818 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.209193911 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.210617459 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.212012218 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209370958 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.20977236 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.211355759 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.208959238 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211834775 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.209707581 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.212351025 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210324665 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212436077 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.209707005 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.212265671 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209891542 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.208933531 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213082064 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.209960167 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209896983 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.212834689 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.211495806 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214657865 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.210561887 seconds)
  done (took 37.453344993 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.21682737 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.220721284 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.213260929 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.213217382 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.212553313 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.212842073 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.213770872 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.21294509 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.212945206 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.213399175 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.212939632 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.213361001 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.21376712 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.213700224 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.213266465 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.212893289 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.21388921 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.213627904 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.214066397 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.213183931 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.213960443 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.213814184 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.213899393 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.213235931 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.214180686 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.214371215 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.213864285 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.213691375 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.215127946 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.217264533 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.215372802 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.215858688 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.21410469 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.215082712 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.215500432 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.214969177 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.218975832 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.22218932 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.213910796 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.214441166 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.214722566 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.214800265 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.214030342 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.214549812 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.215438647 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.214547474 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.215599548 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.215025292 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.215667966 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.215279376 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.215955784 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.215375187 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.215938819 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.215607379 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.215812802 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.215349509 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.216365276 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.215502569 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.216526276 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.216876755 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.2165236 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.21656592 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.216629779 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.216703717 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.216431944 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.216890066 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.216857021 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.217768871 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.218289901 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.216770406 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.216651322 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.216860689 seconds)
  done (took 88.624950495 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.217223889 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.214289082 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.213666366 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.214215406 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214523741 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.217954804 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.215466956 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217157559 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215427903 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.217332222 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216959838 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.216272093 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215068818 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.218361501 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218162775 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.215780516 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.21869349 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215065954 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.218581627 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.21826862 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217948796 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.215259864 seconds)
  done (took 27.895235989 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218441465 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220847912 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.215527782 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218152331 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.217261778 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218051389 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.218022508 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.220290797 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218941183 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217333366 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215733526 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218502637 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216516877 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216702942 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21660006 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.21837354 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218932398 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.218691199 seconds)
  done (took 23.05773704 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.21687463 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.216204556 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.220778081 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217131994 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.217327801 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.220182644 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216811313 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.21956195 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.218950008 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.216999511 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.219615818 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219005943 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.219553485 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217290595 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21936878 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.217752002 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.219140099 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21796023 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220039191 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217646599 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.218686573 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219901601 seconds)
  done (took 27.942953335 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221275631 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.221031947 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.218911241 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.218185894 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.218252172 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.220918473 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.221072945 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.219013528 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.222268026 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.221027517 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219146673 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.22194439 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.220805152 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219351214 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.219329957 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220313271 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.221495889 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.219655104 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222237948 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.219606374 seconds)
  done (took 25.543043673 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221753944 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221606783 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.221781413 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221855039 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222872348 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.222648262 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222589945 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.22297885 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222284718 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.22335265 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.222566708 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.223390799 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22262336 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.223541218 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222470719 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223355963 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223827092 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223376274 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222797883 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223436443 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.224073426 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.22327917 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22294748 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.223232761 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.223904649 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224371389 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223624003 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.224423636 seconds)
  done (took 35.38406837 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224492519 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225157491 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.220805135 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.222782229 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.22151924 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.221658522 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.221851756 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.221998008 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224114051 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221077763 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.224042278 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.224971256 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.224961001 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.22451364 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.224638028 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.225265717 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225307031 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.222635056 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2231336 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222956729 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.225987623 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224407621 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.226509519 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222755795 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223567744 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.22530465 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223682041 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.223436629 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225500959 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223118738 seconds)
  done (took 37.852274788 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.244437152 seconds)
    (2/2) benchmarking "in"...
    done (took 1.245283463 seconds)
  done (took 3.630601791 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.223240041 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226476376 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.226794142 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.223772984 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223751805 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227043538 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226888029 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223957723 seconds)
  done (took 10.943311082 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.225589369 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.226960273 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.227109958 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.227335997 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.226813259 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.226985496 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233486375 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.246380658 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.227601787 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.227235959 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.23306019 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.235502243 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.229355993 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.227317352 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.227151709 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228599416 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.229052871 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.226570016 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.227698127 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.22826217 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.22751076 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228774594 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229402443 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.226552863 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.229178615 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.239314039 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.250618733 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.229284829 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228506025 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.231023101 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.229482828 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.227128795 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.228654375 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.229516726 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.22982407 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.228283147 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236499394 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246556479 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.23454075 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.247511947 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230531174 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.226972284 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.229567244 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.229522292 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.229901746 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.230080933 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.23141755 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.227304797 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.229187863 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.232904336 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.236259057 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228527788 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.228029614 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232080176 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.229837201 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23635789 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.247564326 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.232882802 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.239266834 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.240349509 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.260021454 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.253016652 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232222735 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.230870581 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240631884 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.254458896 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236830261 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.247837359 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.228604057 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.232062911 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.236690174 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261582021 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.255029759 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.231349542 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231123855 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.232931655 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233037377 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.232103349 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237779904 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.251817793 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.231578366 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23510944 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241414789 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254014549 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.231074255 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.231570556 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.23207828 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.232746436 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.23289201 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243116783 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.250038134 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.2331515 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.230841043 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.232288408 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.232886197 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.233228823 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.232812576 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233766538 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.231126828 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.233740332 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232928937 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.23726877 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.241174844 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.232930265 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.233131812 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.240303872 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.252504772 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.233263341 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.238533067 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.234239509 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234450393 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.234718038 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.239190738 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.231620517 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.235896301 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.241591419 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.233227508 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.235366738 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.234143782 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.235163472 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242994676 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.258797253 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.235268103 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.235974311 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.239584515 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.245581813 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234629616 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.236242439 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.234974781 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.23293701 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.232873738 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.236109841 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.235878071 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.234785917 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235628707 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235348417 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.233841368 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.235967483 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.235143904 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.235809745 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.235643272 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.23498607 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.235486873 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.23718592 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.235579947 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.236812683 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.241756656 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.25322639 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.236776106 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.236605539 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.234486066 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236993738 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.236846039 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.237136525 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.236130531 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237263683 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.237441564 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.236281953 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238122533 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.238584997 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239119932 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.237607468 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241459983 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.237810121 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.240180037 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.237425516 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.235740021 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.238607005 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.239561663 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.236522161 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.238785068 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.236663714 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.24162853 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.246540452 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.240061656 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.238281698 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.239692832 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23796522 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238641815 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237901534 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.241205023 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.245254324 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.238618775 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.244618423 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.256674981 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238439152 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.239664783 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.238532068 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.237993394 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239591366 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.241933558 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.24720434 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251038629 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263369035 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.240293111 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.243950724 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.239619199 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.243078137 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.243322896 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.239522458 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.24110465 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239544971 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239650308 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.240114196 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.241377106 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.239849507 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.240016371 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.241648001 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.240514212 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.23946093 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241834163 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.240241993 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240420489 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.238736308 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241323798 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240185949 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.241035952 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.238687863 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.239457339 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.240619989 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.242037985 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.241551097 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.247035652 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.239576564 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242669666 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241566333 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.241094305 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.240364899 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.241956578 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243386961 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.241688738 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248354066 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.260116007 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.2419621 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247791708 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.258778759 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.241232537 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.244927902 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.243262433 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.240959221 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.244966492 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.251265393 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.244654194 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.242676069 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.2428325 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242812918 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244566703 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.248531516 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.260655467 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.2429742 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.244800167 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.244637223 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.242562864 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.24376818 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.243540619 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.242843141 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245060758 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243293993 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.244439733 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244030927 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.243837872 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.243633117 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.244385359 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246160351 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.250862371 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.248582932 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.243676024 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.244592811 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.244916719 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.249570385 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.243319482 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.244827225 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.244237434 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255934388 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.268044763 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.250222258 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.263668519 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.246453347 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249785584 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.26339511 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.248083212 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245339088 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245197703 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.244955557 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.24515096 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.242911453 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245866232 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.246816075 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.246330153 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.245817043 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.249799039 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.247503529 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.244945608 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.246985017 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.2460092 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.247156904 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.244896752 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.247282837 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.24793645 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247419788 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.244997014 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.246772118 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25258196 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264296919 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.247490822 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.245037866 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.24577 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.245562457 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.248881761 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.247224663 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.249501051 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.254497078 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.249413639 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.255576455 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.248574674 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255756428 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.247065527 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.250799074 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.254598808 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.245521789 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.247053972 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.247455975 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.247862623 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254180495 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.265671354 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.249376063 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.252446372 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248908392 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.249151813 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.248588818 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.248738014 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249425458 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.248644873 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256501987 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.266607151 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.252690759 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25045087 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.246143516 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.250204394 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.248895675 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.248434341 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251467664 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.248924898 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.250570987 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.25017821 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.248577003 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.250218351 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.249104091 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.251082701 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.247560863 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.25025246 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255296444 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.268070187 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253532199 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.250921898 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.254493247 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268413968 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255500888 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.2693311 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.250770149 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.250727488 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.251143049 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.251086329 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.250458507 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.250608933 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.251610415 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.252013648 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.255825562 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.250833985 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.253603917 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.25103092 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.251505383 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.250407827 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261474748 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274576322 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.252229699 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256941325 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.249896492 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.251897956 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.255255488 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.252110641 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.25046338 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.253666998 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26239849 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261265614 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.251091436 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.252405836 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252290926 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25139828 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.252918172 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.25359215 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.252060641 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.25389466 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.252387556 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.252135185 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254828183 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.252714478 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.252961476 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255113111 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.254249916 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.262564762 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.271943126 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.253561426 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253204253 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.25489928 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.253314149 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.253219096 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.254639733 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253541475 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25515413 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.255076828 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259976015 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.259684471 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.256648026 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.254215033 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.254767167 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.253716603 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.254411082 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255177669 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.254561229 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254384754 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.25491796 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.255243905 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.253707066 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.253062427 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.256616282 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.255137103 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255196844 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258026399 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.261984127 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25553005 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.253081349 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.255796357 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255396982 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.253594584 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.256292994 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.262121547 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27734416 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.264915932 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.263349769 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.260100208 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.255535957 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258087184 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.262278128 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.254760335 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.256012177 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.256028242 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.255677763 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.255783756 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.259431602 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256981518 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.262427849 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.275276167 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.255095613 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264441162 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.275638832 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257061422 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.258356061 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.260607561 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.255845685 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.254979714 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.259038088 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.256467257 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263529047 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.275577771 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258679822 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258345672 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.25507215 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.258509726 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261472558 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258791706 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.258052343 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.255487538 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.25768085 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257919997 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258813327 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.256474605 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.257786597 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.257549608 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.261557053 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.264369243 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.256266816 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259820572 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.258184688 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.25929794 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25909805 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260703389 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.258382131 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.25682242 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.257965735 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260044345 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.259789998 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.262418913 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.257776214 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.259877686 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.261367735 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259280854 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26168898 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.269364161 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.266381475 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.25795067 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.25870467 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.259630573 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.260344221 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258972048 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.259033558 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.259181691 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.260662607 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.261365594 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260002117 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.260742331 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.261925659 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275134836 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.279366687 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259576644 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.259868298 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263123226 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.261526212 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.258877873 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.260541341 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.261968602 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.264012138 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.267604648 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.261051426 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.266029329 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.278330106 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.26168528 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.265577847 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.263843706 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.267815162 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.263627555 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260560015 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.261414708 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.26550397 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.276885439 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262330103 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270982181 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.291863807 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.280452252 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.262690445 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.262788128 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260467026 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.262228856 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.263989298 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.263283563 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.26349171 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263209724 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.262830625 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.262356835 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267296332 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.263192842 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.264670164 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.262913197 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.261945704 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.263391824 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.260948625 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.263743598 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.263630559 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.262375657 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.263566475 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.262858522 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.262971031 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274339471 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.288760333 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.264702045 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.264682373 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.262207617 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.266650406 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.265730275 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272812032 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.272386034 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.263885881 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.263617455 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.265436976 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264032146 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.264170155 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.264169791 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.26457565 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263536256 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.263534423 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.277289375 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.289283339 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.269622273 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.263752084 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264615223 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.266023184 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265662818 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266192952 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264940247 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.264896595 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.266916609 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268585761 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.265478689 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.265757793 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.268496812 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.27279768 seconds)
  done (took 745.597899015 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.263932292 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2639803 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26421386 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.263924132 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264717514 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263623934 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264067228 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.26443466 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.265352066 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.264989153 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.26447833 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264913625 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.264370207 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.264835081 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264819529 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.265307577 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263818413 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.264700315 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.265405494 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264742954 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264891235 seconds)
  done (took 27.734138453 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.266474483 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.264392987 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.264483166 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.268496061 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264727131 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.26816222 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.266640151 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267770829 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268852934 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265605161 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.267117956 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267947539 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.265600238 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.265008127 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265120211 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268437315 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.26870203 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.265350164 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.268464092 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.267351995 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268974056 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.266493766 seconds)
  done (took 29.05040171 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.269829071 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.267890127 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.26704114 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.266033713 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.269388336 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.267103093 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.268805926 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.26970139 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.27031784 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.26823733 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.267049024 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.270394898 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.275134898 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.274897079 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.270386954 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.269771709 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.414185659 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.269790447 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.269921941 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.26961676 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.267965169 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.274225384 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.286732058 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.268254375 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.267390541 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.269468968 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.270850056 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.270241974 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.270270846 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.270500898 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.274021618 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.270641314 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.26894532 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.27184851 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.269279291 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.271575224 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.275403707 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.269965789 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.268153414 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.270880614 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.279802091 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.290377125 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.270990966 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.276073688 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.291536895 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.272128444 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.273779189 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.277534454 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.269148977 seconds)
  done (took 63.645819498 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.271866091 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.271934797 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.26875256 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.272218979 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.273216576 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.272019829 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.272860274 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.271530627 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.269195667 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.270181399 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.274262896 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.270701993 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.270632618 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.273429587 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.273675608 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.271438271 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.270700041 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.270013466 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.271862612 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.271567183 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.270996238 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.273356906 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.273789669 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.271885198 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.27431932 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.271762178 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.270952278 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.274374751 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.271089093 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.271863065 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.274360394 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.273520875 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.27561568 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.271467286 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.271327398 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.274298526 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.274239231 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.271681766 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.274747293 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.272170089 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.274688793 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.275517184 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.276006073 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.274968909 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.272625748 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.27303507 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.271737347 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.27384269 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.272932869 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.275049986 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.274866345 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.272755757 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.275441433 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.273161512 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274925213 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.275580929 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.272149112 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.273441786 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.275529787 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.27462327 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.27554345 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.279280471 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.275689753 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.27638389 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.276017189 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.274887817 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.274574837 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.276210047 seconds)
  done (took 87.768615527 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275033375 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.27483682 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275197333 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274918691 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.275103237 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.274500026 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.27546478 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.275393178 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.275230198 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.27532236 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.275385896 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.276460259 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.276289339 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278108799 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.276905879 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276585164 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.277022385 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277171844 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275875359 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275634096 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.276056091 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.276713358 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.277391393 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.275825809 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.276879116 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276531369 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.276553907 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.277297758 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276964168 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.277277609 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.277240237 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.277067261 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276915611 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.276655139 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.277131387 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.27722586 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276910154 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277225359 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.278108699 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.278144255 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278218839 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277010153 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.27826131 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.277836801 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277465358 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277838185 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.27902126 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.279004641 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.279142332 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.278617818 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.278607592 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277992705 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277591557 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278105302 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.278200269 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.280382173 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278722472 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278069259 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278769932 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279293741 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.278900045 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.281293215 seconds)
  done (took 80.374907114 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280593889 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.281017409 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.277465966 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.278048243 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.280057812 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.27863759 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.280941726 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.281009794 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.281102744 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.28042436 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280313916 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277903734 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278625115 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281909805 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.278004861 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279166638 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278649245 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.279184196 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282027813 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.278800993 seconds)
  done (took 26.78600842 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.279192432 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.281306597 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.279399098 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.279904401 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.282117183 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.279875676 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.282071904 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281732697 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28002856 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28240115 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282998626 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282641668 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280761983 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.280869091 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.282906256 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.279974636 seconds)
  done (took 21.69149567 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.280620927 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.282950224 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.282670664 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.280934909 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.279926923 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.280256546 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.283605427 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.280445002 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.280629762 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.283387554 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.283464556 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.28363382 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.283678868 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.282535409 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.281552625 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.283847239 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.282220692 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.281500082 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.283873557 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.283890591 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.282841253 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.282155182 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.285321883 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.284044537 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.281376453 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.283454784 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.282498091 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.282523204 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.282494495 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.284986532 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.281569415 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.282489017 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.282816076 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.283041598 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.283443246 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.281920722 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.285274045 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.284983777 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.284499095 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.284867618 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.28514068 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.282130627 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.28597696 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.285492777 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.283277159 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.285648191 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.283094953 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.283810448 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.283195718 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.283571442 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.285390526 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.285741374 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.286369329 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.28645386 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.286316983 seconds)
  done (took 71.779680703 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286909049 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.286817954 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.283460539 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.285807852 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.287005644 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.284095916 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.28594062 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.286258177 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284011885 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.286775465 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.285414212 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.287883397 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.284937365 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286574865 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.28562612 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288118139 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.285272319 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28518828 seconds)
  done (took 24.34262354 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.285713569 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.285042391 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.287199979 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.284398743 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.284762247 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.288012518 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284871266 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.288713683 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288221912 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.285465394 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286553068 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.287887294 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28801132 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.288508833 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.285996891 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285749129 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.288724314 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288635888 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.286844683 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.285333148 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288719616 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289346737 seconds)
  done (took 29.510921704 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.286365937 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.286532807 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.286260956 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.30417003 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.306396852 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.309642772 seconds)
  done (took 8.978083313 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296373494 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288646107 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287020141 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290682787 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29048644 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287205799 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286659222 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28727572 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288732399 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287600954 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287385453 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289479875 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290753071 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287870711 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290111005 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289966784 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288133388 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288319071 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28842179 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290836407 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288640734 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291279377 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288033769 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288386241 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288728895 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289064858 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290360742 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289305797 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289284596 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292166921 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291628311 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289000788 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291353327 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289748433 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29189399 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291619851 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28872169 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291427711 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292444802 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288875518 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291712644 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291361255 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291515479 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288734675 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29189576 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290191275 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289875856 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289247798 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290386665 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292541538 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293224222 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289188913 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291441116 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293093487 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292271449 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292931743 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29117861 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290510689 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29311011 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290528882 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290901408 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292728357 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290330892 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290095932 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292973231 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290498267 seconds)
  done (took 86.380167386 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292046944 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291218435 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290199504 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292082535 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292384201 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29080641 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291319136 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291251406 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290587494 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291836685 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294079628 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291600981 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291365794 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291918676 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292190546 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292100045 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292015527 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292289092 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292643973 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295818112 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292397636 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292480265 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292731824 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292397282 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293638852 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295053156 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293161783 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293151068 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292851727 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292582522 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293352632 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293283803 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29322487 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292482225 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29317328 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292630201 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292599391 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29284773 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293400879 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29619896 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293162205 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294826477 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291999947 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293441379 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293280869 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293349997 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293543238 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293490624 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294576452 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294068644 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294650087 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293562226 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294227542 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293895845 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294247904 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294611804 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293600451 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294096128 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294151718 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296928549 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29490182 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294831505 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296319051 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295536717 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294780497 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294537322 seconds)
  done (took 86.559638128 seconds)
done (took 1739.80460637 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.458140706 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.411420465 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.293920738 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.292273344 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.295981777 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.309527507 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.293494789 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.295047918 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.295119487 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.296176465 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.295290468 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.482547397 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.291532931 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.29482713 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.294879157 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.388930965 seconds)
  done (took 42.498343078 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.323839516 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.302615451 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.411639461 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.324118257 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.324286467 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.479825518 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.354696178 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.305105819 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.468678036 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.345645315 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.868049045 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.328345728 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.299563643 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.418363201 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.322600565 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.479152261 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.548616608 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.88007056 seconds)
  done (took 29.994005638 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.735475584 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.324497017 seconds)
  done (took 9.270157563 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.319996765 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.30135277 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.301332902 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.299861012 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.29288567 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.311298762 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.300036364 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.297666958 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.892021215 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.421975244 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.307562402 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.312528684 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.319612844 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.302480664 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.300662014 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.3394282 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.454726316 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.301653206 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.299935992 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.306749875 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.302236219 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.401400353 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.342253071 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.306713056 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.424065125 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.880074193 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.304066398 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.308000182 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.442982988 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.302542947 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.30138049 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.301209097 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.303578419 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.20915675 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.831485881 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.309408517 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.341834669 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.309358307 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.300338005 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.435382371 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.302931922 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.307348847 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.294170127 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.819485473 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.426286064 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.41483664 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.493223836 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.318656209 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.303404436 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.36112935 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.302406406 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.302700744 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.344339323 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.063024516 seconds)
  done (took 109.915935833 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.329930513 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.696381473 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.46559112 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.311684587 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.088374604 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.013904494 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.311351166 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.572175851 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.314765943 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.295580261 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.583371177 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.793435895 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.31896476 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.337287807 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.782229744 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.324857926 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.304151757 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.164095729 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.316525747 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.297792351 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.775860463 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.294616989 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.293858956 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.457287052 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.331515335 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.733343113 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.64269887 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.694934655 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.31346653 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.294570836 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.749202226 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.315601336 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.314084507 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.297587917 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.549018519 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.636860774 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.625370517 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.312553789 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.314664245 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.295272045 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.32017702 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.728591544 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.635976945 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.311244905 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.294497669 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.731398926 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.31139133 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.299543757 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.295170757 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.501505283 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.980165178 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.295217365 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.623914113 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.300544382 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.66190528 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.297634379 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.391004019 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.760533671 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311305804 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.363916271 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.320875929 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.296161334 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.303776934 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.295002919 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.299115097 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.626088057 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.671117958 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.298043989 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.625648518 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.757574227 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.324962961 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.806274341 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.224668595 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.314496617 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.403940689 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.295714957 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.964853559 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.781076521 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.33033739 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.297711669 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.619257094 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.320588356 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.568683359 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.311732034 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.296747642 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802143236 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.305942796 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.366940253 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.297298046 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.312760369 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.058847159 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.29824309 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.57181116 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.335198066 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.296803381 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.297289902 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.312549629 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297649164 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.314669346 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.299384539 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.808058452 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.324991061 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.266570333 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.315572624 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306707023 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.29886363 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.297950681 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.297274044 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.522178129 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.702922424 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.32163636 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.298858583 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.300242947 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.300819591 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.463120613 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.303120193 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.588550965 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.315141356 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298714919 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.304998585 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.083278139 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.349799645 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298884411 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.316110749 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.199574827 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.502678841 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.32163328 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.299614825 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.30205515 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.316133366 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.463230516 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.318948708 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.379609084 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.300385236 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.989150801 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.349899633 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.334511948 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.641295065 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.304302432 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.099377934 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.319580775 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.300206337 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.584265284 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.559636181 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.579746743 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.302735365 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.302280988 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.975163991 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.346064289 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.447489561 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.320792965 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.303863526 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.497765597 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.803377244 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.30040061 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.948143814 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.303380348 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.519696129 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.300972486 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.597020593 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.778781699 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.318410163 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.309082097 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.994388068 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.98841939 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.131017678 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.302277653 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.568680809 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.272684499 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.777197077 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.303097392 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.303019135 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.888177199 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.302630572 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.307148649 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.303310945 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.303253929 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.368342059 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.47393395 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.519516742 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.305455848 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.73760331 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.36113164 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303830779 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.314070817 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.306722283 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.652118358 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.376687615 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.308955631 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.311923305 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.303977981 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.310750465 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.760002209 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.269652995 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.309812696 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.454814004 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.921886143 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.31972846 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.304068907 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.88849206 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.560537714 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.839249433 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.332370372 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.596203442 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.329953386 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.34112436 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.038636087 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.357061963 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.8010402 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.324749087 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.305760484 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.888012629 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.320969577 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.662014219 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.305255584 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.30601718 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.840065657 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.32141218 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.307846421 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.475939616 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.324107613 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.577155754 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.305966192 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.325557973 seconds)
  done (took 1103.565218965 seconds)
done (took 1296.45163174 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.310435891 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.309806291 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.290863835 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.303299689 seconds)
  done (took 26.435852398 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.324163881 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.312853677 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.313690067 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.311203687 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.315795125 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.312723923 seconds)
  done (took 9.106314571 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.348970167 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.309477148 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.311537149 seconds)
  done (took 19.193399931 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.509096551 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.54138817 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.628864713 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.38266067 seconds)
  done (took 10.285011066 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.315019152 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.313738871 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.314530165 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.317024586 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.325420712 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.326737831 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.317731627 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.31769884 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.326772333 seconds)
  done (took 13.097003578 seconds)
done (took 79.341872151 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.293096266 seconds)
    (2/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.289841807 seconds)
    (3/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.072184031 seconds)
    (4/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.485151427 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.565063768 seconds)
    (6/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.905269447 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.354725326 seconds)
    (8/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.335792601 seconds)
    (9/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.099746926 seconds)
    (10/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.30848535 seconds)
    (11/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.289785457 seconds)
    (12/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.311365709 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.193190286 seconds)
    (14/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.319703781 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.199156917 seconds)
    (16/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.074975124 seconds)
    (17/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.806373116 seconds)
    (18/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.509756062 seconds)
    (19/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.991700041 seconds)
    (20/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.147583669 seconds)
    (21/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.450381374 seconds)
    (22/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.417557624 seconds)
    (23/286) benchmarking ("sort", Int8, false)...
    done (took 4.328242872 seconds)
    (24/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.289405103 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.918623502 seconds)
    (26/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.311154236 seconds)
    (27/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.666643016 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 6.326537236 seconds)
    (29/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.374770922 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.412217247 seconds)
    (31/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.65027068 seconds)
    (32/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.291377807 seconds)
    (33/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.320641179 seconds)
    (34/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.309938379 seconds)
    (35/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.551074183 seconds)
    (36/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.102697825 seconds)
    (37/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.298765029 seconds)
    (38/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.240260876 seconds)
    (39/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.291244647 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.722849762 seconds)
    (41/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.357911111 seconds)
    (42/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.49356743 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.440444161 seconds)
    (44/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.291433295 seconds)
    (45/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.056298891 seconds)
    (46/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.425379583 seconds)
    (47/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.762343091 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.593389458 seconds)
    (49/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.31100235 seconds)
    (50/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.341568794 seconds)
    (51/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.171044955 seconds)
    (52/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.414592835 seconds)
    (53/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.294889837 seconds)
    (54/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.34064832 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.371363653 seconds)
    (56/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.324042053 seconds)
    (57/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.315073996 seconds)
    (58/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.703331791 seconds)
    (59/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.312464571 seconds)
    (60/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.457490036 seconds)
    (61/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.801095113 seconds)
    (62/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.654184817 seconds)
    (63/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.054373549 seconds)
    (64/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.899350853 seconds)
    (65/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.298146632 seconds)
    (66/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.33868766 seconds)
    (67/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.716004903 seconds)
    (68/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.327044992 seconds)
    (69/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.402053715 seconds)
    (70/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.342888037 seconds)
    (71/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.317329597 seconds)
    (72/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.341621547 seconds)
    (73/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.34084297 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.851823945 seconds)
    (75/286) benchmarking ("sort", Float64, false)...
    done (took 5.611874113 seconds)
    (76/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.318089775 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 5.556893404 seconds)
    (78/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.383343796 seconds)
    (79/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.317591656 seconds)
    (80/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.820880212 seconds)
    (81/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.750060332 seconds)
    (82/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.586550457 seconds)
    (83/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.297562705 seconds)
    (84/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.299602516 seconds)
    (85/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.416979688 seconds)
    (86/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.33330652 seconds)
    (87/286) benchmarking ("sort", Float64, true)...
    done (took 6.323588312 seconds)
    (88/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.661075545 seconds)
    (89/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.422615079 seconds)
    (90/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.448055031 seconds)
    (91/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.431968064 seconds)
    (92/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.000414233 seconds)
    (93/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.314739068 seconds)
    (94/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.552215123 seconds)
    (95/286) benchmarking ("sort", Float32, true)...
    done (took 6.315478116 seconds)
    (96/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.294804348 seconds)
    (97/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.297782876 seconds)
    (98/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.318294539 seconds)
    (99/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.330366263 seconds)
    (100/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.314368296 seconds)
    (101/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.131444634 seconds)
    (102/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.332965116 seconds)
    (103/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.429861241 seconds)
    (104/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.104879266 seconds)
    (105/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.314587891 seconds)
    (106/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.373267672 seconds)
    (107/286) benchmarking ("sort", Float32, false)...
    done (took 5.334722367 seconds)
    (108/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.295825569 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.544796166 seconds)
    (110/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.44040427 seconds)
    (111/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.325822045 seconds)
    (112/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.705532572 seconds)
    (113/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.167859304 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.210909702 seconds)
    (115/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.314676996 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.663979793 seconds)
    (117/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.53364765 seconds)
    (118/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.301700864 seconds)
    (119/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.315563691 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.213832842 seconds)
    (121/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.296013957 seconds)
    (122/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.270227887 seconds)
    (123/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.300894228 seconds)
    (124/286) benchmarking ("sort", Bool, false)...
    done (took 1.830165033 seconds)
    (125/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.357089644 seconds)
    (126/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.803197273 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.595827176 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.522506616 seconds)
    (129/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.312341481 seconds)
    (130/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.339659082 seconds)
    (131/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.384921492 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.056082315 seconds)
    (133/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.573359423 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.600960168 seconds)
    (135/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.316700982 seconds)
    (136/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.515228654 seconds)
    (137/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.297949352 seconds)
    (138/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.335320286 seconds)
    (139/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.316803066 seconds)
    (140/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.412560735 seconds)
    (141/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.428149286 seconds)
    (142/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.335173028 seconds)
    (143/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.301602665 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.939410775 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.082708964 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.348233665 seconds)
    (147/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.432622512 seconds)
    (148/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.569239118 seconds)
    (149/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.038116036 seconds)
    (150/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.802983974 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.34205873 seconds)
    (152/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.32845385 seconds)
    (153/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.441581182 seconds)
    (154/286) benchmarking ("sort", BigInt, true)...
    done (took 6.318060545 seconds)
    (155/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.345250389 seconds)
    (156/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.438420499 seconds)
    (157/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.317718177 seconds)
    (158/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.677308742 seconds)
    (159/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.349576844 seconds)
    (160/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.303522472 seconds)
    (161/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.844633664 seconds)
    (162/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.36468317 seconds)
    (163/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.349104545 seconds)
    (164/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.603209446 seconds)
    (165/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.447421815 seconds)
    (166/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.307128133 seconds)
    (167/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.350465148 seconds)
    (168/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.31996491 seconds)
    (169/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.061938821 seconds)
    (170/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.305158625 seconds)
    (171/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.405536641 seconds)
    (172/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.300637073 seconds)
    (173/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.751656801 seconds)
    (174/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.039904127 seconds)
    (175/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.8280456 seconds)
    (176/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.407029961 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.347210796 seconds)
    (178/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.300705341 seconds)
    (179/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.099553785 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.379323376 seconds)
    (181/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.31197659 seconds)
    (182/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.303496115 seconds)
    (183/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.914232124 seconds)
    (184/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.619446234 seconds)
    (185/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.15633376 seconds)
    (186/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.42702802 seconds)
    (187/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.331677776 seconds)
    (188/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.365860615 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 5.462393968 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.394825261 seconds)
    (191/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.022162319 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.338553546 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.186307617 seconds)
    (194/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.304072826 seconds)
    (195/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.669415012 seconds)
    (196/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.314330807 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.892803921 seconds)
    (198/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.751164313 seconds)
    (199/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.929071355 seconds)
    (200/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.718701908 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.953705684 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.531479063 seconds)
    (203/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.346944308 seconds)
    (204/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.663324019 seconds)
    (205/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.349218686 seconds)
    (206/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.045192332 seconds)
    (207/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.301320031 seconds)
    (208/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.725671269 seconds)
    (209/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.40650508 seconds)
    (210/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.422828368 seconds)
    (211/286) benchmarking ("sort", BigInt, false)...
    done (took 6.321114296 seconds)
    (212/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.320014001 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.350258554 seconds)
    (214/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.165034834 seconds)
    (215/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.355381445 seconds)
    (216/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.781843844 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.366455605 seconds)
    (218/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.678743001 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.670108702 seconds)
    (220/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.318452502 seconds)
    (221/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.303172617 seconds)
    (222/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.687608357 seconds)
    (223/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.080916684 seconds)
    (224/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.463752275 seconds)
    (225/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.628682647 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.722175246 seconds)
    (227/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.511088057 seconds)
    (228/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.412482374 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.194685146 seconds)
    (230/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.311987516 seconds)
    (231/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.342700869 seconds)
    (232/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.307932798 seconds)
    (233/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.340762155 seconds)
    (234/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.406696741 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.928941189 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.528697612 seconds)
    (237/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.37637184 seconds)
    (238/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.508405136 seconds)
    (239/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.748761427 seconds)
    (240/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.330212278 seconds)
    (241/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.952914591 seconds)
    (242/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.354922472 seconds)
    (243/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.330379582 seconds)
    (244/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.108951912 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.353824033 seconds)
    (246/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.499492024 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.720191841 seconds)
    (248/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.530415674 seconds)
    (249/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.305468039 seconds)
    (250/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.747347424 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.732611107 seconds)
    (252/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.811118782 seconds)
    (253/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.344734999 seconds)
    (254/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.794820943 seconds)
    (255/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.524641376 seconds)
    (256/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.509077077 seconds)
    (257/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.165482733 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.411585149 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.408853965 seconds)
    (260/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.67752224 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.436736427 seconds)
    (262/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.479155068 seconds)
    (263/286) benchmarking ("sort", Int8, true)...
    done (took 6.324758558 seconds)
    (264/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.426430477 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.178870979 seconds)
    (266/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.351891268 seconds)
    (267/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.432817601 seconds)
    (268/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.32637389 seconds)
    (269/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.145255646 seconds)
    (270/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.30980039 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.385817663 seconds)
    (272/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.691175159 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.730182617 seconds)
    (274/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.392937201 seconds)
    (275/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.459688841 seconds)
    (276/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.31077492 seconds)
    (277/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.58502686 seconds)
    (278/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.349995031 seconds)
    (279/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.164334106 seconds)
    (280/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.355834923 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.350430614 seconds)
    (282/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.327350032 seconds)
    (283/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.412090811 seconds)
    (284/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.582739499 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.972386073 seconds)
    (286/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.391680239 seconds)
  done (took 931.487602311 seconds)
done (took 932.713122981 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.359422412 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361574166 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.336898534 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.360571368 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.454852946 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.361992009 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.348409128 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.339711435 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.386001045 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.387170004 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.343082183 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.359498266 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.346573071 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.344532632 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.337624409 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.359452735 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.360765256 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.345025746 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.362402173 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.348994228 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.361460186 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.344646951 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.388941878 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.36149752 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.343043775 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.343081999 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.349071025 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.365716221 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.458367037 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.35011041 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.342543878 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.35753439 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.360931419 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.338690971 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.335087327 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.366624246 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.359556739 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.349115997 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.343655269 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.379147149 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.75353287 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.362839331 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.348226254 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.340954568 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.341082087 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.343931237 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.348509029 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.347340498 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.360564304 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361717619 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.736902394 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.37845263 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.349869602 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.340885798 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.352497622 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.347258931 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.345295524 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364420166 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.366907581 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366769981 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.347811007 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.345948932 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.344227626 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.364442683 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.354929142 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.775030393 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.353675611 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.345737364 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.751675003 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.361765257 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.775618198 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.372236725 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.343505966 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.362774137 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.380716181 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.379023119 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.340085795 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.342840205 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.356411558 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.347340487 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.352994013 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36259022 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.347879861 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.344493953 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364172738 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.368004361 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.352888637 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.351262116 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.353076303 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.369964141 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.358513762 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.361555609 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.347370721 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.339546536 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.352980215 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.347855725 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.352341807 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.35308586 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.347602093 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.353972578 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.7535008 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385434395 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.340830033 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.340460113 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.342810198 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.364135604 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.75312592 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.367222225 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.36562676 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.392424145 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.347251803 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.350197878 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.355153958 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.370044568 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.354974397 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.347681355 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.340610448 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.351807823 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.743792241 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.382523634 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.347623608 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.350605827 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371938739 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.347540839 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.342425289 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.367955234 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.34626392 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367871049 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.474443739 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.357082148 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.384499624 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.350875068 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.349802289 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.370158101 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371209281 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.385646345 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.349160323 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371188531 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.369019293 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.342686499 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.365213543 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.357064712 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.348049097 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.352976628 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.341564199 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.372295619 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368282953 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36878541 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.369220769 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.475447386 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.344158866 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.358632671 seconds)
done (took 227.028147414 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.410332798 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.345082819 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.436289521 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.345433368 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.447733542 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.448524532 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.344189003 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.343935458 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.34319411 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.749915832 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.343148334 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.343699666 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.336589963 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.343443127 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.432293005 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.345239286 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.343393485 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.68649939 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.345993699 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.417833385 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.34269986 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.344026639 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.346076875 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.729993165 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.341450529 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.341372141 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.418073327 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.346583713 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.693157917 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.341166059 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.343380497 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.693067907 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.44070444 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.364687695 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.356161756 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.353524348 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.450645262 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.365472684 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.430585604 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.429438086 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.438913378 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.384312754 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.344037046 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.340167925 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.349430769 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.348110165 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.344843276 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.374206844 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.346845308 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.345484711 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.688925724 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.358176276 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.346716284 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.346148051 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.346251871 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.376814487 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.344972099 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.348960527 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.439280111 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.348440714 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.41259595 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.733401375 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.752827793 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.348049571 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.342974198 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.347763323 seconds)
  done (took 149.377558448 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.414810424 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.420842057 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.457414783 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.364091982 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.398334701 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.46171706 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.364082358 seconds)
  done (took 11.136088486 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.353780053 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.350350476 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.397539619 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.397579691 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.348939705 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.52681219 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35072701 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.360619188 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.348259587 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.40089767 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.351600002 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.350976997 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.357390593 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.349018972 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.396407128 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.360079282 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.46352804 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.349509891 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.350273757 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.510261153 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349012326 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.357593014 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.400771988 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.360015757 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.351454454 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.355679475 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.169638879 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.351196533 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349406883 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.350977951 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348929414 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.428322346 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.352115925 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.348504077 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.34885444 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.467714542 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.350603171 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.34858881 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.352560722 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.348745176 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.351986257 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.351562038 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.353046431 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.350206884 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.35280465 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.374138804 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.351710074 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.352524014 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.352454227 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.353165128 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.402224494 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.353411548 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.350622174 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.351117575 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.405775091 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.360485238 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.352906066 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.350777718 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.353585714 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350834147 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.512646985 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.4003148 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.354332628 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.39914753 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354057781 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.354577792 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.354370039 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.353971515 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.40749907 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.353297451 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.399988889 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.352144254 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.540254245 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.37526497 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356064767 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.35464501 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.355407302 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353978144 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.347450685 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.358824768 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.351966295 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.353413704 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.359190343 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.352213429 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35343609 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.5280373 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.46387859 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.352841009 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.366525583 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.360979508 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.353145702 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.406015956 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.355725517 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.353692636 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.404752321 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.468661574 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.407973401 seconds)
  done (took 155.429945224 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.359283689 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.362171664 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.357402932 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.370885327 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.355155798 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.355718568 seconds)
  done (took 9.422750516 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.357073144 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.357923459 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.357891637 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.356514066 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.355640421 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.357103459 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.355303289 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.356309431 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.360095414 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.357435837 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.356623067 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.359655255 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.357258594 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.355985568 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.355020405 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.357017491 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.356389691 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.355051631 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.357355682 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.356197934 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.460392828 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.355829238 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.355778243 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.356921591 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.363039261 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.357360957 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.365172053 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.357674363 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.357219222 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.365278186 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.375287801 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.357573787 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.358232566 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.362628821 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.361792182 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.358105041 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363624742 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.361940669 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.356977806 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.358463934 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.361843772 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357982932 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.359272872 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.361605045 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.360041356 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.361978927 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.365558777 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.366020992 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.35903781 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.361851615 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.362305366 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.359751776 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.359716152 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.363852762 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.361330996 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.381168986 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.366552504 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.360425529 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.36026624 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.360309019 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.363256218 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.361172585 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.360344771 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.364382437 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.359206138 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.364451159 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.36111515 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.364262023 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.35952596 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.361226979 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.363654415 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.357902163 seconds)
  done (took 100.303189711 seconds)
done (took 426.921192465 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.679227936 seconds)
  done (took 7.945793183 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.416914482 seconds)
  done (took 7.685916473 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.623510998 seconds)
  done (took 21.897603351 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.439218169 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.418357953 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.373160946 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.356037626 seconds)
  done (took 26.853682305 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.603310487 seconds)
  done (took 7.870503901 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.353576664 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.353895273 seconds)
  done (took 13.976234747 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.365795177 seconds)
  done (took 7.633068133 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.019214252 seconds)
  done (took 8.293166937 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.379716503 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.374179173 seconds)
  done (took 14.290037201 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.33385347 seconds)
  done (took 7.600597007 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.296196421 seconds)
  done (took 11.56451296 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.3657649 seconds)
  done (took 7.634762444 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.428524454 seconds)
  done (took 7.694959306 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.296472395 seconds)
  done (took 9.563308785 seconds)
done (took 161.771668519 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.355157761 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.358651688 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.359674909 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.358105345 seconds)
  done (took 26.699671883 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.397326413 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.396423713 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.397399022 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.408835865 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.399849407 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.396642375 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.388639162 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.390016936 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.408451362 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.399103946 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.398255502 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.399578388 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.397070591 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.389922456 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.398853379 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.398953985 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.408526253 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.398228227 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.389203531 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.400017905 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.365492844 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.409231209 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.401022078 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.36483873 seconds)
  done (took 34.770883948 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.882637776 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.434198422 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.516207011 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.415198282 seconds)
  done (took 7.517556301 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.417164787 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.41802556 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.429788472 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.468163087 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.49491451 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.427693757 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.392419121 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.387259059 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.373401527 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.419083337 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.498630956 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.431968858 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.504097365 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.366142449 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.549694514 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.365331794 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.365293833 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.418308276 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.469166365 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.483385258 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.366756425 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.418791068 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.422530961 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.435550108 seconds)
  done (took 35.594252339 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.366537582 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.384377817 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.365665061 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.365024338 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.373319371 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.366231578 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.365918578 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.367884339 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.367581974 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.372515187 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.364968946 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.379794367 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.366178393 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.36613615 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.372529032 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.367198314 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.372375678 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.365980297 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.367139128 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.37306255 seconds)
  done (took 28.661523653 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.359152272 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.213447674 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.711304645 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.615163434 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.35997967 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.362591855 seconds)
  done (took 27.894072596 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.435882641 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.583781446 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.366331433 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.720117562 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.81810749 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.386566514 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.366597654 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.604545615 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.919440265 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.909335625 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.42576399 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.433840977 seconds)
  done (took 20.244041296 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.361413699 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.363980251 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.363779904 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.379674728 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.419909068 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.386584523 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.373533685 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.361465159 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.423639168 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.441115846 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.385865816 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.423174943 seconds)
  done (took 37.9587368 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449800806 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408854567 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.321271065 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.444962722 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.100011227 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.576492285 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.432622157 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.07511921 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.387082283 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637732752 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364125581 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455818861 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.619663411 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371578883 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.36809438 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.320391577 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610451829 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840478859 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366095521 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.473401341 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39245424 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374888818 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.423731728 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.598488634 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595091862 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.344356074 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.625978747 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.140783283 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649964212 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382835958 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377681283 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366008334 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641871806 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013298153 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481447913 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.576051924 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385085115 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.912547686 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.36384453 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.327084205 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372373059 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385782508 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377043978 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3670425 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.299859692 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365702648 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086941303 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.390992503 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.078581298 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.367637811 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623068711 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466269831 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.371302675 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.356927401 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365679693 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.373070973 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.371725923 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459500468 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959154656 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.588751376 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385847922 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.304241347 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368237504 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.359093305 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98169901 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.389555511 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.371669476 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.372123292 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302505877 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.337239289 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390125825 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515651031 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.39324348 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.019119108 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05878192 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.390451079 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.318391583 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905656609 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37446204 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.307416967 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596743706 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.147045252 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306057516 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.315189614 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304906821 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052808313 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377511613 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.748910653 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389453697 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.084128968 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.599800866 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406721962 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394711914 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.594604495 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.248719065 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370097843 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.379967132 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500836803 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392275829 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.069742562 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323408137 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.374214157 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626565862 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.581899159 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376365573 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.332615234 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863042076 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396701785 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.393638874 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.371342163 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604096642 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.964896612 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40723556 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.60967016 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392039568 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.149143372 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097304177 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372783999 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.394911113 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.371922032 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649064753 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.110300231 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.254505495 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440615894 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379605366 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.371917583 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.373976974 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.226417662 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.529463659 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.56818046 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393291443 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.38653142 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.37263772 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3217696 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.37522341 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37532209 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.155071038 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.597043682 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379376707 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651038319 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307109394 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520338568 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.382783514 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.596098132 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.559324891 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.394545845 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63287536 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375230314 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393254623 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388529763 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3921585 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473271964 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396186553 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.374998296 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633137376 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.377302621 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.378405115 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.387082119 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.157781133 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377702219 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.380203768 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375532663 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953060511 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369314333 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379635738 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.264270503 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.389429589 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442697056 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380615849 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587944156 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.612536548 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393745312 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.380186611 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.37293082 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616702514 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386790046 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.36356452 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462211028 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.844107902 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.974577008 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408583049 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.311212428 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.087209149 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.069036833 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37677511 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.564681643 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376447651 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.587995303 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407659728 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.379230214 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.95153865 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394758473 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.372998385 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.386814265 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389329144 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.383231633 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377682761 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.586007712 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.635975201 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382639767 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.408350718 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520834761 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.39177594 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.311922392 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.894820367 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.383342625 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379258529 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.155899044 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413054298 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.394698073 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184873646 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655563399 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379364022 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652240933 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.476013628 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.414751235 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.376827762 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377984074 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381764526 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.391940028 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38600259 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.390262278 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.366273162 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.819892486 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948550922 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113272662 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917557211 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659842598 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.398106512 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.280065935 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.085540358 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333185581 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.03666812 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616105953 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.102592403 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344290613 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854514822 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.592790103 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159061513 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640066691 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611283925 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644477221 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.402128301 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641717582 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594056143 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414282999 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.385002979 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.312332725 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.669541436 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931990588 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410606546 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458882317 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085265872 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410484893 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.158015672 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.394996331 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.092913869 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784000813 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.944680286 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.768671149 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.381473522 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41624528 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174458383 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40692132 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.907091317 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995691136 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400822275 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.854964874 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336891854 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.594717071 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.411771792 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.378608254 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.91803658 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.39123167 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.637540363 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642837905 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320312233 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.3829083 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911068274 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.252781364 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.38815386 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382946597 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106003761 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392013015 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67302142 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.387444239 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.609270211 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404509288 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.317688421 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318712027 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.077902306 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389392071 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358923516 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860510495 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.401123815 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404514649 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387092597 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232160628 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.640250326 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.397247203 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.9638208 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629544396 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383404018 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407360802 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.387529329 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384051625 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.364162892 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.267146941 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.620455951 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39327711 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.608505647 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.791562587 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.284645895 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.426081049 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597843162 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.294114716 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.399673779 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626554392 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.114095123 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.406478879 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067639184 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427769851 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.398077853 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40172104 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.396078143 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405914951 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474961692 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600093604 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.416035829 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.396597281 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791706137 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407218622 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388376335 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.400930757 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480463527 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.625055853 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.613996072 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.159661813 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96744416 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117072679 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.986042756 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665576432 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389032131 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390225665 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323643726 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53685105 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.91199822 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661042794 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518657842 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.389576163 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429367152 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390937083 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390178961 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619254795 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66259446 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.258636699 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391001123 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.050976312 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.547335486 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399573356 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.599610326 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872536528 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935783385 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501771295 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.390900316 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.097201947 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68201167 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.479594352 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38850805 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.978667501 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.39574037 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.109386279 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.395869865 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404993876 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538603692 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648738341 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045710106 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.419168707 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.549045528 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.163650896 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.386319247 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.64654672 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.844769582 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605905421 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988857124 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.105309745 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653265604 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460122415 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605417081 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.510797337 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538370959 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.3980233 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.290904047 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391521794 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237816209 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.10107383 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.400827221 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976347676 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671295163 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.394835875 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.400498054 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413424742 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.401026434 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.615073189 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090235544 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616008292 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400830815 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396033161 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.961255543 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974712221 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671714053 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331324941 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.396458039 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633822286 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.651177622 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41799569 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.860593506 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.102977542 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940211113 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.648310057 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414103583 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391770526 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.111920245 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975719994 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.647057682 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892813847 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.05214032 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392385844 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686954531 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.397623262 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.402054672 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67319679 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.396511782 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.405493521 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613647027 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.994141541 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180001178 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.404605492 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.406221925 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.330933331 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.619344349 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.450426524 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348048668 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394099733 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.811658734 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.419012095 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525888239 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405837332 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.406187038 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402260825 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.129791779 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667551463 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.399264997 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.38886958 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.380352494 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.405851461 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489022432 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954287613 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41754579 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.071011838 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.747141513 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.65027056 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.398419288 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.377004182 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.398381352 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395824239 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.114978763 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.365022281 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403422228 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944514341 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.408999252 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.409750135 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399009517 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.611954197 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607802255 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395652089 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632908863 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418741407 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41579865 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.301179849 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.163272772 seconds)
  done (took 1679.71432425 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.410517532 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.412636286 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.431153996 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.439239401 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.438157029 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.498508758 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.477313444 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.523914617 seconds)
  done (took 52.937782531 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.400015414 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.553853623 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.42765827 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.396076884 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.405257082 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.405575263 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.855699597 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.421455055 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.404926548 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.405326809 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.397531322 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.407685953 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.057085261 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.406546386 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.409354143 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.382086404 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.404952584 seconds)
  done (took 66.452577983 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.392110686 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.7521022 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.211155721 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.414427578 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.439092478 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.410949625 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.99767343 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.416265178 seconds)
  done (took 59.341464478 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.415085225 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.414762173 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.415661004 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.41541828 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.41578077 seconds)
  done (took 8.384708361 seconds)
done (took 2087.441638504 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.40339326 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.404900077 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.402625434 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.406348877 seconds)
  done (took 6.925019936 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.378946676 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.115455084 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.379606402 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.393661666 seconds)
  done (took 18.575309305 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.40936084 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.424163445 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.101295872 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.008773728 seconds)
  done (took 5.41912981 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.14655491 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.159214475 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.146033395 seconds)
  done (took 7.758241172 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.399254782 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.401766427 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.398676722 seconds)
  done (took 20.506262747 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.691362035 seconds)
  done (took 2.997533236 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.543389877 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.592286635 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.712536714 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.718109059 seconds)
  done (took 7.873156903 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.784898596 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.783953503 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.589404013 seconds)
  done (took 6.464687111 seconds)
done (took 90.66170157 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.194833564 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.644193915 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.603652572 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.167634877 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.62514367 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.604198911 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.617889282 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.139960499 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.681023837 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.668286712 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.172673283 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.625768094 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.564573506 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.643573478 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.565466264 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.399202415 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.627852358 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.248460496 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.852924799 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.054582816 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.618221717 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.809234341 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.003897288 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.834322073 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.628786102 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.557544285 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.390313337 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.400375997 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.026450294 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.409785034 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.557511897 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.229179694 seconds)
  done (took 193.47577025 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.39847553 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.41603756 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.416680464 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.403403749 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.39849513 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.415678296 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.417173554 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.414555676 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.410461883 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.398807183 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.399563328 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.408380196 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.398645447 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.411905157 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.400087873 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.398772964 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.422602353 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.412587394 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.400334389 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.418678761 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.401161028 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.419032487 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.408932493 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.399423157 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.4155306 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.401053629 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.399468472 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.423737273 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.401574566 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.401042067 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.400578999 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.399784691 seconds)
  done (took 206.341632723 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.40060838 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.400135315 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.419573521 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.405555433 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.400385563 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.402439954 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.401722871 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.400742356 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.400863146 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.400812672 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.42816973 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.402375078 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.403976302 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.401615895 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.404077096 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.412133088 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.401053717 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.400783717 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.400784091 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.401539518 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.41988596 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.412565929 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.414802866 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.402576711 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.418506027 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.404162164 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.419469735 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.403581951 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.403348133 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.422807332 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.40370874 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.423550536 seconds)
  done (took 206.349474057 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.606046371 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.410515325 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.411379022 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.366305253 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.410741986 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.410244223 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.407454096 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.600704225 seconds)
  done (took 14.935943909 seconds)
done (took 622.410701536 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.739804872 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.457706228 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.609206042 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.431309489 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.193286612 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.447957359 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.431298351 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.599673265 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.32631079 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.60789263 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.65288143 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.445866455 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.793828687 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.429771585 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.682082792 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.529779116 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.329493994 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.455595389 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.740669791 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.952994754 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.691982686 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.915883911 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.620531145 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.329789407 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.809134264 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.907675342 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.190368424 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.319844365 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.44795021 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.752609661 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.070579547 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.421499898 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.49132068 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.491019528 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.549703383 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.528883489 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.420740937 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.489205492 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.628645979 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.682774255 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.967520693 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.149396312 seconds)
  done (took 95.049089395 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.397835083 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.39540171 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.394597029 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.395382851 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.39725329 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.39544721 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.39492829 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.395205237 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.395495511 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.394555504 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.395281697 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.397141072 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.394932642 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.396618613 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.395686292 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.394802744 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.395214744 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.397640748 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.395752494 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.39545581 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.39574974 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.395924698 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.396566811 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.395458311 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.397184492 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.396401721 seconds)
  done (took 37.609173421 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.416520158 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.662896254 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.819521518 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.421595724 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.415309991 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.419481592 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.494129712 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.418117892 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.418308948 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.419154869 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.587286328 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.419236168 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.451705184 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.853843759 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.421664376 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.418210713 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.418439411 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.415789145 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.672332446 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.425017632 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.516579634 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.418751568 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.495212923 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.426946094 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.440040421 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.417290345 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.42197164 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.981183799 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.435395465 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.587764928 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.204867721 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.496248302 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.924916724 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.850782939 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.208620601 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.42444104 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.419789837 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.593057013 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.420064405 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.417427875 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.495883034 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.418488448 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.832659933 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.0777086 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.436147227 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.419394874 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.002439507 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.611396202 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.661445793 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.425366758 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.856182192 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.421994059 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.420657796 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.419931333 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.663791589 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.429717657 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.418499668 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.987844864 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.44421589 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.497593079 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.420934096 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.419161149 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.67989735 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.420274674 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.668638698 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.420677244 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.427481158 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.439143587 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.837705582 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.427142275 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.099227127 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.437946415 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.42208612 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.590382344 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.669098132 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.034792716 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.441177016 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.683598161 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.939363088 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.513427647 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.423523065 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.972602568 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.5179376 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.423944518 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.42454308 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.424092634 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.421813324 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.476094932 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.495375741 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.032279861 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.108455611 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.00848251 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.518103569 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.43331546 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.422623746 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.984281252 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.444474528 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.422922336 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.836613798 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.106338686 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.439207634 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.430233915 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.102276209 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.442249573 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.501282184 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.427203782 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.849240175 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.426791899 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.476590745 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.423749434 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.430086356 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.444894705 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.5004893 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.426053185 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.425036439 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.079060786 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.619632192 seconds)
  done (took 186.686397835 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.432637147 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.416989886 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.432274161 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.415766263 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.41630972 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.425119041 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.417238994 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.417082855 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.423351859 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.417792329 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.418757797 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.417727877 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.419442942 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.423540406 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.42856479 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.424058195 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.030474989 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.41755783 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.417866535 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.433089685 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.214755139 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.423509529 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.431767193 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.419236236 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.417851515 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.419286889 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.431093934 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.420877208 seconds)
  done (took 154.548943003 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.425283495 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.983619911 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.444262775 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.555539939 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.44766868 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.42397877 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.553244362 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.481724986 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.443002574 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.424011138 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.424347201 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.723277593 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.428114724 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.938489286 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.615174971 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.577669638 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.933596146 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.443761726 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.423599489 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.423713035 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.558382856 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.432315619 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.724845255 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.983316006 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.445387173 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.982856083 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.410043393 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.428477863 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.424586245 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.984776936 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.442693029 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.728072185 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.502823905 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.488265703 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.003280488 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.95310539 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.955514491 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.576513734 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.42956237 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.425595322 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.424886958 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.410889961 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.000928209 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.450016076 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.427107223 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.99127844 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.449678672 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.429372919 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.43492131 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.427496053 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.485980216 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.504307093 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.755391556 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.010643707 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.525643511 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.443565793 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.559666284 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.818690961 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.430219694 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.937068037 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.411699723 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.007577766 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.450596717 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.411552231 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.429977144 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.43436431 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.579318454 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.565471109 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.940633278 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.447534479 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.937321239 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.596107694 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.430747128 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.428225852 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.431860913 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.992063889 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.956784204 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.597004628 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.566730445 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.625506704 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.416716578 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.429022937 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.413209736 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.508175792 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.433744673 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.996734794 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.957053701 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.44910692 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.431809659 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.432686047 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.431883915 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.605052469 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.015931789 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.525685287 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.934222615 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.755556353 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.740533092 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.43611823 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.489291192 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.446683921 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.738517038 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.436079634 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.489860772 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.882080462 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.735927058 seconds)
  done (took 169.615366483 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.667874212 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.621601526 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.521055934 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.576208476 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.031589344 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.998293008 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.721869242 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.569116796 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.541029185 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.691339744 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.575224388 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.521686906 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.653979112 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.509709205 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.166377011 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.517179754 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.542301664 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.594112071 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.589697451 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.453175462 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.108717665 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.719503948 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.619239716 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.332693941 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.52291555 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.205374862 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.99431003 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.011190106 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.605371484 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.756159557 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.982721659 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.560363972 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.412551908 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.131194816 seconds)
  done (took 68.360357557 seconds)
done (took 713.183507213 seconds)
SAVING RESULT...
DONE!
