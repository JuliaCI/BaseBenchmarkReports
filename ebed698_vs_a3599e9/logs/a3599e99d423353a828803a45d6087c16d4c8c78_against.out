cset: moving following pidspec: 844
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.249601246 seconds)
loading group "string"... done (took 0.558618793 seconds)
loading group "linalg"... done (took 7.641844305 seconds)
loading group "parallel"... done (took 0.174564285 seconds)
loading group "find"... done (took 1.170273247 seconds)
loading group "tuple"... done (took 1.84756225 seconds)
loading group "dates"... done (took 1.267282975 seconds)
loading group "micro"... done (took 0.234557888 seconds)
loading group "io"... done (took 0.777644945 seconds)
loading group "scalar"... done (took 40.984307526 seconds)
loading group "sparse"... done (took 13.018663185 seconds)
loading group "broadcast"... done (took 1.151358777 seconds)
loading group "union"... done (took 13.527802598 seconds)
loading group "simd"... done (took 4.798155566 seconds)
loading group "random"... done (took 9.689385996 seconds)
loading group "problem"... done (took 2.1945016 seconds)
loading group "array"... done (took 22.702070163 seconds)
loading group "misc"... done (took 2.130931149 seconds)
loading group "sort"... done (took 3.471598349 seconds)
loading group "collection"... done (took 19.510752873 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.583649072 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143029952 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.151335127 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147200315 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.192102189 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157171717 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158580164 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097872451 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.00149227 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.176220499 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153260843 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.51934134 seconds)
done (took 5.271104327 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.241833808 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094370872 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104245289 seconds)
  done (took 0.936101061 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.07646708 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145197901 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095176587 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078220145 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095098806 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078270178 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094820389 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.080367942 seconds)
  done (took 1.4102948 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086931797 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097790043 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082288901 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.09726996 seconds)
  done (took 1.107254513 seconds)
done (took 4.51875353 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.738801313 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.275948763 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204902623 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.485403434 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.17555801 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217072315 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682570551 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.371988367 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.25319584 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099894426 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142909355 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386272302 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138350888 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68842352 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091513878 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12403038 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178013503 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.477628188 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08226184 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110265605 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116984675 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142087237 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132012148 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092726265 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18423032 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081643992 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.195407238 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109050655 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.08114058 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.292926271 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202991424 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.697541449 seconds)
  done (took 11.035008416 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111443912 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134541059 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098080189 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137461921 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134956192 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100035748 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084858801 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097092881 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121587205 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177267018 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113656419 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.137645223 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095527822 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082886057 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116629973 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24410949 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120430294 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103310017 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100920354 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104159305 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12131019 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113156518 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110562959 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09381366 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167467203 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.22217036 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109917197 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126591534 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098141497 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113291548 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143942908 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144458454 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094656681 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081415515 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173682418 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124936606 seconds)
  done (took 5.208729849 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.078969011 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.111047299 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193191222 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103570532 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.188399763 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080828363 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143719181 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095021029 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113912444 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25912918 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.174368507 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163794056 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144076045 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116927693 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080652932 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.100253394 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095302097 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.645129718 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.162821843 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114863155 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115219408 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104172259 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.103663025 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.348118601 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.1026291 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096273978 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081424723 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08194892 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160327982 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081061782 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.142954222 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12226468 seconds)
    (32/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.09693729 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082055644 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133984505 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.213244444 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108554131 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134852984 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096146128 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081836555 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174662305 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104155169 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079305087 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122206845 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135301477 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134783342 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096590944 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080845979 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204089789 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097461532 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113986717 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.950438475 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181708143 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089787042 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095802146 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323265776 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103217181 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097826242 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077157239 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.296545967 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.183636829 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.122453966 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.078715301 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098058789 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076978115 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.10014058 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381802348 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098431054 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.992730206 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082991685 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107069669 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082228589 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096996262 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.076241357 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105664023 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103819118 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097521154 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.097589889 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081005461 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097283937 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078929965 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100222177 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109215231 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08574821 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098787665 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149195497 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095639352 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097249322 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128629801 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100197994 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077082335 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132022679 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099360459 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081195653 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132787985 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097781705 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090826699 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100787684 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143715834 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098588938 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.158154727 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078928924 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124230003 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099739006 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114674293 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112955912 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09921722 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084458579 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09646164 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076445354 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166642733 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080929226 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098648327 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081123014 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110205478 seconds)
  done (took 22.88614802 seconds)
done (took 40.95119756 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.318685275 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104754086 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.1033044 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103125199 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102091919 seconds)
  done (took 1.54685131 seconds)
done (took 2.33610239 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.29222905 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172428273 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097127944 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168748827 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09373254 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173640126 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160486878 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111742562 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.201812056 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096300231 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163945804 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095296594 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076645146 seconds)
  done (took 2.719396779 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095337618 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115453127 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082639782 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112493701 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076230211 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112275763 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.0910159 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117750427 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110548575 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087452239 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093972212 seconds)
  done (took 1.88318182 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094039531 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114268914 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083030864 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111110147 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076855921 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112505519 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092822371 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117183141 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110273296 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086408624 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094502346 seconds)
  done (took 1.8783566 seconds)
done (took 7.259565585 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091612826 seconds)
  done (took 0.873876575 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.935847318 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.004540097 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.114114452 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150503777 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.301305618 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.19341004 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.483345378 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126315651 seconds)
  done (took 11.298158907 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.115501752 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.116141775 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101415294 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08675352 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.104908305 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.082808295 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.102601784 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102728122 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086010057 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.101214574 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083280685 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100562734 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103614082 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087980776 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101848449 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086096166 seconds)
  done (took 2.410023345 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119027765 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11802052 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.109025044 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109947133 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08572641 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.108545807 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107746346 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088188533 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105548662 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10522038 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09095076 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107059407 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10550552 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079723732 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108566443 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108662198 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08695525 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10770933 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108863774 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091206073 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108842615 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096895135 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088034447 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108114848 seconds)
  done (took 3.350246402 seconds)
done (took 18.719070759 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162025764 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109190578 seconds)
  done (took 1.061554244 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095432258 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114183685 seconds)
  done (took 1.003204493 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099253746 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098238743 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.124386931 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109784451 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079831844 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098076609 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120551159 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080482116 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09738897 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079053938 seconds)
  done (took 1.785183726 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084324344 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110644935 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101556012 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095778672 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106108764 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09559343 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.08846518 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100585311 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111281637 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07793916 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103993078 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115876648 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085410676 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118037619 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106131964 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08491392 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104916197 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100400552 seconds)
  done (took 2.58933475 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080194288 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097470171 seconds)
  done (took 0.975122434 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081417741 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094408204 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081029035 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098903742 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094911715 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077827925 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09445439 seconds)
  done (took 1.419284216 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.490271857 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13538138 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.253425454 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084532093 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121757251 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.304184036 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098899164 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085540732 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104065992 seconds)
  done (took 2.532237965 seconds)
done (took 12.160306327 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093831991 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118371165 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11125526 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.471758676 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108268372 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.100038059 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147760286 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.253465765 seconds)
done (took 2.206500777 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.145463995 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32727831 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11678824 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068002349 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.099703058 seconds)
  done (took 1.417152726 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080546458 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099872784 seconds)
  done (took 0.984468631 seconds)
done (took 3.354578835 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.110974989 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100665929 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080368317 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.100127962 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077765959 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.100587813 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077179399 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096998988 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077088583 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098989966 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096868705 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081147943 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.097274986 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081085187 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09464097 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078627445 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097092754 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078774536 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094741039 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078633932 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097565745 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078133001 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095329716 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080094524 seconds)
  done (took 2.988684746 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100175682 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101850006 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103757694 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086772597 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102658125 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085188985 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103941249 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098073709 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086257123 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100243735 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101403748 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085290048 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099293053 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084736908 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101664525 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101306375 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086216483 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099124465 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081884184 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103329802 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103353334 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081309383 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102732769 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101815091 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085564466 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102246207 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082884579 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099098631 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102325721 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085573763 seconds)
  done (took 3.666570894 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086044685 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09410379 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079196452 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102370318 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078648753 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098610898 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077785014 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096874445 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078556882 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096747716 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079211719 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097150488 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077709013 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098662396 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078096397 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101914093 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108327496 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079515649 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095773346 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079722667 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098874998 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078598102 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095529343 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077681741 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096494885 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07804873 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096064404 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078112313 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09721588 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077738549 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100413354 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080201515 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096643627 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083736336 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100285145 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07781998 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099928879 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076734278 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097154397 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093623388 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078459328 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095341957 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078795985 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102939497 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079498054 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098644746 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079168652 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097696158 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078580679 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099576998 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077726134 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097058188 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080063132 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098708462 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08081424 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096920754 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095209254 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079361314 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096763284 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078566265 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09552087 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078653368 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098214452 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079479265 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111406227 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084629737 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095563021 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079992003 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098007971 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080434618 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099529145 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108670954 seconds)
  done (took 7.256391962 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083612411 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107031151 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08127121 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099228532 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075718464 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098155843 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099550465 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080137019 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099477208 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084711589 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098230967 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079732829 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099709049 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108139496 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080632072 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098456038 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086419278 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095990007 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078974396 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101329957 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078280143 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101867859 seconds)
  done (took 2.829107001 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.213044465 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107992111 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144674593 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107804458 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083692211 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109480521 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103700682 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090134826 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104302885 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084731703 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103189557 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104589071 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084203646 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102851725 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101682551 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086829876 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103547866 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085902754 seconds)
  done (took 2.739375116 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093728841 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10049908 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102302864 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101528821 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100962782 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084791398 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107305712 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109507897 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084354606 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099878095 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090281058 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103546593 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101455941 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082874813 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102457413 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081213701 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101814165 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080741999 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110519253 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105807196 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105016343 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091619274 seconds)
  done (took 2.960459514 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098697143 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101822403 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119023707 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.0852656 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095968727 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080737707 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107535758 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081270154 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10912124 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100707597 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082125621 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098698429 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087899744 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100387628 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104455876 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081674324 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101020597 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081628489 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101710234 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076125948 seconds)
  done (took 2.716477625 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103186971 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101618338 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.209500227 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09302066 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101245958 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081692729 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111473968 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101421942 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082413555 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126685037 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101798568 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081665101 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111687568 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107150539 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099941655 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093155407 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111154683 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110537075 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08272974 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102177194 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127426685 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081650623 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110308085 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102167858 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082869528 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101679745 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100244615 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089729888 seconds)
  done (took 3.732925051 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082129743 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098276294 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079012405 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097518658 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079028624 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096718478 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079011859 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096455441 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081117959 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096699607 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08125632 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099354424 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082874483 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100059764 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080803521 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099593622 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081001519 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09775499 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078115912 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097232845 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.0820072 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100152189 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080991452 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097631147 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078289048 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101018468 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077972984 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097570778 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080148365 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097903118 seconds)
  done (took 3.502067694 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090909215 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106916715 seconds)
  done (took 1.021271052 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080223809 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115366779 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078539584 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103501436 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086263562 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102143269 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108481694 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086594623 seconds)
  done (took 1.584889693 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09704153 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110636062 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082604329 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11419939 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110097626 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094900141 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166368917 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101508096 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086559662 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098975069 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113205163 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082499695 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105197506 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081879841 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105139353 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088447483 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097739948 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087580297 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104632117 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097989204 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083677483 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11162265 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083020477 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099173313 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.081470598 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111516616 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110695053 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082555697 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103344761 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108440205 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087853196 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093389274 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08234022 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10047855 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080068538 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.10982658 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112113206 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085859621 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109742248 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083153378 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111860544 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094464946 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08771374 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106310724 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092586629 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101017882 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.081535139 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095653439 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096906914 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085042802 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094944512 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08235544 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095089456 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089210437 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105285912 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112889336 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081471736 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101361526 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085079413 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103312662 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088775863 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103494636 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08396689 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101960458 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107326154 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086365546 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107809241 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078037079 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097935901 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079975185 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110570276 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12237146 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090333506 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102448372 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083196723 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099282317 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103835709 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084799858 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107930352 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090203565 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101701799 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107865719 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090713768 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101427419 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084498568 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108878639 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097689068 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084653143 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097942376 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096404554 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100572836 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079226508 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098036212 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108828959 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085835337 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10097843 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080289928 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107833402 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075595061 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102801682 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082391007 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102481753 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109318287 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087315883 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107552886 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107360054 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090116734 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101230992 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085231838 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097671069 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082514299 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104290754 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088063442 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095524346 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103490822 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084810898 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101259608 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088102418 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098932229 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081854728 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109104357 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107443802 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080846136 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096918654 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084716318 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101410499 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086311796 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107905179 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098599025 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078468304 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097425279 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086860616 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101236175 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.085855838 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107433733 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103286799 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077103498 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098470014 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086037524 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.108247876 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.081629564 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102010422 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10484184 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083929247 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099599561 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088011709 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.103469824 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081000878 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.106167452 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083313015 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09720753 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105349129 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085256895 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.09973923 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086341387 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105219637 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08412413 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103177946 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09886986 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088444661 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102172853 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080968041 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101300973 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080021296 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111044944 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102255183 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078382652 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097569859 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089325621 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099252391 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081977311 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100924455 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08431882 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101619213 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098609996 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08266287 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101672915 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09415563 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10703981 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102122897 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088959546 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.11086279 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081365309 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103343378 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081187668 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103725267 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101182549 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090108041 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105934595 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087304119 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104393166 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078973478 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107874262 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109261433 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.080835835 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099190968 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081019021 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104326567 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107548882 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087062505 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102505748 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080190771 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101883454 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086173545 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104663361 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100170835 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082440765 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105814605 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081815834 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10884412 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101513779 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092053376 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105249584 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077723637 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105861425 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080377154 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.10899947 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077083277 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.10020749 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098285999 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084347642 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100474137 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085321009 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095575342 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089719077 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110909469 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.081131243 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.101866558 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100873965 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09208509 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.103027834 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085879802 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105479633 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.087145096 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11493778 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100654448 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086822723 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110784597 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.081592764 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096235451 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10599109 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.082811265 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100196285 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081412773 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100116152 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08527614 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11066045 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104766316 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077866853 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103924801 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081645596 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100415523 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.0784769 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.108530985 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08582638 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104859195 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109146562 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085694629 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102626477 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086492543 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103009202 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.083903505 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104721963 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105542157 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084718263 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10420188 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082157388 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.10425938 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081397802 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.102758044 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.083684846 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102133139 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100618122 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08904047 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10148418 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082618677 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104177817 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.083144153 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10319099 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.081976408 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102191035 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10439826 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084945374 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101969027 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085442092 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09718551 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090197134 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102278741 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08898757 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103291175 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097543587 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089317347 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104424886 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.087899044 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103316983 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102647878 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085161694 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100800824 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085328244 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110946444 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.079652532 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112369962 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107955394 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084596584 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10485348 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083602467 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104507598 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.080948438 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104792595 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.082374901 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103528804 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099959509 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088529362 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104334274 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083204673 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104072416 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.083859644 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.102579057 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.082869418 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097304661 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081650255 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102728045 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102416811 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091280736 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104082567 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085598819 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101075227 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082898091 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101221371 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.077803005 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.111164962 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111242566 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.082903693 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1107121 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100715577 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.083962891 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111814331 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077088128 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102451809 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080744805 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101688559 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108766522 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084788889 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110375891 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083368943 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101467656 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.078824007 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103378336 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080292939 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097361239 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.07934868 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107099633 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103713566 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082139096 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101947169 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086135038 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10361666 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098538852 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10216456 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102847265 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085032166 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098944966 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08176586 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101891452 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086925381 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10345509 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080602135 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099875005 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081456895 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103915398 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082897581 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.103509433 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102388278 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090390997 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101394304 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086150238 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106527904 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.076719276 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105939499 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100507552 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084097968 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101199044 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087258309 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105985306 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084169978 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110166628 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100894366 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08437783 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10276788 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081787997 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.103273437 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082346281 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103383893 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08122205 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.1045603 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110016428 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081155839 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104771735 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082392788 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.10328117 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.087315747 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104939716 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.084344077 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110478811 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.106194436 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084379757 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108432298 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086543827 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107308239 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103394747 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085032094 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108461242 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082408669 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.110298194 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082395398 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104519447 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10345563 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081984721 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101603265 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082694726 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101552457 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.087338587 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104466842 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082312486 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102406615 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080478069 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105347357 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105810053 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091320706 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106597458 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085305552 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099750709 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080501154 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105257125 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099935341 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085550697 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106065633 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090066451 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104994537 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083275088 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102739952 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108493577 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090569261 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107952658 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08132189 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10821281 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.082359249 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.1060492 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102690718 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084932969 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103905828 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088442891 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.10451692 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082124789 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111029113 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105219216 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084431953 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103599712 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084333328 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102717145 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.07889468 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104378386 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084412392 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109996143 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105324406 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083421478 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113200329 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082493114 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102916773 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086620468 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102794524 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108812522 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079116508 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102741817 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084067879 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104344629 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077615011 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.1026417 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080382026 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10578021 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081478085 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098747222 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112405454 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09083801 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105085083 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082205546 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10274182 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077186835 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099333736 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081216568 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104912815 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10354418 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092066702 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102617059 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082676065 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098746066 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082921407 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107662938 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10601561 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081159941 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097929038 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082598676 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105254153 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090286192 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103027155 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082413744 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107569103 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10443801 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082380201 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107060472 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079476148 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106954658 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09320102 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10558468 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102480388 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089996735 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110993478 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083320325 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099218958 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083810441 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.105908712 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101198866 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.086575297 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103951167 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096148186 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107535369 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.081550597 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10381461 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104769635 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083283971 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11067849 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08495501 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104589746 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.087618152 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.105611993 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112289322 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086250285 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10920409 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.08520743 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.105526246 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100764017 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084431194 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101831128 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082751265 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103854524 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084410235 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107927546 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111156236 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083483102 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112987106 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091438704 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.108366771 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079749997 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103648759 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082365555 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099536135 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104217863 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.083063043 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102360584 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.0813915 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102736432 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084976334 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11027847 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085770896 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.10560745 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102494543 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078930438 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.10611486 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087024414 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104581751 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.080387891 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103672054 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084704746 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.109858293 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106864793 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084910432 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104656328 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085152267 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104423301 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079238116 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109609595 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081453739 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.106302407 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.081843716 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104401826 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103336661 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087994085 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108782806 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086051618 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.106939529 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115196191 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087607341 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100503172 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.080912004 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.10884419 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.080915279 seconds)
  done (took 57.902784699 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147584083 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080345962 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099104436 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079895471 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114391616 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099396599 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079524453 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100213466 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080181657 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102403502 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078765024 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10037766 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108995235 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124940226 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093329905 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104051939 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078350895 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101490187 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097922911 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08145973 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109841808 seconds)
  done (took 2.938301646 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104168513 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118297164 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115333831 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120581994 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089263703 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116434579 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114665728 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114588327 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099223274 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110824536 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119517032 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116043179 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091779775 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11217101 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111270809 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094068089 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119999531 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109551618 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116674895 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094839843 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113346224 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116367972 seconds)
  done (took 3.291401881 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083837289 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102584045 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085282185 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098593042 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083654578 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098140355 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087716219 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102380053 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08572618 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103202938 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081409162 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102973691 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103869481 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079371067 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102485927 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081687203 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152633828 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107841686 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082296176 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10603666 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077536047 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107150492 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099100242 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079731099 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101715145 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087386402 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104341594 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080940406 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103049943 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081655283 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104172828 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079280233 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105407251 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102113468 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082753871 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101961615 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084865308 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103099555 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079365 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101392471 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084095263 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099173758 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084606097 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104903755 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081649592 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102816838 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083727904 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104257368 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097657122 seconds)
  done (took 5.51475376 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103754916 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161318569 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086597187 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144194736 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121399157 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114084764 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087191937 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142083939 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103020244 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081376961 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12290674 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120347213 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103963725 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088610268 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111544674 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104205809 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086006268 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103351417 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.10803623 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083753589 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109984762 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089306285 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120682185 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118509004 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109046055 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082976131 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104504955 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10766641 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097120411 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110172524 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110252609 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090394117 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121941308 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109681947 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101537341 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087967635 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122713822 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103840662 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087905139 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101018404 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085563157 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109393116 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110372696 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.100900102 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10605902 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108417094 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082742545 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102068056 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118019466 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086373654 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115395109 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119348634 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107615479 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08464593 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110029205 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120203992 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084592046 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.1023272 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086399889 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117476437 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102534411 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086580407 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119178912 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106482583 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111907235 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099385699 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110149654 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108906452 seconds)
  done (took 8.179886831 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093568496 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111680573 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120995843 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121106062 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090883218 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112261211 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11190445 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090416002 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111812359 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117536503 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110113678 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134082605 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085978944 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116470827 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111093174 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090366354 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111563299 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110711284 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090041317 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112405553 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111401959 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120794654 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090211569 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121313778 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142844078 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106034283 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090231022 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111984456 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121537226 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112160333 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123399008 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090792016 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112292079 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122121819 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124377301 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090861274 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104024127 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110730765 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091954923 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112265554 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105821683 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099632837 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.1125771 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106473745 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090368694 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112984054 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120819358 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125233817 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115138296 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096819705 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111990697 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121181924 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110812881 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091362752 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12056771 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146931359 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121192507 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122462538 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111737281 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100295382 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121235803 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129671889 seconds)
  done (took 7.743273256 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107899174 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116724576 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.11797066 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100183538 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083542086 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109739249 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082504909 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102745983 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114511216 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095456194 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118582691 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109515108 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091069007 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117483578 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109887801 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113408328 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088067903 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109862736 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114502419 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108811937 seconds)
  done (took 2.995718959 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093984118 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125651972 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084199734 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114447291 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108519296 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091034623 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107723327 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107869896 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086132306 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108336235 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09591875 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117391828 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106231185 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091185618 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116927576 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111868218 seconds)
  done (took 2.55071635 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095219319 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117099177 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120500473 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083813225 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104553173 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.07982546 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106219715 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100328296 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081054173 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121654307 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084123991 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111979227 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105904292 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082746879 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103265787 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087652773 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102010134 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081743191 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105910857 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.1194454 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095617793 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104869283 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105308747 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087354618 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105596401 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089699758 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106218573 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103195563 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082822174 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105541577 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.083911727 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113661919 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101561224 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083886744 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103116708 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08256165 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105652772 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084779113 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109711745 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104327009 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083542013 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104718556 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085120219 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107106248 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080414952 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106658868 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099935773 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092809039 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103048591 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085297137 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106029631 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086894806 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107374567 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116488091 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087642644 seconds)
  done (took 6.294478408 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098973853 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108890759 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07980437 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103974475 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087319315 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108422955 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109196555 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088615638 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106815469 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08239532 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107606362 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089877093 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107708043 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109294972 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087045011 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10983316 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080513513 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107258389 seconds)
  done (took 2.663942112 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091412535 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105078265 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092488067 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105935065 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084089842 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108954253 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080291208 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105899464 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10324743 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085838642 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106037828 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086916361 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103637335 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086652726 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106143434 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08363025 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108481992 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103074612 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086342138 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10167324 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088218563 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104854096 seconds)
  done (took 3.017956592 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118543818 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125760716 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092191312 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.229789282 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103418269 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133236833 seconds)
  done (took 1.693933475 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109422879 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120948849 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105676964 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107022461 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115686936 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085958984 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10857013 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107878378 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117494013 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101139571 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108844479 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119188934 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117409627 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096676027 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114859769 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115877668 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108018129 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088117024 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107335915 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127488025 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087126425 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11939261 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108156569 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086251201 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109640602 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118201776 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118160145 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123451418 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088097346 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118862715 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11403204 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087513648 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119316182 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123190231 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107486093 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099039031 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108757481 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128884038 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113296043 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097108719 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10996993 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114661657 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097285334 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114759563 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118855941 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108527057 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093047871 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107986881 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107430805 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136195685 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093971619 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117894555 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115112982 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119143605 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097739816 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156833557 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102865821 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118262798 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115875297 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1229643 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117634112 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094553229 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11784322 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124000247 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115071361 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118056422 seconds)
  done (took 8.208376867 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103071794 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12665791 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108365838 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124465618 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09722873 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108555093 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107732647 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088373615 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108675592 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106345871 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152526099 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088684644 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118463721 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118229288 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087239253 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109729649 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108573851 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11810252 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086382915 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13571027 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108606936 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119140466 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116988462 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096411174 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123341381 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114978094 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108436771 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088045382 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109131025 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106350342 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093452392 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108589465 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118124883 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085733405 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11903937 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108578269 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08732724 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115060785 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109834404 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114917516 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097973604 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129843544 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109998717 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108555537 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102826678 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10900874 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108564942 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086240871 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109994122 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107398637 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102511316 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124278826 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122228099 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118286039 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107460367 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087430259 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109281879 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10917174 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087238067 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116181697 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118372403 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087643831 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156960317 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089019385 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108561998 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11828276 seconds)
  done (took 8.086636945 seconds)
done (took 156.881627545 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.227934223 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.229563772 seconds)
  done (took 1.350116167 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097839509 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136146524 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094461191 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170072204 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105578665 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118883539 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138277642 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096793343 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107052089 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08499193 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107729734 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087263682 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171843361 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084280318 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107277319 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107963204 seconds)
  done (took 2.716402621 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198983136 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255205251 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10177728 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106616878 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087718069 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111534998 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104021304 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091626828 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109807841 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085039784 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109367501 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086247419 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106455524 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086022041 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111297878 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087657133 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106674428 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087554984 seconds)
  done (took 2.933120073 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113382457 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148322879 seconds)
  done (took 1.167765552 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118213542 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179327627 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318968141 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156406333 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107053221 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128020485 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157196535 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130942045 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196944086 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12330817 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12193257 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097078439 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140895839 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115416825 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094402453 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118875394 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143976878 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092773006 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116012444 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115090028 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115844117 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107447173 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114934941 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093750084 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180052662 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120009067 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084637626 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107310474 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115414006 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094446555 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113759462 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124607709 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098185018 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178466617 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101472154 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175435887 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097688538 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113401733 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114416187 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09156712 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12001249 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117846993 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104462247 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118827354 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084337452 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119572139 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105246633 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085105136 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11549404 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096949023 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115928858 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114105543 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154723043 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119272001 seconds)
  done (took 7.588074663 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.793880768 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155389179 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089486752 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.883159827 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136727953 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104343409 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.774027485 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133990699 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.233317597 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.751734979 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132413947 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121319255 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226865968 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.236958245 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.954500715 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310877283 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.665383872 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102683589 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150570265 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153368117 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118069765 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136583378 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.128197612 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.452382633 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095608465 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112239442 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.094678022 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12135018 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157523592 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125402166 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114591498 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177938974 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.253014013 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205949761 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115302179 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088388089 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110764268 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.16996686 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265923847 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212629157 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179740073 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086521467 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110241039 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.098305327 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132077521 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108223169 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164430461 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.171827663 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193385078 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093202183 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120477867 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118964989 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.098761617 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.186201802 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098765417 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.322384615 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317415452 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110650079 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098263234 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12777495 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259246464 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122632016 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223303238 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118113272 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211339736 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110418648 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.764397731 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188571512 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089688482 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117894591 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097647445 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116982259 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12063864 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170798611 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393174964 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122254057 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.09345883 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110769927 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20440487 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125568811 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109375102 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162628577 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093893808 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120581045 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124576059 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121913547 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169241243 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.228666462 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123584846 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118963095 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093632725 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124147046 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.114832343 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211621632 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219793549 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161818559 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.2086273 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123151244 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.16307055 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189028336 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099555176 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.192191311 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098329892 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126097415 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121582101 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214810269 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145379952 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100798293 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116211483 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117343777 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14823542 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106198738 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118969477 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168556925 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.501673652 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167855635 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107866972 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105674284 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120558544 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161185945 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117607822 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258510287 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100105985 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.190797072 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097614875 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108621499 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120081793 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16564941 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120772006 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100263893 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122752894 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118013641 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235098285 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217039685 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101484446 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242915006 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185300624 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118863163 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172963208 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121288308 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166705305 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120127019 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099401406 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1170161 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.765445559 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101933043 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120933457 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114732228 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195651261 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089200586 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123395437 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124206631 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086776116 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778652142 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12686254 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098886754 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124777874 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118039144 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119177508 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096334099 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114563534 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162306591 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229786832 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1211432 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097919341 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125128363 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159736191 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117374501 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125015304 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123052225 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.1037847 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12153639 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114849721 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103783596 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190776753 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163019638 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218461435 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568131693 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111691198 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123800021 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.2259478 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089991387 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28706587 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119241243 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.201789418 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185908002 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098744343 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312444344 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18712762 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195951681 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106039636 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194688619 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087789767 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117699946 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163915066 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11267512 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096444751 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.18423953 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103683338 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123277074 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.978869036 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088076395 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247738867 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087008051 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192104629 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096098023 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120570208 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.297555958 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090071498 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128673785 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165126634 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116192513 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124585509 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.739678515 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125770675 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121318043 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095930898 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.22070294 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161977212 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120399258 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118962894 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118899402 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163672277 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208011402 seconds)
  done (took 44.026043413 seconds)
done (took 60.679858233 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275775121 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214646564 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.264169385 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170561345 seconds)
  done (took 1.930065916 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171560392 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149407944 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120737057 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108006951 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150222807 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083728057 seconds)
  done (took 1.711470036 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.355647361 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274207443 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23990012 seconds)
  done (took 1.80009008 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.28537353 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.245176069 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472254829 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.322760298 seconds)
  done (took 2.377975231 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208905594 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132833113 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.1106254 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104169585 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197533375 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246650611 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142064888 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201810997 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098601749 seconds)
  done (took 2.420650955 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196816598 seconds)
done (took 11.369561644 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.126897274 seconds)
    (2/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.238762628 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.253348842 seconds)
    (4/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.242145905 seconds)
    (5/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.234742523 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109095586 seconds)
    (7/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098580551 seconds)
    (8/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.118546562 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.090869432 seconds)
    (10/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.189345927 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.147379416 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121137984 seconds)
    (13/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.252571998 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09394251 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.107843165 seconds)
    (16/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.094878749 seconds)
    (17/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.123468905 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.135435626 seconds)
    (19/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.166073359 seconds)
    (20/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.1307314 seconds)
    (21/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.228141889 seconds)
    (22/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.089821504 seconds)
    (23/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.147665568 seconds)
    (24/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.122037589 seconds)
    (25/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.094404049 seconds)
    (26/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.242972757 seconds)
    (27/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.227251928 seconds)
    (28/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.212703016 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.223157649 seconds)
    (30/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.19327351 seconds)
    (31/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.11437093 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09425171 seconds)
    (33/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114364209 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.11198485 seconds)
    (35/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.114071623 seconds)
    (36/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.117034549 seconds)
    (37/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.094297075 seconds)
    (38/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.171962107 seconds)
    (39/286) benchmarking ("sort", Int8, true)...
    done (took 0.218546155 seconds)
    (40/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.155572007 seconds)
    (41/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.19181118 seconds)
    (42/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.099631516 seconds)
    (43/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.144826496 seconds)
    (44/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.157798656 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117495192 seconds)
    (46/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.190587639 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.13334521 seconds)
    (48/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.071709233 seconds)
    (49/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.140297992 seconds)
    (50/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.141363106 seconds)
    (51/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126750075 seconds)
    (52/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.180908995 seconds)
    (53/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.203428926 seconds)
    (54/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.077799397 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.086539553 seconds)
    (56/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.164900361 seconds)
    (57/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125350803 seconds)
    (58/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.092770683 seconds)
    (59/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11779764 seconds)
    (60/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.206548006 seconds)
    (61/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.198453153 seconds)
    (62/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.15114156 seconds)
    (63/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.117116723 seconds)
    (64/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.21105277 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.135722943 seconds)
    (66/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.087124257 seconds)
    (67/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124314827 seconds)
    (68/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.088448927 seconds)
    (69/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.137397792 seconds)
    (70/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.082451351 seconds)
    (71/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.156279006 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 0.08614611 seconds)
    (73/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.11905919 seconds)
    (74/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.10784601 seconds)
    (75/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094843006 seconds)
    (76/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.1518722 seconds)
    (77/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.157553948 seconds)
    (78/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116394737 seconds)
    (79/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.139648414 seconds)
    (80/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.097877427 seconds)
    (81/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109152048 seconds)
    (82/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102791353 seconds)
    (83/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.119580491 seconds)
    (84/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.076133127 seconds)
    (85/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116384146 seconds)
    (86/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097880761 seconds)
    (87/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108707986 seconds)
    (88/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065438177 seconds)
    (89/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.111213884 seconds)
    (90/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.171561454 seconds)
    (91/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.096114922 seconds)
    (92/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.170368201 seconds)
    (93/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.065940727 seconds)
    (94/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.120205662 seconds)
    (95/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091872242 seconds)
    (96/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.144262373 seconds)
    (97/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162334269 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086723313 seconds)
    (99/286) benchmarking ("sort", BigInt, true)...
    done (took 0.230143527 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117996507 seconds)
    (101/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089143824 seconds)
    (102/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115447275 seconds)
    (103/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077427534 seconds)
    (104/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.193291793 seconds)
    (105/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.187340495 seconds)
    (106/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.18317501 seconds)
    (107/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087474691 seconds)
    (108/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.153305065 seconds)
    (109/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.147382843 seconds)
    (110/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116969359 seconds)
    (111/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068076692 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 0.180550395 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118386997 seconds)
    (114/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.114468352 seconds)
    (115/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.112312968 seconds)
    (116/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.11713201 seconds)
    (117/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.14627987 seconds)
    (118/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.136918068 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116939627 seconds)
    (120/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084315737 seconds)
    (121/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.090561317 seconds)
    (122/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.11886084 seconds)
    (123/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.11353154 seconds)
    (124/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094459045 seconds)
    (125/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.132029382 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086110253 seconds)
    (127/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.106894285 seconds)
    (128/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.119612021 seconds)
    (129/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.089551451 seconds)
    (130/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.075729325 seconds)
    (131/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.128193313 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094467667 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109191392 seconds)
    (134/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.148624688 seconds)
    (135/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117933916 seconds)
    (136/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.075731538 seconds)
    (137/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.109919812 seconds)
    (138/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.18525474 seconds)
    (139/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.130550309 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.10953652 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093743012 seconds)
    (142/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.174105731 seconds)
    (143/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.084481438 seconds)
    (144/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.090923512 seconds)
    (145/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133702973 seconds)
    (146/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.08835284 seconds)
    (147/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067336108 seconds)
    (148/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.091959834 seconds)
    (149/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093624554 seconds)
    (150/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.090051604 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094738861 seconds)
    (152/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.090401618 seconds)
    (153/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088961502 seconds)
    (154/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138365764 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.09585243 seconds)
    (156/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135493654 seconds)
    (157/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.139010061 seconds)
    (158/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.149366865 seconds)
    (159/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115379597 seconds)
    (160/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.109552985 seconds)
    (161/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083593244 seconds)
    (162/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091156805 seconds)
    (163/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.139407186 seconds)
    (164/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.088736116 seconds)
    (165/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.150139394 seconds)
    (166/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.123578279 seconds)
    (167/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067005905 seconds)
    (168/286) benchmarking ("sort", Float64, false)...
    done (took 0.171402358 seconds)
    (169/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.137266143 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087529589 seconds)
    (171/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.065805428 seconds)
    (172/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.091076406 seconds)
    (173/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067653818 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115162879 seconds)
    (175/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.083944462 seconds)
    (176/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.108454321 seconds)
    (177/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.083072327 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.094958384 seconds)
    (179/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.174900607 seconds)
    (180/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.120889706 seconds)
    (181/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.125603248 seconds)
    (182/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.090341069 seconds)
    (183/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.162778662 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 0.219459564 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.110855042 seconds)
    (186/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181128269 seconds)
    (187/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067238081 seconds)
    (188/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.127774469 seconds)
    (189/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067289488 seconds)
    (190/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.28567728 seconds)
    (191/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.192151556 seconds)
    (192/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.179697718 seconds)
    (193/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068294026 seconds)
    (194/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112861199 seconds)
    (195/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093027267 seconds)
    (196/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.120031943 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093156775 seconds)
    (198/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118791659 seconds)
    (199/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.08727285 seconds)
    (200/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.154375459 seconds)
    (201/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066052201 seconds)
    (202/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.090644671 seconds)
    (203/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.158058851 seconds)
    (204/286) benchmarking ("sort", Int8, false)...
    done (took 0.210715507 seconds)
    (205/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067830935 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091113785 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.111082437 seconds)
    (208/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.096453558 seconds)
    (209/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.093476511 seconds)
    (210/286) benchmarking ("sort", BigInt, false)...
    done (took 0.218063372 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.107347802 seconds)
    (212/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067357148 seconds)
    (213/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.083995246 seconds)
    (214/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.090797554 seconds)
    (215/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089768891 seconds)
    (216/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.172302184 seconds)
    (217/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066134494 seconds)
    (218/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110275024 seconds)
    (219/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067417249 seconds)
    (220/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.089061771 seconds)
    (221/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068543323 seconds)
    (222/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.162059186 seconds)
    (223/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.090953838 seconds)
    (224/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.11558135 seconds)
    (225/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076143511 seconds)
    (226/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125425208 seconds)
    (227/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.082740111 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085063142 seconds)
    (229/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.090822377 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085486954 seconds)
    (231/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.089953481 seconds)
    (232/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.114426261 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109441718 seconds)
    (234/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087118036 seconds)
    (235/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.092258574 seconds)
    (236/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066439478 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115390428 seconds)
    (238/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089007845 seconds)
    (239/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.18098991 seconds)
    (240/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066593246 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119308701 seconds)
    (242/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.066355347 seconds)
    (243/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.115990831 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.08546919 seconds)
    (245/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110348485 seconds)
    (246/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086876714 seconds)
    (247/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.090713515 seconds)
    (248/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094449696 seconds)
    (249/286) benchmarking ("sort", Float32, false)...
    done (took 0.17464162 seconds)
    (250/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136974218 seconds)
    (251/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085706768 seconds)
    (252/286) benchmarking ("sort", Float64, true)...
    done (took 0.226936613 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.11012982 seconds)
    (254/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067020325 seconds)
    (255/286) benchmarking ("sort", Float32, true)...
    done (took 0.227354039 seconds)
    (256/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065634678 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118686222 seconds)
    (258/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084459181 seconds)
    (259/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.15233746 seconds)
    (260/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066334206 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.110106592 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.085237713 seconds)
    (263/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.090108124 seconds)
    (264/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067479149 seconds)
    (265/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.066852642 seconds)
    (266/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.091548649 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094562641 seconds)
    (268/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.124907301 seconds)
    (269/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.08695356 seconds)
    (270/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114187499 seconds)
    (271/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.091768895 seconds)
    (272/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109814554 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.112905469 seconds)
    (274/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.163830672 seconds)
    (275/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.100032538 seconds)
    (276/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.13246257 seconds)
    (277/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.113524909 seconds)
    (278/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.086276385 seconds)
    (279/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.092527702 seconds)
    (280/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093542392 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115188917 seconds)
    (282/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067621658 seconds)
    (283/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.074918153 seconds)
    (284/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.091789531 seconds)
    (285/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.110513472 seconds)
    (286/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.093755739 seconds)
  done (took 35.92199094 seconds)
done (took 36.858209285 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099780137 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147254472 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094708059 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135367081 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.1239779 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090638282 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118349145 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.0962864 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123957988 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124812849 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09715516 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092904886 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096487902 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.11959439 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097074085 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139366766 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123694438 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092953344 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118792641 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085496471 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.11908732 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08563418 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112086199 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068731257 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121295809 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092914837 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116811968 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118813178 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086231182 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109492633 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090470036 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116776537 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086573279 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123942878 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094408302 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119452732 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096442715 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120883593 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.110819007 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087910486 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117476612 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087595235 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11598311 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094222179 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115285378 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091679198 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118676425 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098457894 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139777572 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114088972 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095968094 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119701357 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095285846 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117530492 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089337396 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119608248 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090933702 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139615631 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.11874701 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092060167 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117644541 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094244815 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115458514 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094129223 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119309582 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119718457 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098873246 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115133804 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096624472 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115646232 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086290571 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119708736 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089045722 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110895701 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09448573 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121443264 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08525714 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117407853 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.114934199 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093027695 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108693458 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089201583 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.110812909 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093685909 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111789865 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070144293 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089624187 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117254871 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108559261 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096448212 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116467653 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093962051 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111432344 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098701708 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109907113 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092107404 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11144174 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.085706026 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112596118 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090397778 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110930185 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088813544 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119986835 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087584628 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117632693 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121798643 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087436645 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116461313 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086882435 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109299423 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102025621 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120231027 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086228832 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116606065 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08578467 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118889948 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085321472 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.11090386 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085333244 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111955122 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091614523 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111173562 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088749748 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.1184848 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124172974 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086754373 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11292805 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090377917 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109147875 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092439526 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.109934952 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087197418 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11245243 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077829947 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112300895 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087740903 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.1170014 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089831383 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.11892787 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089240332 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120628445 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091639081 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117203266 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091052152 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110949919 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073388727 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116021506 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089007364 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112631647 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086642649 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112629222 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086762944 seconds)
done (took 16.902793883 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087927419 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183435864 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150803903 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141136372 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106623284 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111703597 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120696993 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118542211 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113281768 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14202056 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.10890212 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13158105 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.14601255 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086691514 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111304787 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091397728 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112482637 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10151818 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14597684 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132136792 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164605802 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085142428 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146313413 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134812027 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118635235 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105623724 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112105595 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091033248 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11464319 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.111353944 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132384114 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089429803 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111801668 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132931312 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104426351 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119722183 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086508099 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118009676 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.085808313 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112186125 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140218283 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131842931 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093830431 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116484608 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091060757 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114309586 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088528768 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121052654 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097490562 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116688769 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125307202 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154441255 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091092614 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121317319 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085721539 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122540555 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119346803 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089514304 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111487192 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09009687 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110548597 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09153203 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126906782 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140964092 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091269113 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120605355 seconds)
  done (took 8.610366378 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104517632 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140251638 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104340967 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129953949 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110950002 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087829335 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112084583 seconds)
  done (took 1.78306938 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089219308 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133100254 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110254257 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136037163 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131202623 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108834062 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122653977 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088645368 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131085257 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088651906 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133366322 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151496288 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088983529 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120326639 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136757082 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088630314 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.13678068 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08827062 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11603569 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.135123312 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092588514 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.1341704 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089685971 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113430806 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101052665 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114262196 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161290278 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092649596 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115067951 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091232023 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11213584 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165169314 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.1012833 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125083078 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111861617 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104227624 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.145103265 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085694955 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129407718 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09231964 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126703027 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.113251801 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090081151 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.110601258 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.094195514 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123507839 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090060667 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113317094 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.090781925 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133070917 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088163417 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126800342 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088349807 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117309777 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113136929 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09542121 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122221592 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089645217 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13250872 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090160528 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13040739 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.128296656 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103223761 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.12996512 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090588878 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127820729 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.125498515 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.092735227 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113436727 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092748405 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129309571 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086854858 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11461275 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099223886 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115063332 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111042863 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.13825759 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114050188 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099647095 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113041832 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089338038 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114054219 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11070665 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118401133 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.087764188 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120799196 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115737187 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.087681495 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.110692281 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.09353195 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.110917507 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090707643 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.119161002 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089633498 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118840394 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.104778171 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.117971347 seconds)
  done (took 11.815779209 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091338314 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115636374 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091782291 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.1137477 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090860054 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115272323 seconds)
  done (took 1.62341781 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114077328 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116806302 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102701914 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119994173 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154720104 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103840892 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129727584 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122811665 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.105811288 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126808855 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127786022 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104396615 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135377696 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.11939009 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103222239 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119798478 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.102971807 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125512544 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127263146 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095642539 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136215845 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.1194618 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095356311 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132144004 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116769328 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095868233 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125196466 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102167273 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126911976 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122623302 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096055457 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117906216 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094643276 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122489097 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128632402 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095130927 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120528875 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118520045 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101612898 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117226951 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103541522 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122028216 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124738081 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09361541 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123682612 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119291555 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094672444 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12415899 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102422963 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120165068 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.117956067 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095380144 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117347929 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093536841 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121071797 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122419291 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093485451 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.12972401 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.094739307 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121642899 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117404626 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093366079 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123530449 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116631742 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104363002 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118166641 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096093971 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121996916 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119365937 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09588149 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118140934 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09222408 seconds)
  done (took 9.203421837 seconds)
done (took 34.030121267 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.690898013 seconds)
  done (took 1.693705054 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.827825151 seconds)
  done (took 1.831564234 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.641047673 seconds)
  done (took 17.676203115 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.49799057 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.584314261 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.993688917 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179010482 seconds)
  done (took 3.262777049 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.959364282 seconds)
  done (took 1.985250867 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283860726 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229900084 seconds)
  done (took 1.52497751 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.780950751 seconds)
  done (took 1.803988748 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.37642924 seconds)
  done (took 2.389679678 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327409378 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183554464 seconds)
  done (took 1.532968606 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.546780403 seconds)
  done (took 1.567184164 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.872828859 seconds)
  done (took 7.898219575 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268461537 seconds)
  done (took 1.29957295 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.30061703 seconds)
  done (took 1.324757191 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.484472184 seconds)
  done (took 4.509774755 seconds)
done (took 51.316375841 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098904448 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126018559 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102105108 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124050845 seconds)
  done (took 1.470373396 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101151672 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121022606 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10028681 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120261646 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125159731 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097439103 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122851026 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100731708 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120927992 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095395253 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12178547 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119096967 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.09930425 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122540933 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093747961 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123462182 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098302539 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122663951 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122570218 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096972707 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119138848 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097663903 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124940144 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093582871 seconds)
  done (took 3.688397939 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101539719 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118044191 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097329789 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117433648 seconds)
  done (took 1.466715501 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100198503 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130878233 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.10532135 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125737496 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129069649 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.107102938 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11703663 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092453726 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.118715649 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100177188 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116298677 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.113040419 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132227833 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123532167 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101617642 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114017234 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.090315207 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132291202 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12378428 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102256764 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.117163257 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100042885 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.11468505 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108577416 seconds)
  done (took 3.744099449 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171596693 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12784946 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139144997 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09520368 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160220173 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139332128 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089478037 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140464997 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087268172 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131707206 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116991148 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134282783 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.12879527 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087536072 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11437917 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087088088 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130059034 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127878467 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091154586 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127443104 seconds)
  done (took 3.464460574 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098909083 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116473803 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088514553 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115046543 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100025676 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120030237 seconds)
  done (took 1.672553522 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092133331 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114156859 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090413624 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113226667 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095399449 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.11396334 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08938666 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114039677 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090435291 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114323506 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088620416 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114118775 seconds)
  done (took 2.264379671 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.49866304 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120684714 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119169194 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089559791 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12017799 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088156411 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128316316 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092194315 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141386056 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087606563 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115897682 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089635402 seconds)
  done (took 2.724680575 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232507518 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125256405 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285808322 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365981736 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155845453 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176543631 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281230771 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164483875 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.223092006 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16598527 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202039675 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22327832 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15104375 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190392058 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137073084 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144024498 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203963782 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245160728 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152927037 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20695331 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227835187 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166379655 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177984597 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151241452 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138104768 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170183397 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094022229 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130126614 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232407417 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176447393 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214232004 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161347312 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144820318 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208701286 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252176471 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220832959 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281443052 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136328432 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.148698208 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168448868 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265005881 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138461903 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228388709 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129044961 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13013582 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217754909 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168145941 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176146312 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152108179 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13806223 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195239949 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238317904 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.190699084 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13780771 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30284391 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150693185 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.199361988 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193511144 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251209851 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199285256 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211567861 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095698134 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18876204 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220808918 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1863827 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.173653879 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.206638115 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147125422 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199290222 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188003342 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164151578 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22033543 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185349827 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139810254 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168636956 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17260559 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170195182 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25652156 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211563741 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096095116 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169265643 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148309336 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133242684 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193144569 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098009374 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238354712 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143107712 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.161680901 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214156982 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160285018 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160069653 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201174859 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2282349 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148511679 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.082394696 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154431086 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154851667 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191510025 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139749097 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158903143 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16078888 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129564828 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184271521 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124725487 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182462647 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117688548 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173170709 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182449462 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126658339 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159697286 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150514476 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125653543 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201764886 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197813052 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141598707 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131974905 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209444778 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177520171 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.15177329 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177312866 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226166208 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116983882 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149371813 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226795738 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215952359 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140370644 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227598119 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156394724 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108576974 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133007782 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180853695 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154845207 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161863311 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134589629 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182696818 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232469378 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098464156 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138219882 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191683471 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133897712 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132289457 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163125916 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146926887 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.136866684 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.124568755 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.153485903 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206249447 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178450457 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154002255 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164444515 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152776345 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252516039 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140545061 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.124549196 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148759571 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121412373 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192158889 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224503054 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105032643 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232701282 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171944799 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204606137 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198207691 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107602164 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175461735 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130360292 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093026873 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221175713 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167680113 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160426471 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194942797 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225849224 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181254911 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.208732212 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173984263 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172746219 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164944442 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156292464 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.137211513 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132946489 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196041874 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096766796 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.14464541 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133627974 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146459754 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141683646 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107531009 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223691489 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170719402 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190499821 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161330154 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148871411 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180364883 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129689311 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174131167 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177086452 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147611078 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.224825468 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194374349 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186219146 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144254566 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226999194 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094572903 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124740248 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141915613 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170944306 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105440942 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135740812 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164263404 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180660972 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206707766 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177312681 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210867852 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199515064 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190312356 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.093713215 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16791795 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184441963 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202055443 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.166960792 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141381901 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15083988 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178973847 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159688647 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255618396 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167972802 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175523527 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235524049 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149680385 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105058214 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151627288 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219166613 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152989098 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176930159 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146924871 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114484314 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16153838 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.13354675 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161150275 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210359478 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162896801 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189613547 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150330472 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185486536 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126725802 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163250468 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160503746 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165519373 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081435708 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173237514 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232408087 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14851697 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168537535 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189192711 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131441541 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306370596 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244645289 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194865098 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137525773 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15451929 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159643211 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163564886 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172694445 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179655432 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158867435 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187375102 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159520261 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137537879 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140936047 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147506542 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12314123 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131670246 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148613022 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175459645 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139372817 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184891446 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162277965 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158824646 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171178795 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149260744 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14348982 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149615172 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213938072 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210434084 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211287972 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150491386 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177937131 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234448446 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097898514 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132018418 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133014653 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178606331 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107062755 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220463884 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.187725388 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231059385 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184594864 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220249756 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112051954 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119200766 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155505219 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173155574 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207870457 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152603526 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159042344 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231571353 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.145098992 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105397449 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177686262 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315505028 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118888994 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223762912 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079642543 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28033589 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12655686 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131733539 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162155418 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208350719 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136021496 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.189324473 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172942686 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170940541 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163617126 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149110578 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188898938 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243959789 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198622617 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206771689 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105387574 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156193697 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176006712 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220148302 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158454335 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111041428 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231854702 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195613248 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.221942287 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114634421 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167564008 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194658435 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129303558 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215734918 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133031915 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207647202 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134893807 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192887977 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153030919 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145051855 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174821911 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.214715649 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115598006 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21744095 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183115157 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135695367 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131200218 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169461499 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181771756 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156764468 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098492574 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207827332 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.096372478 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221352895 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25834081 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107949807 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155608478 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147277205 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135197129 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15429942 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159665488 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111825663 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.166011962 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230862605 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.107985046 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217208573 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202959347 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168917701 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200571632 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116447979 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.689787303 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132132123 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193043447 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159892887 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234229817 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149753956 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173440703 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159476894 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167214545 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194741549 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160940333 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229123991 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221624103 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177766905 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131751446 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157722779 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163426529 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143338353 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149770592 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169418705 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157696194 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.126344487 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.205239945 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171900233 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133866309 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111830856 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226015661 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160230939 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182685188 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179393084 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137650312 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173310382 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186695586 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133988187 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.17934331 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236447988 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142030122 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150867639 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106500091 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15733752 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261736636 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124582925 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206037216 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210510585 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131394657 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169575973 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146385769 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22104144 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157492489 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186305653 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14775805 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158678931 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155307887 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137963751 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101503332 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155331149 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166637629 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148909225 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157336911 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166496369 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195378553 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.1225741 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143637939 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290029969 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194563287 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244275395 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.133190024 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10839808 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162019161 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152010025 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176666092 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17911456 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13700475 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13589582 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.134817067 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131155954 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139864906 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15354854 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196899212 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167126194 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208309684 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136291006 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277171758 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138056722 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127882905 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115835903 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129863706 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122653263 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145238074 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157957746 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217887502 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264578382 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.120189021 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132579438 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150437243 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097410419 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136394674 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164553304 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164547107 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177593527 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145016496 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.078882254 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155688918 seconds)
  done (took 83.166169444 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168511795 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133202916 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147946714 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204403015 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178145083 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267746249 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211021786 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254534365 seconds)
  done (took 2.690682633 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093929027 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147324263 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.155770441 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132771267 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091262021 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118131478 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.34684149 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133134311 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.11671646 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121916066 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.171476862 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093463029 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.549604919 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090193354 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.11805267 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108345656 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092093051 seconds)
  done (took 3.797290264 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.474956841 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.706069215 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.512986677 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097551299 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.119170539 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113066026 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.590785285 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.19632199 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.115757063 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.476021119 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.778315716 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159817097 seconds)
  done (took 18.467449492 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115494144 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134784903 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123226832 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.151559681 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.13984216 seconds)
  done (took 1.794199316 seconds)
done (took 131.431662441 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105027487 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401249498 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070946097 seconds)
  done (took 1.632007661 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108395901 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136521319 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108801401 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.13517585 seconds)
  done (took 1.624335884 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098654051 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125202433 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108346606 seconds)
  done (took 1.461977885 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.32136348 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189470806 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.170934279 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106645006 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127395083 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103668635 seconds)
  done (took 1.469316876 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098679775 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126739992 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096658309 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129024773 seconds)
  done (took 1.583735551 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094665663 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070309885 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099568103 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075033735 seconds)
  done (took 1.469313718 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114756069 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130821168 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103736538 seconds)
  done (took 1.482950858 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129871149 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138426332 seconds)
  done (took 1.403104799 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10554715 seconds)
  done (took 1.236284009 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117727491 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.16889298 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.179133968 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.159804952 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.202017579 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.159425668 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.14190721 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.136475113 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.127546835 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.139543006 seconds)
  done (took 2.668738112 seconds)
done (took 17.946529948 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103439383 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.516111891 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384051835 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14549187 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72008543 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379460181 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032725113 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144164781 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.162965618 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092206496 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138657017 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.670947987 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.059740364 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.471464401 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.020530277 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.37671687 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675017925 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120333867 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117684541 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095436465 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.017923573 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091458711 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121153474 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092570441 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704037418 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423952822 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094389681 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.370348575 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093421861 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125355509 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381927826 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122286494 seconds)
  done (took 17.190587447 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095924785 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171285313 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097472321 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136460406 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121691687 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093802287 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12335108 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093503845 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178834471 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12155057 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109710114 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120846504 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123461672 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096085073 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140798154 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092863749 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124379565 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092550948 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120825407 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11919867 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113247381 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119703083 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094318598 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120529018 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0945318 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134886642 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0936328 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120955804 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11917085 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098763498 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126754258 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094125004 seconds)
  done (took 4.841654568 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140169554 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181221569 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126669178 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124807431 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166385291 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.121954955 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196888607 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116067783 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18206202 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121799846 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137578987 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092258971 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15516285 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093800353 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14244716 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120344464 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097123584 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121413968 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092352792 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122470148 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138741649 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093259524 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121059795 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094432613 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122404569 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107435121 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122780335 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118608186 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094304214 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125899195 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10035158 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122423171 seconds)
  done (took 5.159723145 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097501064 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12445444 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109151198 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138230912 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095428084 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125080658 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096998548 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124323668 seconds)
  done (took 2.052611791 seconds)
done (took 30.375942645 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111170938 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125071615 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107113745 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132914356 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101819834 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130658398 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090922479 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133034745 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133176998 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103575745 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136944879 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09245734 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122247118 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092259202 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134277182 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098030979 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132573961 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101464175 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133257854 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130739306 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095537994 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.131910876 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102177832 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131871473 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103320804 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132428932 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.134840151 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100514979 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12184108 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094384098 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.122873084 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103628585 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.1230449 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105530342 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12550238 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096922454 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123190069 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092863249 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132453152 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131908908 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100799242 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132299629 seconds)
  done (took 6.018809756 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108213727 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138262767 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105440667 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080012106 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116094587 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080901814 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136845073 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078684996 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.108156953 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108061545 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073387635 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105365497 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078336724 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.099399993 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077630567 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075893036 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107212771 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075805794 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076063313 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.104377226 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080820758 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071618334 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107494875 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077870662 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07407069 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109176442 seconds)
  done (took 3.603454234 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100231799 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132340955 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113830218 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182885223 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160765747 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099186689 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13127121 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.109941132 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.137385308 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118660096 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096864282 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148538496 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109146542 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129274442 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091841929 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136827273 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134941876 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094410713 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126675037 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111709835 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137029941 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10287623 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139377009 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.130434873 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092426129 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121527982 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097216749 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133304386 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098294917 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131062229 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09639676 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124348794 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120254693 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105242602 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125022267 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094457212 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140768925 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102507142 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131030661 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093198194 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129807703 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.119724621 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11428207 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160734617 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091378527 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128284432 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094800898 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.130879692 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.11942848 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11106384 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130424913 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091524815 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.123631693 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091362863 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.12091815 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106654264 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.122415932 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094731173 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131807751 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125264169 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105229902 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123577681 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108548445 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120379379 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100139162 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120327728 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092843161 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120456673 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.11402218 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122944353 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160018081 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092264784 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122902224 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101627125 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129486137 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125631032 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094564338 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137355451 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103523817 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123781042 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102632265 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12587987 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094125755 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139820866 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094491065 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123046543 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.093082713 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127847443 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122996524 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094645629 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134572486 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092569795 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124009209 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109422929 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120336841 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093238055 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127682112 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125833835 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092076081 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135329657 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098430196 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122764707 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.10248813 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121786945 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.093910305 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.131614249 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125222726 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092371982 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124957999 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098874733 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.121738639 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093307755 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124822262 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094713809 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131434315 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098567903 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126435493 seconds)
  done (took 14.775382215 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.22764951 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213655756 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.232873284 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.264995906 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134618867 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113993693 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211143201 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.153880659 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.121867504 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158470223 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173528133 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18014058 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.16863565 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180560145 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170292265 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092716541 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.140995707 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.161422438 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21377102 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.256348859 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143289534 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101032622 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160470225 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158375878 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136533642 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.130440485 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110233229 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135976348 seconds)
  done (took 5.81059352 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108794541 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154878611 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097411817 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143697391 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147904777 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091969552 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127103207 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093324668 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135079444 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13437092 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.0926978 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128364006 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099627398 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131270764 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.12116182 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103437531 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131350221 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094758388 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124761496 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097359811 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132318491 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100835494 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125806802 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.090462398 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.131746763 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119199812 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087127946 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141176893 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091595762 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.144440604 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.118655905 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101806286 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135570814 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094870021 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121280849 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094654216 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12434548 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095654754 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124617292 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092031619 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.12128969 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077894156 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12039229 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10737982 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.128925976 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080291957 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129220614 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.125908242 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095444865 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.118289764 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096696465 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123557182 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09745689 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129712153 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.09628734 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121731743 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097424817 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114458225 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100373887 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123480833 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084825412 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.118489904 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099666249 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118137257 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101478459 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127051653 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091762798 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12481897 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097966165 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128561283 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095269302 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128430312 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092006117 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125047219 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095084511 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128504313 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095577963 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121875595 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092990338 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.123518898 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074750651 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.121970097 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073611277 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124369816 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.09229077 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121547514 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095567009 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129559798 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135530429 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095106981 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.129894839 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093816686 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121652487 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09718106 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.11226406 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09632003 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138499755 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139594548 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094403556 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119098458 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10817861 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.12461765 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092087822 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.104611577 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102698801 seconds)
  done (took 12.933449461 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127052061 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152569402 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094187996 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140821977 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155553707 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155211313 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102596612 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128971519 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095437749 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141474728 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094476541 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.130907989 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093787121 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136124568 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155225718 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104842983 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12414448 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107996372 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127431263 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.167767528 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.11219078 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142433434 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110032175 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123653412 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098704672 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.140344817 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.158958982 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107241241 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136012636 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139934315 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108652358 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.15932331 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112857981 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.127018819 seconds)
  done (took 5.490870827 seconds)
done (took 49.776443899 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.273421101 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.466688343 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.239288361 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.178212763 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.25458265 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.274720622 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.248321287 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.238251789 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.712320621 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.23988289 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.496119776 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.842469814 seconds)
done (took 60.632729892 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.253137922 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.372037426 seconds)
    (2/2) benchmarking "String"...
    done (took 1.502157119 seconds)
  done (took 4.042400327 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.589441631 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.151133508 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.501024181 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.23775623 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.255416542 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.532709291 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.932905911 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.568799984 seconds)
  done (took 28.347336688 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.2484985 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.320966145 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.264569425 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.246734816 seconds)
  done (took 6.249373854 seconds)
done (took 48.646655135 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.25620194 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.29987944 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.238169915 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.217307342 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.368221527 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.269245274 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.619760707 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.321242644 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.262038998 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.224264148 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.260176262 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.249848281 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.250852608 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.616293826 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.23876597 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.236897957 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.291619852 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.801318594 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.615527526 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.247993299 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.277030418 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.236450369 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.236078358 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.239228985 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.272242999 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.236074402 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.234913311 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.249017932 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.414677503 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.239041688 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.348515329 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.749961839 seconds)
  done (took 191.787882495 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.233188047 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.231350705 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.294944563 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.292112611 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.605663154 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.433762803 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.363559838 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.701727177 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.25456506 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.249779224 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.446306106 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.234269321 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.497792864 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.206367084 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.263905838 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.327117431 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.449805713 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.507084087 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.280791539 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.389532818 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.23780222 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.319478869 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.245904332 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.411847689 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.265067717 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.242052516 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.264848252 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.260095233 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.421862397 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.391470348 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.239633771 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.242329793 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.785631299 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.090165675 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.234597623 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.251095799 seconds)
  done (took 150.331588832 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.275822223 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.231906213 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.233250626 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.232397169 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.23337632 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.261308442 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.233676289 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.733098298 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.73675201 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.725133523 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.737696909 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.388168379 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.468722982 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.237649811 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.3240013 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.246953443 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.23474281 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.249578878 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.276577948 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.238096802 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.23414096 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.733758731 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.248692884 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.220265327 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.402151403 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.250929971 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.262033578 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.62147084 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.234341062 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.262537026 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.553288549 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.279165346 seconds)
    (32/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.235732213 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.23551067 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.557040946 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.838771722 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.348235595 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.236342856 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.263658452 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.234604209 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.507521881 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.235545639 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.234999442 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.238036508 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.837397307 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.239022783 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.73710596 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.238791711 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.141330273 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.238567461 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.237032985 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.429666349 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.783967934 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.255387654 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.235966774 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.237555665 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.235976965 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.234283883 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.265680976 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.414100223 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.328688017 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.252956832 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.23676998 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.239837583 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.264271747 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.236072727 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.421310076 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.240672446 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.276750569 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.293417668 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.463796642 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.737776616 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.239571075 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.237785898 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331542532 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.354261206 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.237890128 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.237035757 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.237188639 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.236272366 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.345681165 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.237393081 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.615593385 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.40333117 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.255188141 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.374008307 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.334172727 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.237801362 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.559116574 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.240125508 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.238465329 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.95706617 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.333538925 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.237995433 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.23772012 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.23798964 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.617474218 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.738998221 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.409416976 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.24311336 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.415998823 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.243419055 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.634184498 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.731735343 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.854900424 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.242623905 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.345865747 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.403528369 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.255987462 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.237692192 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.376587248 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.242657442 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.297363381 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.239207548 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.63453522 seconds)
  done (took 367.537393696 seconds)
done (took 712.096263013 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.830998698 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.820724822 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.926763677 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.816150496 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.781493439 seconds)
  done (took 10.344822893 seconds)
done (took 11.511082836 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.42203277 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.422055312 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.295931118 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.423750568 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.271200564 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.438864313 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.398961466 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.259109753 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.341500674 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.317647658 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.342190367 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.290582564 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.274083435 seconds)
  done (took 18.668383652 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.549878655 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.547300751 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.302572581 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.551157608 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.280203887 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.559104539 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.436144079 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.448195575 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.455301999 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.273517163 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.254153393 seconds)
  done (took 16.828941909 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.540582906 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.565947592 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.30591959 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.557790728 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.279902413 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.553941069 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.435474051 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.445496058 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.44044021 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.269408584 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.24711364 seconds)
  done (took 16.814841037 seconds)
done (took 53.478722885 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.244835367 seconds)
  done (took 2.409973172 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.27363205 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.437616934 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.26041781 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.248446611 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.245250599 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.245477542 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.249046767 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.244978644 seconds)
  done (took 11.370624879 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.240020357 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.243580878 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.241039989 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.243013846 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.242857242 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.23966968 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.240899965 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.240424545 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.242087464 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.238713069 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.238779879 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.239723116 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.241796861 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.241587965 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.24059145 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.239241244 seconds)
  done (took 21.019681165 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.238751506 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.237016428 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.237660744 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.236915396 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.23771166 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.237926688 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.236797404 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.235444697 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.234604925 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.234268672 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.236616963 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.234711906 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.235712291 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.236740094 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.23432953 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.234445116 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.233403198 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.234465439 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.238771982 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.234866336 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.235738752 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.235808646 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.232991784 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.232693058 seconds)
  done (took 30.822255646 seconds)
done (took 66.785317543 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.154486073 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.732547311 seconds)
  done (took 9.044295199 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.232638178 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.232667043 seconds)
  done (took 3.621516513 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.233271974 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.2351711 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.2305449 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.230864175 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.231107329 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.231469058 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.23137224 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.230153953 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.230215039 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.230628185 seconds)
  done (took 13.470601966 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.228785368 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.228224348 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.227405624 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.230813607 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.229132555 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.226532985 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.22890827 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.228919171 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.226450522 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.225299676 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.227639615 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.225523754 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.226031411 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.224601367 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.228178124 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.225869134 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.22335015 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.22219703 seconds)
  done (took 23.238632019 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.226321394 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.225010688 seconds)
  done (took 3.599349948 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.22430508 seconds)
    (2/7) benchmarking "second"...
    done (took 1.224483109 seconds)
    (3/7) benchmarking "month"...
    done (took 1.220295421 seconds)
    (4/7) benchmarking "year"...
    done (took 1.220204696 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.220352467 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.221035698 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.220522564 seconds)
  done (took 9.698801917 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.223336571 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.39439374 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.467089041 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.817696061 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.22161594 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.224160003 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.082814627 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.224242984 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.227379589 seconds)
  done (took 14.027988734 seconds)
done (took 77.854070392 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.190747834 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.226937674 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.292074446 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.217168117 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.231175859 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.554233483 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.22742597 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.343416591 seconds)
done (took 37.421133893 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.211812525 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.202220941 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.880713452 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.194241576 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.181733378 seconds)
  done (took 18.600945229 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.160177892 seconds)
    (2/2) benchmarking "read"...
    done (took 1.551216216 seconds)
  done (took 4.853035458 seconds)
done (took 30.803420783 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.215544321 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219955079 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.219621685 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.219813959 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.217452329 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.220535759 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.217407434 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.217739689 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.214951838 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.217964141 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.217129247 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.216674912 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.217179285 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216658997 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214184404 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215816127 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215001006 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.212666434 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212572495 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212678572 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215687498 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.213323032 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.213126308 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.216005623 seconds)
  done (took 30.332840196 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.213297603 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.211991011 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.21277959 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.213144124 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.211628676 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.213496078 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.214541314 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.210745393 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.211523261 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.212432948 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210179286 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.210016237 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.212946729 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.210613477 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212132502 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.211652858 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.211044764 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208738795 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210917989 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.208766405 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.211099221 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20901738 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.20866864 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.212086681 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.208701719 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.207701632 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.210140464 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.207925247 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.210757354 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.208362449 seconds)
  done (took 37.465533855 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.214139689 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.214911708 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.208914344 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.208651848 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.208801206 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.209217691 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.209310845 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.208842742 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.209098079 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.208576564 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.207570437 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.207713275 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.207651695 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.207970115 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.207542718 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.207776899 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.207503875 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.209208829 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.206063892 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.207267446 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.205963993 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.205895095 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.206627389 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.207062358 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.207250146 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.208004129 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.204937946 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.204938629 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.20475048 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.205983482 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.204781142 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.205010545 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.205417141 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.205985202 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.206177759 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.20457246 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.208763842 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.209741144 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.20458743 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.203755521 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.204725857 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.203739786 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.206676404 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.203254755 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.203564199 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.203697369 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.20377509 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.203561033 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.202745551 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.203989261 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.205060146 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.203154889 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.202141922 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.203914269 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.203385486 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.203156081 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.202799065 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.203394223 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.204166932 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.201940592 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.202245186 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.202797542 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.202635601 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.202869769 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.203821193 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.202863847 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.203158396 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.203606872 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.202082574 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.202508108 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.201359181 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.202668952 seconds)
  done (took 87.938915827 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.203768214 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.200275001 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.200515347 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.19830543 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199651232 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.202053941 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.200441814 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202439574 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199442828 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.201802504 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201078387 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.200504813 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199123535 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.201630209 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.20142711 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.1988753 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.201902607 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.19927174 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.201436021 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.203843267 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.20064006 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.198234897 seconds)
  done (took 27.544673309 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202291895 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.203548525 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.199292812 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.201405191 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.199763362 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.201518914 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.200842958 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.202376957 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199816388 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.198421771 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198840415 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202191686 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.199526043 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199779012 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.19814017 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.199791461 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.201105733 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.199323785 seconds)
  done (took 22.734826428 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.198606697 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.199496006 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.201622583 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.197732902 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.199447571 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.200978797 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.198231303 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.201557498 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.201212807 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.198614265 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.200896034 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201384605 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.201134543 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198208659 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20028527 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.198081204 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.201527834 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198852921 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.201548726 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.199218299 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.19945738 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.202493602 seconds)
  done (took 27.52681771 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203326431 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.201951326 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.200101876 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.199226369 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.199842996 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.20061059 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.201441837 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.198740109 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.202701761 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.201845396 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.199395755 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.201446343 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.201325379 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.198532114 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.198629157 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.197349337 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.201051441 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.198714976 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.200560801 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.198670811 seconds)
  done (took 25.132629823 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.204057965 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.201000925 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.201366617 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.20102397 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.201367112 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.201270359 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.201329036 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.201434817 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.202327577 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.201747168 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.201287348 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.200983083 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.201466995 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.201505176 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.200726446 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.202442821 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.20233424 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.202360851 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.202210415 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.201481851 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.202456833 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.201913427 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.20222573 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.202600037 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.202381856 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.202636438 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202504685 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.202659628 seconds)
  done (took 34.778882252 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202276089 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.202075216 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.199768087 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.199651562 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.199400378 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.199079327 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.19958831 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.200098343 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.202872874 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.199642288 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.202397387 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.202731782 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.203498402 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.203463868 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.202847809 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.202895036 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202698126 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.200305776 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200988737 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200532339 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.203307198 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202997407 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.203473226 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.200911724 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200340661 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.203141945 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201056023 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.200633382 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.202957711 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.200480354 seconds)
  done (took 37.17313288 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.222646861 seconds)
    (2/2) benchmarking "in"...
    done (took 1.222328519 seconds)
  done (took 3.572174677 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.202325845 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.204225454 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.203420896 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.200766983 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.202017454 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.203155476 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.203220352 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201908249 seconds)
  done (took 10.748550038 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.204469731 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.203707794 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.204196235 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.204117778 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.20513581 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.204867149 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.211142442 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.223133273 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.20477702 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.206016045 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.21049393 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.209927463 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.207526248 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.203807559 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.20381767 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.206507433 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.204648378 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.205998118 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.2057582 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.205230617 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.20627625 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.206991053 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.206735415 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.202537841 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.207036776 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.214126922 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.226429502 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.204932569 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.205338411 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.209679701 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.20659155 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.205289792 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.206457123 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.207722515 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.207447433 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.207651196 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.21540678 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.223505467 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.212863918 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.2252731 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.207663217 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.204200637 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.206902736 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.208902593 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.208370843 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.207607685 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.207178393 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.203649585 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.206919859 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.208783402 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.210860559 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.207114187 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.204133222 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.20953217 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.207991482 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.213354597 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.226302219 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.20885324 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.214691162 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.217289087 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.237036095 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.229848381 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.208589499 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.207976411 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.217218857 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.227094027 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.214364364 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.224719993 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.206780587 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.208476034 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.213597209 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236633044 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.231321314 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.209097445 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.208738706 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.209169685 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.207997817 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.208898726 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.215586075 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.229734723 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.208939919 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.210441087 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.217230218 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.227382432 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.208584728 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.209738406 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.210163048 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.210249068 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.21049577 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.218581323 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.228745146 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.210414769 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.208401913 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.209922959 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.21005314 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.210777532 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.209120672 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.210097603 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.207534341 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.210561778 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.210775018 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.213541025 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.218439143 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.207812097 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.209112252 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.213836237 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.226488162 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.20812683 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.214556565 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.209196417 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.210549544 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.208673366 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.21159677 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.204807314 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.209322029 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.214145669 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.206702667 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.207649706 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.208241081 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.205063125 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.214876831 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.226411305 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.204954209 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.205415602 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.209924378 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.215005209 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.205938615 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.208199573 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.20530142 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.203444833 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.204140838 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.206318159 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.205678982 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.205759074 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.205726418 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.2074935 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.203174251 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.20612903 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.206280627 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.20707177 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.207050137 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.205489917 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.207092563 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.207581481 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.206790028 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.207618499 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.211758559 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.224250705 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.206942501 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.207784515 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.20444111 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.206010042 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.207608126 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.207279601 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.206931786 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.207571173 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.206837932 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.207992024 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.208476503 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.208214586 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.207007122 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.207676006 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.210262364 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.206939182 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.209655088 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.207263669 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.205053755 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.207576974 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.208206011 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.207473885 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.20830932 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.206674727 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.209663022 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.214757048 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.208388953 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.208413185 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.211057434 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.208754552 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.208230654 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.208343819 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.210460078 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.214147021 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.208757962 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.215868005 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.226914581 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.210055259 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.209970456 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.208520896 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.209690609 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.209401045 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.211568882 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.214558956 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.219653977 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.23167551 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.209533974 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.212845159 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.210156307 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.213618483 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.213364968 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.20962128 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.209917348 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.209825766 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.210197257 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.210276041 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.211294784 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.210235255 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.20934473 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.210672795 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.211138774 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.210399488 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.211120635 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.210828623 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.210558263 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.208666174 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.21014361 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.211430585 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.209533721 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.208736482 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.210934618 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.209896394 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.211533457 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.211871554 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.216288032 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.210197739 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.212288713 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.212223461 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.210706695 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.209600592 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.21178362 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.213255312 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.210519999 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.21752881 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.230697455 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.212471588 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.216822533 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.229260705 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.210961076 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.213194844 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.21239972 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.209757052 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.214453722 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.218744619 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.211531823 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.212579831 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.212174418 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.212211235 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.212775768 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.217327704 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.227435718 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.212095151 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.212892676 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.213604024 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.210154145 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.21369416 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.212974227 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.212317035 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.214678431 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.212518416 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.213622218 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.213221961 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.213635792 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.213136166 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.213666151 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.215808556 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.219704054 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.217453187 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.213308576 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.214932746 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.215605092 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.216964295 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.213310789 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.214092726 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.213383721 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.223283987 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.235996534 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.219353214 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.23287967 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.214681193 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.219160305 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.23293599 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.216863775 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.214564732 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.215243691 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.21393267 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.214507914 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.211848238 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.215336358 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.214946606 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.215632397 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.216178044 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.218945119 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.215771846 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.215144549 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.215617367 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.215285423 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.215593877 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.214537397 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.216539605 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.218458365 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.216453757 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.215057603 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.215789097 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.221926663 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234609831 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.215904411 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.216095341 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.215483076 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.215287856 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.216772808 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.216551828 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.218698066 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.222246405 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.219397954 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.222447791 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.217818688 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.224163522 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.21679799 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.219352457 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.223413227 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.214326119 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.215442489 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.216175278 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.216982555 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.223907324 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.235134272 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.218208847 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.220787999 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.21788344 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.218120506 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.217393359 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.21681093 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.218292445 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.216303272 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.224320496 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.236971608 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.220378714 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.218711897 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.216268431 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.217439331 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.21865129 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.218218777 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.220774509 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.216832095 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.218471471 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.217014873 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.218115673 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.218467287 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.21902746 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.218298194 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.215978611 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.218495129 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.224453809 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.237924694 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.222342153 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.218931725 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.224381014 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237169074 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.225709851 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.238231843 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.219195733 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.21926302 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.219208416 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.221885036 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.219328518 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.220106812 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.22035141 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.220874542 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.223280262 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.221171442 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.221621395 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.220709417 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.220591236 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.219595222 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.228459124 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.239304148 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.222006196 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224072182 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.218618959 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.221696389 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.223558343 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.220842086 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.219381049 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.22321243 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.228599525 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227086015 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.220497627 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.221232857 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.221163188 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.220965863 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.221692411 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.220935895 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.219956037 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.220293087 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.221506406 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.221294782 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.223008929 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.221186131 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.221741787 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.221900936 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.222062346 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.229897882 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.239602474 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.222390063 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.221666657 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.222590557 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.221743509 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.221802604 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.222446833 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.222327199 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.221854179 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.222577214 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.228151563 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.22691384 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.223934421 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.221994702 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.2224693 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.222496092 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.221999685 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.222535247 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.222893585 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.223952244 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.223888792 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.222426623 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.224317273 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.222320575 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.223574331 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.223530979 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.223592944 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.224701422 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.227979262 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.223294109 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.219994302 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.223101346 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.222722934 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.223023624 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.222147485 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.229984446 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.244099799 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.231841311 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.231015986 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.226743171 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.223839296 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.226148118 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.230034096 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.223246495 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.225131487 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.225015766 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.224052499 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.224609268 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.226631862 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.224261517 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.230040071 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.242284133 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.224505491 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23230182 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.242556501 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.225427197 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.226619531 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.227823716 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.224596254 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.223530249 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.225833935 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.224891669 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.230818519 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.244249706 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.22608748 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.226604712 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.225097365 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.226338233 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229050303 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.227087481 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.225781791 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.223031564 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.225162359 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.225416128 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.226338075 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.222269259 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.226083959 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.226655001 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.228136499 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.231712662 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.223902115 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.227673901 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.226378672 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.226262074 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.227182554 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.2268384 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.225049945 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.224149037 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.225876003 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.227939239 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.226755794 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.228748052 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.225898247 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.227445253 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.228247347 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.227736651 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.23004165 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.235358508 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.232478563 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.225734461 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.226043304 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.227719276 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.228527964 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.227880704 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.228680054 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.227860181 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.22875945 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.227275617 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228442876 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.22790786 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.230600584 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.240875967 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.246001182 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228350043 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.227635429 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.230046656 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.228389741 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.225834855 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.228350972 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.229353221 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.230369189 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.234467423 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.229713032 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.234252655 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247270054 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.229855204 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.231835756 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.23140381 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.235818029 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.230999961 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.22949386 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.230469036 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.232576769 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.242244873 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.229398359 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238401248 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.255108043 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.248527716 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.230571305 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.230535863 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228686816 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.230163223 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.232062355 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.230153308 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.230329217 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.229628884 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.229737762 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.231805523 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.23440121 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.230695605 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.231711967 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.231050046 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.23055099 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.231091884 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.22799968 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.230992812 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.229994823 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.231189967 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.230567501 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.23151903 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.231173948 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.240917343 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.254514904 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.231013124 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.231384946 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.228531314 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.233944274 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.23343499 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.239464024 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.2377298 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.231405231 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.231970853 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.23336365 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.231361988 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.231461873 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.230459603 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.232214694 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.230784599 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.229308345 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.241635829 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255825275 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.237138734 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.231226885 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.232408689 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.232441071 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.232607018 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.231545574 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233252785 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.232661469 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.234400614 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.236570644 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.233141089 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.232803572 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.234646409 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.239019335 seconds)
  done (took 727.83287655 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.231388103 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.230351267 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.23011254 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.231105411 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.230869883 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.231025169 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231376131 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.231314766 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.230169706 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.231354467 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.230756911 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231076848 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.231365211 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.231610421 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231821528 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.230593087 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231240624 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.232221145 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.232868295 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.231764685 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.232828085 seconds)
  done (took 27.013980514 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.235706743 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.230948085 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.233684501 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.23441441 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232702164 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.234920884 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.232296061 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23570161 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.235266195 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232185358 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.235926687 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235573278 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.233555616 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.232189556 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23234804 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234781507 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.235351387 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232651758 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.234710332 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.233235353 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234982548 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.233406071 seconds)
  done (took 28.304596526 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.236395116 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.235465326 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.236404747 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.232572963 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.236211674 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.23363131 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.235553667 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.235800671 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.237099753 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.236197059 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.235353778 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.236963082 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.24148506 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.238986687 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.237055747 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.235564384 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.379493014 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.235413479 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.236696736 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.236494244 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.233600512 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.241547496 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.252061682 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.23557899 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.235972224 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.237423029 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.237799 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.236668207 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.237155392 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.238192476 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.239431885 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.237242285 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.236245158 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.238149612 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.23742721 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.237949865 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.241178129 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.238097068 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.235428049 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.236619606 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.246668822 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.254237385 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.2388756 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.243116166 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.255530042 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.237984147 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.240697648 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.243875913 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.235599024 seconds)
  done (took 61.988616547 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.2386454 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.238505048 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.236063865 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.237519939 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.238540656 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.239651668 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.238072132 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.238431234 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.236244729 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.237550396 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.239681844 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.236060572 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.23695388 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.239169759 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.240517588 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.236500049 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.23649524 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.237183287 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.237013012 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.236747302 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.236452113 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.239661029 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.240064488 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.237699354 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.239540926 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.237062719 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.237082899 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.240186761 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.237160568 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.237761085 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.240407009 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.24148915 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.239537658 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.238858097 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.237019374 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.239577968 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.240250544 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.23761627 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.240462813 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.238522596 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.241036809 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.24040336 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.241026101 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.241181261 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.238518832 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.238533713 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.238932477 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.238989433 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.237726615 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.241951336 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.240658286 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.238450498 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.241422722 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.237260531 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.242118333 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.24090229 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.238894221 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.238535827 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.241397062 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.238765155 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.239340242 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.242162077 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.239658054 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.242711106 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.242953766 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.239851253 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.240001924 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.242973126 seconds)
  done (took 85.421134674 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.24312708 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.242402872 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242262345 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241880956 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243741498 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.242879754 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.242847632 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.243098655 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.242136323 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.242576904 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.242566334 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.243060841 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.242692173 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.242754293 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.243423609 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243526614 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.242987774 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243216883 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.242319614 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244137178 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.245195411 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.243453432 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.243649567 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.243337631 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.245063211 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.244461205 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.244030898 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.244240211 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245087113 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.24461053 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.245507928 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.244046117 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.24475537 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.244721413 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.244606547 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.245191221 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.244316982 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244376579 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.244977346 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.244148826 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.244262842 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.244822121 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.244121381 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.244559597 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245488606 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.244621773 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.245291787 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.245654401 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.245341048 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.244990161 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.246329421 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245790746 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246079621 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.244858049 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.246646087 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.245133971 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246290957 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.245517394 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245622442 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.245928535 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246029156 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.245500085 seconds)
  done (took 78.313364083 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246163074 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.245993489 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.243877776 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.243591193 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.246669259 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.243217442 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.245481291 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.246940643 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.246426586 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.246061682 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246974701 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243737101 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243780488 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247415379 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.244525235 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244430097 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244353526 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.244093473 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246885868 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.243467438 seconds)
  done (took 26.072075044 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.244687026 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.247815395 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.244462908 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.244783402 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.247510798 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.245232218 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.247800281 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247835744 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245149511 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247907171 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.24861007 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.248324224 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246602981 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.246144096 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.24857238 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.246247058 seconds)
  done (took 21.116766054 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.246729945 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.247710352 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.247251617 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.248064848 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.246251642 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.246418317 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.248693176 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.246115213 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.245695251 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.248391488 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.248922128 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.249152567 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.250253929 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.249890459 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.24759391 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.248374935 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.24719546 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.246422109 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.248169067 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.250029979 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.24729834 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.246622282 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.249481277 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.249177592 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.24805485 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.247736217 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.246707748 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.247325437 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.24736803 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.250305514 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.247163154 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.247626956 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.248151483 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.248488228 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.249175653 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.247874311 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.250098967 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.250088046 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.250855828 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.250585938 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.250525848 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.24795609 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.250266446 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.249671973 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.247625226 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.25085082 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.248391592 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.248536838 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.248527443 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.248766972 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.251061546 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.251369799 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.250817248 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.251137208 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.250817999 seconds)
  done (took 69.843943383 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252460497 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.251590915 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.247430587 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.251932685 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.251546327 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.248902893 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.251175337 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.249734004 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249820094 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.252399701 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.25036481 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.251853326 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249480965 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.252452526 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.250230328 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251353215 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.250484385 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.250211374 seconds)
  done (took 23.685995464 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.249877478 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.249928562 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.253316095 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.250424306 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.250416304 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.252814629 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249659685 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.252799234 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253514033 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.251652491 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250587405 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.253195861 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252848346 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.253631784 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.251655909 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250350252 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.253981864 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253147141 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.250504501 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251691936 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.253315857 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.254407791 seconds)
  done (took 28.718260393 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.253129402 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.252398284 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.252810018 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.267451341 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.26909279 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.274606743 seconds)
  done (took 8.74428155 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260355264 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253097966 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.251597097 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254971133 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255117992 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251418731 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250537732 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251481291 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254852406 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252513652 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252502021 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25441892 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254765921 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252630372 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254673831 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253868304 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252369831 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25214771 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253151812 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255428428 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252275283 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255114576 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25359042 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253086762 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252987672 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253796007 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256415681 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252752688 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253714137 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255620996 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255876754 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253417592 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256652347 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25402948 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256648113 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2554236 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253198677 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256423938 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256158524 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254075712 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.256721675 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255673573 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256637647 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253736801 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255957862 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255234833 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253942107 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254458279 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255355258 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257193504 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257529329 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25418084 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257680493 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25729631 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256866721 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257927051 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255544673 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255053585 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257261914 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254948578 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25538992 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258066034 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254751463 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25523068 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257448304 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255349019 seconds)
  done (took 84.015874304 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255855501 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.255309035 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255927586 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256548549 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255454426 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255722829 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255294893 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25603958 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256090776 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256090279 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258382061 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256122817 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255048191 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255568832 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255446088 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25549262 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256409325 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256579655 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256198625 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258811613 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255726537 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256664283 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256951617 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255854569 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256407646 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259548137 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256988416 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256349612 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2566176 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256757348 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25724553 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256508484 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257135331 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.257601667 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257575969 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256588887 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257383922 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256903868 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25610573 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260218612 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257480189 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260673331 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258239781 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257099401 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257809448 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258302129 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257922556 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257524351 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258061257 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257787612 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257752817 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258271167 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258756101 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258111445 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25830541 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257711893 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258563068 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258148905 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258326028 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261985881 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258440305 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259151591 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261959534 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25882892 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258495073 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259063337 seconds)
  done (took 84.168207615 seconds)
done (took 1701.327336323 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.325732692 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.344024281 seconds)
  done (took 13.85202645 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.422817 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.377075473 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.260212731 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.301608212 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.262112519 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.258919475 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.280957852 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.259737387 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.260458611 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.261549532 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.260075759 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.447485716 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.312129625 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.260888979 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.259494166 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.355239015 seconds)
  done (took 42.026042692 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.284795354 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.267315129 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.372076937 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.28219107 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.28801345 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.443074026 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.320074049 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.265718896 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.428126709 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.308519828 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.766824242 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.293531004 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.266153935 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.336586677 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.28896372 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.442856171 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.508221491 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.774429733 seconds)
  done (took 29.122326797 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.689188257 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.277686331 seconds)
  done (took 9.15281503 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.28576614 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.267379043 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.267799255 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.264017716 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.257360853 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.259297794 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.26605503 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.260106917 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.754626492 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.388302921 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.268380076 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.273793927 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.285156876 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.267781208 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.264296414 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.300903718 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.463226026 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.265407238 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.263132668 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.273705876 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.267158386 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.348779218 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.308212831 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.265624822 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.386436047 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.758568719 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.270790837 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.273284524 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.45157118 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.267121118 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.267601353 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.266557941 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.267848893 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.861017447 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.73794804 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.281246616 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.290502256 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.276333791 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.264130508 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.411341739 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.267776279 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.273556856 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.260216379 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.744853594 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.394620952 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.379109944 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.445221381 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.286650931 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.270457593 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.327393948 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.271212923 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.269977903 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.296185832 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.007587267 seconds)
  done (took 107.401638371 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.269397971 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.650595365 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.429283372 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.283385198 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.065846166 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.045547785 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.278432506 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.53647241 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.320747763 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.263899361 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.610009133 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.75782816 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.285391007 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.295625214 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.797024937 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.3038553 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.264761512 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.151726721 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.279049623 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.26842638 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.746039301 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.264268387 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.263600833 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.52435195 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.301722875 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.703965185 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.58696408 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.787183904 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.282887864 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.264158998 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.718188578 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.280065423 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.30619401 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.263644335 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.518491796 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.605362705 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.596074458 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.283616022 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.267776258 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.268367532 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.281967869 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.698722369 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.608091525 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.280321406 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.265400038 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.703844538 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.280572104 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.270635374 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.267526356 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.471839602 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.141670108 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.264648927 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.576546299 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.264895209 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.55295814 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.316367535 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.280358731 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.731940926 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.28639297 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.383066375 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.291087106 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.267149921 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.265108183 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.26939946 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.268770275 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.597165186 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.533748415 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.269304137 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.594080752 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.73038792 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.280992237 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.779699417 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.185622216 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.287015547 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.337235599 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.267067981 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.953999837 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.741271042 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.292876665 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.267228814 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.583264392 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.284445119 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.581474741 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.280959793 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.266107577 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.771930595 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.269155297 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.281012253 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.267524007 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.28315014 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.02860116 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.270730716 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.545370161 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.317088926 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.267192577 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.267510154 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.273979253 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.267949789 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.283271743 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.27012345 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.78197262 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.283609007 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.240787621 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.284768672 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.280935228 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.268628286 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.270160921 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.26789658 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.493804573 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.682816503 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.28984342 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.268413922 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.268671906 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.293411197 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.517522665 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.268559619 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.561236197 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.28715444 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.268536465 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.270650133 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.077344274 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.331495344 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.268689064 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.285733013 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.174762056 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.4734387 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.287877122 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.269796312 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.268017678 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.285686339 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.449575023 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.288702524 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.359607602 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.271051578 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.963581827 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.300877108 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.289407459 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.79380009 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.27841172 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.226220245 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.287318934 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.270250564 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.553640482 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.529380201 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.442429468 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.27014904 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.270840173 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.941070222 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.301584857 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.41618735 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.28940907 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.268108615 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.469501116 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.492813747 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.269851721 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.886514707 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.272747707 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.488967201 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.271593015 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.582437697 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.749572646 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.287337237 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.275342954 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.966989629 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.975168003 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.946622035 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.274318002 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.60603849 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.218870762 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.756420639 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.271317737 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.27217968 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.857346793 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.273280406 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.274561148 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.272583046 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.271703007 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.333850506 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.445122308 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.603720665 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.272155455 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.707937401 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.357196691 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.271954015 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.275976361 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.274567231 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.620206526 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.280766991 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.272116534 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.294531496 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.274542201 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.280831631 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.733509925 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.221975953 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.274029243 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.423347761 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.894577664 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.289590633 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.274121985 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.846711128 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.682960699 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.803599913 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.338353945 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.566946599 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.290081317 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.312287947 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.997787689 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.296265702 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.730926676 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.293356772 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.274899751 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.862184707 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.289725032 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.366001379 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.274601247 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.272857894 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.799122949 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.290488905 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.279229368 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.44507804 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.293092568 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.543476352 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.27510075 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.284565336 seconds)
  done (took 1096.858634429 seconds)
done (took 1299.592876864 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.274607372 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.274438037 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.259886483 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.276081798 seconds)
  done (took 26.285848663 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.285970092 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.281129652 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.283634762 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.281760111 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.283308405 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.281310699 seconds)
  done (took 8.895786798 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.321114798 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.280079066 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.279502386 seconds)
  done (took 19.082293051 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.477824414 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.594976255 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.624147308 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.445828496 seconds)
  done (took 10.345546259 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.283402177 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.283603329 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.283496201 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.284377913 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.287292115 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.287229054 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.284687074 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.285147708 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.287298086 seconds)
  done (took 12.769601371 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.28540845 seconds)
done (took 79.861772005 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.303216476 seconds)
    (2/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.455139598 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.892916438 seconds)
    (4/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.256741731 seconds)
    (5/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.379654762 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.900525983 seconds)
    (7/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.362864817 seconds)
    (8/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.360128689 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.547434578 seconds)
    (10/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.484958353 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.172616386 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.318474075 seconds)
    (13/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.263614237 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.30367162 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.16580225 seconds)
    (16/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.343798364 seconds)
    (17/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.277896187 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.906757683 seconds)
    (19/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.294498626 seconds)
    (20/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.005432634 seconds)
    (21/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.259376066 seconds)
    (22/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.286729498 seconds)
    (23/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.286636134 seconds)
    (24/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.302829081 seconds)
    (25/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.361771243 seconds)
    (26/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.257891667 seconds)
    (27/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.296327795 seconds)
    (28/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.656341949 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 6.295765998 seconds)
    (30/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.048439301 seconds)
    (31/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.320759255 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.379683409 seconds)
    (33/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.482543222 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.689740739 seconds)
    (35/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.396708611 seconds)
    (36/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.281259185 seconds)
    (37/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.096791199 seconds)
    (38/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.482826157 seconds)
    (39/286) benchmarking ("sort", Int8, true)...
    done (took 6.297179446 seconds)
    (40/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.615889266 seconds)
    (41/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.47905216 seconds)
    (42/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.279600858 seconds)
    (43/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.478722683 seconds)
    (44/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.734688155 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.40395508 seconds)
    (46/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.328589146 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.560982455 seconds)
    (48/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.263841696 seconds)
    (49/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.290540717 seconds)
    (50/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.103216835 seconds)
    (51/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.983585057 seconds)
    (52/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.51096045 seconds)
    (53/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.102749646 seconds)
    (54/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.639176446 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.338257954 seconds)
    (56/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.260836665 seconds)
    (57/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.45903845 seconds)
    (58/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.364116986 seconds)
    (59/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.304987867 seconds)
    (60/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.101383729 seconds)
    (61/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.285146162 seconds)
    (62/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.278321923 seconds)
    (63/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.674124808 seconds)
    (64/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.263900929 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.170961938 seconds)
    (66/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.281587646 seconds)
    (67/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.443205427 seconds)
    (68/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.283480833 seconds)
    (69/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.369184372 seconds)
    (70/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.261918296 seconds)
    (71/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.278125261 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 5.461241294 seconds)
    (73/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.294920749 seconds)
    (74/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.636292266 seconds)
    (75/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.29061862 seconds)
    (76/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.640960996 seconds)
    (77/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.095836781 seconds)
    (78/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.307728515 seconds)
    (79/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.282833375 seconds)
    (80/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.368695076 seconds)
    (81/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.017992337 seconds)
    (82/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.608475662 seconds)
    (83/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.384946929 seconds)
    (84/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.67173493 seconds)
    (85/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.018921383 seconds)
    (86/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.307111644 seconds)
    (87/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.088349051 seconds)
    (88/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.266797109 seconds)
    (89/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.409389725 seconds)
    (90/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.537557798 seconds)
    (91/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.312540089 seconds)
    (92/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.264237266 seconds)
    (93/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.288149671 seconds)
    (94/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.290773299 seconds)
    (95/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.012593437 seconds)
    (96/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.875948668 seconds)
    (97/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.287492228 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.12408997 seconds)
    (99/286) benchmarking ("sort", BigInt, true)...
    done (took 6.282387689 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.488744537 seconds)
    (101/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.341328057 seconds)
    (102/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.367250501 seconds)
    (103/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.027247389 seconds)
    (104/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.488461367 seconds)
    (105/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.277189595 seconds)
    (106/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.279068833 seconds)
    (107/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.555885516 seconds)
    (108/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.545873554 seconds)
    (109/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.481577243 seconds)
    (110/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.310275632 seconds)
    (111/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.263311429 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 1.80139468 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.32324405 seconds)
    (114/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.562421033 seconds)
    (115/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.390658809 seconds)
    (116/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.28392678 seconds)
    (117/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.289264885 seconds)
    (118/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.737592823 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.542529863 seconds)
    (120/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.787886264 seconds)
    (121/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.72117442 seconds)
    (122/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.307588552 seconds)
    (123/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.01500585 seconds)
    (124/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.56402002 seconds)
    (125/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.69624326 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.688000791 seconds)
    (127/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.016611747 seconds)
    (128/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.26683854 seconds)
    (129/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.273243081 seconds)
    (130/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.634089393 seconds)
    (131/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.617008851 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.387132976 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.631825012 seconds)
    (134/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.556504209 seconds)
    (135/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.310853479 seconds)
    (136/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.513007578 seconds)
    (137/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.285318222 seconds)
    (138/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.276238291 seconds)
    (139/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.558616994 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.038909265 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.311156312 seconds)
    (142/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.265883962 seconds)
    (143/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.020208272 seconds)
    (144/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.644459997 seconds)
    (145/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.301180474 seconds)
    (146/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.287122394 seconds)
    (147/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.267497032 seconds)
    (148/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.274959272 seconds)
    (149/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.329865839 seconds)
    (150/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.900559648 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.312734631 seconds)
    (152/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.276339644 seconds)
    (153/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.354951302 seconds)
    (154/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.136218995 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.703530315 seconds)
    (156/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.302731262 seconds)
    (157/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.574351562 seconds)
    (158/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.703057396 seconds)
    (159/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.305458175 seconds)
    (160/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.28513596 seconds)
    (161/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.301428591 seconds)
    (162/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.305065548 seconds)
    (163/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.3692903 seconds)
    (164/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.730621757 seconds)
    (165/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.244290905 seconds)
    (166/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.388510613 seconds)
    (167/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.855045987 seconds)
    (168/286) benchmarking ("sort", Float64, false)...
    done (took 5.572499523 seconds)
    (169/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.13246168 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.653063956 seconds)
    (171/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.398783231 seconds)
    (172/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.89827652 seconds)
    (173/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.791249857 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.314257973 seconds)
    (175/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.786024724 seconds)
    (176/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.287020415 seconds)
    (177/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.785836178 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.330337322 seconds)
    (179/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.268634141 seconds)
    (180/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.297329523 seconds)
    (181/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.639911794 seconds)
    (182/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.535952772 seconds)
    (183/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.267617062 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 5.37961024 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.360978447 seconds)
    (186/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.402401285 seconds)
    (187/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.282859213 seconds)
    (188/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.145792065 seconds)
    (189/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.282536041 seconds)
    (190/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.076421143 seconds)
    (191/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.305340974 seconds)
    (192/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.986143878 seconds)
    (193/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.301936709 seconds)
    (194/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.373734066 seconds)
    (195/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.314279077 seconds)
    (196/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.347176774 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.492379843 seconds)
    (198/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.914582253 seconds)
    (199/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.388216172 seconds)
    (200/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.322868835 seconds)
    (201/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.097463488 seconds)
    (202/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.468423385 seconds)
    (203/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.111998735 seconds)
    (204/286) benchmarking ("sort", Int8, false)...
    done (took 4.361944094 seconds)
    (205/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.991916026 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.327998369 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.127487891 seconds)
    (208/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.375463084 seconds)
    (209/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.269497441 seconds)
    (210/286) benchmarking ("sort", BigInt, false)...
    done (took 6.307099156 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.329198869 seconds)
    (212/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.269179551 seconds)
    (213/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.413764211 seconds)
    (214/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.270189285 seconds)
    (215/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.35293587 seconds)
    (216/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.27054269 seconds)
    (217/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.27084473 seconds)
    (218/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.315970964 seconds)
    (219/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.785450064 seconds)
    (220/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.269441639 seconds)
    (221/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.274006797 seconds)
    (222/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.309984417 seconds)
    (223/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.409536309 seconds)
    (224/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.39788002 seconds)
    (225/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.682244564 seconds)
    (226/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.043888896 seconds)
    (227/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.811491217 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.879465074 seconds)
    (229/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.270387741 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.496215474 seconds)
    (231/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.263730553 seconds)
    (232/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.768836091 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.699609006 seconds)
    (234/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.307885391 seconds)
    (235/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.27615051 seconds)
    (236/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.071401859 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.33449718 seconds)
    (238/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.397885236 seconds)
    (239/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.394262913 seconds)
    (240/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.271058363 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.675716102 seconds)
    (242/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.652884688 seconds)
    (243/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.333819563 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.19494429 seconds)
    (245/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.290987241 seconds)
    (246/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.317137338 seconds)
    (247/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.775819357 seconds)
    (248/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.291941877 seconds)
    (249/286) benchmarking ("sort", Float32, false)...
    done (took 5.307053772 seconds)
    (250/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.33617217 seconds)
    (251/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.388944074 seconds)
    (252/286) benchmarking ("sort", Float64, true)...
    done (took 6.292134958 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.917526317 seconds)
    (254/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.273217576 seconds)
    (255/286) benchmarking ("sort", Float32, true)...
    done (took 6.308115024 seconds)
    (256/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.319120303 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.401199167 seconds)
    (258/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.375012892 seconds)
    (259/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.521037654 seconds)
    (260/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.27343708 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.408144667 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.848124637 seconds)
    (263/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.705664545 seconds)
    (264/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.274173319 seconds)
    (265/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.293556996 seconds)
    (266/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.899968229 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.104536955 seconds)
    (268/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.437452493 seconds)
    (269/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.305303929 seconds)
    (270/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.358043426 seconds)
    (271/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.411740205 seconds)
    (272/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.77419673 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.334498606 seconds)
    (274/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.391837305 seconds)
    (275/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.014293539 seconds)
    (276/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.390839193 seconds)
    (277/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.416407765 seconds)
    (278/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.291995734 seconds)
    (279/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.278555572 seconds)
    (280/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.319655813 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.315761078 seconds)
    (282/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.755512282 seconds)
    (283/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.65773109 seconds)
    (284/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.337006132 seconds)
    (285/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.310779042 seconds)
    (286/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.296905165 seconds)
  done (took 921.73953138 seconds)
done (took 922.939076235 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.326137619 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.321005458 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.303653121 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.325418816 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.414888191 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.328394347 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.314080538 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.307015509 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.351211313 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.353570696 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.302866837 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.327672591 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.305952466 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.304452777 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.302770861 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.319146316 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.290401948 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.304587833 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.320706174 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.314019699 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.32071721 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.302779124 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.353805811 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.327072705 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.307816308 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.306738382 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.308558696 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.32414307 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.415997289 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.307977081 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.30759814 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.315959991 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.30089212 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.306943086 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.299610179 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.32442877 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.31604799 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.314550039 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.309578628 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.337078418 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.674318214 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.321270649 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.306421091 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.307238698 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.306604662 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.310802816 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.307200639 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.313120765 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.319816845 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.322185674 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.667905128 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.336624682 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.310048151 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.306945445 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.31748588 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.306566647 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.311393848 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.323868774 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.326460779 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.325293305 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.293957095 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.314897206 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.309219724 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.324205017 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.314450368 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.706298362 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.319218876 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.312578163 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.680790603 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.329472902 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.709080022 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.331739216 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.308620547 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.321432402 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.339966274 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.306524096 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.305531985 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.307946996 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.315763829 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.306312685 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.319531314 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.323120596 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.313651847 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.309574609 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.324827573 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.332251984 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.319338753 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.310350718 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.3187202 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.328233106 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.316385235 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.32014616 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.312193734 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.30510428 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.318321819 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.313006704 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.312013593 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.312752176 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.314688807 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.320386958 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.680445033 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.343989701 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.306996908 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.305927971 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.308751714 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.322609465 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.680830598 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.325979744 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.331548831 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.357173318 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.311721662 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.288243272 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.313055728 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.329156466 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.318996446 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.31375533 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.30553331 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.29051855 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.67741117 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.340912285 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.312764244 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.310005765 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.33095163 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.312386104 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.308384751 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.303837182 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.312544595 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.325726046 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.432520034 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.322508842 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.342917287 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.309584877 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.314803817 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.335749211 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.329173099 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.342854435 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.3148164 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.329165205 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.328711816 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.309344645 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.32313352 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.323040082 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.312461345 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.318084112 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.306354046 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.335324369 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.325906937 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.326941503 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.334231013 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.434470223 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.310147355 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.292100976 seconds)
done (took 220.815306835 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.370959276 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.30138254 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.396228889 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.308866903 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.409572925 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.4113513 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.306556786 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.307114946 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.307502299 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.689580516 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.307552229 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.307658374 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.301130068 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.30651785 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.393592598 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.309560735 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.307761569 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.651922033 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.310219555 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.380305462 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.311735461 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.307319859 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.310669482 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.694262328 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.308565666 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.307091296 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.381188586 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.310536649 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.657109123 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.305088074 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.310907789 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.657436971 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.400130914 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.328060721 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.320905623 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.31778406 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.411931579 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.328783237 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.394010086 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.392788589 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.396832285 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.349863592 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.305654638 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.305258727 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.31274419 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.312514181 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.309289799 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.338271157 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.311905456 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.309497024 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.654584145 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.320623573 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.310308512 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.308864529 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.310497989 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.340569634 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.310657433 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.313226902 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.402745696 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.313496527 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.37501339 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.696728787 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.692716469 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.312245751 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.312064935 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.311983299 seconds)
  done (took 146.908109797 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.379914903 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.38682088 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.420934077 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.32901873 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.364317213 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.425112316 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.329321008 seconds)
  done (took 10.865004736 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.319974633 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.313503883 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.363565684 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.362550433 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.313903993 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.460806232 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.313027166 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.32496236 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.310962382 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.367347599 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.315087153 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.313867654 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.321242621 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.314273738 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.361936616 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.324131178 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.427866579 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.311694027 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.311510974 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.467096419 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.308487294 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.317820171 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.362239906 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.322046867 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.309833899 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.315103458 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.876099097 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.310164976 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.308173475 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.309424093 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.307943167 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.346776283 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.310273001 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.30826047 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.308597177 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.425664333 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.310447854 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.307806771 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.308860303 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.308073886 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.310420823 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.310201726 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.310683241 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.307759392 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.309439051 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.332487911 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.310193051 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.310986022 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.310167051 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.311557366 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.360902038 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.310663758 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.308428889 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.308800546 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.366866142 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.318167598 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.311448429 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.308991773 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.312445668 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.309149084 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.467019146 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.359958739 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.31223535 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.359241759 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.312108743 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.311461546 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.312090716 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.311666914 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366365559 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.312008044 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.359990095 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.31008938 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.467367147 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.335616337 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.313292822 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.314452481 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.315019049 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.311804329 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.309705334 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.317964034 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.310879653 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.314250194 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.318940704 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.310172857 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.311273035 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.415092428 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.421866021 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.310691159 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.325669675 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.320379679 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.310218839 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.366619555 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.31363451 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.311084987 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365880021 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.428747226 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.36763648 seconds)
  done (took 151.077378019 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.317393311 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.323063929 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.316237384 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.329926642 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.314986808 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.315446682 seconds)
  done (took 9.148004756 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.31804752 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.316186535 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.315097552 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.315567522 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.315460639 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.315496187 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.315790998 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.317364731 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.318835042 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.316278065 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.316252437 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.317637636 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.317432305 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.316501116 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.316273231 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.314597776 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.31578158 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.313357168 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.315454842 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316186323 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.421073377 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.316207 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.315941871 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.317052751 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.319333347 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.316321543 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.323602102 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.315504372 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.31563037 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.322616474 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.33583086 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.31753108 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.316379488 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.322309876 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.318766993 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.317349674 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.320060858 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.31655428 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.313000308 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.317622164 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.317355576 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.317285892 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.317386709 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.31742136 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.317817441 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.320433879 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.321048436 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.324074138 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.317164459 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.318328683 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.317724726 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.316794141 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.317026872 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.318599833 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.319799874 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.339184018 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.321445556 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.318713354 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.318119743 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.319346243 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.319413761 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.318552481 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.320204866 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.322715483 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.316751331 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.317977918 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.31959341 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.322383851 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.318904985 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.318471587 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.319754034 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.316671382 seconds)
  done (took 97.263779631 seconds)
done (took 416.484422312 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.601136552 seconds)
  done (took 7.836290819 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.387846558 seconds)
  done (took 7.625490367 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.11614269 seconds)
  done (took 21.355368189 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.38410282 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.444204254 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.322485377 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.320360418 seconds)
  done (took 26.706874511 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.658487688 seconds)
  done (took 7.893678775 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.31129027 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.337252587 seconds)
  done (took 13.887281391 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.709203354 seconds)
  done (took 7.94590097 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.469792507 seconds)
  done (took 7.707031759 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.341951697 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.336403531 seconds)
  done (took 14.16835078 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.293601022 seconds)
  done (took 7.530643813 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.045681603 seconds)
  done (took 8.283353353 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.325371616 seconds)
  done (took 7.563973122 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.319715263 seconds)
  done (took 7.557129177 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.101805663 seconds)
  done (took 9.338347769 seconds)
done (took 156.632144496 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.313747481 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.32095238 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.321097693 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.321612341 seconds)
  done (took 26.514198906 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.354880487 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.354015999 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.355484494 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.36544301 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.357929018 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.355384324 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.347593513 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.347293955 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.364830918 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.357810205 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.357172405 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.358188475 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.355559791 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.347600838 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.357511539 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.356967204 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.366452723 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.356637365 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.347455295 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.358863747 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.321620471 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.366559825 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.358344384 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.323201468 seconds)
  done (took 33.731892741 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.844121506 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.393293452 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.475887846 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.374419235 seconds)
  done (took 7.326243916 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.374893965 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.376270256 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.387484926 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.425357987 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.465251635 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.385612619 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.349913288 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.344223775 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.330510159 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.376060412 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.451890759 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.392470965 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.475734521 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.323322091 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.521887458 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.324181742 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.323788449 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.37639679 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.42749947 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.441139862 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.324340578 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.375345144 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.379759044 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.393321903 seconds)
  done (took 34.585940172 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.323321301 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.342378206 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.322849248 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.322572932 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.332127147 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.323132882 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.323946246 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.325446098 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.324107864 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.329926035 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.322987255 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.337293346 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.323053812 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.324604365 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.33109666 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.325761207 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.329945967 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.323546991 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.324798921 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.331727503 seconds)
  done (took 27.785767501 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.318619316 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.17203201 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.67035074 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.574674355 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.318863169 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.318572591 seconds)
  done (took 27.61448457 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.393030103 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.536713645 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.32498741 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.670795488 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.768161693 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.342822767 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.327044447 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.558282013 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.867465562 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.86881251 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.38292396 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.392206864 seconds)
  done (took 19.675672632 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.334952829 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.325058188 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.336196688 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.341800659 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.378563191 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.346282574 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.33343146 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.320037634 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.385082299 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.399265358 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.346788438 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.380647294 seconds)
  done (took 37.471419002 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407134836 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365485367 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.179369203 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379234449 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.059032218 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.533227318 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.361036313 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.795974786 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.326017052 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594701094 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322652341 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416399593 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.576147778 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335130159 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.328802997 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.300317624 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571201108 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812796764 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327110048 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.345662363 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354986805 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.328850374 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.438457161 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.35794101 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.535936017 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.47023575 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.583710929 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.098190726 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614386616 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.337911555 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333153826 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323428367 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597973758 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973476165 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443362726 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333360878 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333849167 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.870259372 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.312096369 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.347825043 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.285745885 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.332294836 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334451301 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32421186 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.25769618 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332546513 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.787779367 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.329093236 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.034562116 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.323256925 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.33520222 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418029985 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.327349961 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.31590395 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384574633 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.329389556 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.322317659 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414983214 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910596816 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.755397893 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343630165 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.263504376 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.331839341 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.266895197 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966129535 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.445396421 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.32935183 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.328369294 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258705878 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.349172412 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349361926 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472452422 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.349109596 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.975138229 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020484259 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.351187773 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.25890762 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880383931 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.337264633 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.264309489 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553216007 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.103666396 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262259505 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.269390352 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.260938151 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02533914 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33773251 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.694382124 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345346787 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.80451716 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.337064736 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344140613 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35102835 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.549429987 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.206105979 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327732978 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.290165482 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476516672 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349330409 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.781536135 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261355346 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.332124771 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584025058 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.538267419 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.328066007 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.319244562 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568219779 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334935614 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.348756666 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.335178431 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.343672371 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.905014605 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360144119 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.761689848 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348511194 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.106357741 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061970179 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345686737 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.433181138 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.328574386 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.573522924 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.083029764 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.490691001 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396778825 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334544165 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.33082058 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.366474298 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.928693535 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.488545325 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.325911558 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333271778 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.34349209 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.329864661 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277886388 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.341047533 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332316027 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.108179855 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.55179645 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332005642 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610735815 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26411997 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477542989 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.338230277 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.551713747 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.518456816 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.348396134 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.588410802 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.741440426 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.346316235 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346494321 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349517952 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432490815 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35231738 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.339733654 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.588323486 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.334692927 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.33525684 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.388085009 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.115472413 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331071189 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.336929791 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333136541 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939392311 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330033538 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.335087829 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.220231864 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.346000502 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398899561 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.337486461 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.341708654 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.132661777 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360352508 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.337613467 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.331392336 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559504379 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.342275241 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.29690548 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415832098 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.542888539 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.914602573 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367153354 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.266206891 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.044254869 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.026389477 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334047825 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.521466597 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.331085465 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343382098 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.343370321 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.350289729 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.914590672 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354378899 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.296658162 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.346303537 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.343361954 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.337822238 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333099853 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.107988631 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.800502519 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353541855 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.349345301 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475867329 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.347465399 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.266834334 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.850601576 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.339280654 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.333392352 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.110780459 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368784011 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.309144463 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826067798 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592375925 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347362526 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.347063937 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.412253409 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.371270836 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.3430085 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33979047 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348173164 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.346773831 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343723939 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.344889599 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.307551962 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.703680941 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90060533 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077272102 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906008668 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.274418448 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.345687818 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.223060921 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.794609983 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269034323 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.992047081 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.521043158 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.812099165 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279584855 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550283457 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.522331142 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.109176983 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.34991371 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.562524559 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255363472 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.354101723 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349815968 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.547566539 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372091114 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.340299876 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.271607104 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.616967436 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608326634 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347204887 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418794971 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798465575 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.351084527 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.117357823 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.351792229 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.657807404 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526320351 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.967417687 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.724336969 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.347312588 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.341023822 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823719085 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.341839011 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.863939859 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960786129 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369071812 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.5560835 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272922495 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.34846841 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.348560371 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.335419616 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.607680211 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.344691965 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.597181916 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348789956 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272404965 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342033625 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879469781 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.212490607 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.344613988 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338077378 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086593939 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34657287 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634543597 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.348105502 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.083940118 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362014343 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.273430012 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273867509 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.032055666 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.349210049 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314007968 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840852925 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.343187281 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382626225 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355584712 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188824441 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.59448084 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.353660564 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.927835493 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583676534 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353477836 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364284305 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.440966796 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340448857 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.320926149 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.221698001 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.574690168 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348432796 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.562197462 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.218065401 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.242927244 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.359107905 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551355862 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.221405211 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.352961652 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593250143 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.072996088 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.356731985 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037949637 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384689747 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35264836 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.353016605 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.341171524 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361575966 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430451084 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35174744 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.351452042 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.351606086 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515413265 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350915858 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344531864 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.356095484 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43563795 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.812182523 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.089180545 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.119805897 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934913244 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09032544 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.94975771 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373142048 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.343413422 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343184924 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276015463 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493513854 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.867761732 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616442011 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472585511 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.358349491 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366060653 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.354517275 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.351336845 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558974054 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61891746 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.323856217 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350514974 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.132466487 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.501924935 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.354384335 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.555651431 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847452146 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923771614 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465005576 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.356103586 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.806646907 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619145157 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.435500056 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344481414 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.935141709 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.347876395 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.665295691 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.367427902 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348843788 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493286633 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.353870893 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999041883 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.375462054 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.500767031 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.117949968 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.361673534 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.600799823 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.808299014 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.358060415 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939496994 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.072147569 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608580312 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414065211 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.355657157 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.455199953 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493156578 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.348230128 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.246009682 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346476113 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188555737 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.055847089 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.35547354 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940044565 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627160413 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.343438921 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.35275741 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37278522 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.355870091 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.56889451 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04900541 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572351154 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.356657722 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.356217196 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.916076983 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942150003 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386420698 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281618345 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.34978679 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596171147 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.603346195 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369879905 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.799663512 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.058611745 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899710158 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.319741803 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371386282 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352172205 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.057380926 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942860242 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.121871581 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854451003 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.008908427 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348217641 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626759773 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.353459512 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.358596598 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627585456 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.351434069 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.348745135 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.363954772 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.942124221 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12623115 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.373950026 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.457754125 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.28562736 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.575213066 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405460371 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286007961 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349146921 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.531018847 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.349424069 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478344946 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361005626 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.352315474 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360987179 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.087155982 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.621902379 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.356067328 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.331958994 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.33345758 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.360995216 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446281783 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623087748 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354875674 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.025753093 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.707245644 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.604810435 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.350832385 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.334197211 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.35405712 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350131477 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.068870518 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.360103847 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367777368 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921700623 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.351719854 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.382756621 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35478979 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.567200451 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562506148 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.356518279 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363599487 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352838015 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370524672 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.252514555 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.118452359 seconds)
  done (took 1642.969312338 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.357215368 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.376999618 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.369243711 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.4052287 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.386374476 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.418219414 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.423450306 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.40607859 seconds)
  done (took 52.414484504 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.365552684 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.507137959 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.382331547 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.351649944 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.361729736 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.351776049 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.820301495 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.375921259 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.362444505 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.362831942 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.356176696 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.362746505 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.00723534 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.362622462 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.36281439 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.335505457 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.363318499 seconds)
  done (took 65.664575642 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.355968111 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.907825098 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.455144253 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.356261947 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.373412894 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.385214561 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.094706569 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.425889497 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.353192904 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.70672534 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.028581378 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.400835639 seconds)
  done (took 85.117300096 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.370675487 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.370215616 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.370896807 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.371365068 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.371175407 seconds)
  done (took 8.127696531 seconds)
done (took 2070.234844872 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.360500681 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.055766727 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.963874611 seconds)
  done (took 5.292957247 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.498888457 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.548153881 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.667852436 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.673859642 seconds)
  done (took 7.660258264 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.630356652 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.737637223 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.541851302 seconds)
  done (took 6.181880846 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.631524979 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.366830878 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.352871438 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.353307367 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.353600328 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.357745861 seconds)
  done (took 20.337491181 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.356814218 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.358365724 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.356005172 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.358972869 seconds)
  done (took 6.703422025 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.332815327 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.041971547 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.333329925 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.350031637 seconds)
  done (took 18.330512867 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.103984732 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.115870266 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.100970286 seconds)
  done (took 7.593947267 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.382405266 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.377881045 seconds)
  done (took 4.03292903 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.637143372 seconds)
  done (took 2.910344575 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.370421979 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.410952354 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.401204662 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.320943113 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.566620603 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.638481789 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.964440896 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.55318086 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.292858898 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.534279895 seconds)
  done (took 30.326906468 seconds)
done (took 126.352551419 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.124493108 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.737299641 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.562064576 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.098290361 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.580366836 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.568227671 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.560208951 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.069143558 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.610259258 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.599715354 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.142218162 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.585542051 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.70652468 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.737389461 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.717014137 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.359085048 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.585461708 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.169638366 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.782737416 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.016723397 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.545300548 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.735432302 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.971446774 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.754004158 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.589183242 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.516089841 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.319094401 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.363273292 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.954509076 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.335142874 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.515322074 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.194099934 seconds)
  done (took 190.380245298 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.355361667 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.36181733 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.35628917 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.371757161 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.360010596 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.355427735 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.384551492 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.356319182 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.374082658 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.359517574 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.356435744 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.355895497 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.373705904 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.355120547 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.356837696 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.366540509 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.357326175 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.35633956 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.3555673 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.380292779 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.358774018 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.373761131 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.357219602 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.357752512 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.367752171 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.357151812 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.362096668 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.357423266 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.356735432 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.357054923 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.375801472 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.357239004 seconds)
  done (took 204.864684616 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.365885997 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.357915222 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.357443386 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.35731824 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.3622078 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.359643232 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.358571066 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.357491557 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.374031189 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.357894661 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.358526641 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.358115908 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.370742131 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.35886429 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.357385048 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.376327002 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.375883961 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.377278978 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.369105924 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.359309525 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.377115495 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.358224903 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.374733609 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.358938794 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.373209219 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.360529086 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.37575541 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.357979948 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.362796514 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.371472136 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.359691637 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.382151691 seconds)
  done (took 204.960283802 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.561360721 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.366066453 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.367091715 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.322898646 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.366289729 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.366691672 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.364347188 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.556426925 seconds)
  done (took 14.549950634 seconds)
done (took 616.025717977 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.639865727 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.358181211 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.562359807 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.385849093 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.129212363 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.404421878 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.38583421 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.552689484 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.298527052 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.561425092 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.629813029 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.401876729 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.775407219 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.386819485 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.637948882 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.484544903 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.238349397 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.365136296 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.701698951 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.905550072 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.643558789 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.859446545 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.573557047 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.293904765 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.783264436 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.841773616 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.077068076 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.234205508 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.404708663 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.702845617 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.943687509 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.310423751 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.447173526 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.446534562 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.50294601 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.484560009 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.303260408 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.445107618 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.584120767 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.629701338 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.908625467 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.112192073 seconds)
  done (took 92.618510733 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.352118788 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.352191926 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.351063276 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.352228372 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.352509086 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.351653958 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.351739227 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.350901628 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.35118857 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.352122147 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.351939299 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.353240216 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.352351562 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.352979293 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.351990679 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.353064368 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.352881741 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.354658459 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.352378928 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.352254112 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.352813121 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.352008647 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.353833773 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.352669117 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.354011063 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.353661619 seconds)
  done (took 36.446959318 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.371109524 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.613600414 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.776141787 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.377827436 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.370651964 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.375387264 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.448063868 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.372493162 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.374256992 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.373624568 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.520866377 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.37486199 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.40331131 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.801640913 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.37409626 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.371476686 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.372394205 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.372791656 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.621907811 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.38109275 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.466750865 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.374556074 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.44831805 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.381962005 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.391803657 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.372144862 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.377113109 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.938313918 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.392602459 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.522224774 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.166092478 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.449600367 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.912866433 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.804087529 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.195872582 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.378824003 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.372477487 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.525978844 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.374677939 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.372427411 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.448384354 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.374509095 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.786039727 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.044094058 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.392679543 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.373400729 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.957198675 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.544461763 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.614230106 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.381382731 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.810493097 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.377164807 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.376171667 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.374896757 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.614583144 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.380581816 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.372731457 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.974123722 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.398045659 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.451325013 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.375920066 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.374002902 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.634343558 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.37560436 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.621480892 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.376773544 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.381352558 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.394860829 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.790179708 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.377745608 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.06126221 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.393985376 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.37461143 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.524239773 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.619212549 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.991920097 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.397077358 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.639676773 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.928051255 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.46692464 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.379535043 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.930127137 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.472348247 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.380743882 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.377733275 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.37763562 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.37575959 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.425464706 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.450183986 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.995712306 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.075750117 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.006175423 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.472697898 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.389379684 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.376771643 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.974868352 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.396853507 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.377534538 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.78494367 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.060557156 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.396397835 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.383968433 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.063006269 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.39738512 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.453972839 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.383447606 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.796489686 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.378491116 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.426871082 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.377888549 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.383252097 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.400036237 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.452938172 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.382120466 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.377558444 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.035781761 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.552554412 seconds)
  done (took 181.421966172 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.388185274 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.371876803 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.387869844 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.371216911 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.372249781 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.379162033 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.371614157 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.372716029 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.377882291 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.372956472 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.371545525 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.373759807 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.372658778 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.377172212 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.383588846 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.378637016 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.026641658 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.373697558 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.372369238 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.389558155 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.168909496 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.374041335 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.374547844 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.391547538 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.372944805 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.376056747 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.378388512 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.376114108 seconds)
  done (took 153.288897998 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.38122504 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.93001839 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.399077748 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.5088271 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.40101048 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.377693533 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.507906383 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.435320943 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.398166969 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.377331967 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.376716538 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.674034441 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.383006788 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.884345188 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.569768249 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.52931903 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.885191848 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.399252769 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.378284885 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.378104683 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.510818621 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.384553813 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.675321081 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.932926126 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.399729954 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.93285131 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.366624446 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.381611364 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.379877445 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.934940231 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.396791021 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.677972781 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.456365995 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.439821255 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.952322894 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.903559243 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.904321547 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.527776728 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.382233185 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.379822101 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.380147074 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.365507969 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.936182292 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.4007349 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.383049826 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.92692716 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.402216021 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.383232336 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.387766901 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.380901582 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.440608465 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.457423055 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.700916789 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.948754637 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.478723395 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.394008988 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.510775583 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.758100603 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.385230667 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.887017589 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.366103181 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.942085153 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.401613532 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.365994948 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.382547511 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.386397056 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.530481073 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.512927896 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.888891089 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.401450221 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.887200008 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.547804352 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.382087709 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.382654055 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.384674988 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.94194635 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.90665948 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.547684099 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.515194326 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.576015124 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.368438548 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.383614155 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.368014877 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.459387086 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.384318298 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.944167808 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.906128311 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.401508123 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.38594194 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.385292271 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.385424807 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.558246787 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.960334764 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.479100405 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.881488904 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.700182652 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.684237615 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.387324128 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.445880825 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.402562675 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.686222994 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.387552278 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.442246304 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.823832906 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.689556148 seconds)
  done (took 164.449486804 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.62511367 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.54392012 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.47560712 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.530345097 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.985207984 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.947790072 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.599268889 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.524666502 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.493451765 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.63849708 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.510692264 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.475592079 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.597591016 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.4616082 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.106659807 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.471989107 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.492141164 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.531438889 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.541685072 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.384558914 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.046177123 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.678148822 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.568453075 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.184716802 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.47552311 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.154343669 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.940073198 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.908955047 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.561912624 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.661637878 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.904771319 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.495511494 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.335275343 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.068360874 seconds)
  done (took 66.221079589 seconds)
done (took 695.723365159 seconds)
SAVING RESULT...
DONE!
