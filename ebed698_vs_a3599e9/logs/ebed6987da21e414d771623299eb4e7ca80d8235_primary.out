cset: moving following pidspec: 11154
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.245450602 seconds)
loading group "string"... done (took 0.557698793 seconds)
loading group "linalg"... done (took 7.614284417 seconds)
loading group "parallel"... done (took 0.174124477 seconds)
loading group "find"... done (took 1.1852372 seconds)
loading group "tuple"... done (took 1.866687632 seconds)
loading group "dates"... done (took 1.26775325 seconds)
loading group "micro"... done (took 0.235940407 seconds)
loading group "io"... done (took 0.765845219 seconds)
loading group "scalar"... done (took 41.349362967 seconds)
loading group "sparse"... done (took 12.971497305 seconds)
loading group "broadcast"... done (took 1.148004288 seconds)
loading group "union"... done (took 13.491808182 seconds)
loading group "simd"... done (took 4.77993891 seconds)
loading group "random"... done (took 9.649219525 seconds)
loading group "problem"... done (took 2.166092345 seconds)
loading group "array"... done (took 22.582071894 seconds)
loading group "misc"... done (took 2.113226626 seconds)
loading group "sort"... done (took 3.454672407 seconds)
loading group "collection"... done (took 19.376716197 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.580689414 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14243455 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149423952 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146124943 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188671376 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156071948 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157475196 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09809713 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.988440351 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.178340692 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152236604 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.517696923 seconds)
done (took 5.240065593 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.218096732 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094406132 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103426524 seconds)
  done (took 0.925525975 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.07703821 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143851822 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094468076 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077167063 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094594629 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077574677 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093893322 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079237469 seconds)
  done (took 1.389517207 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087470166 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096952701 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081473125 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096647711 seconds)
  done (took 1.091398135 seconds)
done (took 4.441610223 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.735709008 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.271941665 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204053676 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46205075 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193344154 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215053899 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671237335 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.349790597 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.256142241 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098996824 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142102467 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.385351529 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137065871 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.67824656 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089702044 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124384002 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.175630152 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.456190559 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082205335 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109731947 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116547351 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140784689 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129631334 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092460887 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.182231869 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081067182 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192672461 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107463978 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080437442 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288854374 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201990148 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688138225 seconds)
  done (took 10.907834322 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110388935 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132620056 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097546624 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137704739 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134003049 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099098915 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084878109 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096210211 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120310564 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174987707 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11423343 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136139858 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094952429 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081626874 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115317547 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245283549 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122507834 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.106387928 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101885792 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103410591 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120422816 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113254453 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107660676 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093135507 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166442655 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221631198 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113254015 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126241863 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097372801 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11204422 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142675806 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144353984 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094997043 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080225516 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173727731 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12486976 seconds)
  done (took 5.18581301 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.078349456 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.18853943 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120513828 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170168961 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.128172588 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079677458 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142360005 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095417401 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113591646 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253611556 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.18429052 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163718716 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143571632 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116103123 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080041313 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098031194 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096097584 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.638021743 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.160654972 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115862294 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114453284 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102292842 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097984471 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.351424994 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101816838 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094968102 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081064938 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081301026 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16016928 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081022989 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.136717051 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120980344 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100738894 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131873952 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198379039 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127638983 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116872815 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096334359 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077139263 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.191771342 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087222504 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096362764 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10340165 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094389169 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133764857 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117192941 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098114828 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096164534 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.205468173 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095617219 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097863175 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.908249963 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180580817 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.10482154 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096794337 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.32304101 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102347386 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096782738 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077703448 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.257869512 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.184600956 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.121361642 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080582745 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09767131 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078406461 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.099206338 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.386884765 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097638323 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.728463456 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084418455 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10889996 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084131166 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097271276 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103238899 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08668324 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115868145 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07832858 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099191353 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079093195 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096843599 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081395182 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108870666 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103224864 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080566387 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165866901 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.0813077 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117149931 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126759707 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085486951 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096529389 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130018082 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082732628 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097125222 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132449967 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08056229 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094452777 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107964368 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082359325 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142737438 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096426007 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.117353248 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094780325 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126259675 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100843499 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113916578 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114777782 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099510368 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085597138 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097633918 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077851894 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165911057 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082092489 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098750349 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081581908 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11224248 seconds)
  done (took 22.480467371 seconds)
done (took 40.38045627 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.317819423 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10358755 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104391418 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102717557 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100231081 seconds)
  done (took 1.535265164 seconds)
done (took 2.315903798 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.289643719 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171554824 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09482177 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168302626 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093096723 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173593718 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159067355 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110450709 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.200452866 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095314271 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163040286 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094505939 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076932682 seconds)
  done (took 2.698225389 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095128791 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116267084 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084154585 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111941098 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076453882 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112848301 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092317556 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117856717 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111886147 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087863392 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094806588 seconds)
  done (took 1.877919216 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093980087 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113744693 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084113431 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111384304 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076668844 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111218462 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093391347 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.1168153 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110516974 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086880569 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095513251 seconds)
  done (took 1.870283693 seconds)
done (took 7.216883671 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090631653 seconds)
  done (took 0.864323998 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.930024164 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.964302943 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113168333 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149046363 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.298551374 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.194361108 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.478394033 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.1255451 seconds)
  done (took 11.232466452 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.116161264 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.103354928 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.113652242 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082254894 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.102795953 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086461737 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104574643 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099765911 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085042604 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102204231 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082179697 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102609465 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102260281 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085259653 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100316409 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085916511 seconds)
  done (took 2.390493174 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117820325 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117023522 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10774341 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108933135 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086036387 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.108019692 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106462071 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088042862 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103349385 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103187558 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089711483 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107840854 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103857168 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079501527 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107343617 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107874066 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085252897 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106929957 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107627968 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089680743 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10767973 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095534631 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087250676 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106152919 seconds)
  done (took 3.31421881 seconds)
done (took 18.579583541 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161411545 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108498561 seconds)
  done (took 1.050051669 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095939946 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112832181 seconds)
  done (took 0.991976563 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098662982 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096550459 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123246195 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110041935 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080413376 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09690513 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121746193 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079866684 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097568325 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079806606 seconds)
  done (took 1.771098228 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083018683 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109775616 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100781601 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095503898 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104971917 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094844835 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088040848 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100231375 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109332796 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076680301 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10321198 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114373169 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084971812 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117766373 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.1052081 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081927138 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103192327 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098661173 seconds)
  done (took 2.559624642 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080580734 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096848743 seconds)
  done (took 0.960963109 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081342579 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093587725 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080986063 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097981395 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093847672 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076871726 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094979372 seconds)
  done (took 1.403115834 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.491822488 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134610359 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.254985212 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085851891 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122315569 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.303299914 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.09906078 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083984073 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10447562 seconds)
  done (took 2.521150195 seconds)
done (took 12.041794851 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09373403 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117555758 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111440455 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.467783018 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10714782 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.09935898 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147299972 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.253768136 seconds)
done (took 2.189006109 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.144940695 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326197299 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117039207 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068306838 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.0997048 seconds)
  done (took 1.405774495 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08044089 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099227077 seconds)
  done (took 0.968932484 seconds)
done (took 3.318078566 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080738913 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.129879912 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07848263 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.0974398 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079549943 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.098576894 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076656851 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.099340193 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078767336 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097771993 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095391034 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.081206955 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096113929 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078735203 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094134535 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080953932 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.094765408 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078402621 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094557104 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079156822 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097847993 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079611178 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096934909 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08114315 seconds)
  done (took 2.971958611 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100947114 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100107782 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102275433 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086991403 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102210679 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086397814 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104726567 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097797928 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086060652 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101064411 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100357303 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084704052 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099735966 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085177445 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100446965 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101220611 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086067921 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098809511 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082582192 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10159683 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103408178 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080973288 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102106079 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102546655 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086358642 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102049309 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082230999 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098855085 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101912466 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084823456 seconds)
  done (took 3.649809175 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086440212 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093981705 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079794702 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10379371 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079717628 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099074012 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079061074 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096630123 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07876546 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096001407 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079649104 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095842455 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07804379 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098195069 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07759485 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100739008 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108320727 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078928808 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095395585 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078284195 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099178595 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078789481 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095604445 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077465453 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095637986 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078074502 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095867472 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078541835 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096107001 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077472871 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098430975 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080436612 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096499085 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083866182 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099711683 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077173317 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098787649 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077465498 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096746181 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093902478 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079507009 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094110393 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079027845 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101200637 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07799717 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09611345 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078208024 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096408826 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078670174 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099202374 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077422683 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096042953 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079752997 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096963458 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081130787 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096213451 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095766691 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078072945 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096179767 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079303867 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094170831 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07882701 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097851992 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079807613 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111380931 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084845543 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094879726 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078904374 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097767773 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079602825 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09824598 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10798843 seconds)
  done (took 7.220554785 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083674821 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105834645 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079153232 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098667156 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075335512 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098224177 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099192913 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079165183 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097033405 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084716201 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096362256 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079040695 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099213222 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106634994 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079235209 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098045576 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085001092 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094011571 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078639012 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101167362 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078071489 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101044943 seconds)
  done (took 2.799894981 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211536837 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10637709 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141555072 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107757339 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08290869 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107242183 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102898623 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088096531 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103905675 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083334144 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103530674 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104405464 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08483989 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103836937 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103153683 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087282383 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105161161 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08619784 seconds)
  done (took 2.720160178 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094559108 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098769088 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101681749 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099798681 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09897707 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083809066 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105623341 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107333584 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083095274 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100133366 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092760199 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104012327 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101679081 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083404013 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102778021 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081491786 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102943671 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081783884 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109764095 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104237998 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103454243 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091557688 seconds)
  done (took 2.941751747 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097461538 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101171971 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118689702 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086131801 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095799809 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080482811 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105990628 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080443024 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108701347 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099892127 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08149627 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09780071 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088080037 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099767761 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104060095 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082071131 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10185628 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08183481 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103668536 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078752357 seconds)
  done (took 2.702207225 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102472748 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101494141 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.205041041 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093034578 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101555632 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08155261 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110595065 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101034682 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082271837 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127529346 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100629711 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08220308 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110721736 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106546264 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099484835 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09345091 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109574223 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109605835 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081720171 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101646263 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125241763 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082251569 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111822716 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100693785 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083049082 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102589821 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100454711 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088610573 seconds)
  done (took 3.707225419 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082167826 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098282996 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079244758 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097282729 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07933375 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097168437 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080717772 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098263632 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083529338 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09800999 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083083918 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101088032 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086134916 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101686182 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084100662 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100952849 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082680582 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098446809 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080892199 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09885592 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082162479 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101681789 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083054253 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098523027 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079866698 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101117922 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079424415 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099343417 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081925708 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099004641 seconds)
  done (took 3.529450822 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092116995 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106699438 seconds)
  done (took 1.010378607 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080366429 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11454551 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079407395 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104933507 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086134579 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101884204 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110008146 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0873163 seconds)
  done (took 1.575808241 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096398268 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110926519 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.0828123 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114352254 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110643901 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095719994 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166369165 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100817652 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086646773 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098692962 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111537578 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081321787 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106125806 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082357546 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105730342 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089349884 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099078246 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087816737 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103865572 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097187971 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083564488 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110035376 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08360333 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098057339 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082106413 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110705552 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108678063 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082701532 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102923686 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108335161 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088366832 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09333874 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081408139 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.1000452 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079251947 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109663941 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111143752 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086128921 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108166457 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083456867 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111644963 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093752746 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087381145 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105589934 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092127723 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100340977 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08126101 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095634633 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096029116 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084607328 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094320779 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08127609 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093468901 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089615589 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104814816 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11109283 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080891265 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100497433 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085197202 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102446448 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087554202 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102738911 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082753362 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101045303 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105304485 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08701334 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108160746 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07774614 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096312806 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079512719 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109597477 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121933814 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091499083 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101293103 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083304569 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099056738 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102532595 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08383862 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107875074 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.088624459 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.10155439 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106450716 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089944071 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100410394 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083928725 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108827629 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097272626 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085478723 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097702922 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096407499 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.10007484 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080186062 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098980083 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107307095 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085437641 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098515553 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079846565 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106403288 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075580971 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101688976 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08357938 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101111119 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108106405 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087633033 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106837333 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106669423 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089562535 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100999422 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085229727 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096199467 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082909958 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102955034 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.087967687 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094779423 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101868765 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08498313 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101277179 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090335944 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098606734 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081595499 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107730239 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106362209 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08087016 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096401162 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08458495 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100502111 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084734689 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107903945 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097637422 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078449282 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095101078 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085906501 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099945838 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086793238 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106642766 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103339088 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077371932 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097931242 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087060551 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.108636792 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.081517881 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.101586586 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104500042 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083481463 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099998523 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088588509 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102916777 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081434109 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.106994357 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083208331 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097776859 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103587727 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084435108 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099350502 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085683781 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105262157 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.0836291 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102566963 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098523657 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088055761 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102225631 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.079859788 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100713085 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079778517 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109337842 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101739991 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078925069 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096439623 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090908349 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098748424 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080934385 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101417258 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084137673 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102916519 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098546618 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082546259 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.10135126 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094662851 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105781385 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101311819 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.08822646 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110415827 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082023175 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103200182 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.080770104 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101567936 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101085185 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089672681 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10535403 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086476484 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103489459 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.077903837 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107629607 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107673185 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081509537 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098822203 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.0809858 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105295055 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106715454 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08623215 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101108243 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080340767 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10156929 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085257583 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104550924 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098849229 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081403709 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104781127 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.080715588 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108275587 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099948804 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092725114 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104092589 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078249658 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104829978 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079532045 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107602243 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.07664816 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.09877348 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.0978575 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084674676 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098804838 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08507587 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095035762 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089354511 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109085282 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.081714946 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100430792 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099647769 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091448177 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102756376 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085903976 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104720202 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.08696523 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115433036 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099880264 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086191624 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110618262 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.082059081 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095948345 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105789129 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.082337334 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.09977631 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082058895 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098737288 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085008829 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109670745 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104302534 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077123704 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102665726 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08130539 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099641951 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078559804 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.108134116 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.085330109 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103463505 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108711168 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084672907 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102539319 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086285899 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.10194567 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.082923603 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103461121 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104304395 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083637112 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10450062 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081958324 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102863479 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.082377088 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.102334837 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08311466 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102275113 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.099347916 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088330728 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099333909 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083142663 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103840956 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.083451769 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103370356 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.081887042 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101203105 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103657257 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084613484 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101621467 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085273251 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096697664 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08963913 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102569891 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089347495 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101948023 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098092709 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089212859 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.102583307 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.088314022 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102544111 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100268176 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085247214 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100403268 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085526521 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111095541 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.079681273 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111261068 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106228002 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083515666 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103702554 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082695824 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102257115 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081448675 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104144207 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.082489041 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103276522 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.09928077 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089051173 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104251284 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082753232 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103360167 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.083579442 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.102741781 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083459014 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097075768 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082123728 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101910739 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100471698 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090255637 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10309748 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085415219 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100865328 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082880299 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101455696 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078443503 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.11017905 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111868002 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.082969096 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11009425 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.099969914 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084077574 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111335557 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076304662 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102016064 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079099352 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099595036 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10865601 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.08475725 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.11058092 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.081861048 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100458224 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.078805473 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104730312 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081258626 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098073402 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.079635899 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107072287 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.102999655 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082774201 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101652577 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086315565 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10342787 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097013721 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101787884 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.101789915 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085247561 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098034679 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082383454 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100191987 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086320892 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102744854 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.07994861 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099407183 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081963494 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.104766643 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082117406 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101828316 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10319814 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090684172 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10205123 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085500076 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105955488 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077827924 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105325398 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100610162 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083208177 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10005171 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087505208 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105282365 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083516741 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110296159 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100478386 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084712006 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102059138 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081370006 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101316716 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.081466323 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103919646 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081843374 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104329821 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109105664 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.082009303 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104278598 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082670068 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102028809 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.087353842 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104068585 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.084153634 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110562932 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104542147 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08497255 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.10924953 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.085119946 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107219739 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102827055 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084446353 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10804947 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081419183 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11041703 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082336131 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102817303 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10197181 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081118741 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101641322 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084054978 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100807446 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.087223052 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104045577 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081966536 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.10225331 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080391141 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.104961628 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106277468 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091399256 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105277501 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085604943 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097485782 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079018274 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104738664 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.09870473 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086448292 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10507704 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089387557 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104871481 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082981301 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102446984 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108573498 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089764067 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106740814 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081304608 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.107503677 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083125785 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105329977 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.101682002 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083900291 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103357516 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088796122 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104603536 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082463596 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111988788 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.104535352 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085995911 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102936051 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084078791 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102163782 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078470038 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105141438 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084129558 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108634647 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103114979 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083578931 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110249604 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082579603 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102523266 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087098041 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104038949 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108128358 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078916236 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10222963 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084001775 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105703876 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078940593 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10410619 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08079849 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10798189 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082388229 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098889042 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112325854 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.090966195 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105062095 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08215748 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103034251 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077991238 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099239281 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082290072 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105635229 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103682057 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092155531 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.104014298 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082072273 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09894648 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083551696 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.1118305 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104650569 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082142997 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09769712 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082466546 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105003386 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.0904683 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101881211 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082469716 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107762784 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103941751 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082808378 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106052051 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079926531 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106506619 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093571734 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104714525 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101480089 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088805723 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110869032 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084614724 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099237992 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083627443 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.105837982 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10040627 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084974161 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103719353 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097068933 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107221487 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082195899 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.103493415 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104221542 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083829534 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109503727 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084231862 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105435208 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.087962296 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.106581097 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112328474 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085707976 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108352443 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.084182062 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107195954 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100741963 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085583868 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101863458 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083588617 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105871033 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085130765 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108945478 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.108794775 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083354932 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112560052 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091719392 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110499846 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080580443 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.106499459 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085120525 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103193 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107769605 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085018213 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105371838 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085232301 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104204074 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.08463793 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111808047 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08493899 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107789839 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101999044 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079070348 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105615324 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08707594 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102949642 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.080067386 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105032581 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.08452452 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.111315333 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107265077 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084563288 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103898498 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085091173 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103063075 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078969571 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111049914 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082387837 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.108016681 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.08205856 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105883586 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102764478 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087349408 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109389164 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084999516 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108393431 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114205044 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086026187 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100450984 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.080816716 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.110510748 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.081761727 seconds)
  done (took 57.740440363 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146860338 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081117129 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099665101 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079905633 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114700984 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098833708 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080211041 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101813581 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080707057 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102853071 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078838702 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100802396 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108507341 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12492462 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093485619 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104839879 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077200643 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101073584 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09847467 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081066014 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109340452 seconds)
  done (took 2.931546564 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105572564 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118886751 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11535124 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.1188152 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089151613 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11546581 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115251242 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114482439 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099619662 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111189946 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118685057 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114528148 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090842353 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111567601 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110278734 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09395151 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119378761 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110399677 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115775202 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094877268 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113064418 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114251883 seconds)
  done (took 3.272332977 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08387408 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101425491 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085197282 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098027316 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083920855 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097771582 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087289692 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102546414 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086044827 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102660628 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081747943 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102809139 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.102484688 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079463756 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102381555 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081272334 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151165819 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10753191 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082076678 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107223574 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077666857 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106095228 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097649102 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079614975 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100860902 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088139986 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106246984 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080678572 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102716131 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081624034 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104824772 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081039484 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105873649 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10236173 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083062192 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10091086 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083899484 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102484751 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07928409 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100597275 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083260482 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098514879 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083909937 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106177828 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080167285 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.10298942 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.0838064 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104067726 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096589348 seconds)
  done (took 5.496856309 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.10551764 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162300345 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085848252 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143707357 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120986011 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112336288 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087731041 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142100218 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105507999 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082603651 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124464283 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119848363 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103846452 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088999655 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108295084 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10329268 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086878247 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103301034 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089308813 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104488887 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109315353 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090240773 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122037468 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119204338 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108801027 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.0831171 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10479108 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108103132 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098702672 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109137512 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107968718 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090438979 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120875624 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108517147 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083863406 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108194265 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122461624 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103288719 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088469757 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101960164 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087160502 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10894158 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109705768 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101928002 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105276967 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109273358 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085344304 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101490913 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118054569 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087334493 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113993123 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.11994529 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.08780454 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105025846 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108915849 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119888262 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085773722 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101540184 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086958982 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118991763 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101651502 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088579301 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119626823 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106089315 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111982723 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099800144 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108799808 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108348492 seconds)
  done (took 8.182532612 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09454247 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111417841 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120797932 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119985122 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09162801 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111899678 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111289657 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089952202 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112438346 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117516037 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110433485 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134659324 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086463879 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115183685 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110733069 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091217711 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11158372 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111493998 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091441103 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112023986 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113076003 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120388274 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091943263 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120043346 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141444649 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106201221 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089480806 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112777898 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121290382 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111041961 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123549764 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092241398 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113097448 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120753581 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12353226 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090384232 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104083604 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11155729 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092477502 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112161834 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105030621 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101966309 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11215199 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107194721 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090721682 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11272642 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121016079 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124027657 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114642881 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096395447 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112512182 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12183777 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111576257 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091587484 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121173175 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146235994 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121026855 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121285747 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110707677 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099457082 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12124178 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129562348 seconds)
  done (took 7.73592255 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107706764 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116152574 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118468793 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099853034 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082856851 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108588579 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081552194 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104012131 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113364894 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093667039 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117714443 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109234013 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09024851 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118110288 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109523051 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112133633 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088907403 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110103446 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115302979 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108086502 seconds)
  done (took 2.981965351 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093183607 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.1252167 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084425969 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112562146 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10864161 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091412705 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108784277 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106797119 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086068376 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108399475 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096455709 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116859334 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105397545 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090891446 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116970852 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112070851 seconds)
  done (took 2.541705052 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096668181 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118018481 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120933441 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083684762 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104367127 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080456856 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106769966 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100435907 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081217687 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121149339 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083600388 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.1120375 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104814081 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083529214 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102560865 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087752311 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102840592 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082161146 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106143889 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119476595 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.094984137 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105039352 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10438404 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088372567 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105110521 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.08979593 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106730561 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102500086 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083226565 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106156231 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085000637 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112854913 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10105652 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084373779 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102716944 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082028541 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105075744 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084914683 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110397892 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10456972 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084192706 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104972102 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085148031 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107572112 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081213311 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108510049 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100521037 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090984569 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10338257 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085223677 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10806221 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086567873 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107767977 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116426697 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088108872 seconds)
  done (took 6.297898442 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100312272 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112299559 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080345008 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106074025 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08712543 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108401956 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10791771 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087917168 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107776023 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082622093 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109019498 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089108962 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10781401 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10918386 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087164024 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10928454 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079902897 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10959143 seconds)
  done (took 2.668915909 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091429776 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105311608 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091896251 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106987994 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083669092 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108597226 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079430899 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105093482 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102818335 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086336292 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104071012 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086985144 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103644804 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087320266 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107556043 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083794529 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108343956 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102846346 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086139687 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100708313 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088589841 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104075189 seconds)
  done (took 3.010664232 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118353741 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.128061865 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092487338 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.234719189 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103604362 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131855022 seconds)
  done (took 1.694787882 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110706162 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121603833 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105078576 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10676906 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115930126 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086011113 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108146812 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108510358 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117313039 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101265009 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108557291 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118971743 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116141663 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097420883 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115731961 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114871699 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107158285 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088226047 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105867133 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127912816 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087240398 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119417433 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107917806 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086889782 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109104069 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117424195 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118186859 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121790742 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088830204 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117396489 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114756629 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087546552 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118900117 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123021544 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108270957 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098269165 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110812568 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12872672 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113181015 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097666868 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109936321 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115606862 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096512891 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115033089 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119630226 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107967692 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093796074 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111152554 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108639932 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135760078 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094373492 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11812496 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115987046 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119033025 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097613052 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.155248191 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102641357 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117487824 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115691917 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12274646 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115450912 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094761886 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11744462 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123134885 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114887244 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11641775 seconds)
  done (took 8.205211283 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102589957 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127504974 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108657155 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122303007 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098065839 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110093833 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108005435 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089682508 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113385712 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110646241 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159225635 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093077864 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123217162 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12291462 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090823598 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113998588 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113450768 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12369151 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090693108 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141495432 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113921804 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121869204 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119859643 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098177691 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126008815 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116229633 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107609257 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088716604 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110763694 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107850771 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094626026 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108691577 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11665888 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087146961 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122891005 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114107182 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091237817 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121268557 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114227921 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120244668 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101485584 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134308269 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11404073 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113324338 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105673988 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114346886 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113000269 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090279155 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114222351 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112508741 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106690265 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12638455 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123483462 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117791274 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107319933 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088524382 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108935982 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108226837 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087555017 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115383402 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117335652 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087982848 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15530783 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089062225 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108922837 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117931522 seconds)
  done (took 8.240539569 seconds)
done (took 156.620756582 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.218574992 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.227856492 seconds)
  done (took 1.338528633 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099189365 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137505443 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098855312 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.173156083 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105482514 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118689371 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13711979 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096968483 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.109360129 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08408846 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108737901 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086837628 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.176200226 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085457328 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107900375 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107587506 seconds)
  done (took 2.731521404 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198482905 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.25586811 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102871463 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.109861553 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089699629 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.113510398 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.106017521 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.09325936 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.111846338 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.08783164 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.115684417 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090734731 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.111861254 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.090530263 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.115649578 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.092510338 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.111926855 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.092177751 seconds)
  done (took 2.988564582 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11288326 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149200171 seconds)
  done (took 1.16781831 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118545653 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179923305 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317109637 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154930914 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106391356 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129505923 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156511691 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130657214 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196132891 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123091717 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122102187 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097158621 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141316466 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115275906 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.09474472 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120361364 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.14147663 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092791409 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.117747165 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114823723 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116019498 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106029182 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.113639231 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093385284 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179744799 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120283367 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084549123 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107507388 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114975212 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093840444 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113424976 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124740777 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.09846018 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176671536 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101870325 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176450509 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097691355 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113333481 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113286933 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091161198 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118975497 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116918104 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104420705 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120448879 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084939791 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121612492 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106106462 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086029361 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117507643 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096949312 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116995642 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112969201 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155172172 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11753409 seconds)
  done (took 7.583448241 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794144471 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.162189325 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095007214 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.905465713 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140723946 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105805113 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.782860536 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.139343461 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231882889 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.753026198 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133304837 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121156409 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226486751 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.239506737 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.003641245 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.318793916 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.671551235 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10269053 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150475585 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15177792 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117202681 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1359023 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.128064252 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.452224448 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095264163 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111629045 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095089949 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120649634 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157885974 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124534817 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113239756 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176763736 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247586396 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205879831 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115554668 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089371067 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11167889 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168379036 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264341979 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213874206 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179012733 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087647823 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110451576 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099942532 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132103362 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107704863 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163238603 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.171825723 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.192318472 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091851273 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120122223 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118130845 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099462726 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.186228396 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098095082 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.320012942 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.315972533 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111014929 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097398956 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126466973 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262776598 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121317497 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.220896883 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116769606 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210791212 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109721329 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.769269264 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18761894 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09016963 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117275126 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.096872835 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116133218 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121014782 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170251844 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.3932423 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122276387 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093111115 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110922026 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221128451 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125462244 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109791371 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160599127 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094017246 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119938341 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123991451 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121865095 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169517899 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.234370364 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123154877 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118708946 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09318042 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124756436 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11466916 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210399253 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217649301 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161421328 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207827562 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12195906 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163236423 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188396198 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098193739 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.192925586 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099083399 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124927463 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122043963 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215004995 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144462635 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101738117 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114995335 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117749872 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147758299 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104977438 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118807881 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168832472 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.50219616 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168785293 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108041994 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105848756 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119457727 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160517911 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117530386 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257281574 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100209315 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.188493208 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098671377 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108757162 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119046823 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164891826 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121394837 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099110436 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123099974 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117746418 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234983214 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217312726 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100128109 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243172981 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184720784 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118297746 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173052706 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120415719 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166799831 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118840505 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09921332 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117287166 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793276543 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101029221 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120290779 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114532104 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.1971993 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089336757 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123574051 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123561425 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086729918 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81429776 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126696206 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099270871 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.123359645 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118021372 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119022855 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097265058 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115067082 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163396653 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229220495 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120355708 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096973444 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125796051 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160436381 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116486203 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124677383 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123602138 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102745574 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121171198 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113650254 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102915557 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19045903 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161851807 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220153353 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.569509245 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.1122198 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.122817533 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227078435 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090885597 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286422036 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11908186 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.203258694 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186023542 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098578615 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309104091 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186492225 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.194873926 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105592607 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193953672 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088376042 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117891047 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165560958 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111438671 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095115446 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182527742 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103781393 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123468913 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.957633867 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089253622 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247719304 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087440438 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190443816 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096730142 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120434261 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296331649 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089501635 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128479514 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164659757 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115974007 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12478785 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.704007751 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126249573 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121311104 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096537455 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222376896 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162340386 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119923936 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120227711 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11960323 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164049577 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208129855 seconds)
  done (took 44.126244909 seconds)
done (took 60.834151839 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273531699 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214021638 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.263933564 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169134913 seconds)
  done (took 1.923418219 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170592153 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148308231 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120268503 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107797354 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150119429 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083540998 seconds)
  done (took 1.706791107 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.355971127 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273798164 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238878658 seconds)
  done (took 1.796897478 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.285178302 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.245435257 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.470935793 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.322148642 seconds)
  done (took 2.37035149 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.20779034 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133458656 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.11057145 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104111068 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196641207 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.24607932 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141879792 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200537511 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.09861977 seconds)
  done (took 2.412234654 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196838376 seconds)
done (took 11.336517788 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.161961578 seconds)
    (2/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.287110717 seconds)
    (3/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.251280084 seconds)
    (4/286) benchmarking ("sort", Float32, false)...
    done (took 0.149419151 seconds)
    (5/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.147652023 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.215539979 seconds)
    (7/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.251757104 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.096503435 seconds)
    (9/286) benchmarking ("sort", Float64, true)...
    done (took 0.234169259 seconds)
    (10/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.125112875 seconds)
    (11/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.213937816 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.116803234 seconds)
    (13/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.227393913 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124994214 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.107591531 seconds)
    (16/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.126967906 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.142111632 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115207721 seconds)
    (19/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094615024 seconds)
    (20/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.231405072 seconds)
    (21/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.179398641 seconds)
    (22/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.159616335 seconds)
    (23/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.172154619 seconds)
    (24/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.125719006 seconds)
    (25/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.182409312 seconds)
    (26/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089484168 seconds)
    (27/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.18460869 seconds)
    (28/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.113888204 seconds)
    (29/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087097666 seconds)
    (30/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.114553972 seconds)
    (31/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.156426485 seconds)
    (32/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.202810099 seconds)
    (33/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.203803115 seconds)
    (34/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.137127886 seconds)
    (35/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.099694191 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.140693839 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 0.220365 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.115640091 seconds)
    (39/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.100406712 seconds)
    (40/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.16940619 seconds)
    (41/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.075424142 seconds)
    (42/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.128243718 seconds)
    (43/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.120340472 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094720545 seconds)
    (45/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126035164 seconds)
    (46/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.198623064 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.096431112 seconds)
    (48/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.12200357 seconds)
    (49/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.179939435 seconds)
    (50/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.124901436 seconds)
    (51/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.219468326 seconds)
    (52/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.198980988 seconds)
    (53/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.181259321 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.089124502 seconds)
    (55/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.06812012 seconds)
    (56/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108514592 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.106786087 seconds)
    (58/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113926962 seconds)
    (59/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.088772756 seconds)
    (60/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.184799431 seconds)
    (61/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.113103975 seconds)
    (62/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067710477 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.142185752 seconds)
    (64/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.163153555 seconds)
    (65/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.160387469 seconds)
    (66/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.173297862 seconds)
    (67/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.118833977 seconds)
    (68/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.149737958 seconds)
    (69/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111299383 seconds)
    (70/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.13906517 seconds)
    (71/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.189665347 seconds)
    (72/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067309119 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.112643472 seconds)
    (74/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101858982 seconds)
    (75/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.10790869 seconds)
    (76/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.077309823 seconds)
    (77/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.202487201 seconds)
    (78/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068042847 seconds)
    (79/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.079628151 seconds)
    (80/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.129493068 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 0.090350904 seconds)
    (82/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.124967471 seconds)
    (83/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.120744736 seconds)
    (84/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.184013081 seconds)
    (85/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097067486 seconds)
    (86/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.156852985 seconds)
    (87/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.21264098 seconds)
    (88/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.180109683 seconds)
    (89/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181950654 seconds)
    (90/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.119822572 seconds)
    (91/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.125635232 seconds)
    (92/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.108992407 seconds)
    (93/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.097553309 seconds)
    (94/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.091278755 seconds)
    (95/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.092531679 seconds)
    (96/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.182928664 seconds)
    (97/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.115119399 seconds)
    (98/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.09879854 seconds)
    (99/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.185266549 seconds)
    (100/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.114477441 seconds)
    (101/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.140489718 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.12250423 seconds)
    (103/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.140278756 seconds)
    (104/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086036987 seconds)
    (105/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.184754021 seconds)
    (106/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.140573334 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.085091869 seconds)
    (108/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.119269504 seconds)
    (109/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094919308 seconds)
    (110/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.089511454 seconds)
    (111/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.138865435 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109424251 seconds)
    (113/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.188014435 seconds)
    (114/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.115600559 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109372576 seconds)
    (116/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093257076 seconds)
    (117/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.089644651 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 0.180963168 seconds)
    (119/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066875371 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117453562 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093706826 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115264784 seconds)
    (123/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.097614668 seconds)
    (124/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117539838 seconds)
    (125/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066480428 seconds)
    (126/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.09330158 seconds)
    (127/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.158786863 seconds)
    (128/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.120487946 seconds)
    (129/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.082471864 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.114227853 seconds)
    (131/286) benchmarking ("sort", BigInt, false)...
    done (took 0.219101608 seconds)
    (132/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087276052 seconds)
    (133/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.100565361 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093963584 seconds)
    (135/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.100438941 seconds)
    (136/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.094613706 seconds)
    (137/286) benchmarking ("sort", Int8, true)...
    done (took 0.219905527 seconds)
    (138/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.199302151 seconds)
    (139/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.116051915 seconds)
    (140/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.09272585 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109972618 seconds)
    (142/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093459486 seconds)
    (143/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.179758191 seconds)
    (144/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066507484 seconds)
    (145/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.154802255 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094523195 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.141917342 seconds)
    (148/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.145758702 seconds)
    (149/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.15031164 seconds)
    (150/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116538126 seconds)
    (151/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.077462212 seconds)
    (152/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.161007096 seconds)
    (153/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.190931509 seconds)
    (154/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.149097253 seconds)
    (155/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.094818514 seconds)
    (156/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.122969343 seconds)
    (157/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.097128109 seconds)
    (158/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102259844 seconds)
    (159/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.147620719 seconds)
    (160/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.072104867 seconds)
    (161/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.155360975 seconds)
    (162/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.124270138 seconds)
    (163/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.103508161 seconds)
    (164/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.123696838 seconds)
    (165/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.073774887 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.122784373 seconds)
    (167/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.083066041 seconds)
    (168/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098817206 seconds)
    (169/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.123450398 seconds)
    (170/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.071418017 seconds)
    (171/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.094398396 seconds)
    (172/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094259924 seconds)
    (173/286) benchmarking ("sort", Bool, true)...
    done (took 0.227000392 seconds)
    (174/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.1456152 seconds)
    (175/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.184721495 seconds)
    (176/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.090755703 seconds)
    (177/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.096047007 seconds)
    (178/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.072241757 seconds)
    (179/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.071209061 seconds)
    (180/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.115193856 seconds)
    (181/286) benchmarking ("sort", Float64, false)...
    done (took 0.172781926 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087491623 seconds)
    (183/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.118330409 seconds)
    (184/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086598396 seconds)
    (185/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121911898 seconds)
    (186/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094655127 seconds)
    (187/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112107011 seconds)
    (188/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.28183853 seconds)
    (189/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.065420997 seconds)
    (190/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125599105 seconds)
    (191/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065213181 seconds)
    (192/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.113478964 seconds)
    (193/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.090855263 seconds)
    (194/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112300689 seconds)
    (195/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066233068 seconds)
    (196/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.110927247 seconds)
    (197/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.066907421 seconds)
    (198/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.088822915 seconds)
    (199/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.089974112 seconds)
    (200/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114237533 seconds)
    (201/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085720682 seconds)
    (202/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.172685887 seconds)
    (203/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.125444879 seconds)
    (204/286) benchmarking ("sort", BigInt, true)...
    done (took 0.22840301 seconds)
    (205/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.118233256 seconds)
    (206/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09199539 seconds)
    (207/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.173298517 seconds)
    (208/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.13651142 seconds)
    (209/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.06702431 seconds)
    (210/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.112531709 seconds)
    (211/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113336135 seconds)
    (212/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.089864345 seconds)
    (213/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.077220625 seconds)
    (214/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.069320454 seconds)
    (215/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.095725128 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086413485 seconds)
    (217/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116256196 seconds)
    (218/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068114193 seconds)
    (219/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068978941 seconds)
    (220/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.178658056 seconds)
    (221/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.127216498 seconds)
    (222/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085708917 seconds)
    (223/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.170539986 seconds)
    (224/286) benchmarking ("sort", Float32, true)...
    done (took 0.228149894 seconds)
    (225/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.109382886 seconds)
    (226/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.130160586 seconds)
    (227/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.065998997 seconds)
    (228/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.109965603 seconds)
    (229/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.090611608 seconds)
    (230/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.090873097 seconds)
    (231/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.091899676 seconds)
    (232/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135902571 seconds)
    (233/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068023788 seconds)
    (234/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.091682286 seconds)
    (235/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.066923384 seconds)
    (236/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.160546703 seconds)
    (237/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.09444555 seconds)
    (238/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091324226 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.094611766 seconds)
    (240/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091748503 seconds)
    (241/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067677795 seconds)
    (242/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.109374566 seconds)
    (243/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066865807 seconds)
    (244/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.087127382 seconds)
    (245/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.113133323 seconds)
    (246/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.170902883 seconds)
    (247/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.086964645 seconds)
    (248/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.089804095 seconds)
    (249/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086884561 seconds)
    (250/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118390523 seconds)
    (251/286) benchmarking ("sort", Int8, false)...
    done (took 0.187900084 seconds)
    (252/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084724188 seconds)
    (253/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.112577579 seconds)
    (254/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065996233 seconds)
    (255/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.107840415 seconds)
    (256/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.088580912 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.108732501 seconds)
    (258/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095696309 seconds)
    (259/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.110276452 seconds)
    (260/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.06721339 seconds)
    (261/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.134153566 seconds)
    (262/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067738551 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.107724087 seconds)
    (264/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.088452659 seconds)
    (265/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114245621 seconds)
    (266/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.06652479 seconds)
    (267/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.090464807 seconds)
    (268/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112184949 seconds)
    (269/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.122403864 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091925832 seconds)
    (271/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.15509526 seconds)
    (272/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066968853 seconds)
    (273/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.069958807 seconds)
    (274/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.111286761 seconds)
    (275/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.138731084 seconds)
    (276/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067270455 seconds)
    (277/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.065942434 seconds)
    (278/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.116315788 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.11369215 seconds)
    (280/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067314872 seconds)
    (281/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08608694 seconds)
    (282/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.12403749 seconds)
    (283/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066440297 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10928462 seconds)
    (285/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067524348 seconds)
    (286/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108722069 seconds)
  done (took 36.232090753 seconds)
done (took 37.163800101 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099133776 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147125056 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094564993 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135211576 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123240066 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090023226 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118438204 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097263454 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123467838 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124174857 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097501804 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092678058 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096933924 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120416286 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097884039 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138296027 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.126974271 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094313572 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121731709 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084459032 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118652697 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085244653 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111497418 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068865749 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121254841 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092947819 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116503771 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118314607 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086507365 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109975258 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090729596 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117440667 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08682634 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123905452 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092294536 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120043344 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.0960301 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120843569 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.109629886 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088069607 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116087611 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087206473 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116524849 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094495634 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115270221 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093166038 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118098311 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098952898 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139938348 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119469988 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095333024 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119311339 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.094555717 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.11765678 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.088443369 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118955973 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.089993672 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138241932 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118125402 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091927043 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117697526 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093888607 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115699471 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094718176 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118303008 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119953794 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097791781 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11504296 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096830007 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115630314 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086144212 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.11852327 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089325752 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110401188 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095655068 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12144145 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084661993 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116328457 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.115339894 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093199676 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109459906 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089864262 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111731698 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093061308 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112784022 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07048047 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.111747225 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093686585 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108179227 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096641022 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116350257 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093656695 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11249747 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098288219 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.10995764 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.090603157 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112229188 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.085665263 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113513747 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.08987984 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110226555 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088439594 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119899033 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087046786 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116080335 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121948211 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087766596 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.115144404 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086308867 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109149889 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100432541 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120631021 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086027944 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115399863 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085006027 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118581133 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085386335 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110097744 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085309391 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.1104537 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092047736 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111704119 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087841552 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118142791 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12400673 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.08760885 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113526425 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090108198 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110177846 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092571413 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110338761 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086969737 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111829215 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077577471 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111867385 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088187537 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118078608 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090212123 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118606634 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088585233 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119521122 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.0910997 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116615573 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091620343 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110211466 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073359476 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115795429 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089593538 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.111811076 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086558462 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112337746 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086057249 seconds)
done (took 16.883089589 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088395888 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.181968909 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150343375 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141641385 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106224826 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111730937 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120464607 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117941293 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11396472 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140600365 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109265199 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13160614 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.145459967 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087038209 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111787977 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091070643 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112565933 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101932924 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14541436 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131348081 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.161255968 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.084926042 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146174824 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135269927 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118622446 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114614273 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110779365 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090807496 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115190935 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102406425 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132379219 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.08947481 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112577126 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132446505 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104250918 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119133786 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08707671 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118671126 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08650157 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.110701876 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139454488 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131139427 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093099271 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11595499 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09113929 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113304197 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088926179 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119485185 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096715123 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115884616 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.123783732 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155146818 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.089953612 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120780905 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.0854481 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122316768 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119316456 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090190207 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110696448 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090535126 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.109582607 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090698328 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.125336805 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.139875649 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091425937 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120202615 seconds)
  done (took 8.583576547 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.1044093 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138138027 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104269766 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130897611 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110229554 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088650691 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111170924 seconds)
  done (took 1.777062278 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088785485 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132482609 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110370529 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134978613 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.129695151 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109845077 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122223688 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087543344 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131058245 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088368342 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13405813 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150005337 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089434008 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120092044 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136001163 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089006353 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136159833 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088202563 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11562836 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111348783 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116026968 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133219248 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090241571 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112225267 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102152343 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113267509 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160706286 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093757667 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113364753 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091664361 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110695854 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.16380195 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101192538 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125533087 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087242043 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128337815 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.142216695 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087175951 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.128711569 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092799138 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126377931 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.087873481 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114615963 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085846297 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117790144 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.12194992 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090289574 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.112427109 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092194007 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132178834 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089353278 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126062951 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087662959 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11784419 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089541088 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118948152 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12085757 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090427503 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13221284 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090366621 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130623492 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.103071009 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127554039 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129472009 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09155966 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126272503 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102185341 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116199922 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089721586 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116947539 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.128332646 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087678266 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114395823 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100020614 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114038772 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112315364 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137077156 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088922301 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124124333 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.112870704 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089912385 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.112205497 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112422344 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117100623 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088140703 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119769288 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092080225 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111230025 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08743011 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116827156 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.085956595 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115055482 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.090687307 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116047147 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116204214 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.1057046 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115602938 seconds)
  done (took 11.783859848 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091958499 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.112771617 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091531755 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113519357 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091215193 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.113410258 seconds)
  done (took 1.615261742 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115803848 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116831295 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103213144 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120307987 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154188358 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103274329 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129546569 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122663282 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106347691 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126214265 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127787323 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.103453285 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134482256 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.1193348 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103986949 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119757114 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104014153 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125466152 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125560045 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095989804 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136487273 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119102795 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096138271 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130320397 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116174697 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097426453 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124365274 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102423465 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127195608 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121587493 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096447692 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117199078 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095559831 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123498227 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.12805437 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096038422 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119337414 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.116731334 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100798456 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116352095 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103175397 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121214604 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125663595 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094618603 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12308417 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120144844 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094578761 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123395866 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102807908 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119866927 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118108916 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095417044 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.11736474 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094198034 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120984195 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120992253 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094669072 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128664594 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095333156 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122062531 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11693733 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092987741 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122201586 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.115095009 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106388265 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118921943 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09408951 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120740979 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120010996 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096156405 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.117366707 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092683989 seconds)
  done (took 9.193323586 seconds)
done (took 33.942247306 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.681862152 seconds)
  done (took 1.681393372 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.82019148 seconds)
  done (took 1.820557329 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.262928047 seconds)
  done (took 17.292049213 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.492543742 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.578482491 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.991030817 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.177892116 seconds)
  done (took 3.240624204 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.946470467 seconds)
  done (took 1.966750842 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.282644917 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229362846 seconds)
  done (took 1.516833535 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.771774558 seconds)
  done (took 1.787617698 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.377094185 seconds)
  done (took 2.382062175 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324892731 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182356363 seconds)
  done (took 1.523019185 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.547176509 seconds)
  done (took 1.560722974 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.780894503 seconds)
  done (took 7.798718048 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268215229 seconds)
  done (took 1.294638273 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300994653 seconds)
  done (took 1.317435595 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.375482144 seconds)
  done (took 4.394117381 seconds)
done (took 50.589100558 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099075841 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125099782 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102078269 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123086531 seconds)
  done (took 1.462290581 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10115583 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119747964 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100505379 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120011974 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123740565 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096596842 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122176568 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099934598 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11988008 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095373769 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120494522 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117474119 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099698203 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121299898 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093737541 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122915557 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098166696 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121666812 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.121762548 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096674326 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11793988 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097340792 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123885228 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093411446 seconds)
  done (took 3.666886437 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101633664 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.116473202 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096226082 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.116752182 seconds)
  done (took 1.457660037 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100504604 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129892766 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105808574 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125278573 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129461192 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106227375 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116711996 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.09211749 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.118611819 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100087665 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.114583842 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.11341936 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130763469 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.12404909 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10112353 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113486564 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091053455 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131629636 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123160589 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101486767 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.116862116 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100123807 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.113248788 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108086924 seconds)
  done (took 3.729689278 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169426998 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127120717 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.136115465 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094612571 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.15882973 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.138894765 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088447038 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139277964 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087108166 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129968312 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.115699199 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133456431 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127906548 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08743922 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113145466 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087198988 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128257744 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.126940167 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092068108 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126501942 seconds)
  done (took 3.437755987 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098015934 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116319153 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088718225 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.114444087 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099499803 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120132918 seconds)
  done (took 1.665130505 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091903211 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.111972171 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090434012 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113078142 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094751243 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.11441276 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08911231 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113026345 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089363545 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.112975548 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089023867 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114053236 seconds)
  done (took 2.252165795 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.497579479 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119829201 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118602009 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089234637 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.119850401 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089212164 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128816123 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091266273 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139608673 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087421724 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114817822 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089955139 seconds)
  done (took 2.71274906 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233621746 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124538463 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284935828 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364209954 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156317258 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176917898 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281740074 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164505974 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.222570951 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16551454 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224396502 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197206204 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150810188 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188943696 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136333555 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.142639012 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203757254 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243581444 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152383382 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206672918 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225249674 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16610365 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17834397 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150216861 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137590608 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170191717 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118086619 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103820365 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231244666 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174846777 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213541334 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160487777 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146525262 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209122323 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251371145 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21947586 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27991587 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135397294 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.146786077 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167212109 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263633453 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137344516 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227902229 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151950911 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106306864 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21423331 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166684906 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175432154 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150958783 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137876873 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193128891 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23687247 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.190981857 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13647532 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299664162 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147653626 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.199500259 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19260762 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249943397 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199091829 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211401895 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095278962 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213131178 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193653925 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184427937 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.173305548 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.205257614 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145747529 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198966882 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188285257 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163325638 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218663384 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184564038 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139599454 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168954346 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171062933 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194763358 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230756476 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20986513 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095047267 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166380231 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149112253 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131996796 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19350137 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098696469 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23652531 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142662587 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.161212535 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21474964 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158370248 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159504304 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200419179 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227883809 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147824576 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083260676 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152614378 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155059191 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216157113 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112776474 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157842335 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160878724 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130431183 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181437147 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123899836 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181550777 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.116981518 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172007881 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179596846 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126245339 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158876674 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150697606 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.124010822 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199439408 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196624998 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14232846 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13125417 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208218975 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176071327 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149665525 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176636145 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223930078 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116623542 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14817785 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225230827 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237878907 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112992632 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225710222 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155275108 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107897463 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131488458 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178742255 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15316202 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160031282 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13355551 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181758546 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23097962 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098610121 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138147723 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190818116 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132649176 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131544084 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162663927 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14592135 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.135463509 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.123783958 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.150978857 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204798263 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177685358 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154046431 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163735328 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150970467 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251397028 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140229644 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.122540695 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147345988 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119019572 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190985882 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222664337 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105431695 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229003659 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170212871 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200595606 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194915084 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108554568 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176487783 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12884584 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.091745114 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219290765 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167351989 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15981261 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194323657 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223404019 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182586754 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.205711806 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173633455 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172711619 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163316658 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156306155 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.109973986 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159944057 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195371743 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097208967 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144124422 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.131943097 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145343319 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115213802 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132598958 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219599942 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169703973 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187816483 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159694698 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149357013 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179299901 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127722398 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172418962 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177077181 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147326406 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.222218546 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193904144 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18578875 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14304382 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224863174 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094210066 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123283752 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.114958564 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194761022 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10700968 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134812344 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163103143 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181160077 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178414919 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201056112 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209702266 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196911422 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189862788 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094579965 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166632255 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183540314 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200154815 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.165926615 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14046824 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.148662055 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178240596 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156725896 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254110077 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167197957 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17494405 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233515742 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.147630175 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104922819 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151055869 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217918156 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152413497 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177233159 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120351292 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140434596 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160957487 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132489167 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158485315 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181175987 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160248385 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215804687 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149349538 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185100306 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125990283 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163359806 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15763168 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165184729 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08126698 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173384793 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229768824 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14736468 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168098048 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189257981 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130916635 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306129109 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244755145 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194175914 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136761072 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154981428 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158940516 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163280892 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170420038 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178435606 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158784611 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185846977 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158646153 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135928259 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138239328 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12072806 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149521899 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.129948413 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146964824 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176146424 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138079686 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185402278 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16144686 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158403026 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170829397 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149056965 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.142842616 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149611257 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214650587 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183146058 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237629822 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151907481 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179158674 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23315581 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098595997 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130694038 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.130971713 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176742486 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10872255 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218273277 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.186804073 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230651622 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184375772 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191984317 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13895216 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118341821 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15536806 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172965101 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207373288 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152471921 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158830477 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229500545 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118469903 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131904148 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177119486 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312588406 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120431858 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222740549 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079361722 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277740451 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127605282 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129297235 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136594696 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233069904 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135634608 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.188109255 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172520692 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169164308 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163609279 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149253304 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18994961 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241888914 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200130783 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205091034 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.107279882 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15496484 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174862079 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216614421 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156004423 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112413569 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230429768 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194780434 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.220275495 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115211767 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168143938 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167984745 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156641985 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213072608 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106905733 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233563685 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132392146 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193431153 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152566022 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143233425 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175111924 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.213524471 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114287589 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214520461 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184174417 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134400021 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106962225 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194125922 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180299588 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156723456 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098367298 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205613225 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.096555655 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219008932 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228832738 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135004058 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153921657 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147411319 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133840255 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154735091 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15679278 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112068391 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163677957 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204184454 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134356599 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214499137 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203175826 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168611192 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199236588 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118181099 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.690780475 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130133072 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192503208 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159266951 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233698852 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148351084 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172613992 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159029278 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167883672 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193589029 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160503368 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229816496 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21789136 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178911846 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129123109 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158115994 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163435217 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.142049196 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123555629 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167532803 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158517498 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.152543204 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.203601764 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172247631 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106604494 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140048213 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224504791 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13390472 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210050195 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178556662 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136803605 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172651676 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188082176 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133069897 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177963118 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235806414 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139067268 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123750631 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132789451 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155851291 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259862228 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096187039 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231052833 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18302667 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159017701 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168241814 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146242145 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221635888 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156456097 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186015748 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146841464 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158852683 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15539769 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136538311 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102098397 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155314473 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166669713 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148760362 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157824964 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.164339919 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196202744 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121821596 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117479969 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311482511 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194673914 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244154341 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107520958 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135972439 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161043516 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151161307 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175928112 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177920075 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135215545 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134795375 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.133810603 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.13020406 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137267894 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129494798 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221987574 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165508464 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207755632 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135492206 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27762051 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112130306 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155445033 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115787234 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104303964 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149484277 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145681519 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158136829 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216638712 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235651699 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147868518 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13372628 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148666247 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097398623 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134968201 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16549796 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16445372 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178035485 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144639831 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079504423 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156832228 seconds)
  done (took 82.779664749 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161993597 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132959677 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146462677 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203389126 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176967204 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268641316 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.21047997 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252603478 seconds)
  done (took 2.669174157 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093156356 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146266472 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.155433707 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131955212 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091769119 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.117618426 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.346267811 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131107472 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117015829 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121225791 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.171665952 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093397746 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.547359447 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090410988 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118574318 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107498221 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092381178 seconds)
  done (took 3.784956858 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.474616929 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.686612076 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.511825149 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097635089 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.996527872 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112538348 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.444070632 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194441856 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.116113272 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.465744042 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.773511723 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.157918056 seconds)
  done (took 18.150866874 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115150114 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.133898737 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122437108 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.150865585 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.13812305 seconds)
  done (took 1.782585074 seconds)
done (took 130.566440605 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104588522 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401081742 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07103916 seconds)
  done (took 1.624985797 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107437888 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.134855242 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108142904 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134752991 seconds)
  done (took 1.615582651 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098958711 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124397769 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110951193 seconds)
  done (took 1.458457186 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.321091329 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.187387832 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.168599909 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.1067918 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126458105 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103452145 seconds)
  done (took 1.464245941 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098170409 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125254391 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097612087 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.127803648 seconds)
  done (took 1.577190808 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094579672 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070542572 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.098528905 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074604168 seconds)
  done (took 1.461905335 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114703027 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.129400721 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102206605 seconds)
  done (took 1.476035008 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.128754857 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.136856596 seconds)
  done (took 1.395439411 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105964164 seconds)
  done (took 1.231794455 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117924888 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.167037156 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.178670319 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.159179427 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.200763507 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.158029899 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141314158 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.13744749 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.126502454 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.139220706 seconds)
  done (took 2.657278696 seconds)
done (took 17.864871871 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102929217 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.510947371 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384121612 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143576838 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.719708348 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379682881 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.020707899 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144091807 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.162262107 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092631168 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136932319 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.670063642 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.012373141 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.45956426 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.971116748 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.366701254 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.67469417 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11965066 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116110526 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094154395 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.004538814 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092738178 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118776141 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091432471 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701199377 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422630443 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095554837 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.365642251 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091739728 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124041405 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38175066 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.120843127 seconds)
  done (took 17.012452031 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095708522 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171055219 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097429634 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135224296 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121407313 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094392952 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121956525 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093399991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176571203 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12043347 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109466655 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120142674 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.122418666 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094286368 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139050514 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092134477 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123394034 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091547303 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119543975 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118552684 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112516543 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117425153 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094195862 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119109557 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092834057 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132878132 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093518252 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118937324 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117884842 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099235574 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124960636 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093884324 seconds)
  done (took 4.805534285 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140233769 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17929555 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126313202 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125208774 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166192103 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.121339736 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195961287 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116776682 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180070776 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120242066 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1368401 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09247902 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153489759 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093709495 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14088185 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117811441 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096198885 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119398526 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091727755 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120905455 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136184082 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092806645 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119911036 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092293707 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.120487418 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106863882 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121185215 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.117085483 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093954291 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12406426 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098522083 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121641621 seconds)
  done (took 5.118276663 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098421996 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.1225152 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108708093 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.136096152 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09439392 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123701864 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096880092 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12295628 seconds)
  done (took 2.037722516 seconds)
done (took 30.099700175 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111029835 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124121515 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107256898 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.131960513 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101544279 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130050561 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091635982 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132644515 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13030419 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103282489 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135175184 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091847738 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.119821463 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091478867 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13246827 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096481891 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130835759 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101271582 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13091644 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.129147918 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095401521 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.130780252 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102868578 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131651893 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103570967 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131615454 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.134963295 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099206289 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.120356555 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093931751 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.121684337 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103382881 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.121669437 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104472197 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124961638 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096304852 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121373187 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093726391 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131597938 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.129128811 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100787028 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131213199 seconds)
  done (took 5.974655922 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108227985 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.136151905 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104862102 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080431262 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.114799197 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07989353 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.135395709 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07909659 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.107166373 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107671605 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073551236 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.10466988 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077897237 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.098405078 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077416503 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07552582 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.105420491 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075606715 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075772769 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.103072594 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079716964 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071763164 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.105674999 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077755895 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073797805 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.107245794 seconds)
  done (took 3.576310292 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100712422 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131346732 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113012553 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181373406 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.158602987 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.09981533 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.129582359 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.110183025 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.135827018 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117295988 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096509743 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147576394 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109134735 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127364437 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091227731 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135751624 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132607939 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094214526 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124835861 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112865229 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136150363 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102745227 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139199233 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.129603326 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092535275 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119687816 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.0979906 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135088753 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099593924 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132766457 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097075605 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.12408332 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120186117 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10565839 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124685407 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094121124 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139628154 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101692282 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129503212 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091871092 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.128192221 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.118544189 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114623202 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160709098 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091519189 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127180496 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095152363 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131023972 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119348014 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110795021 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13046972 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.09205177 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.123510644 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091237357 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.119416303 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105627367 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.122216497 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.092955172 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129930534 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123903029 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105324558 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122347141 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108844058 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.118913924 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100437982 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119171936 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093145382 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118847675 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.112895629 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121917514 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158193457 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09309805 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121064936 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10114898 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12899617 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12564739 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.09392462 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134609337 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102335144 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123000946 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102486 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.123995052 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094643496 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140468942 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094817854 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.121602631 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.09262887 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127407184 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122194323 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094461297 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13325112 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.090995628 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.122956239 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111774017 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120096364 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.09230111 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126594483 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124096214 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092634296 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133973709 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097270339 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121150083 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101626452 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.120695224 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.094237829 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.130407736 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123723598 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091891525 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124955383 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099688665 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.120236709 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093823937 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.123410378 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093939415 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131150477 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099292344 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12587536 seconds)
  done (took 14.698669914 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228281116 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.210897685 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.231481929 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.262667444 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.133637554 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.143169414 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209693894 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124146582 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.121702881 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158337763 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172146284 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.177919256 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.166333492 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.17540435 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169386937 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092545456 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.140982491 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.160632726 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.211907807 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.255258724 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.14226131 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.128513274 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159450852 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.129481423 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.133821769 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.130023249 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110151538 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133806761 seconds)
  done (took 5.770525196 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109176927 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152080841 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097315238 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.141936138 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146741652 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09233804 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.125133543 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.09306967 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.133131643 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133017813 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092701598 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127187949 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099196164 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.129099966 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.119040421 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104810038 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.129269132 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09437375 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124308636 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.095613411 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13135651 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100682361 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124542616 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091029484 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.130343412 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118158512 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086338293 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141095493 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092437583 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.143434274 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.118765723 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102262081 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13384754 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092734487 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120386295 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096231343 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.123755891 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094977912 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.122718373 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090731756 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120614332 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077573771 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.11918373 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106667434 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.127381801 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079397135 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127928877 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.096938109 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126088622 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.117387637 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097198823 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121535246 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096918817 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128115922 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096063026 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.120689955 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09734923 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.112893242 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100197522 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.122670092 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084841589 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.11765371 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099342998 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.115748245 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100735968 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126263125 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091432341 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12308306 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09808797 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126647087 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094733783 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127355729 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090441105 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12380326 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095220267 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.125977049 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.094369311 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.120200708 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.091890333 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.122330002 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074465565 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.121895855 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073407386 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.123848491 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091451815 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.11902892 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094885141 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127257784 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13450138 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095470216 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.129639526 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093289289 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119855413 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096795048 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.110268686 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096592862 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137407965 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138134181 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093963693 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.118303207 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10802678 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.123218421 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092273749 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.102634338 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102769992 seconds)
  done (took 12.838925075 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127763234 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.150959117 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094291341 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.139458737 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154388698 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.154216349 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101866878 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128889095 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09536239 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.139987803 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.09373101 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.129318292 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093178819 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135871744 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.153476354 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103889181 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122807995 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106734039 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125965672 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.166844972 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111952383 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141714326 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110067768 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.122494413 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.09776856 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.138433513 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160140689 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106716555 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.134994499 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.138299365 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108221638 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.157927989 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112380748 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.127073391 seconds)
  done (took 5.455558237 seconds)
done (took 49.451192534 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.26113364 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.452002622 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.23385233 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.128203673 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.252044858 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.253103805 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.242967978 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.229479361 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.654868761 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.23499906 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.471039316 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.80600558 seconds)
done (took 60.377853602 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.317054466 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.369078344 seconds)
    (2/2) benchmarking "String"...
    done (took 1.493810549 seconds)
  done (took 4.021565709 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.574660805 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.110457249 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.491496966 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.228405744 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.230139827 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.534626045 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.829457779 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.472878285 seconds)
  done (took 28.055936244 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.239309707 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.311616123 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.257158641 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.238078999 seconds)
  done (took 6.205561962 seconds)
done (took 48.332573327 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.219552954 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.256054347 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.246090321 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.211134989 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.334642653 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.250370211 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.527780851 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.268278327 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.251048662 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.226681578 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.231278822 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.2498037 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.240012122 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.528775229 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.235228952 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.230054072 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.235880399 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.757682459 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.600151004 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.240164205 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.277779175 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.2864726 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.253734551 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.249614969 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.256514288 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.23378487 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.23535122 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.254769844 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.306502849 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.239463894 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.34179257 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.680082675 seconds)
  done (took 191.11641921 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.231145182 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.156004571 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.291513973 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.279203266 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.554224597 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.436158358 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.358330665 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.633054111 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.252819054 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.245457992 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.428716613 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.231674077 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.48863664 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.207784992 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.263425683 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.335711624 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.450588844 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.480701739 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.283395046 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.387391112 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.259880604 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.36442514 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.292636112 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.381481816 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.250337462 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.237865562 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.261059647 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.256797178 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.423311926 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.365639753 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.273803368 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.302548284 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.789109614 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.092909608 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.240208077 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.260615147 seconds)
  done (took 150.209144471 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.278161355 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.233955244 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.233656106 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.232134495 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.233532803 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.261407757 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.232509736 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.73652931 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.738672702 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.72496299 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.685359771 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.369673032 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.454265014 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.23825445 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325165224 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.247054168 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.235721047 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.248967848 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.278040405 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.233851245 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.235194152 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.736420496 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.251369868 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.219453117 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.403383701 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.251987141 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.263028822 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.620984102 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.235208786 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.26393998 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.553468528 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.281160292 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.235943963 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.543783723 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.858084633 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.349219856 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.237591761 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.263810035 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.236093975 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.507011259 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.235937363 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.235982923 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.238939982 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.23511233 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.833259086 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.239396156 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.740986074 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.236252239 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.111228464 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.234511984 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.236113277 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.310992929 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.751465703 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.246951305 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.226601452 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.229031497 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.227278282 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.225725591 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.253440756 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.299094903 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.31531452 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.23833035 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.220783378 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.223355776 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249114798 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.219276596 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.451991613 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.214837803 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.299479991 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.286613734 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.433206221 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.714586627 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213107113 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301713124 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.327014044 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.209687127 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.20857967 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.208672341 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.209321786 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.316492201 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.20629117 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.579306173 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.371960735 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.225343738 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.347502637 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.30125859 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.204106283 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.529809804 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.205911856 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.201838082 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.883293697 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.29370382 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199784916 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.199693294 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199863602 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.199795024 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.576729604 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.702442511 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.365219067 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.201527388 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.292108791 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.195923977 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.586652165 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.687401771 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.818098046 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.195724567 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298281715 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.356156864 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.207862627 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.190086665 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.324098829 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.19466509 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.248322435 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.190442961 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.587033228 seconds)
  done (took 365.238035898 seconds)
done (took 708.997532372 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.780525484 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.778455314 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.877185318 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.771902892 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.73962502 seconds)
  done (took 10.06751501 seconds)
done (took 11.183256922 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.372064879 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.372199959 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.245720278 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.374396581 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.221033726 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.38698734 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.347914564 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.208118694 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.288001735 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.265161966 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.286554677 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.240906164 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22100943 seconds)
  done (took 17.950422674 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.493905961 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.510533717 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.254277647 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.499649553 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.228660097 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.486554574 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.379953105 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.393989832 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.398750431 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.216950341 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.197837301 seconds)
  done (took 16.179882956 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.520765128 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.506535764 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.253316144 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.50674848 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.22517403 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.498594932 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.386270308 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.395043743 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.402132632 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.219106698 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.196040496 seconds)
  done (took 16.225526224 seconds)
done (took 51.473140147 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.192726507 seconds)
  done (took 2.30752743 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.225532856 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.387603734 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.207821501 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.197066428 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.192741567 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.192986616 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.197523676 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.193241701 seconds)
  done (took 10.91049587 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.189962417 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.190438803 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.190804748 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.189034026 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.188414478 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.190957325 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.191315524 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.188509353 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.191597274 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.191877106 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.188231466 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.191111264 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.191555543 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.189443795 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.188476037 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.190972053 seconds)
  done (took 20.158296326 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.191083339 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.188037042 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.187708825 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.189481727 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.187189892 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.188494156 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.189193255 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.187638223 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.187931415 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.188682408 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.187708192 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.186536621 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.187119389 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.186953755 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.186587333 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.187765035 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.187643207 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.187775259 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.191252485 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.185787965 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.186901654 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.185731876 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.186747136 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.188251532 seconds)
  done (took 29.625484172 seconds)
done (took 64.112741239 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.119310197 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.688194449 seconds)
  done (took 8.920569187 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.189801237 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.188773041 seconds)
  done (took 3.492563625 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.1899529 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.187709112 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.188793657 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.189562995 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.189768906 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.188007864 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.18911183 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.188960087 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.188402727 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.186986936 seconds)
  done (took 13.000357279 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.188648674 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.189624225 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.186900284 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.189110965 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.189253793 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.186807642 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.188678561 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.18909403 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.189121065 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.186721698 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.188220121 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.187157626 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.189912058 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.186412951 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.188587753 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.185653804 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.186533453 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.187305142 seconds)
  done (took 22.497815759 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.18948054 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.18917258 seconds)
  done (took 3.492952769 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.18723651 seconds)
    (2/7) benchmarking "second"...
    done (took 1.185631343 seconds)
    (3/7) benchmarking "month"...
    done (took 1.186723031 seconds)
    (4/7) benchmarking "year"...
    done (took 1.186625676 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.186801013 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.186027319 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.185852415 seconds)
  done (took 9.418110423 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.19041962 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.369013392 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.446392551 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.773970563 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.190030009 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.192021815 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.037183878 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.191760555 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.193921937 seconds)
  done (took 13.69993731 seconds)
done (took 75.633575376 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.15989437 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.196364083 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.253604959 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.193992177 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.200987768 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.523658824 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.19694608 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.311447988 seconds)
done (took 37.146441892 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.198418445 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.170522706 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.843351514 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.163947531 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.15367835 seconds)
  done (took 18.444704788 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.123417092 seconds)
    (2/2) benchmarking "read"...
    done (took 1.521223114 seconds)
  done (took 4.757118063 seconds)
done (took 30.508892115 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.188557837 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.186571331 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.188816152 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.186091562 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.189882695 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.187021709 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.186664788 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.189164833 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.189224414 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.189427234 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.18897809 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.188428454 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.188388159 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.187586339 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.186939681 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.188749854 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.186644786 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.188117724 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.18738802 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.186057406 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.190259997 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.187794304 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.186883736 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.18943093 seconds)
  done (took 29.626165032 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.189842207 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.189431514 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.189590032 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.189852589 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.188013933 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.189320824 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.189525212 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.187779822 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.19072211 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.189700792 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.187946163 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.188087819 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.190427823 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.188171898 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.191174202 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.189124308 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.191249004 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.188569068 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191306873 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.188534594 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.191782621 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.188205466 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.189264054 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.191003968 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.188270778 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.19017252 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.191578981 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.191083968 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.190831697 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.189208265 seconds)
  done (took 36.804189713 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.195990034 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.197782731 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.191692306 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.191438835 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.192047961 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.192508345 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.191831068 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.192122565 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.192309414 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.191702178 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.19126098 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.190987255 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.192311843 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.190744747 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.19270266 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.192918079 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.192974469 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.192483012 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.192073958 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.192539164 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.192309356 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.191844365 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.192716239 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.192504797 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.193239407 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.191827872 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.192835884 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.192055055 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.192776016 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.193685223 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.193129618 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.193356332 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.193666049 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.19293693 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.193697681 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.19373628 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.196761092 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.197817775 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.194910014 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.193244334 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.193208257 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.193922079 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.194415979 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.194467356 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.194387927 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.193940911 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.193586467 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.193137718 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.193709095 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.194137218 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.194375677 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.193023732 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.194437074 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.193681068 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.193237698 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.193522014 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.194575209 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.19394602 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.193396136 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.193576532 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.192672702 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.192599831 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.193361477 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.193458876 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.193128764 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.193284862 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.192139527 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.194030576 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.191031261 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.191239201 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.191766546 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.191950272 seconds)
  done (took 87.024536068 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.191207251 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.189417795 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.189306047 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.189866611 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.187729413 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.189752494 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.188473669 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.189584454 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.188689795 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.190292331 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.18955358 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.188769775 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.187636067 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.191080758 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.189647107 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.187904081 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.189871648 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.188319034 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.189008027 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.190854938 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.18935204 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.188479353 seconds)
  done (took 27.280834913 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.190975329 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.191944379 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.18785887 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.189074404 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.188146724 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.190465088 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.191448735 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.1921978 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190639325 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.18857657 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.188312094 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191073878 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.188146493 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.18851555 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.189453128 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.189011185 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.190815547 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.190306904 seconds)
  done (took 22.532807976 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.189920535 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.188519597 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.191003124 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.190495036 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.189183395 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.192085119 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.188932335 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.192146694 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.191941615 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.189944898 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.191569948 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190908883 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.191750383 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.18960332 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191055839 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.188356379 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.19233651 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189898222 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.192329672 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.190473133 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.189075493 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.192381454 seconds)
  done (took 27.310065295 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.191920502 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.19277551 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.189928839 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.190097874 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.190041396 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.192185099 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.192790817 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.190398805 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.1941858 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.193980372 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.191090972 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.194267635 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.192787953 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.191698689 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.191232482 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.191309256 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.19488919 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.192341366 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.193211499 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.191021002 seconds)
  done (took 24.958929984 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.195607471 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.195274522 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.195130808 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.194671563 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.194865123 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.195208517 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.196433687 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.196237698 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.195482872 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.195778787 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.195903104 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.195650734 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.195601606 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.194965511 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.196768318 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.196248087 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.195938937 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.195559261 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.195758755 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.195566387 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.196868722 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.19627591 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.196165792 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.19616319 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.195573255 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.197318513 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.197000429 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.196327233 seconds)
  done (took 34.603852094 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.197055827 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.195673531 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.193794668 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.194786704 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.193767414 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.193165716 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.19364289 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.194324354 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.195025085 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.193531196 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.196260192 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.196383085 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.196727445 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.197321676 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.197190618 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.196281042 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.196733687 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.194750899 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.194253835 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194564607 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.197976614 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196955784 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.19723254 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.194150819 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194000144 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.196937598 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195178614 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.195912215 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.197865607 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.195338128 seconds)
  done (took 36.987674586 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.217700191 seconds)
    (2/2) benchmarking "in"...
    done (took 1.21572788 seconds)
  done (took 3.554535148 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.194996532 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.197808372 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.199031367 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.195388645 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.195189069 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.198153082 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.197093095 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.195284966 seconds)
  done (took 10.693454258 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.198333728 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.197383072 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.197923956 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.19808338 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.199018891 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.198094796 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.205367816 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.217627545 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.198408112 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.20028554 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.203787506 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.204736598 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.201808015 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.198681855 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.199114483 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.200650464 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.199670112 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.19913334 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.199447343 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.198888001 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.20037441 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.202322526 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.201695859 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.196635733 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.200986657 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.208289351 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.221754062 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.199010149 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.199421795 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.202376046 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.199321579 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.197563657 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.202288204 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.199830951 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.200058782 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.200657296 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.207886351 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2171551 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.206824901 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.218391235 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.20118242 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.198807526 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.201145319 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.20195062 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.201635611 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.201792278 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.201269946 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.198671463 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.200280798 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.20421609 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.205242961 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.199621666 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.198809232 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.203340597 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.2018673 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.206773511 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.219947567 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.20372073 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.208710944 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.210268168 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.230783394 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.223480173 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.202993151 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.201719308 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.210567597 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.22140486 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.20853931 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.218253102 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.201422934 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.202123421 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.208534516 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.231592449 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.225190806 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.202146813 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.201570833 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.202809375 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.203512191 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.20332684 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.209501353 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.222814359 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.203432399 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.202804151 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.212598991 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.220845093 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.202703446 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.203402396 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.203149065 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.204244572 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.204754624 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.21241652 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.222828327 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.204162814 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.202956095 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.204240232 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.205046147 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.204860467 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.203973958 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.204692317 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.201536521 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.203935932 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.204254492 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.206853917 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.210300373 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.204402013 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.204453457 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.21079311 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.22319655 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.20381255 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.209702583 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.204793777 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.204930887 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.205848242 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.208591868 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.201504077 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.207269798 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.210490688 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.203439862 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.205541764 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.208015624 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.206565425 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.212718937 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.226409095 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.205561389 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.206017172 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.208878046 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.2145022 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.206060074 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.207170025 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.205223083 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.203570199 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.202393391 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.206636853 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.205332955 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.205453189 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.206347271 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.206450509 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.203970944 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.206262902 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.206966438 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.207290121 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.206532927 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.206609603 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.206785111 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.207773215 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.207095149 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.207623542 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.211625561 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.224651358 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.207872825 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.207852637 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.203715812 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.207985679 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.207521458 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.206847966 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.207566366 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.206328202 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.20745649 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.2077046 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.208998134 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.207398019 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.207782428 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.207956519 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.211193921 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.20691527 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.209596372 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.206913127 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.205732597 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.208459677 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.208470828 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.207398806 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.2092527 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.208232974 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.212302885 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.21529883 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.209352373 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.208527502 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.210639412 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.208719153 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.210125704 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.208009605 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.21146935 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.214808984 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.209292487 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.2140479 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.226456962 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.208615709 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.210102916 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.209665167 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.207861839 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.210328218 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.213843703 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.216103391 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.220135569 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.232392332 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.209510301 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.212980754 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.21040782 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.214794588 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.213653989 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.210716568 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.209711125 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.209510305 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.21027065 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.210404282 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.212134553 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.210294565 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.208996939 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.210995622 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.210204979 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.211475122 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.210701106 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.210773798 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.210985882 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.207937424 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.210869842 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.211868457 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.210325611 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.207700545 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.211041392 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.209127613 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.210287949 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.210940571 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.216825401 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.209279838 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.210620433 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.212595197 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.210860425 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.20998515 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.210687391 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.212668942 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.210907679 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.217723761 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.229623737 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.212090717 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.218065443 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.229140351 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.211994363 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.214568499 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.211999437 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.20868925 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.214561198 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.219505377 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.212181733 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.214270218 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.212707351 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.213422302 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.213559318 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.218088852 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.228587062 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.214155775 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.213397106 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.214964166 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.21082658 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.213246058 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.213456694 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.21371574 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.214248772 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.212393076 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.214004166 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.213204675 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.213068576 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.213612261 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.213312695 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.215850304 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.220212412 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.217569212 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.21347686 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.215087627 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.214997654 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.21710252 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.214189197 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.214809288 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.213121254 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.22483247 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.236060502 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.219797953 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.233505609 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.214819009 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.220144398 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.234637809 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.216387623 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.214633309 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.21511531 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.214155998 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.214786986 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.212282191 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.214930403 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.21574678 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.216013725 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.215868023 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.218087058 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.215355516 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.214546956 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.215918258 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.216406396 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.215764738 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.214330912 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.215361758 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.216915077 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.216883118 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.21496154 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.215184804 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.222209054 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.233887134 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.216732131 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.215374074 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.215962577 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.215446058 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.21636256 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.215693956 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.220143816 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.222474764 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.219251145 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.22353959 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.218386982 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.225204171 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.21711489 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.219388474 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.22308593 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.213958514 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.215780675 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.216385518 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.219002329 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.223982053 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.235504337 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.218380052 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.221248734 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.217889036 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.218062275 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.217044861 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.217802684 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.218732159 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.217950366 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.225620577 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.236816981 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.220418088 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.219349947 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.214968874 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.217399495 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.218799497 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.217413352 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.221296942 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.218724218 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.219429136 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.217720055 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.218415334 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.218912391 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.21979237 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.218741244 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.216193018 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.219490947 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.225135291 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.238449004 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.223444193 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.219725759 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.223920862 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.236430239 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.226260372 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.238724941 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.21941785 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.218957335 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.219512779 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.220767423 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.219854619 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.220687201 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.219123991 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.220249841 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.223415197 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.221017241 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.220692096 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.219633309 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.21912783 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.220281386 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.228537427 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.240492255 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.22271612 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.223971207 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.217289914 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.221192415 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.224531884 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.220220354 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.219659804 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.224088047 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.229572325 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227335966 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.220751958 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.220988785 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.221716528 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.220125014 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.221131989 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.22157127 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.221740302 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.221682419 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.221135244 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.222403939 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.224199602 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.221425596 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.221410914 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.222049716 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.222558039 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.230250591 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.239535595 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.222124439 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.221780291 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.223627202 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.222602933 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.221741683 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.221797593 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.22215519 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.221287905 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.223213042 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.227672342 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.226915818 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.224292527 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.22163671 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.223104931 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.223580587 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.223598848 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.224530882 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.224039666 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.223629127 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.22307088 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.223398172 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.22426759 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.222489416 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.223512853 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.222509502 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.22384948 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.227641524 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.228926137 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.223554978 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.22136226 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.224178175 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.223874124 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.22245645 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.224208434 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.230122471 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243854423 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.233054466 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.230606474 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.227539144 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.223930517 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.226353834 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.229651169 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.223441016 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.225387921 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.225004012 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.226182531 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.224715618 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.226478587 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.224954304 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.231261923 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.242377481 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.22446041 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23307317 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.243976388 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.225013614 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.226603655 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.228196773 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.224732438 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.222713992 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.224868286 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.225410817 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.230898928 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.24439374 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.224707344 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.226422705 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.224576138 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.226771041 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229612146 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.226529637 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.225203106 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.222639627 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.225760071 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.227577388 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.226306675 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.224292612 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.225563465 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.226056604 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.228000587 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.230734037 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.22405492 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.227722032 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.225468781 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.226186478 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.226599977 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.227370924 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.224152202 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.224595219 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.226983897 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.229027529 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.228266409 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.229311439 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.22615094 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.227796577 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.227747092 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.227410349 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229425082 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.236395188 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.232754155 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.225229983 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.227471399 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.227591939 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.230444256 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.227967327 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.228847284 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.227727043 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.228430716 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.227934469 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.22852199 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.229102235 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.230386604 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.241396069 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.247045476 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.227867611 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.229012153 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.231186023 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.228611126 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.22629255 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.228326781 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.231594134 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.231272002 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.23432291 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.229085138 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.23435934 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246506576 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.229790113 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.232304855 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.231110453 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.236116492 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.231662302 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.229702047 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.229195546 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.233513598 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.24319031 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.229974899 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.237899375 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254540285 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.248385639 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.229732684 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.22954007 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.229487303 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.229141551 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.230920751 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.230508569 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.231015107 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.230097826 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.23030561 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.231550973 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.234663941 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.230707697 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.231316396 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.230176484 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.230004472 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.231894459 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.228032955 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.230796535 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.230710037 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.230010306 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.231396885 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.231128179 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.231931946 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.240233151 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.254857681 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.231060865 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.231377387 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.229548669 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.233754313 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.234177816 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.239664421 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.237781658 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.231948167 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.23218784 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.232727501 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.231505232 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.23041147 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.232297875 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.231922023 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.232408937 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.230605849 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.242392594 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25545144 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.236367203 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.232794236 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233211157 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.232940665 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.234299206 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.233113363 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233371357 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.233732159 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.235737363 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.236538923 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.231885387 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.233719018 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.234985506 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.239148942 seconds)
  done (took 727.248964583 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.231624924 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.230789926 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.230270846 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.230659436 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23229792 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.230484461 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231007671 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.230705248 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.231552855 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.229862769 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.230700121 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231458178 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.232888442 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.231795618 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232047102 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.231288318 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.232233948 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.231989988 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.230681675 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.231192434 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.230928511 seconds)
  done (took 27.011659559 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.234844767 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.232079176 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.232205925 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.235098702 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231925151 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.235069143 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.232024853 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234322518 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.235954388 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232932621 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.235514127 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234653091 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.232036783 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.232253383 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232885893 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23469915 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.236605495 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231914803 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.234990814 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.232718453 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.235506399 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.233817131 seconds)
  done (took 28.299805412 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.236200233 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.236736293 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.234882123 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.231514408 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.235541258 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.232172504 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.23587877 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.235867618 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.235368587 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.236710696 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.235093819 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.236814065 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.242130406 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.238909311 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.23761562 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.236937074 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.38058123 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.236979304 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.237989509 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.237093492 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.234539515 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.241780673 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.253017511 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.235576503 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.235577109 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.237792858 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.238408249 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.237994946 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.237604017 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.23905246 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.241879948 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.237658648 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.237148999 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.238227371 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.23717189 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.238812683 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.240839233 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.237875422 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.234919187 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.237798684 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.246116869 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.254716876 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.238057831 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.243553475 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.25585065 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.237768872 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.241122682 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.244763886 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.236296072 seconds)
  done (took 62.001574149 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.239333341 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.238907837 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.23592757 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.238790941 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.238471487 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.238570707 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.239225931 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.239885382 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.236939988 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.235332624 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.239632646 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.236660408 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.236369443 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.238981302 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.24035808 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.237720393 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.237723396 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.236841915 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.236426319 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.236882162 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.237330834 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.239824704 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.241101664 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.237596474 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.240532294 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.238265647 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.238369445 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.240245532 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.237128982 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.238050876 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.240035845 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.240952367 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.240910262 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.238271558 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.238552959 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.240442358 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.241218093 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.237477115 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.240841503 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.238823705 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.241599645 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.241334128 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.241211314 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.240853155 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.238595899 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.238558334 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.238751088 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.239194357 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.240422278 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.241968914 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.241683719 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.239595678 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.242165742 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.240039953 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.241736962 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.241974626 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.23998686 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.238848572 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.242551947 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.240055407 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.239268743 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.242853733 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.240210049 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.242974247 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.243470178 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.241069624 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.240494037 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.24247008 seconds)
  done (took 85.451021505 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.242698016 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.243661703 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243419325 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243226802 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.242888171 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.242696656 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.244127691 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.242983558 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.243692107 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.243914267 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243259726 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.242921299 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.243238663 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.242945927 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.243552772 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.24264826 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.243330836 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.244620635 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.24289944 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24372934 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.243107776 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.243967609 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.24395712 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.243597903 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.244509479 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.244196699 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.244029965 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.244487682 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244002925 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.245406374 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.244421454 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.244584045 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.245028339 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.243839627 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.24527083 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.246035979 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.24469254 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245511472 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.246230621 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.245181683 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.24529198 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.245631815 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.244877555 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.245426563 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.246962167 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.245230866 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.244664027 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.246011678 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.246351422 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.244934095 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.245297937 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245443067 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246348946 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.246212366 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.245750204 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.246603322 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244836121 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.245673089 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247090665 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.245588884 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246985424 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.24687902 seconds)
  done (took 78.33179118 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247405126 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.246227051 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.244227584 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.243881758 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.246742849 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.24364241 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.246822107 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.247209741 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.247547109 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.248685063 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247764951 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24479899 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244870129 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247531148 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.243708592 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244397927 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24500528 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.244697924 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24767301 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.244717402 seconds)
  done (took 26.084981024 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.245336911 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.246853655 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.245313423 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.245844376 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.247983161 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.24610334 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.248107271 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248024176 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244557661 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247549674 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.248255357 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.247728019 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245016246 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.245136763 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.248354498 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.245758804 seconds)
  done (took 21.113682586 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.246398236 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.248225189 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.249046807 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.249326479 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.244873413 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.246869018 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.249297713 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.24765798 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.245750813 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.249795395 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.248168706 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.249199413 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.248941704 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.249532568 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.247991564 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.248769916 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.247445572 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.247090376 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.249954413 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.250069158 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.247837565 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.247252215 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.250698443 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.250658802 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.246915703 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.247852535 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.246592038 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.247580947 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.246202268 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.250140858 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.247655693 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.248390304 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.247528214 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.248200876 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.249364786 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.247917367 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.250698721 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.24969624 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.250109462 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.250784465 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.251011183 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.247798541 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.250363115 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.249504654 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.248093032 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.252094876 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.249113205 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.249528228 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.247890877 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.248917931 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.251608059 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.251430443 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.252109253 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.25227712 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.251375168 seconds)
  done (took 69.860300763 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251973342 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.25272792 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.248780243 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.252170853 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.251909728 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.248765446 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.250998311 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.251943998 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248791297 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.25253473 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.251391606 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.25411708 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249867281 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.252991352 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.251121981 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251931922 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.249823318 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.250215003 seconds)
  done (took 23.693320374 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.251080913 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.251028856 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.253339627 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.250127559 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.250493731 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.252724277 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.250441567 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.253320913 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252637938 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.249214676 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250767761 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.253081249 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253516255 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.254144679 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.251000085 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25029835 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.254175389 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252440882 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.251263555 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251206109 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.253757517 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.254064659 seconds)
  done (took 28.717635531 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.253277777 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.252625839 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.253503158 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.268518369 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.269049273 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.274438984 seconds)
  done (took 8.74436008 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258442712 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254250603 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.2507913 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254972862 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25531255 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25232645 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251890078 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251894328 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254699337 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252283913 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25107148 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255132603 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254959983 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252274149 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255776509 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255369807 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252647989 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252634096 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25310983 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255851363 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253046662 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255705826 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254036257 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253229372 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253160105 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253679641 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256687562 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254325571 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253570403 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256765393 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256842229 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254510246 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25619429 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254346192 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257264981 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25692967 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25348853 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257540489 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257663793 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254837557 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.257361847 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255808267 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257760635 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253510904 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25741515 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254352871 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25433077 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254329529 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253552054 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257446431 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257250527 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253959095 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25678948 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257283075 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258088488 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258815802 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25526928 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254792226 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257664068 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256312416 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255117957 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257904685 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254573723 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256390323 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258538042 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255704558 seconds)
  done (took 84.037079404 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256495745 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.255368447 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254932332 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256305126 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255806692 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254446291 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256007836 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256746757 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255211961 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255670889 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258981455 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255332732 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256295128 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254465011 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256741109 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256588094 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255922706 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255263727 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255796332 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259702515 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255819006 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256572752 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256708559 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256279708 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257569389 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260070915 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255987031 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257476884 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256878293 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256673272 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25758299 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256837495 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257063662 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.257745987 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257168298 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258175448 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257348689 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257367341 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257563423 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261203657 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257861121 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260658071 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257812767 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25730268 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257977561 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257629997 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258049621 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257654236 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258362766 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25878941 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258686836 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258139347 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259276082 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259621551 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25780814 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258362497 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258847723 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258684644 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257761715 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259676472 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259942105 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258755747 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261068551 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25831126 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259205638 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259710047 seconds)
  done (took 84.175380709 seconds)
done (took 1697.258719295 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.292995606 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.339603572 seconds)
  done (took 13.813163576 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.422501482 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.377424859 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.259645829 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.300336415 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.261494646 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.270639258 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.276153241 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.260933391 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.26062034 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.259727331 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.260745246 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.448133638 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.30982069 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.261204746 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.26104795 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.354719369 seconds)
  done (took 42.02769727 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.285792518 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.266919388 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.373723648 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.286423811 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.286627793 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.444624979 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.321306114 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.267044669 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.428542517 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.309937957 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.740084493 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.287453317 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.266203626 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.319602487 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.283589417 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.44351982 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.508103346 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.751711168 seconds)
  done (took 29.053284833 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.693098563 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.262502925 seconds)
  done (took 9.138443613 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.285071853 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.266923501 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.267171871 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.263018519 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.257151983 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.258242092 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.266176908 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.260728297 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.706229843 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.391410069 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.27292908 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.272111853 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.284047543 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.26722603 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.263456407 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.300304424 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.460812126 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.26425938 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.262886222 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.271930026 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.266276282 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.348324295 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.306762511 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.267528175 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.387699916 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.700512898 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.274111685 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.273396237 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.450395755 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.266386006 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.266944578 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.267222214 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.268324449 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.860109016 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.730754017 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.281181711 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.290041195 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.275918898 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.265024271 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.411775356 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.269089331 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.273841312 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.259857971 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.723096068 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.396983514 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.379485249 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.445645534 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.285409731 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.269014253 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.327432609 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.268190305 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.270002824 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.296659929 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.00738955 seconds)
  done (took 107.260173968 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.262983729 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.649189977 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.42907712 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.280715517 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.041322348 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.004352109 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.277641041 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.536530357 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.292975522 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.261987603 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.609046969 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.75782691 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.279596942 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.320287469 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.792102379 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.279415554 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.260750486 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.127567211 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.274161106 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.256921528 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.738853234 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.261323565 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.256257035 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.509019374 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.295830053 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.698372252 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.587293182 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.78422863 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.27783838 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.258684108 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.714272697 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.279863288 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.301806391 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.262442282 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.514388143 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.60108666 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.592607035 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.275550682 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.276004039 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.264293475 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.274381436 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.693715658 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.60264787 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.273904749 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.259130274 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.699336984 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.274908403 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.258539082 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.266674132 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.466591086 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.124288995 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.261314694 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.570947286 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.261230309 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.545184701 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.341006566 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.26422503 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.728846783 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.275498972 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.432832781 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.320556559 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.260651553 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.261643837 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.266045344 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.263709977 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.591344208 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.620879007 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.261326325 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.590563013 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.724309839 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.275843362 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.771778103 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.171990342 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.270532721 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.317278774 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.260855698 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.938209162 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.736050202 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.29882393 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.261672993 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.578654827 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.277997413 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.576450063 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.278229721 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.262832879 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.769051294 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.262809264 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.305085368 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.261652347 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.277221849 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.022438082 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.26638546 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.540754817 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.300619747 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.261978326 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.261696955 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.294217817 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.26159049 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.277489549 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.262648755 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.773139288 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.288240696 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.244077673 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.280875078 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.262968155 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.279065247 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.261231847 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.265549441 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.487436267 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.666492351 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.28088 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.261524828 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.263160056 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.284270485 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.529893947 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.267373588 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.556397314 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.28215275 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.26303019 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.270024404 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.017254622 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.302267822 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.263908017 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.280297291 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.169714483 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.47115111 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.2812047 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.263513473 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.264456843 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.279996771 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.427571564 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.282859138 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.340502438 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.268221106 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.958253234 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.295640859 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.284738243 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.783180839 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.267833071 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.211009945 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.282582284 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.266009316 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.545798509 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.525447508 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.522212543 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.269246099 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.266335992 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.934474346 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.309274246 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.41178408 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.286104133 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.262907059 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.465193562 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.432775385 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.266651353 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.859255679 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.26658405 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.484961671 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.265911686 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.563325336 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.744842315 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.282302052 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.272312224 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.962920204 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.973442474 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.957346323 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.270424646 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.602464351 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.219596558 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.754918169 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.267919211 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.267650124 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.862912322 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.268183451 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.275610041 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.26709027 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.266685327 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.329504028 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.440168351 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.599708475 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.274532106 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.703871262 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.339644844 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.277918212 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.276162929 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.270973688 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.618952466 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.298417455 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.271123683 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.310978687 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.269734259 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.275623134 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.724791362 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.135424119 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.269179853 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.420777929 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.886011763 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.29082054 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.268581069 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.833235709 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.634627579 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.799606017 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.322096247 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.563632718 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.284520473 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.307013568 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.965806911 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.287457155 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.72739919 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.290564007 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.286096145 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.851792879 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.285173073 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.383498791 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.269835369 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.270897745 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.793652345 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.286076728 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.2712962 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.437246696 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.290212049 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.539240117 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.271281524 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.296004907 seconds)
  done (took 1095.76416881 seconds)
done (took 1298.23463078 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.271288702 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.276716434 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.257173798 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.277368098 seconds)
  done (took 26.278109564 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.281293459 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.277690187 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.278001685 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.27846536 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.279480926 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.276662113 seconds)
  done (took 8.868212702 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.324007811 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.277374171 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.276298251 seconds)
  done (took 19.074057326 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.472591741 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.595895141 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.630075887 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.439970029 seconds)
  done (took 10.334746209 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.278720363 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.278824347 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.278936781 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.279690928 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.281854818 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.283579135 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.280536664 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.281331103 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.282722939 seconds)
  done (took 12.721905386 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.280729487 seconds)
done (took 79.749761111 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.315186454 seconds)
    (2/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.775106403 seconds)
    (3/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.006615109 seconds)
    (4/286) benchmarking ("sort", Float32, false)...
    done (took 5.267086 seconds)
    (5/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.732756783 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.680008957 seconds)
    (7/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.787919096 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.515878766 seconds)
    (9/286) benchmarking ("sort", Float64, true)...
    done (took 6.293980527 seconds)
    (10/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.358314076 seconds)
    (11/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.629951369 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.825621938 seconds)
    (13/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.275558173 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.31348862 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.6765808 seconds)
    (16/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.329514907 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.899786591 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.298302728 seconds)
    (19/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.298315789 seconds)
    (20/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.451249196 seconds)
    (21/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.056708399 seconds)
    (22/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.521121765 seconds)
    (23/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.265296905 seconds)
    (24/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.381247664 seconds)
    (25/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.253229286 seconds)
    (26/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.352773581 seconds)
    (27/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.875263467 seconds)
    (28/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.621997604 seconds)
    (29/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.273367408 seconds)
    (30/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.534810038 seconds)
    (31/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.27442498 seconds)
    (32/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.255579997 seconds)
    (33/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.850970368 seconds)
    (34/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.410189512 seconds)
    (35/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.378504368 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.68437579 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 6.289747075 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.376869567 seconds)
    (39/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.37289675 seconds)
    (40/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.273518246 seconds)
    (41/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.536743397 seconds)
    (42/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.007913681 seconds)
    (43/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.299564137 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.386152405 seconds)
    (45/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.598891244 seconds)
    (46/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.948839719 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.550234956 seconds)
    (48/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.3126557 seconds)
    (49/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.773583895 seconds)
    (50/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.360453687 seconds)
    (51/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.096840285 seconds)
    (52/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.273145885 seconds)
    (53/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.098234637 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.35105766 seconds)
    (55/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.76063453 seconds)
    (56/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.006695298 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.679393318 seconds)
    (58/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.375049315 seconds)
    (59/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.905188431 seconds)
    (60/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.26567521 seconds)
    (61/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.630071385 seconds)
    (62/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.256643089 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.194223065 seconds)
    (64/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.455645941 seconds)
    (65/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.495868762 seconds)
    (66/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.258188176 seconds)
    (67/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.344550837 seconds)
    (68/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.688899447 seconds)
    (69/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.293141119 seconds)
    (70/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.560466425 seconds)
    (71/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.293773673 seconds)
    (72/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.775291481 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.865159188 seconds)
    (74/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.401001131 seconds)
    (75/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.25764503 seconds)
    (76/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.501476302 seconds)
    (77/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.258525665 seconds)
    (78/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.08479662 seconds)
    (79/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.619841508 seconds)
    (80/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.45001133 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 5.443254495 seconds)
    (82/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.276223096 seconds)
    (83/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.326556281 seconds)
    (84/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.25807347 seconds)
    (85/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.311802639 seconds)
    (86/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.024516331 seconds)
    (87/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.668530314 seconds)
    (88/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.275432157 seconds)
    (89/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.392408674 seconds)
    (90/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.37774404 seconds)
    (91/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.619371832 seconds)
    (92/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.364373202 seconds)
    (93/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.60413209 seconds)
    (94/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.260820094 seconds)
    (95/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.40756041 seconds)
    (96/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.257902659 seconds)
    (97/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.402364474 seconds)
    (98/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.286320884 seconds)
    (99/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.257653242 seconds)
    (100/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.09428055 seconds)
    (101/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.259148388 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.52299342 seconds)
    (103/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.124128343 seconds)
    (104/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.361392536 seconds)
    (105/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.258805655 seconds)
    (106/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.300958756 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.177598919 seconds)
    (108/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.38390652 seconds)
    (109/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.302529026 seconds)
    (110/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.259252473 seconds)
    (111/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.278787414 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.892052319 seconds)
    (113/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.375786491 seconds)
    (114/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.114182482 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.650577088 seconds)
    (116/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.320498357 seconds)
    (117/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.259146889 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 1.796378471 seconds)
    (119/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.266856261 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.302688984 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.536033935 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.011579418 seconds)
    (123/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.290412822 seconds)
    (124/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.543599475 seconds)
    (125/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.057584112 seconds)
    (126/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.261944147 seconds)
    (127/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.397745442 seconds)
    (128/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.305743181 seconds)
    (129/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.291770894 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.628870822 seconds)
    (131/286) benchmarking ("sort", BigInt, false)...
    done (took 6.294337212 seconds)
    (132/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.29654952 seconds)
    (133/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.296767419 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.40727925 seconds)
    (135/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.640177806 seconds)
    (136/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.341565966 seconds)
    (137/286) benchmarking ("sort", Int8, true)...
    done (took 6.286220186 seconds)
    (138/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.278169182 seconds)
    (139/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.720101465 seconds)
    (140/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.022550959 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.017566086 seconds)
    (142/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.306601889 seconds)
    (143/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.273531404 seconds)
    (144/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.750103094 seconds)
    (145/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.52761076 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.303558548 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.176753617 seconds)
    (148/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.638309109 seconds)
    (149/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.276977305 seconds)
    (150/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.394365566 seconds)
    (151/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.631162293 seconds)
    (152/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.27012072 seconds)
    (153/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.268176889 seconds)
    (154/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.485202462 seconds)
    (155/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.779420787 seconds)
    (156/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.263990912 seconds)
    (157/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.505056223 seconds)
    (158/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.282267337 seconds)
    (159/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.296429347 seconds)
    (160/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.546496696 seconds)
    (161/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.673503102 seconds)
    (162/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.343119606 seconds)
    (163/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.292401014 seconds)
    (164/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.307815779 seconds)
    (165/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.262475885 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.31440396 seconds)
    (167/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.266250744 seconds)
    (168/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.308034907 seconds)
    (169/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.324363962 seconds)
    (170/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.263768284 seconds)
    (171/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.514382333 seconds)
    (172/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.381723393 seconds)
    (173/286) benchmarking ("sort", Bool, true)...
    done (took 5.376781771 seconds)
    (174/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.142293126 seconds)
    (175/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.674326693 seconds)
    (176/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.340169542 seconds)
    (177/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.310442068 seconds)
    (178/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.977187827 seconds)
    (179/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.396976711 seconds)
    (180/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.307078743 seconds)
    (181/286) benchmarking ("sort", Float64, false)...
    done (took 5.565382396 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.123019662 seconds)
    (183/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.342773057 seconds)
    (184/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.743191332 seconds)
    (185/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.909501956 seconds)
    (186/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.500703598 seconds)
    (187/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.428374293 seconds)
    (188/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.842383583 seconds)
    (189/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.270716335 seconds)
    (190/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.464454305 seconds)
    (191/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.718005794 seconds)
    (192/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.302898466 seconds)
    (193/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.306029157 seconds)
    (194/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.346952054 seconds)
    (195/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.726917482 seconds)
    (196/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.342209136 seconds)
    (197/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.263642857 seconds)
    (198/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.558485197 seconds)
    (199/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.354476888 seconds)
    (200/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.348760802 seconds)
    (201/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.323686904 seconds)
    (202/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.264766276 seconds)
    (203/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.669068305 seconds)
    (204/286) benchmarking ("sort", BigInt, true)...
    done (took 6.291178867 seconds)
    (205/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.293733745 seconds)
    (206/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.309980023 seconds)
    (207/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.264925028 seconds)
    (208/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.601880798 seconds)
    (209/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.271953783 seconds)
    (210/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.370052941 seconds)
    (211/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.312441411 seconds)
    (212/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.490136895 seconds)
    (213/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.054959839 seconds)
    (214/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.878503912 seconds)
    (215/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.271902724 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.139408489 seconds)
    (217/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.311483508 seconds)
    (218/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.264934243 seconds)
    (219/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.278631211 seconds)
    (220/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.266546924 seconds)
    (221/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.676074124 seconds)
    (222/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.493944282 seconds)
    (223/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.281889918 seconds)
    (224/286) benchmarking ("sort", Float32, true)...
    done (took 6.285201666 seconds)
    (225/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.29358096 seconds)
    (226/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.567020247 seconds)
    (227/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.075648368 seconds)
    (228/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.087280652 seconds)
    (229/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.312810695 seconds)
    (230/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.094324636 seconds)
    (231/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.313168088 seconds)
    (232/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.301960483 seconds)
    (233/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.26654715 seconds)
    (234/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.012872343 seconds)
    (235/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.482221771 seconds)
    (236/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.306369331 seconds)
    (237/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.296699172 seconds)
    (238/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.275024327 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.670286454 seconds)
    (240/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.272478161 seconds)
    (241/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.275636976 seconds)
    (242/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.292292695 seconds)
    (243/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.245853315 seconds)
    (244/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.405569234 seconds)
    (245/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.298877183 seconds)
    (246/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.275457164 seconds)
    (247/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.316465518 seconds)
    (248/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.285666687 seconds)
    (249/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.009579582 seconds)
    (250/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.37967088 seconds)
    (251/286) benchmarking ("sort", Int8, false)...
    done (took 4.331300539 seconds)
    (252/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.374373521 seconds)
    (253/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.371232364 seconds)
    (254/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.535669371 seconds)
    (255/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.403936133 seconds)
    (256/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.37052596 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.188269855 seconds)
    (258/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.098485511 seconds)
    (259/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.309809436 seconds)
    (260/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.886892358 seconds)
    (261/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.721178016 seconds)
    (262/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.813255671 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.918422388 seconds)
    (264/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.293138796 seconds)
    (265/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.433248046 seconds)
    (266/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.071885509 seconds)
    (267/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.320567476 seconds)
    (268/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.391878153 seconds)
    (269/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.990966438 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.353642535 seconds)
    (271/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.384806252 seconds)
    (272/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.389131258 seconds)
    (273/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.669529016 seconds)
    (274/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.299652535 seconds)
    (275/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.292351757 seconds)
    (276/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.287371414 seconds)
    (277/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.276315862 seconds)
    (278/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.320871275 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.312446054 seconds)
    (280/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.247955003 seconds)
    (281/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.307559998 seconds)
    (282/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.999993907 seconds)
    (283/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.11494786 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.936548188 seconds)
    (285/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.276151639 seconds)
    (286/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.517720694 seconds)
  done (took 920.672671908 seconds)
done (took 921.866270147 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.322977704 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.316898607 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.299615405 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.321617117 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.41151622 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.326910935 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.309828354 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.302140114 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.347925689 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.349502694 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.298043557 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.328117746 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.300566146 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.300611429 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.299479213 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.314972706 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.311540279 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.30048448 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.317237576 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.310991856 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.317849385 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.299222656 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.349846202 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.327512244 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.304991515 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.302877384 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.304184171 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.319914165 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.412335358 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.303692567 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.303980192 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.312362397 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.311633378 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.300489391 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.296167753 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.320082045 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.312597655 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.311018004 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.305335278 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.333498925 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.705809163 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.317390511 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.302747941 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.302805332 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.30301472 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.305856582 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.302786191 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.308841863 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.316918247 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.317386767 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.694962792 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.33406866 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.306630477 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.303212597 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.313445452 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.302011947 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.306255934 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.320485012 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.322003922 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.321484139 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.299482525 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.307782605 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.305512204 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.319449758 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.311175907 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.731939678 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.315780838 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.307014112 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.709375594 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.324914499 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.734474849 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.328314611 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.304876234 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.31795922 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.336121888 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.316364343 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.300502439 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.302325652 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.311606794 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.301714587 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.313960059 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.31805945 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.309070822 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.30509112 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.318991929 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.331524966 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.314250407 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.30549166 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.313769307 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.323700281 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.311764293 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.318006813 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.307229957 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.300720955 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.314435536 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.307933441 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.308663097 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.308300615 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.310444787 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.315980959 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.699319613 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.339535983 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.302235165 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.302700959 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.304039025 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.319011217 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.696144366 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.321295036 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.327729348 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.353782454 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.307270196 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.29303767 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.308923221 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.323955511 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.314959016 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.308707977 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.301464463 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.294328629 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.686266511 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.337341321 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.306801388 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.305077666 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323910129 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.307985974 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.303166859 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.309042436 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.308232612 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.321941179 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.427753449 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.317100014 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.338033669 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.306619554 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.310673643 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.330406038 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.326024591 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.338158885 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.309707509 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.325582066 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.322282538 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.303759266 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.317986159 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.3177486 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.309021204 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.313229784 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.30259271 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.330577094 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.321293686 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.321347845 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.328119201 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.427741595 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.305031927 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.293634491 seconds)
done (took 220.481653522 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.366542058 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.304438805 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.388881189 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.304906693 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.404038486 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.403444884 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.302740667 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.302932498 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.302262687 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.683136489 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.304092012 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.302827152 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.298476746 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.30303251 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.386810515 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.30543071 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.303315086 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.645447967 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.306707865 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.375796827 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.303954562 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.304057275 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.306462079 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.685108607 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.304726691 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.303985907 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.3791817 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.306936962 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.65133923 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.301404592 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.307169359 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.650705382 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.396207068 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.324394444 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.316380052 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.314428915 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.406140404 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.324895926 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.387975984 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.38632421 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.39189017 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.344790424 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.301888892 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.307146886 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.307351015 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.307537464 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.304822667 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.334295264 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.308609889 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.30497203 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.649632225 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.316254369 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.315114757 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.304724189 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.306203095 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.32751488 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.30566642 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.308397096 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.398569972 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.308437449 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.370466728 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.68822877 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.686789998 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.307965194 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.307364199 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.306351653 seconds)
  done (took 146.601618494 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.375892046 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.381340027 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.418297762 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.325338227 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.359964127 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.423256788 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.325281629 seconds)
  done (took 10.83433279 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.315037113 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.310754445 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.358839281 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.358797232 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.309454703 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.456706168 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.310131735 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.321223802 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.307834365 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.362203644 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.310996565 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.309589339 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.31680202 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.304544913 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.358416632 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.321212572 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.424467864 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.311462146 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.312768517 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.466570825 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.308497848 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.316482413 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.362640507 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.32163022 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.310717763 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.316144486 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.875896159 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.311006651 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.308959213 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.310123195 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.308092734 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.348442647 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.311176369 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.311031299 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.308464228 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.427408858 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.312317374 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.309304645 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.312040555 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.308238846 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.311480934 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.311831896 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.311590717 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.308413394 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.311298579 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.335064605 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.311359411 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.311451632 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.311403079 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.311989453 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.362138778 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.312752409 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.309148131 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.310188535 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.367689092 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.31937011 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.313923164 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.309671294 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.31261267 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.310550985 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.468842482 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.359959759 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.312422132 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.361567457 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.313249435 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.314231328 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.313064217 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.31361824 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366846708 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.313481996 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.361654926 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.311226512 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.467717407 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.33738059 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.314752265 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.316808698 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.316595273 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.314094727 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.30576062 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.320068702 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.310809824 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.314352573 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.320128521 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.309843208 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.311143975 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.415548899 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.42190047 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.31148119 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.326230104 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.3209196 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.311128728 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.367462206 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.31396753 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.311841705 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365643128 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.428469087 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.367474111 seconds)
  done (took 151.071603694 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.319770159 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.323368103 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.315686242 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.329554331 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.314589214 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.315213653 seconds)
  done (took 9.148360439 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.317440011 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.31579751 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.315065207 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.314628421 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.315734055 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.315558258 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.316162571 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.317186492 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.318653274 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.316739102 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.314270074 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.316384359 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.31637256 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.316402585 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.317043306 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.316788158 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.315658558 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.313113631 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.315967677 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.315554306 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.413242584 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.315733083 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.31681557 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.316704588 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.319750256 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.316720881 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.324084317 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.317477139 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.316877456 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.323975886 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.336295096 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.317941006 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.31870039 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.322886479 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.320054501 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.318656066 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.320887961 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.317500581 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.31554793 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.316808082 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.319109412 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.318489027 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.317300362 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.318315973 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.320078845 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.322042769 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.321621906 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.324509622 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.31774969 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.316614388 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.31723239 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.317229481 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.317618282 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.320370195 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.317855153 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.337024728 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.31939668 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.316013944 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.316252494 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.317547642 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.317199264 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.315968744 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.318177867 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.318488706 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.324442965 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.316924292 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.317124381 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.32093705 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316704093 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.316716033 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.316984291 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.314931814 seconds)
  done (took 97.247256721 seconds)
done (took 416.121602027 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.607335033 seconds)
  done (took 7.83991598 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.390436371 seconds)
  done (took 7.624491533 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.443906964 seconds)
  done (took 21.680776054 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.366316049 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.373333368 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.338052961 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.33336276 seconds)
  done (took 26.645692685 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.638422741 seconds)
  done (took 7.873949397 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.312108501 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.323062351 seconds)
  done (took 13.870708723 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.772860083 seconds)
  done (took 8.007012861 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.484363188 seconds)
  done (took 7.722883871 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.313145087 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.329975636 seconds)
  done (took 14.129416722 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.293686889 seconds)
  done (took 7.52939995 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.048585303 seconds)
  done (took 8.284687681 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.327052303 seconds)
  done (took 7.563897907 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.375626461 seconds)
  done (took 7.611968679 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.17401823 seconds)
  done (took 9.410147267 seconds)
done (took 157.02447371 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.313255386 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.314029784 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.315956402 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.312615404 seconds)
  done (took 26.492024534 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.355748217 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.354418979 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.354891572 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.364925126 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.357462919 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.354477101 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.346559706 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.347699318 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.365573872 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.357485268 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.355556934 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.355500355 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.354136433 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.347742441 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.356535245 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.356267685 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.365218453 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.356346848 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.347441252 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.35732398 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.322212258 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.36545172 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.359197744 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.322912228 seconds)
  done (took 33.717891285 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.842873684 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.393072318 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.474878642 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.373358419 seconds)
  done (took 7.320531681 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.374281924 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.375352572 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.387845917 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.425370004 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.460350163 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.384944314 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.348738214 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.344082562 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.330131938 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.376241915 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.451193232 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.391490467 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.466864818 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.322717919 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.509184158 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.323442361 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.323109338 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.374566197 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.426442987 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.440891231 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.323361987 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.375663385 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.382017427 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.392378914 seconds)
  done (took 34.548519859 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.323776378 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.342166379 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.323297825 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.32267119 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.331475999 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.323560564 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.323042741 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.324277876 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.323419777 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.329066188 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.322207896 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.336038067 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.322238672 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.323153948 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.329339341 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.324937238 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.329466956 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.321966085 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.323674337 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.32994602 seconds)
  done (took 27.769371411 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.317796871 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.172928945 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.668964595 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.572736997 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.319170805 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.317865272 seconds)
  done (took 27.609342962 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.392469689 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.545477239 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.324753408 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.671881597 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.769759675 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.349331553 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.3257953 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.561051647 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.871860552 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.861286484 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.387742029 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.392325187 seconds)
  done (took 19.695217032 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.321879892 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.326614093 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.331265931 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.341700019 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.379074731 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.344279338 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.332243914 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.319360181 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.384641513 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.399322138 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.347744935 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.379828073 seconds)
  done (took 37.44949425 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407666597 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366847898 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.183977547 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36353253 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.05861386 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531742297 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.35504696 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.793030455 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.324005938 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594441579 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326722627 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410148252 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.576892044 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33557066 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.327513516 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.285784108 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568157974 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81843088 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322605586 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.344360992 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352688671 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.332280726 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.447733617 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.358235987 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.534443676 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.463012909 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.582546599 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.098587636 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614305967 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.334381957 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333421235 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323762433 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596130589 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97576709 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442098397 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33422002 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32180062 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.869172719 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.306985722 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.33819737 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292302247 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.333255422 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333744741 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323768591 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.256866476 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330817718 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.792198073 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.328805689 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.034971708 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.323699874 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.334299067 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418851825 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.327575008 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.315261153 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36422925 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.328642189 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.321650033 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414202373 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914335494 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.761988001 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.346842794 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.265947037 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.331700925 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.27068128 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966473034 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.44567317 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.32867137 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.327832629 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258971569 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.353520524 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347795133 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472159788 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.347658788 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.97428755 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03244929 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.35629057 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.262959746 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880201138 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330757501 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.266696832 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553284839 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.104252207 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261184926 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.264994173 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.260345718 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041889695 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332687822 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.694322927 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.343978228 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.804109107 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.336499031 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342904312 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34887242 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.548882366 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.205498322 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325464273 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.312711561 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477349513 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34809903 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.784452308 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260723472 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.330719556 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582331534 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.537862509 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.328883964 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.307118016 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566442083 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328779995 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.348553187 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.32684632 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.358843182 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.911823941 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357178982 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.768327005 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351656514 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.103552919 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058420592 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333638796 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.43453236 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.339363688 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.575761754 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.07353104 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.486048614 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395522421 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327944017 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328978617 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.366724672 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.92626653 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.487194269 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.323362899 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329479618 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.344289701 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.329127524 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278710012 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.325974347 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329199989 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.113129885 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.552658139 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343070374 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611117519 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263908361 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47672953 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.338728512 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.55185914 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.512597433 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.345184872 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589448559 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.750148343 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335598609 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.347964396 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349196579 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430519489 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352414543 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.333953879 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.591674197 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.334425833 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.33364132 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.391975375 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.115502148 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336000375 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.335746687 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33817044 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931910447 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326887998 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.335966045 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.22036242 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.344077581 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397375084 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.336902856 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.340521614 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.137165417 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350557458 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.336746837 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.33467894 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554877018 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.340957613 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.301224107 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416880994 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.541513879 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.928578775 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362707108 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.267206201 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.042986098 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.024500536 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332513597 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.52053655 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.331999878 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342076263 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.342746557 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.332383696 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.923060981 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353165303 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.302835554 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.345688589 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.343512045 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.337344765 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332769814 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.113421833 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.809662103 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352087968 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.351154052 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476621256 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.347949282 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.267328155 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.850949969 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.341128593 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.33313152 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.110527955 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367505535 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.297991874 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827258876 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592872099 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335909973 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.362630939 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.414420622 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.374166423 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.333773874 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348913768 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349778347 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.348269939 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343527707 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.344861021 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.33977211 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.701660295 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903036742 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062191995 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913861423 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.271098995 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.343200944 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.239048994 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.79611374 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268295077 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.991818334 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.520038916 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.810151923 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279411495 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549288155 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.521748883 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.111091072 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.347131689 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.563021411 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254970316 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.344557513 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369998478 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.547030738 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37011229 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.349055315 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.271068416 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.616711368 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606114273 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323630868 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421550249 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799762773 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348105265 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.121869775 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.356555938 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.651856581 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525683511 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.964295377 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.724182897 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.34308138 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.356989396 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.820557155 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.342940067 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.863432306 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964967853 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360133417 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.555352788 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271587214 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.348512839 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.34791855 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.332833572 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.610338057 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.351548759 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.593659499 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349211894 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271329966 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.352228148 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88945469 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.21604319 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.34247755 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338222209 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086245082 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338434003 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635932727 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.357078027 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.106821118 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358224454 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.272057976 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272410377 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.032469067 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342171381 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31526227 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837888422 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.337510744 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369315631 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.348105167 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208147755 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.594044889 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.352623571 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.93390354 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589139224 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34286453 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382931633 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.440672092 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348055487 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.32913334 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.219776818 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.574892213 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367427948 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.561395861 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.217257296 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.246072549 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.41617257 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551541752 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.223990192 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.346455235 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599933359 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.074997282 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.361519657 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081132999 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392337184 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.341582578 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.377001774 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.341564405 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366609102 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430361242 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.351135712 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.351549803 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.351895692 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514024398 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354095825 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351667555 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.35642199 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435511609 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.828449965 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.113059629 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.115236145 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943423625 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135489064 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.959484816 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379419534 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.341954095 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351927256 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275908023 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493711996 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.86715683 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616127375 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471278092 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.344512496 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371948004 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355092004 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361747965 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561554663 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619350272 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.315098814 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350341678 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.134234053 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.501961786 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35482294 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.553981745 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848531901 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92294226 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459931916 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.345721137 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.808420558 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617563685 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.434590092 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344287239 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.932940021 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.350569561 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.658968605 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.366958172 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35954469 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499556631 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.355061811 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007068797 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.379364932 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.501106387 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.118255363 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.355625522 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.607342595 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.80618971 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.355223044 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94558662 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.084640404 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607296731 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414737494 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.355772229 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.453889738 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492048198 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.343781296 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.251087139 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344616496 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187652684 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.056510901 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.354826618 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940034382 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633147088 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.344138263 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.344094341 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375554454 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.355178992 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.569223348 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04870611 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567130669 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357416327 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.348774891 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.91760914 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942670481 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384393875 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280067626 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.350431132 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596652643 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.607873102 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.368866045 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.798737837 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.05857258 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899440348 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.318705441 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369265537 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349462485 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.062711557 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945618684 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.146268963 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859675117 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.011579558 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.346226743 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638288378 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.351810165 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35779185 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631805735 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.352527453 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.34738679 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.367513406 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.949270911 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136643721 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.379204015 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.461329243 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.290907405 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.57486492 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365601902 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283326887 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359019776 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.529638422 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.349850913 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478929535 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359770351 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.358132366 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366259996 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.08965863 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.622194116 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.354964154 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.333903145 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.355405259 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.362850993 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447079185 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622023523 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354822949 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.023407057 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.700595197 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.60568323 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.362807201 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.336320555 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.352001679 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350578782 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.069416911 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.360088336 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.353875868 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926582586 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.357872335 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.384905763 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353915473 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.567210595 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561146433 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.355590631 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.370044861 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351081134 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373327907 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.251407962 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.117381312 seconds)
  done (took 1643.348924572 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.361681466 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.373234136 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.376819923 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.407860755 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.374856517 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.448253356 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.421169708 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.456656996 seconds)
  done (took 52.490604762 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.366026228 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.511636695 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.383037353 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.362696122 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.367445669 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.351361866 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.810267443 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.381110692 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.360194827 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.361777459 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.354458262 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.370852696 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.010798716 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.360226413 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.360498359 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.340903358 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.366814187 seconds)
  done (took 65.692583386 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.355709546 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.911136361 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.456177705 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.3608379 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.389853314 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.372595657 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.152489887 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.427241607 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.367775857 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.692367609 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.020279891 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.399804161 seconds)
  done (took 85.178553578 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.369005654 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.369315151 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.369754869 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.3700143 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.370372329 seconds)
  done (took 8.120071082 seconds)
done (took 2070.666184008 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.360595744 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.055027707 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.954886121 seconds)
  done (took 5.281737635 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.500689256 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.548538732 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.670491494 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.689995271 seconds)
  done (took 7.680996441 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.633047023 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.723580158 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.539767622 seconds)
  done (took 6.169183366 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.631033146 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.366854376 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.36088085 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.354406844 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.359266751 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.362521992 seconds)
  done (took 20.34851942 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.358676355 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.359415414 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.357636285 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.360191152 seconds)
  done (took 6.70864941 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.333362394 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.043104065 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.335016972 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.357071974 seconds)
  done (took 18.341921307 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.104678405 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.116605404 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.101007789 seconds)
  done (took 7.595867037 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.384618044 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.379343397 seconds)
  done (took 4.037451911 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.647060945 seconds)
  done (took 2.919727938 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.373116563 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.410220398 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.401089158 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.325922329 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.577111962 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.665234904 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.955252899 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.549229364 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.294664825 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.527080954 seconds)
  done (took 30.353280593 seconds)
done (took 126.425690667 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.1262026 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.728544216 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.559553719 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.103946806 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.578276841 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.561107548 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.571613086 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.06878228 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.615691611 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.602760479 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.144798035 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.576429437 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.516691138 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.728837896 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.51953132 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.606220857 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.577588959 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.174550706 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.792254629 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.991209264 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.56827588 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.740960751 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.97584347 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.754990986 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.577691177 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.513239227 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.318358317 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.601717672 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.959878093 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.336974134 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.514762253 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.153007925 seconds)
  done (took 192.435512437 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.358295417 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.360353288 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.35851889 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.373954595 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.361615759 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.363913427 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.377405 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.37596638 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.373191274 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.369233356 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.357819547 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.362538916 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.357564081 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.374711755 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.358687757 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.360003553 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.358201323 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.358176164 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.375201971 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.374898876 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.358084727 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.374934208 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.357896943 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.358857559 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.375209579 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.358616842 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.365430544 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.358127505 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.359037423 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.358743191 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.37501118 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.372534329 seconds)
  done (took 204.960181995 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.373484048 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.359613487 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.360894494 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.359164004 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.36969397 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.358682757 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.35985461 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.372465449 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.359416069 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.359400545 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.368549039 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.35934865 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.36145667 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.359773765 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.359665764 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.361060979 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.360795496 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.38196007 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.370259051 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.360271781 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.36216087 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.37471464 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.363137529 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.359091531 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.371592767 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.361678236 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.381896117 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.359918176 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.364448714 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.373705343 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.361573783 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.379126069 seconds)
  done (took 204.967514932 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.568269612 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.367130415 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.36968978 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.32376291 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.368359123 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.367647502 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.364869454 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.558281339 seconds)
  done (took 14.567539099 seconds)
done (took 618.201695754 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.624360252 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.322701683 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.568278068 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.387998328 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.134788396 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.407633875 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.387284211 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.553367746 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.292266965 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.561754779 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.628416831 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.404337593 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.768456906 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.386185214 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.63694323 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.486570042 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.276909101 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.41185889 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.697802578 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.905723995 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.6451615 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.816758648 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.573450202 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.292357189 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.785045919 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.813388918 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.070345502 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.273892159 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.405396458 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.704941124 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.995704681 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.303840195 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.447741864 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.448389691 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.505281931 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.484028621 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.296067054 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.445925887 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.585212418 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.584445928 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.916814205 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.112847851 seconds)
  done (took 92.632487732 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.353847799 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.354231331 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.352913887 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.353405412 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.354898223 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.352830254 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.352522797 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.354548629 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.353743413 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.353490347 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.353278652 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.355926386 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.35398992 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.355070025 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.353144417 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.354131133 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.354577796 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.355048818 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.354875097 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.354442268 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.353688442 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.354761128 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.354769693 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.353368953 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.354003666 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.354318296 seconds)
  done (took 36.488422541 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.373165266 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.613037826 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.77754967 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.385557646 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.372578858 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.377204105 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.449748947 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.382323461 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.375753965 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.376267444 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.521747548 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.375614857 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.405741547 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.805002931 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.383282293 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.374135093 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.373555595 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.373364964 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.625569763 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.382710255 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.468044683 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.374707225 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.451846584 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.383563937 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.394070021 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.373279685 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.37865485 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.953549614 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.393563051 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.526188206 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.155429384 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.456449019 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.891548971 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.806578394 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.154575167 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.383580053 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.375511929 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.529595581 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.377823466 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.374426628 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.449370284 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.376589759 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.787389088 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.042153005 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.394288013 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.374659758 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.973573769 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.546790893 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.616762797 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.388597366 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.812406955 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.379436524 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.376716729 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.377623634 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.615835538 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.390830741 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.375639189 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.976793924 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.40230453 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.453386721 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.378145329 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.376622615 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.630921241 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.376291073 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.626812303 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.3790465 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.382699427 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.395350572 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.790447423 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.382806944 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.066933021 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.395667458 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.377517019 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.528590566 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.625341895 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.006347485 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.400852592 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.63481312 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.907077834 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.4696333 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.38548055 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.945487362 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.471905016 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.382737757 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.380122009 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.379895816 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.378116308 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.423383485 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.450786701 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.998563143 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.070859893 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.003519306 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.473546982 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.391424975 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.377705144 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.978944933 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.399405195 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.378978094 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.785343083 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.066841205 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.397357897 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.387287118 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.065567524 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.400147334 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.457030368 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.38431789 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.799177061 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.380766828 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.426056834 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.379350214 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.386943919 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.402412879 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.455002746 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.384015534 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.380047745 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.040791367 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.554204603 seconds)
  done (took 181.641095722 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.372714919 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.389923476 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.372748245 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.373365693 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.373379387 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.381913868 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.372994672 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.375480471 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.379599882 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.372913153 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.374139966 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.37438043 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.376115998 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.379448428 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.405186114 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.380989166 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.027828762 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.373190375 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.384647874 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.375691845 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.166685713 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.384233641 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.375444254 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.390853332 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.377146297 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.37456352 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.378912603 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.397058592 seconds)
  done (took 153.353186252 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.383397763 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.932629091 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.400028428 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.510117919 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.40745521 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.379175481 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.509026847 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.437416535 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.401290898 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.379032373 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.379398702 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.678609437 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.391232085 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.890407075 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.573859148 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.527740848 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.893635059 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.408079831 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.380835249 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.380190957 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.51174717 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.390440309 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.67779609 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.936221564 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.402416274 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.935513863 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.368461476 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.383023704 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.383668581 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.938998489 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.399821061 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.680074158 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.458999267 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.441288128 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.958797896 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.909290486 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.906213653 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.529732893 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.390899838 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.382126181 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.380826287 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.367895619 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.942569987 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.409700846 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.383122327 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.932478409 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.41059025 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.38410671 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.390572502 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.382359141 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.441986096 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.458853664 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.699884906 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.943533218 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.477203995 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.396105995 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.511746849 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.770741911 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.3907799 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.889380507 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.366688427 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.943327992 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.404362522 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.367492835 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.383878985 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.388376686 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.530620716 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.518413907 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.897796583 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.401504065 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.88864078 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.549225401 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.391217191 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.383096191 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.385719114 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.943025558 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.909434569 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.547771908 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.524975598 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.58067525 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.369779047 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.385132835 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.368752256 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.46093837 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.384405542 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.944882903 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.913291118 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.411730743 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.388121419 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.387842654 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.386583818 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.559317619 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.962705685 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.479605136 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.88447232 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.710149618 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.686939833 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.389503623 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.443525802 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.409954757 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.687255928 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.390208403 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.442466639 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.829873317 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.687148028 seconds)
  done (took 164.76127996 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.62198085 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.572674838 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.482806691 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.536297504 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.974225019 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.952216085 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.605536905 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.520939918 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.49431193 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.636216897 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.510107083 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.475719543 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.596258299 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.467594055 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.118274863 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.47150077 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.492428196 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.531887424 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.541452828 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.380509233 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.033155864 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.677090718 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.582434059 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.180159956 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.477965314 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.178981708 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.941741871 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.903516558 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.552987413 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.667912434 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.931756661 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.484204868 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.33364826 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.067429184 seconds)
  done (took 66.295146938 seconds)
done (took 696.449213771 seconds)
SAVING RESULT...
DONE!
